ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.90
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 100 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 115 0
  39              		@ sp needed
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 100 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 115 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
  47              	.L2:
  48 0010 08010B40 		.word	1074462984
  49              		.cfi_endproc
  50              	.LFE0:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoStop,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoStop
  55              		.code	16
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 4


  56              		.thumb_func
  57              		.type	CySysClkImoStop, %function
  58              	CySysClkImoStop:
  59              	.LFB1:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also 
 126:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 127:Generated_Source\PSoC4/CyLib.c **** *
 128:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 129:Generated_Source\PSoC4/CyLib.c **** *
 130:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 131:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 132:Generated_Source\PSoC4/CyLib.c **** {
  60              		.loc 1 132 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 133:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 134:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 135:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 136:Generated_Source\PSoC4/CyLib.c **** 
 137:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 138:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 139:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 140:Generated_Source\PSoC4/CyLib.c **** 
 141:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  65              		.loc 1 141 0
  66 0000 024A     		ldr	r2, .L5
 142:Generated_Source\PSoC4/CyLib.c **** }
  67              		.loc 1 142 0
  68              		@ sp needed
 141:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 141 0
  70 0002 1368     		ldr	r3, [r2]
  71 0004 5B00     		lsls	r3, r3, #1
  72 0006 5B08     		lsrs	r3, r3, #1
  73 0008 1360     		str	r3, [r2]
  74              		.loc 1 142 0
  75 000a 7047     		bx	lr
  76              	.L6:
  77              		.align	2
  78              	.L5:
  79 000c 08010B40 		.word	1074462984
  80              		.cfi_endproc
  81              	.LFE1:
  82              		.size	CySysClkImoStop, .-CySysClkImoStop
  83              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  84              		.align	1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 5


  85              		.global	CySysClkWriteHfclkDirect
  86              		.code	16
  87              		.thumb_func
  88              		.type	CySysClkWriteHfclkDirect, %function
  89              	CySysClkWriteHfclkDirect:
  90              	.LFB2:
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 147:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 148:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 149:Generated_Source\PSoC4/CyLib.c ****     *
 150:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 151:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 152:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 153:Generated_Source\PSoC4/CyLib.c ****     *
 154:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 155:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 156:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 157:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 158:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 159:Generated_Source\PSoC4/CyLib.c ****     *
 160:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 161:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 164:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 165:Generated_Source\PSoC4/CyLib.c ****     *
 166:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 167:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 168:Generated_Source\PSoC4/CyLib.c ****     {
 169:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 170:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 171:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 172:Generated_Source\PSoC4/CyLib.c **** 
 173:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 174:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 176:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 177:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 178:Generated_Source\PSoC4/CyLib.c **** 
 179:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 180:Generated_Source\PSoC4/CyLib.c ****         {
 181:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/CyLib.c **** 
 183:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 184:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 185:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 186:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 187:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 188:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 191:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 192:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 193:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 6


 194:Generated_Source\PSoC4/CyLib.c ****                 {
 195:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 196:Generated_Source\PSoC4/CyLib.c ****                     {
 197:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 198:Generated_Source\PSoC4/CyLib.c ****                         break;
 199:Generated_Source\PSoC4/CyLib.c ****                     }
 200:Generated_Source\PSoC4/CyLib.c ****                 }
 201:Generated_Source\PSoC4/CyLib.c ****             #else
 202:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 203:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 204:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 205:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 206:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 207:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 208:Generated_Source\PSoC4/CyLib.c ****                 #else
 209:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 210:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 211:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 212:Generated_Source\PSoC4/CyLib.c **** 
 213:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 214:Generated_Source\PSoC4/CyLib.c ****             
 215:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 216:Generated_Source\PSoC4/CyLib.c ****             
 217:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 218:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 220:Generated_Source\PSoC4/CyLib.c ****                 {
 221:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 222:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 223:Generated_Source\PSoC4/CyLib.c ****                 }
 224:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 225:Generated_Source\PSoC4/CyLib.c **** 
 226:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 229:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 230:Generated_Source\PSoC4/CyLib.c **** 
 231:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 233:Generated_Source\PSoC4/CyLib.c **** 
 234:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 235:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 238:Generated_Source\PSoC4/CyLib.c ****             
 239:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 240:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 241:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 244:Generated_Source\PSoC4/CyLib.c ****             
 245:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 248:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 249:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 250:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 7


 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 253:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 254:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 257:Generated_Source\PSoC4/CyLib.c **** 
 258:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 259:Generated_Source\PSoC4/CyLib.c ****         }
 260:Generated_Source\PSoC4/CyLib.c ****     }
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 266:Generated_Source\PSoC4/CyLib.c ****     *
 267:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 268:Generated_Source\PSoC4/CyLib.c ****     *
 269:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 270:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 271:Generated_Source\PSoC4/CyLib.c ****     *
 272:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 273:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 276:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 277:Generated_Source\PSoC4/CyLib.c ****     {
 278:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 279:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 280:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 281:Generated_Source\PSoC4/CyLib.c **** 
 282:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 283:Generated_Source\PSoC4/CyLib.c ****         
 284:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 287:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 288:Generated_Source\PSoC4/CyLib.c ****             {
 289:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 290:Generated_Source\PSoC4/CyLib.c ****                 {
 291:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 292:Generated_Source\PSoC4/CyLib.c ****                     break;
 293:Generated_Source\PSoC4/CyLib.c ****                 }
 294:Generated_Source\PSoC4/CyLib.c ****             }
 295:Generated_Source\PSoC4/CyLib.c ****         #else
 296:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 297:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 298:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 299:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 300:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 301:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 302:Generated_Source\PSoC4/CyLib.c ****             #else
 303:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 304:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 305:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 306:Generated_Source\PSoC4/CyLib.c **** 
 307:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 8


 308:Generated_Source\PSoC4/CyLib.c **** 
 309:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 310:Generated_Source\PSoC4/CyLib.c ****         
 311:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 312:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 313:Generated_Source\PSoC4/CyLib.c ****         #else
 314:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 315:Generated_Source\PSoC4/CyLib.c ****         #endif
 316:Generated_Source\PSoC4/CyLib.c ****     }
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c **** 
 319:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 321:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 326:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 329:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 334:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 336:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 337:Generated_Source\PSoC4/CyLib.c ****     }
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** 
 342:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 345:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 346:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 347:Generated_Source\PSoC4/CyLib.c ****     *
 348:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 349:Generated_Source\PSoC4/CyLib.c ****     *
 350:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 351:Generated_Source\PSoC4/CyLib.c ****     *
 352:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 353:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 356:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 357:Generated_Source\PSoC4/CyLib.c ****     *
 358:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 360:Generated_Source\PSoC4/CyLib.c ****     {
 361:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 362:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 363:Generated_Source\PSoC4/CyLib.c ****             
 364:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 9


 365:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 366:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 367:Generated_Source\PSoC4/CyLib.c **** 
 368:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 369:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 370:Generated_Source\PSoC4/CyLib.c **** 
 371:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 372:Generated_Source\PSoC4/CyLib.c ****             {
 373:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 374:Generated_Source\PSoC4/CyLib.c ****                 {
 375:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 376:Generated_Source\PSoC4/CyLib.c ****                     break;
 377:Generated_Source\PSoC4/CyLib.c ****                 }
 378:Generated_Source\PSoC4/CyLib.c ****             }
 379:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 380:Generated_Source\PSoC4/CyLib.c ****         
 381:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 382:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 383:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 384:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 385:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 386:Generated_Source\PSoC4/CyLib.c **** 
 387:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 388:Generated_Source\PSoC4/CyLib.c ****            
 389:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 390:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 391:Generated_Source\PSoC4/CyLib.c ****             
 392:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 393:Generated_Source\PSoC4/CyLib.c ****             {
 394:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 395:Generated_Source\PSoC4/CyLib.c ****                 
 396:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 397:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 399:Generated_Source\PSoC4/CyLib.c ****                 
 400:Generated_Source\PSoC4/CyLib.c ****             }
 401:Generated_Source\PSoC4/CyLib.c ****             else
 402:Generated_Source\PSoC4/CyLib.c ****             {
 403:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 404:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 405:Generated_Source\PSoC4/CyLib.c **** 
 406:Generated_Source\PSoC4/CyLib.c ****             }
 407:Generated_Source\PSoC4/CyLib.c **** 
 408:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 409:Generated_Source\PSoC4/CyLib.c ****             {
 410:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 412:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 413:Generated_Source\PSoC4/CyLib.c ****             }
 414:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 415:Generated_Source\PSoC4/CyLib.c ****             {
 416:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 418:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 419:Generated_Source\PSoC4/CyLib.c ****             }
 420:Generated_Source\PSoC4/CyLib.c ****             else
 421:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 10


 422:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 423:Generated_Source\PSoC4/CyLib.c ****             }
 424:Generated_Source\PSoC4/CyLib.c ****             
 425:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 426:Generated_Source\PSoC4/CyLib.c **** 
 427:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 428:Generated_Source\PSoC4/CyLib.c ****     }
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c **** 
 431:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 432:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 433:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 434:Generated_Source\PSoC4/CyLib.c ****     *
 435:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 436:Generated_Source\PSoC4/CyLib.c ****     *
 437:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 438:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 444:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 445:Generated_Source\PSoC4/CyLib.c ****     {
 446:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 447:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 448:Generated_Source\PSoC4/CyLib.c ****             
 449:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 450:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 451:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 454:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 457:Generated_Source\PSoC4/CyLib.c ****             {
 458:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 459:Generated_Source\PSoC4/CyLib.c ****                 {
 460:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 461:Generated_Source\PSoC4/CyLib.c ****                     break;
 462:Generated_Source\PSoC4/CyLib.c ****                 }
 463:Generated_Source\PSoC4/CyLib.c ****             }           
 464:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 465:Generated_Source\PSoC4/CyLib.c ****         
 466:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 467:Generated_Source\PSoC4/CyLib.c **** 
 468:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 469:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 470:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 471:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 472:Generated_Source\PSoC4/CyLib.c **** 
 473:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 474:Generated_Source\PSoC4/CyLib.c ****             {
 475:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 476:Generated_Source\PSoC4/CyLib.c ****             }
 477:Generated_Source\PSoC4/CyLib.c ****             
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 11


 479:Generated_Source\PSoC4/CyLib.c ****             
 480:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 481:Generated_Source\PSoC4/CyLib.c ****     }
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c **** 
 484:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 485:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 486:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 487:Generated_Source\PSoC4/CyLib.c ****     *
 488:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 489:Generated_Source\PSoC4/CyLib.c ****     *
 490:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 491:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 492:Generated_Source\PSoC4/CyLib.c ****     *
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 494:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 495:Generated_Source\PSoC4/CyLib.c ****     *
 496:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 497:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 498:Generated_Source\PSoC4/CyLib.c ****     {
 499:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 501:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 502:Generated_Source\PSoC4/CyLib.c ****     }
 503:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 508:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 509:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 510:Generated_Source\PSoC4/CyLib.c **** *
 511:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 512:Generated_Source\PSoC4/CyLib.c **** *
 513:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 514:Generated_Source\PSoC4/CyLib.c **** *
 515:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 516:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 517:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 518:Generated_Source\PSoC4/CyLib.c **** *
 519:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 520:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 521:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 522:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 524:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 525:Generated_Source\PSoC4/CyLib.c **** *
 526:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 527:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 528:Generated_Source\PSoC4/CyLib.c **** *
 529:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 532:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 533:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 534:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 535:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 12


 536:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 537:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 538:Generated_Source\PSoC4/CyLib.c **** *
 539:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 540:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 541:Generated_Source\PSoC4/CyLib.c **** {
  91              		.loc 1 541 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL0:
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 100              		.loc 1 541 0
 101 0002 0400     		movs	r4, r0
 542:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 543:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 544:Generated_Source\PSoC4/CyLib.c ****     
 545:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 546:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 547:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 548:Generated_Source\PSoC4/CyLib.c **** 
 549:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 102              		.loc 1 549 0
 103 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 104              	.LVL1:
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 552:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 553:Generated_Source\PSoC4/CyLib.c ****     {
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 555:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 556:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 557:Generated_Source\PSoC4/CyLib.c ****         
 558:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 560:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 561:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 562:Generated_Source\PSoC4/CyLib.c ****         
 563:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 564:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 565:Generated_Source\PSoC4/CyLib.c ****         
 566:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 567:Generated_Source\PSoC4/CyLib.c ****         {
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 570:Generated_Source\PSoC4/CyLib.c ****         }
 571:Generated_Source\PSoC4/CyLib.c ****         
 572:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 573:Generated_Source\PSoC4/CyLib.c ****     }
 574:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 105              		.loc 1 576 0
 106 0008 0723     		movs	r3, #7
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 13


 107 000a 0449     		ldr	r1, .L8
 577:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 580:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 581:Generated_Source\PSoC4/CyLib.c ****     {
 582:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 583:Generated_Source\PSoC4/CyLib.c ****     }
 584:Generated_Source\PSoC4/CyLib.c ****     else
 585:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 586:Generated_Source\PSoC4/CyLib.c ****     {
 587:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 588:Generated_Source\PSoC4/CyLib.c ****     }   
 589:Generated_Source\PSoC4/CyLib.c ****     
 590:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 591:Generated_Source\PSoC4/CyLib.c ****     
 592:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 593:Generated_Source\PSoC4/CyLib.c **** }
 108              		.loc 1 593 0
 109              		@ sp needed
 576:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 110              		.loc 1 576 0
 111 000c 0A68     		ldr	r2, [r1]
 112 000e 9A43     		bics	r2, r3
 113              	.LVL2:
 587:Generated_Source\PSoC4/CyLib.c ****     }   
 114              		.loc 1 587 0
 115 0010 2340     		ands	r3, r4
 116 0012 1343     		orrs	r3, r2
 117              	.LVL3:
 590:Generated_Source\PSoC4/CyLib.c ****     
 118              		.loc 1 590 0
 119 0014 0B60     		str	r3, [r1]
 592:Generated_Source\PSoC4/CyLib.c **** }
 120              		.loc 1 592 0
 121 0016 FFF7FEFF 		bl	CyExitCriticalSection
 122              	.LVL4:
 123              	.LVL5:
 124              		.loc 1 593 0
 125 001a 10BD     		pop	{r4, pc}
 126              	.L9:
 127              		.align	2
 128              	.L8:
 129 001c 00010B40 		.word	1074462976
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 133              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 134              		.align	1
 135              		.global	CySysEnablePumpClock
 136              		.code	16
 137              		.thumb_func
 138              		.type	CySysEnablePumpClock, %function
 139              	CySysEnablePumpClock:
 140              	.LFB3:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 14


 596:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 597:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 598:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 599:Generated_Source\PSoC4/CyLib.c **** *
 600:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 604:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 605:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 606:Generated_Source\PSoC4/CyLib.c **** *
 607:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 608:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 609:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 610:Generated_Source\PSoC4/CyLib.c **** *
 611:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 612:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 613:Generated_Source\PSoC4/CyLib.c **** {
 141              		.loc 1 613 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              	.LVL6:
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 094B     		ldr	r3, .L15
 151 0004 094C     		ldr	r4, .L15+4
 614:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 615:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 152              		.loc 1 615 0
 153 0006 C207     		lsls	r2, r0, #31
 154 0008 04D5     		bpl	.L11
 616:Generated_Source\PSoC4/CyLib.c ****         {
 617:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 155              		.loc 1 617 0
 156 000a 2268     		ldr	r2, [r4]
 157 000c 1968     		ldr	r1, [r3]
 158 000e 5206     		lsls	r2, r2, #25
 159 0010 0A43     		orrs	r2, r1
 160 0012 06E0     		b	.L13
 161              	.L11:
 618:Generated_Source\PSoC4/CyLib.c ****         }
 619:Generated_Source\PSoC4/CyLib.c ****         else
 620:Generated_Source\PSoC4/CyLib.c ****         {
 621:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 162              		.loc 1 621 0
 163 0014 1A68     		ldr	r2, [r3]
 164 0016 1201     		lsls	r2, r2, #4
 165 0018 520F     		lsrs	r2, r2, #29
 166 001a 2260     		str	r2, [r4]
 622:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 623:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 167              		.loc 1 623 0
 168 001c 1968     		ldr	r1, [r3]
 169 001e 044A     		ldr	r2, .L15+8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 15


 170 0020 0A40     		ands	r2, r1
 171              	.L13:
 172 0022 1A60     		str	r2, [r3]
 624:Generated_Source\PSoC4/CyLib.c ****         }
 625:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 626:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 627:Generated_Source\PSoC4/CyLib.c ****         {
 628:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 629:Generated_Source\PSoC4/CyLib.c ****         }
 630:Generated_Source\PSoC4/CyLib.c ****         else
 631:Generated_Source\PSoC4/CyLib.c ****         {
 632:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 633:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 634:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 635:Generated_Source\PSoC4/CyLib.c ****         }
 636:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 637:Generated_Source\PSoC4/CyLib.c **** }
 173              		.loc 1 637 0
 174              		@ sp needed
 175 0024 10BD     		pop	{r4, pc}
 176              	.L16:
 177 0026 C046     		.align	2
 178              	.L15:
 179 0028 08010B40 		.word	1074462984
 180 002c 00000000 		.word	.LANCHOR0
 181 0030 FFFFFFF1 		.word	-234881025
 182              		.cfi_endproc
 183              	.LFE3:
 184              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 185              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 186              		.align	1
 187              		.global	CySysClkGetSysclkSource
 188              		.code	16
 189              		.thumb_func
 190              		.type	CySysClkGetSysclkSource, %function
 191              	CySysClkGetSysclkSource:
 192              	.LFB4:
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 643:Generated_Source\PSoC4/CyLib.c **** *
 644:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 645:Generated_Source\PSoC4/CyLib.c **** *
 646:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 647:Generated_Source\PSoC4/CyLib.c **** *
 648:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 650:Generated_Source\PSoC4/CyLib.c **** {
 193              		.loc 1 650 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 16


 200              		.cfi_offset 14, -4
 651:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 652:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 653:Generated_Source\PSoC4/CyLib.c **** 
 654:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 201              		.loc 1 654 0
 202 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 203              	.LVL7:
 655:Generated_Source\PSoC4/CyLib.c **** 
 656:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 657:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 658:Generated_Source\PSoC4/CyLib.c ****     {
 659:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 660:Generated_Source\PSoC4/CyLib.c ****     }
 661:Generated_Source\PSoC4/CyLib.c ****     else
 662:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 663:Generated_Source\PSoC4/CyLib.c ****     {
 664:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 204              		.loc 1 664 0
 205 0006 034B     		ldr	r3, .L18
 665:Generated_Source\PSoC4/CyLib.c **** 
 666:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 667:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 668:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 670:Generated_Source\PSoC4/CyLib.c ****         
 671:Generated_Source\PSoC4/CyLib.c ****     }
 672:Generated_Source\PSoC4/CyLib.c **** 
 673:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 676:Generated_Source\PSoC4/CyLib.c **** }
 206              		.loc 1 676 0
 207              		@ sp needed
 664:Generated_Source\PSoC4/CyLib.c **** 
 208              		.loc 1 664 0
 209 0008 1C68     		ldr	r4, [r3]
 210              	.LVL8:
 673:Generated_Source\PSoC4/CyLib.c **** 
 211              		.loc 1 673 0
 212 000a FFF7FEFF 		bl	CyExitCriticalSection
 213              	.LVL9:
 675:Generated_Source\PSoC4/CyLib.c **** }
 214              		.loc 1 675 0
 215 000e 0720     		movs	r0, #7
 216 0010 2040     		ands	r0, r4
 217              	.LVL10:
 218              		.loc 1 676 0
 219 0012 10BD     		pop	{r4, pc}
 220              	.L19:
 221              		.align	2
 222              	.L18:
 223 0014 00010B40 		.word	1074462976
 224              		.cfi_endproc
 225              	.LFE4:
 226              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 227              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 17


 228              		.align	1
 229              		.global	CySysClkWriteSysclkDiv
 230              		.code	16
 231              		.thumb_func
 232              		.type	CySysClkWriteSysclkDiv, %function
 233              	CySysClkWriteSysclkDiv:
 234              	.LFB5:
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** 
 679:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 680:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 681:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 682:Generated_Source\PSoC4/CyLib.c **** *
 683:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 684:Generated_Source\PSoC4/CyLib.c **** *
 685:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 686:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 687:Generated_Source\PSoC4/CyLib.c **** *
 688:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 689:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 690:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 691:Generated_Source\PSoC4/CyLib.c **** *
 692:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 693:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 694:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 695:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 697:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 698:Generated_Source\PSoC4/CyLib.c **** *
 699:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 708:Generated_Source\PSoC4/CyLib.c **** *
 709:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 710:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 711:Generated_Source\PSoC4/CyLib.c **** {
 235              		.loc 1 711 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL11:
 240 0000 70B5     		push	{r4, r5, r6, lr}
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 4, -16
 243              		.cfi_offset 5, -12
 244              		.cfi_offset 6, -8
 245              		.cfi_offset 14, -4
 246              		.loc 1 711 0
 247 0002 0400     		movs	r4, r0
 712:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 713:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 18


 714:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 248              		.loc 1 714 0
 249 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 250              	.LVL12:
 715:Generated_Source\PSoC4/CyLib.c **** 
 716:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 717:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 251              		.loc 1 717 0
 252 0008 E104     		lsls	r1, r4, #19
 253 000a E024     		movs	r4, #224
 254              	.LVL13:
 718:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 255              		.loc 1 718 0
 256 000c 054D     		ldr	r5, .L21
 717:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 257              		.loc 1 717 0
 258 000e A403     		lsls	r4, r4, #14
 259              		.loc 1 718 0
 260 0010 2B68     		ldr	r3, [r5]
 717:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 261              		.loc 1 717 0
 262 0012 054A     		ldr	r2, .L21+4
 263 0014 2140     		ands	r1, r4
 264 0016 1A40     		ands	r2, r3
 265 0018 0B00     		movs	r3, r1
 266 001a 1343     		orrs	r3, r2
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 267              		.loc 1 716 0
 268 001c 2B60     		str	r3, [r5]
 719:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 720:Generated_Source\PSoC4/CyLib.c **** 
 721:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 269              		.loc 1 721 0
 270 001e FFF7FEFF 		bl	CyExitCriticalSection
 271              	.LVL14:
 722:Generated_Source\PSoC4/CyLib.c **** }
 272              		.loc 1 722 0
 273              		@ sp needed
 274 0022 70BD     		pop	{r4, r5, r6, pc}
 275              	.L22:
 276              		.align	2
 277              	.L21:
 278 0024 00010B40 		.word	1074462976
 279 0028 FFFFC7FF 		.word	-3670017
 280              		.cfi_endproc
 281              	.LFE5:
 282              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 283              		.section	.text.CySysLvdDisable,"ax",%progbits
 284              		.align	1
 285              		.global	CySysLvdDisable
 286              		.code	16
 287              		.thumb_func
 288              		.type	CySysLvdDisable, %function
 289              	CySysLvdDisable:
 290              	.LFB8:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 19


 725:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 726:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 727:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 728:Generated_Source\PSoC4/CyLib.c **** *
 729:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 730:Generated_Source\PSoC4/CyLib.c **** *
 731:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 732:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 735:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 736:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 737:Generated_Source\PSoC4/CyLib.c **** *
 738:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 739:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 740:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 741:Generated_Source\PSoC4/CyLib.c **** *
 742:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 743:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 744:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 745:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 746:Generated_Source\PSoC4/CyLib.c **** *
 747:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 748:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 749:Generated_Source\PSoC4/CyLib.c **** *
 750:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 751:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 752:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 753:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 755:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 756:Generated_Source\PSoC4/CyLib.c **** *
 757:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 758:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 759:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 760:Generated_Source\PSoC4/CyLib.c **** *
 761:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 762:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 763:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 764:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 765:Generated_Source\PSoC4/CyLib.c **** *
 766:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 767:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 768:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 769:Generated_Source\PSoC4/CyLib.c ****     {
 770:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 772:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 773:Generated_Source\PSoC4/CyLib.c ****         #else
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 778:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 779:Generated_Source\PSoC4/CyLib.c **** 
 780:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 781:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 20


 782:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 783:Generated_Source\PSoC4/CyLib.c **** 
 784:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 785:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 786:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c **** 
 791:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 792:Generated_Source\PSoC4/CyLib.c **** 
 793:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 794:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 797:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 798:Generated_Source\PSoC4/CyLib.c ****             }
 799:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c **** 
 802:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 805:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 806:Generated_Source\PSoC4/CyLib.c ****                 {
 807:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 810:Generated_Source\PSoC4/CyLib.c ****                 {
 811:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 812:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 813:Generated_Source\PSoC4/CyLib.c ****                 }
 814:Generated_Source\PSoC4/CyLib.c **** 
 815:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 816:Generated_Source\PSoC4/CyLib.c ****                 }
 817:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c **** 
 822:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 823:Generated_Source\PSoC4/CyLib.c **** 
 824:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 828:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 829:Generated_Source\PSoC4/CyLib.c **** 
 830:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 831:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 832:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 833:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 836:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 837:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 838:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 21


 839:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 842:Generated_Source\PSoC4/CyLib.c ****         {
 843:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 849:Generated_Source\PSoC4/CyLib.c ****             {
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 851:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 852:Generated_Source\PSoC4/CyLib.c ****             }
 853:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 854:Generated_Source\PSoC4/CyLib.c ****             {
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 857:Generated_Source\PSoC4/CyLib.c ****             }
 858:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 859:Generated_Source\PSoC4/CyLib.c ****             {
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 862:Generated_Source\PSoC4/CyLib.c ****             }
 863:Generated_Source\PSoC4/CyLib.c ****             else
 864:Generated_Source\PSoC4/CyLib.c ****             {
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 867:Generated_Source\PSoC4/CyLib.c ****             }
 868:Generated_Source\PSoC4/CyLib.c **** 
 869:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 870:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 874:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 875:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 876:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 877:Generated_Source\PSoC4/CyLib.c ****             *
 878:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 879:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 880:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 881:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 882:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 883:Generated_Source\PSoC4/CyLib.c ****             {
 884:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 885:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 886:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 891:Generated_Source\PSoC4/CyLib.c ****             }
 892:Generated_Source\PSoC4/CyLib.c ****             else
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 895:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 22


 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c **** 
 898:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 899:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 900:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 901:Generated_Source\PSoC4/CyLib.c ****             *
 902:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 903:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 904:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 905:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 906:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 907:Generated_Source\PSoC4/CyLib.c ****             {
 908:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 909:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 910:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 914:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 916:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 917:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 920:Generated_Source\PSoC4/CyLib.c ****             {
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 923:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 924:Generated_Source\PSoC4/CyLib.c ****             }
 925:Generated_Source\PSoC4/CyLib.c ****         }
 926:Generated_Source\PSoC4/CyLib.c ****         else
 927:Generated_Source\PSoC4/CyLib.c ****         {
 928:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 929:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLib.c ****         }
 931:Generated_Source\PSoC4/CyLib.c **** 
 932:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 933:Generated_Source\PSoC4/CyLib.c **** 
 934:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 935:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 936:Generated_Source\PSoC4/CyLib.c ****             {
 937:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 938:Generated_Source\PSoC4/CyLib.c ****             }
 939:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 940:Generated_Source\PSoC4/CyLib.c **** 
 941:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 942:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 943:Generated_Source\PSoC4/CyLib.c ****             {
 944:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 945:Generated_Source\PSoC4/CyLib.c ****             }
 946:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 947:Generated_Source\PSoC4/CyLib.c **** 
 948:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #else
 952:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 23


 953:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 954:Generated_Source\PSoC4/CyLib.c ****     {
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 956:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 957:Generated_Source\PSoC4/CyLib.c **** 
 958:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 959:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 960:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 961:Generated_Source\PSoC4/CyLib.c ****         
 962:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 963:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 964:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 967:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 968:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 969:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 970:Generated_Source\PSoC4/CyLib.c ****         #else
 971:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 973:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 974:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 975:Generated_Source\PSoC4/CyLib.c ****         {
 976:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 979:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 980:Generated_Source\PSoC4/CyLib.c ****                 {
 981:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 982:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 983:Generated_Source\PSoC4/CyLib.c ****                 }
 984:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 987:Generated_Source\PSoC4/CyLib.c **** 
 988:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 989:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 990:Generated_Source\PSoC4/CyLib.c ****                     {
 991:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 992:Generated_Source\PSoC4/CyLib.c **** 
 993:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 994:Generated_Source\PSoC4/CyLib.c ****                     {
 995:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 996:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 997:Generated_Source\PSoC4/CyLib.c ****                     }
 998:Generated_Source\PSoC4/CyLib.c **** 
 999:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1000:Generated_Source\PSoC4/CyLib.c ****                     }
1001:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1002:Generated_Source\PSoC4/CyLib.c **** 
1003:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c **** 
1006:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1007:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 24


1010:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1011:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1013:Generated_Source\PSoC4/CyLib.c ****                 {
1014:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1015:Generated_Source\PSoC4/CyLib.c ****                 }
1016:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1017:Generated_Source\PSoC4/CyLib.c ****                 {
1018:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1019:Generated_Source\PSoC4/CyLib.c ****                 }
1020:Generated_Source\PSoC4/CyLib.c ****                 else
1021:Generated_Source\PSoC4/CyLib.c ****                 {
1022:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1023:Generated_Source\PSoC4/CyLib.c ****                 }
1024:Generated_Source\PSoC4/CyLib.c ****             #else
1025:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1026:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1027:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1028:Generated_Source\PSoC4/CyLib.c **** 
1029:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1030:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1031:Generated_Source\PSoC4/CyLib.c **** 
1032:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1034:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1035:Generated_Source\PSoC4/CyLib.c **** 
1036:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1039:Generated_Source\PSoC4/CyLib.c ****             {
1040:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1041:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1042:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1043:Generated_Source\PSoC4/CyLib.c **** 
1044:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1045:Generated_Source\PSoC4/CyLib.c **** 
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1048:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1049:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1050:Generated_Source\PSoC4/CyLib.c ****             }
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1053:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1054:Generated_Source\PSoC4/CyLib.c ****                 {
1055:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1056:Generated_Source\PSoC4/CyLib.c ****                 }
1057:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****         
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1066:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 25


1067:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1068:Generated_Source\PSoC4/CyLib.c ****         }
1069:Generated_Source\PSoC4/CyLib.c ****         else
1070:Generated_Source\PSoC4/CyLib.c ****         {
1071:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1072:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1073:Generated_Source\PSoC4/CyLib.c ****         }
1074:Generated_Source\PSoC4/CyLib.c ****     }
1075:Generated_Source\PSoC4/CyLib.c **** 
1076:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1080:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1081:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1082:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1083:Generated_Source\PSoC4/CyLib.c ****     *
1084:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1085:Generated_Source\PSoC4/CyLib.c ****     *
1086:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1087:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1088:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1089:Generated_Source\PSoC4/CyLib.c ****     *
1090:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1091:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1092:Generated_Source\PSoC4/CyLib.c ****     *
1093:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1094:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1095:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1096:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1098:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1099:Generated_Source\PSoC4/CyLib.c ****     *
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1103:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1104:Generated_Source\PSoC4/CyLib.c ****     *
1105:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1106:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1107:Generated_Source\PSoC4/CyLib.c ****     {
1108:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1111:Generated_Source\PSoC4/CyLib.c **** 
1112:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1113:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1114:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****     }
1118:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 26


1124:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1125:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1126:Generated_Source\PSoC4/CyLib.c ****     *
1127:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1128:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1129:Generated_Source\PSoC4/CyLib.c ****     *
1130:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1131:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1132:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1133:Generated_Source\PSoC4/CyLib.c ****     * called.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1136:Generated_Source\PSoC4/CyLib.c ****     *
1137:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1140:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1143:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1144:Generated_Source\PSoC4/CyLib.c ****     *
1145:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1146:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1147:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1150:Generated_Source\PSoC4/CyLib.c ****     *
1151:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1152:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1153:Generated_Source\PSoC4/CyLib.c ****     {
1154:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1155:Generated_Source\PSoC4/CyLib.c **** 
1156:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1157:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1158:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1159:Generated_Source\PSoC4/CyLib.c **** 
1160:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1161:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1162:Generated_Source\PSoC4/CyLib.c **** 
1163:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1164:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1165:Generated_Source\PSoC4/CyLib.c ****         
1166:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1168:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1169:Generated_Source\PSoC4/CyLib.c ****             
1170:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1171:Generated_Source\PSoC4/CyLib.c ****             {
1172:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1173:Generated_Source\PSoC4/CyLib.c ****             }
1174:Generated_Source\PSoC4/CyLib.c ****             else
1175:Generated_Source\PSoC4/CyLib.c ****             {
1176:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1180:Generated_Source\PSoC4/CyLib.c ****             
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 27


1181:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1184:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1185:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1186:Generated_Source\PSoC4/CyLib.c ****                 
1187:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1188:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1189:Generated_Source\PSoC4/CyLib.c ****                 {
1190:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1191:Generated_Source\PSoC4/CyLib.c ****                 }
1192:Generated_Source\PSoC4/CyLib.c ****                 
1193:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1196:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1197:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1198:Generated_Source\PSoC4/CyLib.c **** 
1199:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1200:Generated_Source\PSoC4/CyLib.c ****                 {
1201:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1202:Generated_Source\PSoC4/CyLib.c ****                 }
1203:Generated_Source\PSoC4/CyLib.c **** 
1204:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1205:Generated_Source\PSoC4/CyLib.c ****                 {
1206:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1207:Generated_Source\PSoC4/CyLib.c ****                 }
1208:Generated_Source\PSoC4/CyLib.c ****                 
1209:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1212:Generated_Source\PSoC4/CyLib.c ****                 
1213:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1215:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1216:Generated_Source\PSoC4/CyLib.c ****                 #else
1217:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1218:Generated_Source\PSoC4/CyLib.c ****                 #endif
1219:Generated_Source\PSoC4/CyLib.c ****                 
1220:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1221:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1222:Generated_Source\PSoC4/CyLib.c ****                 {
1223:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1224:Generated_Source\PSoC4/CyLib.c ****                 }
1225:Generated_Source\PSoC4/CyLib.c ****                 
1226:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1228:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1229:Generated_Source\PSoC4/CyLib.c ****                                             
1230:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1231:Generated_Source\PSoC4/CyLib.c ****                 {
1232:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1233:Generated_Source\PSoC4/CyLib.c ****                 }
1234:Generated_Source\PSoC4/CyLib.c **** 
1235:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1236:Generated_Source\PSoC4/CyLib.c ****                 
1237:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 28


1238:Generated_Source\PSoC4/CyLib.c ****                 
1239:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1240:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1241:Generated_Source\PSoC4/CyLib.c ****                 
1242:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1243:Generated_Source\PSoC4/CyLib.c ****                 {
1244:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1245:Generated_Source\PSoC4/CyLib.c ****                 }
1246:Generated_Source\PSoC4/CyLib.c ****                 
1247:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1249:Generated_Source\PSoC4/CyLib.c ****                 
1250:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1251:Generated_Source\PSoC4/CyLib.c ****                 {
1252:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1253:Generated_Source\PSoC4/CyLib.c ****                 }
1254:Generated_Source\PSoC4/CyLib.c ****                 
1255:Generated_Source\PSoC4/CyLib.c ****             }
1256:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1257:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1258:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1259:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1260:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1261:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1263:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1266:Generated_Source\PSoC4/CyLib.c ****         {
1267:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1270:Generated_Source\PSoC4/CyLib.c ****             {
1271:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1272:Generated_Source\PSoC4/CyLib.c **** 
1273:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1274:Generated_Source\PSoC4/CyLib.c ****                 {
1275:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1276:Generated_Source\PSoC4/CyLib.c ****                     break;
1277:Generated_Source\PSoC4/CyLib.c ****                 }
1278:Generated_Source\PSoC4/CyLib.c ****             }
1279:Generated_Source\PSoC4/CyLib.c **** 
1280:Generated_Source\PSoC4/CyLib.c ****         }
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1283:Generated_Source\PSoC4/CyLib.c ****     }
1284:Generated_Source\PSoC4/CyLib.c **** 
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1287:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1288:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1289:Generated_Source\PSoC4/CyLib.c ****     *
1290:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1293:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1294:Generated_Source\PSoC4/CyLib.c ****     * functioning.
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 29


1295:Generated_Source\PSoC4/CyLib.c ****     *
1296:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1297:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1298:Generated_Source\PSoC4/CyLib.c ****     {
1299:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1300:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1301:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1302:Generated_Source\PSoC4/CyLib.c **** 
1303:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1305:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1307:Generated_Source\PSoC4/CyLib.c ****         #else
1308:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1309:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1310:Generated_Source\PSoC4/CyLib.c ****     }
1311:Generated_Source\PSoC4/CyLib.c **** 
1312:Generated_Source\PSoC4/CyLib.c **** 
1313:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1314:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1315:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1316:Generated_Source\PSoC4/CyLib.c ****     *
1317:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1318:Generated_Source\PSoC4/CyLib.c ****     *
1319:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1320:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1321:Generated_Source\PSoC4/CyLib.c ****     *
1322:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is 
1323:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1324:Generated_Source\PSoC4/CyLib.c ****     *
1325:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1326:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1327:Generated_Source\PSoC4/CyLib.c ****     *
1328:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO 
1329:Generated_Source\PSoC4/CyLib.c ****     * is running.
1330:Generated_Source\PSoC4/CyLib.c ****     *
1331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1333:Generated_Source\PSoC4/CyLib.c ****     {
1334:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1337:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1338:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1339:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1340:Generated_Source\PSoC4/CyLib.c **** 
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1342:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1343:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1344:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1345:Generated_Source\PSoC4/CyLib.c ****         #else
1346:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1347:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1348:Generated_Source\PSoC4/CyLib.c **** 
1349:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1350:Generated_Source\PSoC4/CyLib.c ****     }
1351:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 30


1352:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1353:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1354:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1355:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1356:Generated_Source\PSoC4/CyLib.c ****         *
1357:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1358:Generated_Source\PSoC4/CyLib.c ****         *
1359:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1360:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1362:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1363:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1364:Generated_Source\PSoC4/CyLib.c ****         *
1365:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1366:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1367:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1368:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1369:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1370:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1373:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1374:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1375:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1376:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1377:Generated_Source\PSoC4/CyLib.c ****         *
1378:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1379:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1380:Generated_Source\PSoC4/CyLib.c ****         {
1381:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1382:Generated_Source\PSoC4/CyLib.c **** 
1383:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1384:Generated_Source\PSoC4/CyLib.c ****             {
1385:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1386:Generated_Source\PSoC4/CyLib.c **** 
1387:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1388:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****             else
1393:Generated_Source\PSoC4/CyLib.c ****             {
1394:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1395:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1396:Generated_Source\PSoC4/CyLib.c ****             }
1397:Generated_Source\PSoC4/CyLib.c ****         }
1398:Generated_Source\PSoC4/CyLib.c **** 
1399:Generated_Source\PSoC4/CyLib.c ****     #else
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1402:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1403:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1406:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 31


1409:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1410:Generated_Source\PSoC4/CyLib.c ****         *
1411:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1412:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1415:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1416:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1417:Generated_Source\PSoC4/CyLib.c ****         *
1418:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1419:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1422:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1423:Generated_Source\PSoC4/CyLib.c ****         *
1424:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1425:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1428:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1429:Generated_Source\PSoC4/CyLib.c ****         *
1430:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1441:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1445:Generated_Source\PSoC4/CyLib.c ****         *
1446:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1447:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         *
1452:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1453:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1454:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1455:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1456:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1457:Generated_Source\PSoC4/CyLib.c ****         *
1458:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1459:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1460:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1461:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1462:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1463:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1464:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1465:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 32


1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1468:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1469:Generated_Source\PSoC4/CyLib.c ****         {
1470:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1471:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1472:Generated_Source\PSoC4/CyLib.c **** 
1473:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1476:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1477:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1479:Generated_Source\PSoC4/CyLib.c **** 
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1481:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1482:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1483:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1484:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1485:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1488:Generated_Source\PSoC4/CyLib.c **** 
1489:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1490:Generated_Source\PSoC4/CyLib.c ****         }
1491:Generated_Source\PSoC4/CyLib.c **** 
1492:Generated_Source\PSoC4/CyLib.c **** 
1493:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1494:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1495:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1496:Generated_Source\PSoC4/CyLib.c ****         *
1497:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1498:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1499:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO 
1502:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1505:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1506:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1507:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1508:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1511:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1512:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1513:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1514:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1517:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1518:Generated_Source\PSoC4/CyLib.c ****         *
1519:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1520:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1521:Generated_Source\PSoC4/CyLib.c ****         {
1522:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 33


1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1525:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1526:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1527:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1528:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1529:Generated_Source\PSoC4/CyLib.c **** 
1530:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1531:Generated_Source\PSoC4/CyLib.c **** 
1532:Generated_Source\PSoC4/CyLib.c **** 
1533:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1534:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1535:Generated_Source\PSoC4/CyLib.c ****             {
1536:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1537:Generated_Source\PSoC4/CyLib.c ****             }
1538:Generated_Source\PSoC4/CyLib.c ****             else
1539:Generated_Source\PSoC4/CyLib.c ****             {
1540:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1541:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1542:Generated_Source\PSoC4/CyLib.c **** 
1543:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1544:Generated_Source\PSoC4/CyLib.c ****                 {
1545:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1546:Generated_Source\PSoC4/CyLib.c ****                 }
1547:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1548:Generated_Source\PSoC4/CyLib.c ****                 {
1549:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1550:Generated_Source\PSoC4/CyLib.c ****                 }
1551:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1552:Generated_Source\PSoC4/CyLib.c ****                 {
1553:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1554:Generated_Source\PSoC4/CyLib.c ****                 }
1555:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1556:Generated_Source\PSoC4/CyLib.c ****                 {
1557:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1558:Generated_Source\PSoC4/CyLib.c ****                 }
1559:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1560:Generated_Source\PSoC4/CyLib.c ****                 {
1561:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1562:Generated_Source\PSoC4/CyLib.c ****                 }
1563:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1564:Generated_Source\PSoC4/CyLib.c ****                 {
1565:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1566:Generated_Source\PSoC4/CyLib.c ****                 }
1567:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1568:Generated_Source\PSoC4/CyLib.c ****                 {
1569:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1570:Generated_Source\PSoC4/CyLib.c ****                 }
1571:Generated_Source\PSoC4/CyLib.c ****                 else
1572:Generated_Source\PSoC4/CyLib.c ****                 {
1573:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1574:Generated_Source\PSoC4/CyLib.c ****                 }
1575:Generated_Source\PSoC4/CyLib.c **** 
1576:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1577:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 34


1580:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1581:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1582:Generated_Source\PSoC4/CyLib.c ****                 {
1583:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1584:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1585:Generated_Source\PSoC4/CyLib.c ****                 }
1586:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1587:Generated_Source\PSoC4/CyLib.c ****                 {
1588:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1589:Generated_Source\PSoC4/CyLib.c ****                 }
1590:Generated_Source\PSoC4/CyLib.c ****                 else
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c **** 
1595:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1596:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1614:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1617:Generated_Source\PSoC4/CyLib.c **** 
1618:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1619:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1620:Generated_Source\PSoC4/CyLib.c ****                 {
1621:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1622:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c ****                 else
1625:Generated_Source\PSoC4/CyLib.c ****                 {
1626:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1627:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1628:Generated_Source\PSoC4/CyLib.c ****                     */
1629:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1630:Generated_Source\PSoC4/CyLib.c ****                 }
1631:Generated_Source\PSoC4/CyLib.c ****             }
1632:Generated_Source\PSoC4/CyLib.c **** 
1633:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1634:Generated_Source\PSoC4/CyLib.c ****         }
1635:Generated_Source\PSoC4/CyLib.c **** 
1636:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 35


1637:Generated_Source\PSoC4/CyLib.c **** 
1638:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1639:Generated_Source\PSoC4/CyLib.c **** 
1640:Generated_Source\PSoC4/CyLib.c **** 
1641:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1642:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1643:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1644:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1647:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1648:Generated_Source\PSoC4/CyLib.c ****     *
1649:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1650:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1653:Generated_Source\PSoC4/CyLib.c ****     *
1654:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1655:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1656:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1657:Generated_Source\PSoC4/CyLib.c ****     *
1658:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1659:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1660:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1661:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1662:Generated_Source\PSoC4/CyLib.c ****     *
1663:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1664:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1665:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1666:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1667:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1668:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1671:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1672:Generated_Source\PSoC4/CyLib.c ****     {
1673:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1674:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1675:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1676:Generated_Source\PSoC4/CyLib.c **** 
1677:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1678:Generated_Source\PSoC4/CyLib.c ****         {
1679:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1682:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1683:Generated_Source\PSoC4/CyLib.c **** 
1684:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1685:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1690:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1691:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1692:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1693:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 36


1694:Generated_Source\PSoC4/CyLib.c **** 
1695:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1696:Generated_Source\PSoC4/CyLib.c ****             {
1697:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1700:Generated_Source\PSoC4/CyLib.c ****                 {
1701:Generated_Source\PSoC4/CyLib.c **** 
1702:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1703:Generated_Source\PSoC4/CyLib.c ****                     {
1704:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1705:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1706:Generated_Source\PSoC4/CyLib.c ****                         break;
1707:Generated_Source\PSoC4/CyLib.c ****                     }
1708:Generated_Source\PSoC4/CyLib.c **** 
1709:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1710:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1711:Generated_Source\PSoC4/CyLib.c ****                 }
1712:Generated_Source\PSoC4/CyLib.c ****             }
1713:Generated_Source\PSoC4/CyLib.c ****         }
1714:Generated_Source\PSoC4/CyLib.c ****         else
1715:Generated_Source\PSoC4/CyLib.c ****         {
1716:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1717:Generated_Source\PSoC4/CyLib.c ****         }
1718:Generated_Source\PSoC4/CyLib.c **** 
1719:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1720:Generated_Source\PSoC4/CyLib.c ****     }
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1724:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1725:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1726:Generated_Source\PSoC4/CyLib.c ****     *
1727:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1732:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1733:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1734:Generated_Source\PSoC4/CyLib.c ****     *
1735:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1736:Generated_Source\PSoC4/CyLib.c ****     *
1737:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1738:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1739:Generated_Source\PSoC4/CyLib.c ****     {
1740:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1741:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1742:Generated_Source\PSoC4/CyLib.c **** 
1743:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1744:Generated_Source\PSoC4/CyLib.c **** 
1745:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1746:Generated_Source\PSoC4/CyLib.c **** 
1747:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1748:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1749:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1750:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 37


1751:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1752:Generated_Source\PSoC4/CyLib.c ****         }
1753:Generated_Source\PSoC4/CyLib.c **** 
1754:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1757:Generated_Source\PSoC4/CyLib.c ****     }
1758:Generated_Source\PSoC4/CyLib.c **** 
1759:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1760:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1761:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1762:Generated_Source\PSoC4/CyLib.c ****     *
1763:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1764:Generated_Source\PSoC4/CyLib.c ****     *
1765:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1766:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1769:Generated_Source\PSoC4/CyLib.c ****     *
1770:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1771:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1772:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1775:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1776:Generated_Source\PSoC4/CyLib.c ****     {
1777:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1778:Generated_Source\PSoC4/CyLib.c **** 
1779:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1780:Generated_Source\PSoC4/CyLib.c ****         {
1781:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1782:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1783:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1784:Generated_Source\PSoC4/CyLib.c ****         }
1785:Generated_Source\PSoC4/CyLib.c ****     }
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c **** 
1788:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1789:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1790:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1791:Generated_Source\PSoC4/CyLib.c ****     *
1792:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1793:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1794:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1795:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1796:Generated_Source\PSoC4/CyLib.c ****     *
1797:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1798:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1801:Generated_Source\PSoC4/CyLib.c ****     *
1802:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1803:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1804:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1805:Generated_Source\PSoC4/CyLib.c ****     *
1806:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1807:Generated_Source\PSoC4/CyLib.c ****     * divider.
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 38


1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1810:Generated_Source\PSoC4/CyLib.c ****     *
1811:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1812:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1813:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1814:Generated_Source\PSoC4/CyLib.c ****     *
1815:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1816:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1817:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1820:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1821:Generated_Source\PSoC4/CyLib.c ****     {
1822:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1823:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1824:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1825:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1828:Generated_Source\PSoC4/CyLib.c **** 
1829:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1830:Generated_Source\PSoC4/CyLib.c **** 
1831:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1832:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1833:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1834:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1835:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1836:Generated_Source\PSoC4/CyLib.c ****         {
1837:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1839:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1840:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1843:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1844:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1847:Generated_Source\PSoC4/CyLib.c **** 
1848:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1849:Generated_Source\PSoC4/CyLib.c ****         }
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1852:Generated_Source\PSoC4/CyLib.c **** 
1853:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1854:Generated_Source\PSoC4/CyLib.c ****     }
1855:Generated_Source\PSoC4/CyLib.c **** 
1856:Generated_Source\PSoC4/CyLib.c **** 
1857:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1858:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1859:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1864:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 39


1865:Generated_Source\PSoC4/CyLib.c ****     *
1866:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1867:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1868:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1869:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1872:Generated_Source\PSoC4/CyLib.c ****     *
1873:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1874:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1875:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1876:Generated_Source\PSoC4/CyLib.c ****     *
1877:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1878:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1879:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1880:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1881:Generated_Source\PSoC4/CyLib.c ****     *
1882:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1883:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1884:Generated_Source\PSoC4/CyLib.c ****     *
1885:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1888:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1889:Generated_Source\PSoC4/CyLib.c ****     {
1890:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1891:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1892:Generated_Source\PSoC4/CyLib.c **** 
1893:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1896:Generated_Source\PSoC4/CyLib.c ****         {
1897:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1898:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1899:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1900:Generated_Source\PSoC4/CyLib.c ****         }
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1912:Generated_Source\PSoC4/CyLib.c ****     *
1913:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1914:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1915:Generated_Source\PSoC4/CyLib.c ****     *
1916:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1917:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1918:Generated_Source\PSoC4/CyLib.c ****     {
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1920:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1921:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 40


1922:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1925:Generated_Source\PSoC4/CyLib.c **** 
1926:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1927:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1932:Generated_Source\PSoC4/CyLib.c ****     }
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c **** 
1935:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1936:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1937:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1938:Generated_Source\PSoC4/CyLib.c ****     *
1939:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1940:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1945:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1946:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1947:Generated_Source\PSoC4/CyLib.c ****     *
1948:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1949:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1950:Generated_Source\PSoC4/CyLib.c ****     *
1951:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1952:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1953:Generated_Source\PSoC4/CyLib.c ****     {
1954:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1955:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1956:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1957:Generated_Source\PSoC4/CyLib.c **** 
1958:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1959:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1960:Generated_Source\PSoC4/CyLib.c **** 
1961:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1962:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1964:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1965:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1966:Generated_Source\PSoC4/CyLib.c ****             )
1967:Generated_Source\PSoC4/CyLib.c ****         {
1968:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1969:Generated_Source\PSoC4/CyLib.c ****         }
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1972:Generated_Source\PSoC4/CyLib.c ****     }
1973:Generated_Source\PSoC4/CyLib.c **** 
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1976:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1977:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1978:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 41


1979:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1980:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1981:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1982:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1985:Generated_Source\PSoC4/CyLib.c ****     *
1986:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1987:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1988:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1991:Generated_Source\PSoC4/CyLib.c ****     *
1992:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1993:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1994:Generated_Source\PSoC4/CyLib.c ****     {
1995:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1996:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1999:Generated_Source\PSoC4/CyLib.c **** 
2000:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2001:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2006:Generated_Source\PSoC4/CyLib.c ****     }
2007:Generated_Source\PSoC4/CyLib.c **** 
2008:Generated_Source\PSoC4/CyLib.c **** 
2009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2014:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2015:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2016:Generated_Source\PSoC4/CyLib.c ****     *
2017:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2018:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2021:Generated_Source\PSoC4/CyLib.c ****     *
2022:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2023:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2024:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2029:Generated_Source\PSoC4/CyLib.c ****     *
2030:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2033:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2034:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2035:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 42


2036:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2039:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2042:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2043:Generated_Source\PSoC4/CyLib.c ****     *
2044:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2045:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2046:Generated_Source\PSoC4/CyLib.c ****     {
2047:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2049:Generated_Source\PSoC4/CyLib.c **** 
2050:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2052:Generated_Source\PSoC4/CyLib.c **** 
2053:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2055:Generated_Source\PSoC4/CyLib.c **** 
2056:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2057:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2058:Generated_Source\PSoC4/CyLib.c **** 
2059:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2060:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2061:Generated_Source\PSoC4/CyLib.c **** 
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2066:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2067:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2068:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2069:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2070:Generated_Source\PSoC4/CyLib.c ****         {
2071:Generated_Source\PSoC4/CyLib.c **** 
2072:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2073:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2074:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2075:Generated_Source\PSoC4/CyLib.c **** 
2076:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2077:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2078:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2081:Generated_Source\PSoC4/CyLib.c ****             {
2082:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2083:Generated_Source\PSoC4/CyLib.c ****                 {
2084:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2087:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2090:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2091:Generated_Source\PSoC4/CyLib.c **** 
2092:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 43


2093:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2096:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2097:Generated_Source\PSoC4/CyLib.c ****                     {
2098:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2099:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2100:Generated_Source\PSoC4/CyLib.c ****                         break;
2101:Generated_Source\PSoC4/CyLib.c ****                     }
2102:Generated_Source\PSoC4/CyLib.c ****                 }
2103:Generated_Source\PSoC4/CyLib.c **** 
2104:Generated_Source\PSoC4/CyLib.c **** 
2105:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2106:Generated_Source\PSoC4/CyLib.c ****                 {
2107:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2108:Generated_Source\PSoC4/CyLib.c ****                     {
2109:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2110:Generated_Source\PSoC4/CyLib.c ****                     }
2111:Generated_Source\PSoC4/CyLib.c ****                 }
2112:Generated_Source\PSoC4/CyLib.c ****             }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         }
2115:Generated_Source\PSoC4/CyLib.c **** 
2116:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2117:Generated_Source\PSoC4/CyLib.c ****     }
2118:Generated_Source\PSoC4/CyLib.c **** 
2119:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2120:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2121:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2122:Generated_Source\PSoC4/CyLib.c ****     *
2123:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2124:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2127:Generated_Source\PSoC4/CyLib.c ****     *
2128:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2129:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2130:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2131:Generated_Source\PSoC4/CyLib.c ****     *
2132:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L 
2135:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2139:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2140:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2141:Generated_Source\PSoC4/CyLib.c ****     *
2142:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2143:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2144:Generated_Source\PSoC4/CyLib.c ****     {
2145:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2146:Generated_Source\PSoC4/CyLib.c ****         
2147:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2148:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2149:Generated_Source\PSoC4/CyLib.c ****         #else
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 44


2150:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2151:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2156:Generated_Source\PSoC4/CyLib.c ****         {
2157:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****             #else
2162:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2163:Generated_Source\PSoC4/CyLib.c ****                 
2164:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2165:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2166:Generated_Source\PSoC4/CyLib.c ****                 
2167:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2168:Generated_Source\PSoC4/CyLib.c ****                 {
2169:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2170:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2171:Generated_Source\PSoC4/CyLib.c ****                 }
2172:Generated_Source\PSoC4/CyLib.c ****                 
2173:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2174:Generated_Source\PSoC4/CyLib.c **** 
2175:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2176:Generated_Source\PSoC4/CyLib.c ****         }
2177:Generated_Source\PSoC4/CyLib.c **** 
2178:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2179:Generated_Source\PSoC4/CyLib.c ****     }
2180:Generated_Source\PSoC4/CyLib.c **** 
2181:Generated_Source\PSoC4/CyLib.c ****     
2182:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2183:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2184:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2187:Generated_Source\PSoC4/CyLib.c ****     *
2188:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2189:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2192:Generated_Source\PSoC4/CyLib.c ****     *
2193:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2194:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2195:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2196:Generated_Source\PSoC4/CyLib.c ****     *
2197:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2200:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2201:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2202:Generated_Source\PSoC4/CyLib.c ****     *
2203:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2204:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2205:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2206:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 45


2207:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2209:Generated_Source\PSoC4/CyLib.c ****     {
2210:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2211:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2212:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2213:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2214:Generated_Source\PSoC4/CyLib.c **** 
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2221:Generated_Source\PSoC4/CyLib.c ****         {
2222:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2223:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2226:Generated_Source\PSoC4/CyLib.c **** 
2227:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2228:Generated_Source\PSoC4/CyLib.c ****         }
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c ****     
2235:Generated_Source\PSoC4/CyLib.c ****     
2236:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2237:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2239:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****         *
2241:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt 
2242:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of 
2243:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2244:Generated_Source\PSoC4/CyLib.c ****         *
2245:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****         *
2247:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2248:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2249:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2250:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2251:Generated_Source\PSoC4/CyLib.c ****         *
2252:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2253:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2254:Generated_Source\PSoC4/CyLib.c ****         {
2255:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2256:Generated_Source\PSoC4/CyLib.c ****         }
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         
2259:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2260:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2261:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2262:Generated_Source\PSoC4/CyLib.c ****         *
2263:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 46


2264:Generated_Source\PSoC4/CyLib.c ****         *
2265:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2266:Generated_Source\PSoC4/CyLib.c ****         *
2267:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2268:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2269:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2270:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2271:Generated_Source\PSoC4/CyLib.c ****         *
2272:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2273:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2274:Generated_Source\PSoC4/CyLib.c ****         {
2275:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2276:Generated_Source\PSoC4/CyLib.c ****         }
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2280:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2281:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2282:Generated_Source\PSoC4/CyLib.c ****         *
2283:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt. 
2284:Generated_Source\PSoC4/CyLib.c ****         *
2285:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2286:Generated_Source\PSoC4/CyLib.c ****         *
2287:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2288:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2289:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2290:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2291:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2292:Generated_Source\PSoC4/CyLib.c ****         *
2293:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2294:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2295:Generated_Source\PSoC4/CyLib.c ****         {
2296:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2297:Generated_Source\PSoC4/CyLib.c ****         }
2298:Generated_Source\PSoC4/CyLib.c ****         
2299:Generated_Source\PSoC4/CyLib.c ****         
2300:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2301:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2302:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLib.c ****         *
2304:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2307:Generated_Source\PSoC4/CyLib.c ****         *
2308:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2309:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2310:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2311:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2312:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2313:Generated_Source\PSoC4/CyLib.c ****         *
2314:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2315:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2316:Generated_Source\PSoC4/CyLib.c ****         {
2317:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2318:Generated_Source\PSoC4/CyLib.c ****         }
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****         
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 47


2321:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2322:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2323:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2324:Generated_Source\PSoC4/CyLib.c ****         *
2325:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2326:Generated_Source\PSoC4/CyLib.c ****         *
2327:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2328:Generated_Source\PSoC4/CyLib.c ****         *
2329:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2330:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2331:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2332:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2333:Generated_Source\PSoC4/CyLib.c ****         *
2334:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2335:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
2336:Generated_Source\PSoC4/CyLib.c ****         {
2337:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2338:Generated_Source\PSoC4/CyLib.c ****         }
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****         
2341:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2342:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2343:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2344:Generated_Source\PSoC4/CyLib.c ****         *
2345:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2348:Generated_Source\PSoC4/CyLib.c ****         *
2349:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2350:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2351:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2352:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2353:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2354:Generated_Source\PSoC4/CyLib.c ****         *
2355:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/        
2356:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2357:Generated_Source\PSoC4/CyLib.c ****         {
2358:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2359:Generated_Source\PSoC4/CyLib.c ****         }
2360:Generated_Source\PSoC4/CyLib.c **** 
2361:Generated_Source\PSoC4/CyLib.c ****         
2362:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2363:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2364:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2365:Generated_Source\PSoC4/CyLib.c ****         *
2366:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2369:Generated_Source\PSoC4/CyLib.c ****         *
2370:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/          
2371:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2372:Generated_Source\PSoC4/CyLib.c ****         {
2373:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2374:Generated_Source\PSoC4/CyLib.c ****         }
2375:Generated_Source\PSoC4/CyLib.c **** 
2376:Generated_Source\PSoC4/CyLib.c ****         
2377:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 48


2378:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2379:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2384:Generated_Source\PSoC4/CyLib.c ****         *
2385:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/         
2386:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2387:Generated_Source\PSoC4/CyLib.c ****         {
2388:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2389:Generated_Source\PSoC4/CyLib.c ****         }
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****         
2392:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2393:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2394:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2395:Generated_Source\PSoC4/CyLib.c ****         *
2396:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2397:Generated_Source\PSoC4/CyLib.c ****         *
2398:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2399:Generated_Source\PSoC4/CyLib.c ****         *
2400:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2401:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable 
2402:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2403:Generated_Source\PSoC4/CyLib.c ****         *
2404:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2405:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2406:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2407:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2413:Generated_Source\PSoC4/CyLib.c ****             
2414:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2415:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2416:Generated_Source\PSoC4/CyLib.c ****             
2417:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2418:Generated_Source\PSoC4/CyLib.c ****         }
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****         
2421:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2422:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2423:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2424:Generated_Source\PSoC4/CyLib.c ****         *
2425:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2426:Generated_Source\PSoC4/CyLib.c ****         *
2427:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2428:Generated_Source\PSoC4/CyLib.c ****         *
2429:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2430:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles, 
2431:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored 
2432:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2433:Generated_Source\PSoC4/CyLib.c ****         *
2434:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 49


2435:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time) 
2436:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event 
2437:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all 
2438:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2439:Generated_Source\PSoC4/CyLib.c ****         *
2440:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/ 
2441:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2442:Generated_Source\PSoC4/CyLib.c ****         {
2443:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2444:Generated_Source\PSoC4/CyLib.c ****             
2445:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2446:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2447:Generated_Source\PSoC4/CyLib.c ****             
2448:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2449:Generated_Source\PSoC4/CyLib.c ****         }
2450:Generated_Source\PSoC4/CyLib.c **** 
2451:Generated_Source\PSoC4/CyLib.c ****         
2452:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2453:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2454:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2455:Generated_Source\PSoC4/CyLib.c ****         *
2456:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2459:Generated_Source\PSoC4/CyLib.c ****         *
2460:Generated_Source\PSoC4/CyLib.c ****         * \return 
2461:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2462:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2463:Generated_Source\PSoC4/CyLib.c ****         *
2464:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2465:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2466:Generated_Source\PSoC4/CyLib.c ****         {
2467:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2468:Generated_Source\PSoC4/CyLib.c ****         }
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c ****         
2471:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2473:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c ****         *
2475:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2476:Generated_Source\PSoC4/CyLib.c ****         *
2477:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2480:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored 
2481:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2482:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with 
2483:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2484:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2485:Generated_Source\PSoC4/CyLib.c ****         *
2486:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2487:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2488:Generated_Source\PSoC4/CyLib.c ****         {
2489:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2490:Generated_Source\PSoC4/CyLib.c ****         }
2491:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 50


2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2494:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2495:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2496:Generated_Source\PSoC4/CyLib.c ****         *
2497:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2498:Generated_Source\PSoC4/CyLib.c ****         *
2499:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2500:Generated_Source\PSoC4/CyLib.c ****         *
2501:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2502:Generated_Source\PSoC4/CyLib.c ****         *
2503:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/         
2504:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2505:Generated_Source\PSoC4/CyLib.c ****         {
2506:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
2507:Generated_Source\PSoC4/CyLib.c ****         }
2508:Generated_Source\PSoC4/CyLib.c **** 
2509:Generated_Source\PSoC4/CyLib.c ****         
2510:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2511:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2512:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches 
2515:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count 
2516:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down. 
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless 
2519:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using 
2520:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2521:Generated_Source\PSoC4/CyLib.c ****         *
2522:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2523:Generated_Source\PSoC4/CyLib.c ****         *
2524:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2525:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay 
2526:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using 
2527:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2530:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2531:Generated_Source\PSoC4/CyLib.c ****         {
2532:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2533:Generated_Source\PSoC4/CyLib.c ****         }
2534:Generated_Source\PSoC4/CyLib.c ****         
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2537:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2538:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor 
2541:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO. 
2542:Generated_Source\PSoC4/CyLib.c ****         *
2543:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2544:Generated_Source\PSoC4/CyLib.c ****         *
2545:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/  
2546:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2547:Generated_Source\PSoC4/CyLib.c ****         {
2548:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 51


2549:Generated_Source\PSoC4/CyLib.c ****         }
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c ****         
2552:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2554:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c ****         *
2556:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value. 
2557:Generated_Source\PSoC4/CyLib.c ****         *
2558:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2559:Generated_Source\PSoC4/CyLib.c ****         *
2560:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2561:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256. 
2562:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2563:Generated_Source\PSoC4/CyLib.c ****         *
2564:Generated_Source\PSoC4/CyLib.c ****         *
2565:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/           
2566:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2567:Generated_Source\PSoC4/CyLib.c ****         {
2568:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2569:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2570:Generated_Source\PSoC4/CyLib.c ****         }
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2573:Generated_Source\PSoC4/CyLib.c ****     
2574:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** 
2577:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2578:Generated_Source\PSoC4/CyLib.c **** 
2579:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2580:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2581:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2582:Generated_Source\PSoC4/CyLib.c ****     *
2583:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2584:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2585:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2586:Generated_Source\PSoC4/CyLib.c ****     *
2587:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2588:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2589:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2590:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2591:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2592:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2593:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2594:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2595:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2596:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2597:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2598:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2599:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2600:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2601:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2602:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2603:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2604:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2605:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 52


2606:Generated_Source\PSoC4/CyLib.c ****     *
2607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2608:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2609:Generated_Source\PSoC4/CyLib.c ****     {
2610:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2611:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2614:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2615:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2616:Generated_Source\PSoC4/CyLib.c **** 
2617:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2618:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2619:Generated_Source\PSoC4/CyLib.c **** 
2620:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2621:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2622:Generated_Source\PSoC4/CyLib.c **** 
2623:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2624:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2627:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2628:Generated_Source\PSoC4/CyLib.c ****     }
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2632:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2633:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2634:Generated_Source\PSoC4/CyLib.c ****     *
2635:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2638:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2639:Generated_Source\PSoC4/CyLib.c ****     {
 291              		.loc 1 2639 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
2640:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 296              		.loc 1 2640 0
 297 0000 0221     		movs	r1, #2
 298 0002 054A     		ldr	r2, .L24
2641:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2642:Generated_Source\PSoC4/CyLib.c ****     }
 299              		.loc 1 2642 0
 300              		@ sp needed
2640:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 301              		.loc 1 2640 0
 302 0004 1368     		ldr	r3, [r2]
 303 0006 8B43     		bics	r3, r1
 304 0008 1360     		str	r3, [r2]
2641:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 305              		.loc 1 2641 0
 306 000a 044A     		ldr	r2, .L24+4
 307 000c 0139     		subs	r1, r1, #1
 308 000e 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 53


 309 0010 8B43     		bics	r3, r1
 310 0012 1360     		str	r3, [r2]
 311              		.loc 1 2642 0
 312 0014 7047     		bx	lr
 313              	.L25:
 314 0016 C046     		.align	2
 315              	.L24:
 316 0018 08000B40 		.word	1074462728
 317 001c 18000B40 		.word	1074462744
 318              		.cfi_endproc
 319              	.LFE8:
 320              		.size	CySysLvdDisable, .-CySysLvdDisable
 321              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 322              		.align	1
 323              		.global	CySysLvdGetInterruptSource
 324              		.code	16
 325              		.thumb_func
 326              		.type	CySysLvdGetInterruptSource, %function
 327              	CySysLvdGetInterruptSource:
 328              	.LFB9:
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c **** 
2645:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2646:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2647:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2648:Generated_Source\PSoC4/CyLib.c ****     *
2649:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2650:Generated_Source\PSoC4/CyLib.c ****     *
2651:Generated_Source\PSoC4/CyLib.c ****     * \return
2652:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2656:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2657:Generated_Source\PSoC4/CyLib.c ****     {
 329              		.loc 1 2657 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
2658:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 334              		.loc 1 2658 0
 335 0000 024B     		ldr	r3, .L27
2659:Generated_Source\PSoC4/CyLib.c ****     }
 336              		.loc 1 2659 0
 337              		@ sp needed
2658:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 338              		.loc 1 2658 0
 339 0002 1868     		ldr	r0, [r3]
 340 0004 0223     		movs	r3, #2
 341 0006 1840     		ands	r0, r3
 342              		.loc 1 2659 0
 343 0008 7047     		bx	lr
 344              	.L28:
 345 000a C046     		.align	2
 346              	.L27:
 347 000c 04000B40 		.word	1074462724
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 54


 348              		.cfi_endproc
 349              	.LFE9:
 350              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 351              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 352              		.align	1
 353              		.global	CySysLvdClearInterrupt
 354              		.code	16
 355              		.thumb_func
 356              		.type	CySysLvdClearInterrupt, %function
 357              	CySysLvdClearInterrupt:
 358              	.LFB10:
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c **** 
2662:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2663:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2664:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2665:Generated_Source\PSoC4/CyLib.c ****     *
2666:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2667:Generated_Source\PSoC4/CyLib.c ****     *
2668:Generated_Source\PSoC4/CyLib.c ****     * \return
2669:Generated_Source\PSoC4/CyLib.c ****     *  None
2670:Generated_Source\PSoC4/CyLib.c ****     *
2671:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2672:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2673:Generated_Source\PSoC4/CyLib.c ****     {
 359              		.loc 1 2673 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
2674:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 364              		.loc 1 2674 0
 365 0000 0222     		movs	r2, #2
 366 0002 014B     		ldr	r3, .L30
2675:Generated_Source\PSoC4/CyLib.c ****     }
 367              		.loc 1 2675 0
 368              		@ sp needed
2674:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 369              		.loc 1 2674 0
 370 0004 1A60     		str	r2, [r3]
 371              		.loc 1 2675 0
 372 0006 7047     		bx	lr
 373              	.L31:
 374              		.align	2
 375              	.L30:
 376 0008 04000B40 		.word	1074462724
 377              		.cfi_endproc
 378              	.LFE10:
 379              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 380              		.section	.text.CySysGetResetReason,"ax",%progbits
 381              		.align	1
 382              		.global	CySysGetResetReason
 383              		.code	16
 384              		.thumb_func
 385              		.type	CySysGetResetReason, %function
 386              	CySysGetResetReason:
 387              	.LFB11:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 55


2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2685:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2686:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2687:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2688:Generated_Source\PSoC4/CyLib.c **** *
2689:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2690:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2691:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2692:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * \return
2695:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2699:Generated_Source\PSoC4/CyLib.c **** {
 388              		.loc 1 2699 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              	.LVL15:
2700:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2701:Generated_Source\PSoC4/CyLib.c **** 
2702:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 394              		.loc 1 2702 0
 395 0000 1923     		movs	r3, #25
 396 0002 0200     		movs	r2, r0
2703:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 397              		.loc 1 2703 0
 398 0004 0249     		ldr	r1, .L33
2702:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 399              		.loc 1 2702 0
 400 0006 1A40     		ands	r2, r3
 401              	.LVL16:
 402              		.loc 1 2703 0
 403 0008 0868     		ldr	r0, [r1]
 404              	.LVL17:
2704:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2706:Generated_Source\PSoC4/CyLib.c **** 
2707:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2708:Generated_Source\PSoC4/CyLib.c **** }
 405              		.loc 1 2708 0
 406              		@ sp needed
2707:Generated_Source\PSoC4/CyLib.c **** }
 407              		.loc 1 2707 0
 408 000a 1840     		ands	r0, r3
 409              	.LVL18:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 56


2705:Generated_Source\PSoC4/CyLib.c **** 
 410              		.loc 1 2705 0
 411 000c 0A60     		str	r2, [r1]
 412              		.loc 1 2708 0
 413 000e 7047     		bx	lr
 414              	.L34:
 415              		.align	2
 416              	.L33:
 417 0010 00030B40 		.word	1074463488
 418              		.cfi_endproc
 419              	.LFE11:
 420              		.size	CySysGetResetReason, .-CySysGetResetReason
 421              		.section	.text.CyDisableInts,"ax",%progbits
 422              		.align	1
 423              		.global	CyDisableInts
 424              		.code	16
 425              		.thumb_func
 426              		.type	CyDisableInts, %function
 427              	CyDisableInts:
 428              	.LFB12:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \return
2718:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 429              		.loc 1 2722 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              		@ link register save eliminated.
2723:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2726:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2727:Generated_Source\PSoC4/CyLib.c **** 
2728:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2729:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 434              		.loc 1 2729 0
 435 0000 0122     		movs	r2, #1
2726:Generated_Source\PSoC4/CyLib.c **** 
 436              		.loc 1 2726 0
 437 0002 024B     		ldr	r3, .L36
 438              		.loc 1 2729 0
 439 0004 5242     		rsbs	r2, r2, #0
2726:Generated_Source\PSoC4/CyLib.c **** 
 440              		.loc 1 2726 0
 441 0006 1868     		ldr	r0, [r3]
 442              	.LVL19:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 57


2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2732:Generated_Source\PSoC4/CyLib.c **** }
 443              		.loc 1 2732 0
 444              		@ sp needed
2729:Generated_Source\PSoC4/CyLib.c **** 
 445              		.loc 1 2729 0
 446 0008 1A60     		str	r2, [r3]
 447              		.loc 1 2732 0
 448 000a 7047     		bx	lr
 449              	.L37:
 450              		.align	2
 451              	.L36:
 452 000c 80E100E0 		.word	-536813184
 453              		.cfi_endproc
 454              	.LFE12:
 455              		.size	CyDisableInts, .-CyDisableInts
 456              		.section	.text.CyEnableInts,"ax",%progbits
 457              		.align	1
 458              		.global	CyEnableInts
 459              		.code	16
 460              		.thumb_func
 461              		.type	CyEnableInts, %function
 462              	CyEnableInts:
 463              	.LFB13:
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2737:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2745:Generated_Source\PSoC4/CyLib.c **** {
 464              		.loc 1 2745 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469              	.LVL20:
2746:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 470              		.loc 1 2746 0
 471 0000 014B     		ldr	r3, .L39
2747:Generated_Source\PSoC4/CyLib.c **** }
 472              		.loc 1 2747 0
 473              		@ sp needed
2746:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 474              		.loc 1 2746 0
 475 0002 1860     		str	r0, [r3]
 476              		.loc 1 2747 0
 477 0004 7047     		bx	lr
 478              	.L40:
 479 0006 C046     		.align	2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 58


 480              	.L39:
 481 0008 00E100E0 		.word	-536813312
 482              		.cfi_endproc
 483              	.LFE13:
 484              		.size	CyEnableInts, .-CyEnableInts
 485              		.section	.text.CyIntSetSysVector,"ax",%progbits
 486              		.align	1
 487              		.global	CyIntSetSysVector
 488              		.code	16
 489              		.thumb_func
 490              		.type	CyIntSetSysVector, %function
 491              	CyIntSetSysVector:
 492              	.LFB14:
2748:Generated_Source\PSoC4/CyLib.c **** 
2749:Generated_Source\PSoC4/CyLib.c **** 
2750:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2751:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2752:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2753:Generated_Source\PSoC4/CyLib.c **** *
2754:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2755:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2756:Generated_Source\PSoC4/CyLib.c **** *
2757:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2758:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2759:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2760:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2761:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2762:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2770:Generated_Source\PSoC4/CyLib.c **** {
 493              		.loc 1 2770 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498              	.LVL21:
2771:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2772:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 499              		.loc 1 2774 0
 500 0000 0F28     		cmp	r0, #15
 501 0002 00D9     		bls	.L42
 502              	.LVL22:
 503              	.LBB28:
 504              	.LBB29:
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2777:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 59


2780:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2783:Generated_Source\PSoC4/CyLib.c **** }
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c **** 
2786:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2787:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2788:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLib.c **** *
2790:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2791:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2794:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2796:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2797:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2798:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2799:Generated_Source\PSoC4/CyLib.c **** *
2800:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2801:Generated_Source\PSoC4/CyLib.c **** *
2802:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2803:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2804:Generated_Source\PSoC4/CyLib.c **** {
2805:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2806:Generated_Source\PSoC4/CyLib.c **** 
2807:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2810:Generated_Source\PSoC4/CyLib.c **** }
2811:Generated_Source\PSoC4/CyLib.c **** 
2812:Generated_Source\PSoC4/CyLib.c **** 
2813:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2814:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2815:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2816:Generated_Source\PSoC4/CyLib.c **** *
2817:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2818:Generated_Source\PSoC4/CyLib.c **** *
2819:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2820:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2823:Generated_Source\PSoC4/CyLib.c **** *
2824:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2825:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2826:Generated_Source\PSoC4/CyLib.c **** {
2827:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2828:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2831:Generated_Source\PSoC4/CyLib.c **** 
2832:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2833:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2834:Generated_Source\PSoC4/CyLib.c **** 
2835:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2836:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 60


2837:Generated_Source\PSoC4/CyLib.c **** 
2838:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2839:Generated_Source\PSoC4/CyLib.c **** }
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2849:Generated_Source\PSoC4/CyLib.c **** *
2850:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2851:Generated_Source\PSoC4/CyLib.c **** *
2852:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2853:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2854:Generated_Source\PSoC4/CyLib.c **** {
2855:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2858:Generated_Source\PSoC4/CyLib.c **** 
2859:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2860:Generated_Source\PSoC4/CyLib.c **** }
2861:Generated_Source\PSoC4/CyLib.c **** 
2862:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2863:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2864:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2865:Generated_Source\PSoC4/CyLib.c **** *
2866:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2867:Generated_Source\PSoC4/CyLib.c **** *
2868:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2869:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2872:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2873:Generated_Source\PSoC4/CyLib.c **** {
2874:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2875:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2876:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2877:Generated_Source\PSoC4/CyLib.c **** 
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2879:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2880:Generated_Source\PSoC4/CyLib.c **** 
2881:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2886:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2887:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2888:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2891:Generated_Source\PSoC4/CyLib.c **** }
2892:Generated_Source\PSoC4/CyLib.c **** 
2893:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 61


2894:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2895:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2896:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** * \return
2903:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2907:Generated_Source\PSoC4/CyLib.c **** {
2908:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2909:Generated_Source\PSoC4/CyLib.c **** 
2910:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2913:Generated_Source\PSoC4/CyLib.c **** 
2914:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2915:Generated_Source\PSoC4/CyLib.c **** }
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2919:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2920:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2923:Generated_Source\PSoC4/CyLib.c **** *
2924:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2925:Generated_Source\PSoC4/CyLib.c **** *
2926:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2927:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2928:Generated_Source\PSoC4/CyLib.c **** {
2929:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2930:Generated_Source\PSoC4/CyLib.c **** }
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c **** 
2933:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2934:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2935:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2938:Generated_Source\PSoC4/CyLib.c **** *
2939:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2940:Generated_Source\PSoC4/CyLib.c **** *
2941:Generated_Source\PSoC4/CyLib.c **** * \return
2942:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2943:Generated_Source\PSoC4/CyLib.c **** *
2944:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2945:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2946:Generated_Source\PSoC4/CyLib.c **** {
2947:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2948:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
2949:Generated_Source\PSoC4/CyLib.c **** }
2950:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 62


2951:Generated_Source\PSoC4/CyLib.c **** 
2952:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2953:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2954:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2957:Generated_Source\PSoC4/CyLib.c **** *
2958:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2959:Generated_Source\PSoC4/CyLib.c **** *
2960:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2961:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2962:Generated_Source\PSoC4/CyLib.c **** {
2963:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2964:Generated_Source\PSoC4/CyLib.c **** }
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2967:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2968:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2969:Generated_Source\PSoC4/CyLib.c **** *
2970:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2973:Generated_Source\PSoC4/CyLib.c **** *
2974:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2975:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2976:Generated_Source\PSoC4/CyLib.c **** {
2977:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2978:Generated_Source\PSoC4/CyLib.c **** }
2979:Generated_Source\PSoC4/CyLib.c **** 
2980:Generated_Source\PSoC4/CyLib.c **** 
2981:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2982:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2983:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2984:Generated_Source\PSoC4/CyLib.c **** *
2985:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2986:Generated_Source\PSoC4/CyLib.c **** *
2987:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2988:Generated_Source\PSoC4/CyLib.c **** *
2989:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2991:Generated_Source\PSoC4/CyLib.c **** {
2992:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2993:Generated_Source\PSoC4/CyLib.c **** }
2994:Generated_Source\PSoC4/CyLib.c **** 
2995:Generated_Source\PSoC4/CyLib.c **** 
2996:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2997:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2998:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2999:Generated_Source\PSoC4/CyLib.c **** *
3000:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3003:Generated_Source\PSoC4/CyLib.c **** *
3004:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3005:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3006:Generated_Source\PSoC4/CyLib.c **** {
3007:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 63


3008:Generated_Source\PSoC4/CyLib.c ****     {
3009:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3010:Generated_Source\PSoC4/CyLib.c ****     }
3011:Generated_Source\PSoC4/CyLib.c **** 
3012:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3013:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3014:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3015:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 505              		.loc 1 3015 0
 506              		.syntax divided
 507              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 508 0004 01BE     		    bkpt    1
 509              	@ 0 "" 2
 510              	.LVL23:
 511              		.thumb
 512              		.syntax unified
 513              	.L42:
 514              	.LBE29:
 515              	.LBE28:
2777:Generated_Source\PSoC4/CyLib.c **** 
 516              		.loc 1 2777 0
 517 0006 8023     		movs	r3, #128
 518 0008 8000     		lsls	r0, r0, #2
 519              	.LVL24:
 520 000a 9B05     		lsls	r3, r3, #22
 521 000c C318     		adds	r3, r0, r3
 522 000e 1868     		ldr	r0, [r3]
 523              	.LVL25:
2783:Generated_Source\PSoC4/CyLib.c **** 
 524              		.loc 1 2783 0
 525              		@ sp needed
2780:Generated_Source\PSoC4/CyLib.c **** 
 526              		.loc 1 2780 0
 527 0010 1960     		str	r1, [r3]
2783:Generated_Source\PSoC4/CyLib.c **** 
 528              		.loc 1 2783 0
 529 0012 7047     		bx	lr
 530              		.cfi_endproc
 531              	.LFE14:
 532              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 533              		.section	.text.CyIntGetSysVector,"ax",%progbits
 534              		.align	1
 535              		.global	CyIntGetSysVector
 536              		.code	16
 537              		.thumb_func
 538              		.type	CyIntGetSysVector, %function
 539              	CyIntGetSysVector:
 540              	.LFB15:
2804:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 541              		.loc 1 2804 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 546              	.LVL26:
2807:Generated_Source\PSoC4/CyLib.c **** 
 547              		.loc 1 2807 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 64


 548 0000 0F28     		cmp	r0, #15
 549 0002 00D9     		bls	.L44
 550              	.LVL27:
 551              	.LBB30:
 552              	.LBB31:
 553              		.loc 1 3015 0
 554              		.syntax divided
 555              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 556 0004 01BE     		    bkpt    1
 557              	@ 0 "" 2
 558              	.LVL28:
 559              		.thumb
 560              		.syntax unified
 561              	.L44:
 562              	.LBE31:
 563              	.LBE30:
2809:Generated_Source\PSoC4/CyLib.c **** }
 564              		.loc 1 2809 0
 565 0006 8023     		movs	r3, #128
 566 0008 8000     		lsls	r0, r0, #2
 567              	.LVL29:
 568 000a 9B05     		lsls	r3, r3, #22
 569 000c C018     		adds	r0, r0, r3
 570 000e 0068     		ldr	r0, [r0]
2810:Generated_Source\PSoC4/CyLib.c **** 
 571              		.loc 1 2810 0
 572              		@ sp needed
 573 0010 7047     		bx	lr
 574              		.cfi_endproc
 575              	.LFE15:
 576              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 577              		.section	.text.CyIntSetVector,"ax",%progbits
 578              		.align	1
 579              		.global	CyIntSetVector
 580              		.code	16
 581              		.thumb_func
 582              		.type	CyIntSetVector, %function
 583              	CyIntSetVector:
 584              	.LFB16:
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 585              		.loc 1 2826 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 590              	.LVL30:
2830:Generated_Source\PSoC4/CyLib.c **** 
 591              		.loc 1 2830 0
 592 0000 1F28     		cmp	r0, #31
 593 0002 00D9     		bls	.L46
 594              	.LVL31:
 595              	.LBB32:
 596              	.LBB33:
 597              		.loc 1 3015 0
 598              		.syntax divided
 599              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 600 0004 01BE     		    bkpt    1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 65


 601              	@ 0 "" 2
 602              	.LVL32:
 603              		.thumb
 604              		.syntax unified
 605              	.L46:
 606              	.LBE33:
 607              	.LBE32:
2833:Generated_Source\PSoC4/CyLib.c **** 
 608              		.loc 1 2833 0
 609 0006 034B     		ldr	r3, .L47
 610 0008 8000     		lsls	r0, r0, #2
 611              	.LVL33:
 612 000a C318     		adds	r3, r0, r3
 613 000c 1868     		ldr	r0, [r3]
 614              	.LVL34:
2839:Generated_Source\PSoC4/CyLib.c **** 
 615              		.loc 1 2839 0
 616              		@ sp needed
2836:Generated_Source\PSoC4/CyLib.c **** 
 617              		.loc 1 2836 0
 618 000e 1960     		str	r1, [r3]
2839:Generated_Source\PSoC4/CyLib.c **** 
 619              		.loc 1 2839 0
 620 0010 7047     		bx	lr
 621              	.L48:
 622 0012 C046     		.align	2
 623              	.L47:
 624 0014 40000020 		.word	536870976
 625              		.cfi_endproc
 626              	.LFE16:
 627              		.size	CyIntSetVector, .-CyIntSetVector
 628              		.section	.text.CyIntGetVector,"ax",%progbits
 629              		.align	1
 630              		.global	CyIntGetVector
 631              		.code	16
 632              		.thumb_func
 633              		.type	CyIntGetVector, %function
 634              	CyIntGetVector:
 635              	.LFB17:
2854:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 636              		.loc 1 2854 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 641              	.LVL35:
2857:Generated_Source\PSoC4/CyLib.c **** 
 642              		.loc 1 2857 0
 643 0000 1F28     		cmp	r0, #31
 644 0002 00D9     		bls	.L50
 645              	.LVL36:
 646              	.LBB34:
 647              	.LBB35:
 648              		.loc 1 3015 0
 649              		.syntax divided
 650              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 651 0004 01BE     		    bkpt    1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 66


 652              	@ 0 "" 2
 653              	.LVL37:
 654              		.thumb
 655              		.syntax unified
 656              	.L50:
 657              	.LBE35:
 658              	.LBE34:
2859:Generated_Source\PSoC4/CyLib.c **** }
 659              		.loc 1 2859 0
 660 0006 024B     		ldr	r3, .L51
 661 0008 8000     		lsls	r0, r0, #2
 662              	.LVL38:
 663 000a C018     		adds	r0, r0, r3
 664 000c 0068     		ldr	r0, [r0]
2860:Generated_Source\PSoC4/CyLib.c **** 
 665              		.loc 1 2860 0
 666              		@ sp needed
 667 000e 7047     		bx	lr
 668              	.L52:
 669              		.align	2
 670              	.L51:
 671 0010 40000020 		.word	536870976
 672              		.cfi_endproc
 673              	.LFE17:
 674              		.size	CyIntGetVector, .-CyIntGetVector
 675              		.section	.text.CyIntSetPriority,"ax",%progbits
 676              		.align	1
 677              		.global	CyIntSetPriority
 678              		.code	16
 679              		.thumb_func
 680              		.type	CyIntSetPriority, %function
 681              	CyIntSetPriority:
 682              	.LFB18:
2873:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 683              		.loc 1 2873 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              	.LVL39:
 688 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 689              		.cfi_def_cfa_offset 24
 690              		.cfi_offset 3, -24
 691              		.cfi_offset 4, -20
 692              		.cfi_offset 5, -16
 693              		.cfi_offset 6, -12
 694              		.cfi_offset 7, -8
 695              		.cfi_offset 14, -4
2873:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 696              		.loc 1 2873 0
 697 0002 0400     		movs	r4, r0
 698 0004 0E00     		movs	r6, r1
2878:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 699              		.loc 1 2878 0
 700 0006 0329     		cmp	r1, #3
 701 0008 00D9     		bls	.L54
 702              	.LVL40:
 703              	.LBB36:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 67


 704              	.LBB37:
 705              		.loc 1 3015 0
 706              		.syntax divided
 707              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 708 000a 01BE     		    bkpt    1
 709              	@ 0 "" 2
 710              	.LVL41:
 711              		.thumb
 712              		.syntax unified
 713              	.L54:
 714              	.LBE37:
 715              	.LBE36:
2879:Generated_Source\PSoC4/CyLib.c **** 
 716              		.loc 1 2879 0
 717 000c 1F2C     		cmp	r4, #31
 718 000e 00D9     		bls	.L55
 719              	.LVL42:
 720              	.LBB38:
 721              	.LBB39:
 722              		.loc 1 3015 0
 723              		.syntax divided
 724              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 725 0010 01BE     		    bkpt    1
 726              	@ 0 "" 2
 727              	.LVL43:
 728              		.thumb
 729              		.syntax unified
 730              	.L55:
 731              	.LBE39:
 732              	.LBE38:
2881:Generated_Source\PSoC4/CyLib.c **** 
 733              		.loc 1 2881 0
 734 0012 0327     		movs	r7, #3
 735 0014 2500     		movs	r5, r4
 736 0016 3D40     		ands	r5, r7
 737 0018 BD40     		lsls	r5, r5, r7
 738 001a 0635     		adds	r5, r5, #6
 739              	.LVL44:
2886:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 740              		.loc 1 2886 0
 741 001c AF40     		lsls	r7, r7, r5
2887:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 742              		.loc 1 2887 0
 743 001e AE40     		lsls	r6, r6, r5
2883:Generated_Source\PSoC4/CyLib.c **** 
 744              		.loc 1 2883 0
 745 0020 FFF7FEFF 		bl	CyEnterCriticalSection
 746              	.LVL45:
2885:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 747              		.loc 1 2885 0
 748 0024 A408     		lsrs	r4, r4, #2
 749 0026 054B     		ldr	r3, .L56
 750 0028 A400     		lsls	r4, r4, #2
 751 002a E418     		adds	r4, r4, r3
 752 002c 2368     		ldr	r3, [r4]
 753              	.LVL46:
2891:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 68


 754              		.loc 1 2891 0
 755              		@ sp needed
2886:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 756              		.loc 1 2886 0
 757 002e BB43     		bics	r3, r7
 758              	.LVL47:
2887:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 759              		.loc 1 2887 0
 760 0030 1E43     		orrs	r6, r3
 761              	.LVL48:
2888:Generated_Source\PSoC4/CyLib.c **** 
 762              		.loc 1 2888 0
 763 0032 2660     		str	r6, [r4]
2890:Generated_Source\PSoC4/CyLib.c **** }
 764              		.loc 1 2890 0
 765 0034 FFF7FEFF 		bl	CyExitCriticalSection
 766              	.LVL49:
 767              	.LVL50:
 768              	.LVL51:
2891:Generated_Source\PSoC4/CyLib.c **** 
 769              		.loc 1 2891 0
 770 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 771              	.L57:
 772 003a C046     		.align	2
 773              	.L56:
 774 003c 00E400E0 		.word	-536812544
 775              		.cfi_endproc
 776              	.LFE18:
 777              		.size	CyIntSetPriority, .-CyIntSetPriority
 778              		.section	.text.CyIntGetPriority,"ax",%progbits
 779              		.align	1
 780              		.global	CyIntGetPriority
 781              		.code	16
 782              		.thumb_func
 783              		.type	CyIntGetPriority, %function
 784              	CyIntGetPriority:
 785              	.LFB19:
2907:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 786              		.loc 1 2907 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		@ link register save eliminated.
 791              	.LVL52:
2910:Generated_Source\PSoC4/CyLib.c **** 
 792              		.loc 1 2910 0
 793 0000 1F28     		cmp	r0, #31
 794 0002 00D9     		bls	.L59
 795              	.LVL53:
 796              	.LBB40:
 797              	.LBB41:
 798              		.loc 1 3015 0
 799              		.syntax divided
 800              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 801 0004 01BE     		    bkpt    1
 802              	@ 0 "" 2
 803              	.LVL54:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 69


 804              		.thumb
 805              		.syntax unified
 806              	.L59:
 807              	.LBE41:
 808              	.LBE40:
2912:Generated_Source\PSoC4/CyLib.c **** 
 809              		.loc 1 2912 0
 810 0006 8308     		lsrs	r3, r0, #2
 811 0008 064A     		ldr	r2, .L60
 812 000a 9B00     		lsls	r3, r3, #2
 813 000c 9B18     		adds	r3, r3, r2
 814 000e 1968     		ldr	r1, [r3]
 815              	.LVL55:
2914:Generated_Source\PSoC4/CyLib.c **** }
 816              		.loc 1 2914 0
 817 0010 0322     		movs	r2, #3
 818 0012 0300     		movs	r3, r0
 819 0014 1340     		ands	r3, r2
 820 0016 9340     		lsls	r3, r3, r2
 821 0018 0633     		adds	r3, r3, #6
 822 001a D940     		lsrs	r1, r1, r3
 823              	.LVL56:
 824 001c 0800     		movs	r0, r1
 825              	.LVL57:
2915:Generated_Source\PSoC4/CyLib.c **** 
 826              		.loc 1 2915 0
 827              		@ sp needed
2914:Generated_Source\PSoC4/CyLib.c **** }
 828              		.loc 1 2914 0
 829 001e 1040     		ands	r0, r2
2915:Generated_Source\PSoC4/CyLib.c **** 
 830              		.loc 1 2915 0
 831 0020 7047     		bx	lr
 832              	.L61:
 833 0022 C046     		.align	2
 834              	.L60:
 835 0024 00E400E0 		.word	-536812544
 836              		.cfi_endproc
 837              	.LFE19:
 838              		.size	CyIntGetPriority, .-CyIntGetPriority
 839              		.section	.text.CyIntEnable,"ax",%progbits
 840              		.align	1
 841              		.global	CyIntEnable
 842              		.code	16
 843              		.thumb_func
 844              		.type	CyIntEnable, %function
 845              	CyIntEnable:
 846              	.LFB20:
2928:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 847              		.loc 1 2928 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852              	.LVL58:
2929:Generated_Source\PSoC4/CyLib.c **** }
 853              		.loc 1 2929 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 70


 854 0000 1F23     		movs	r3, #31
 855 0002 1840     		ands	r0, r3
 856              	.LVL59:
 857 0004 1E3B     		subs	r3, r3, #30
 858 0006 8340     		lsls	r3, r3, r0
 859 0008 014A     		ldr	r2, .L63
2930:Generated_Source\PSoC4/CyLib.c **** 
 860              		.loc 1 2930 0
 861              		@ sp needed
2929:Generated_Source\PSoC4/CyLib.c **** }
 862              		.loc 1 2929 0
 863 000a 1360     		str	r3, [r2]
2930:Generated_Source\PSoC4/CyLib.c **** 
 864              		.loc 1 2930 0
 865 000c 7047     		bx	lr
 866              	.L64:
 867 000e C046     		.align	2
 868              	.L63:
 869 0010 00E100E0 		.word	-536813312
 870              		.cfi_endproc
 871              	.LFE20:
 872              		.size	CyIntEnable, .-CyIntEnable
 873              		.section	.text.CyIntGetState,"ax",%progbits
 874              		.align	1
 875              		.global	CyIntGetState
 876              		.code	16
 877              		.thumb_func
 878              		.type	CyIntGetState, %function
 879              	CyIntGetState:
 880              	.LFB21:
2946:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
 881              		.loc 1 2946 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 886              	.LVL60:
2948:Generated_Source\PSoC4/CyLib.c **** }
 887              		.loc 1 2948 0
 888 0000 1F22     		movs	r2, #31
 889 0002 044B     		ldr	r3, .L66
 890 0004 1040     		ands	r0, r2
 891              	.LVL61:
 892 0006 1B68     		ldr	r3, [r3]
2949:Generated_Source\PSoC4/CyLib.c **** 
 893              		.loc 1 2949 0
 894              		@ sp needed
2948:Generated_Source\PSoC4/CyLib.c **** }
 895              		.loc 1 2948 0
 896 0008 C340     		lsrs	r3, r3, r0
 897 000a 1800     		movs	r0, r3
 898 000c 0123     		movs	r3, #1
 899 000e 1840     		ands	r0, r3
2949:Generated_Source\PSoC4/CyLib.c **** 
 900              		.loc 1 2949 0
 901 0010 7047     		bx	lr
 902              	.L67:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 71


 903 0012 C046     		.align	2
 904              	.L66:
 905 0014 00E100E0 		.word	-536813312
 906              		.cfi_endproc
 907              	.LFE21:
 908              		.size	CyIntGetState, .-CyIntGetState
 909              		.section	.text.CyIntDisable,"ax",%progbits
 910              		.align	1
 911              		.global	CyIntDisable
 912              		.code	16
 913              		.thumb_func
 914              		.type	CyIntDisable, %function
 915              	CyIntDisable:
 916              	.LFB22:
2962:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 917              		.loc 1 2962 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 0
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921              		@ link register save eliminated.
 922              	.LVL62:
2963:Generated_Source\PSoC4/CyLib.c **** }
 923              		.loc 1 2963 0
 924 0000 1F23     		movs	r3, #31
 925 0002 1840     		ands	r0, r3
 926              	.LVL63:
 927 0004 1E3B     		subs	r3, r3, #30
 928 0006 8340     		lsls	r3, r3, r0
 929 0008 014A     		ldr	r2, .L69
2964:Generated_Source\PSoC4/CyLib.c **** 
 930              		.loc 1 2964 0
 931              		@ sp needed
2963:Generated_Source\PSoC4/CyLib.c **** }
 932              		.loc 1 2963 0
 933 000a 1360     		str	r3, [r2]
2964:Generated_Source\PSoC4/CyLib.c **** 
 934              		.loc 1 2964 0
 935 000c 7047     		bx	lr
 936              	.L70:
 937 000e C046     		.align	2
 938              	.L69:
 939 0010 80E100E0 		.word	-536813184
 940              		.cfi_endproc
 941              	.LFE22:
 942              		.size	CyIntDisable, .-CyIntDisable
 943              		.section	.text.CyIntSetPending,"ax",%progbits
 944              		.align	1
 945              		.global	CyIntSetPending
 946              		.code	16
 947              		.thumb_func
 948              		.type	CyIntSetPending, %function
 949              	CyIntSetPending:
 950              	.LFB23:
2976:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 951              		.loc 1 2976 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 72


 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 956              	.LVL64:
2977:Generated_Source\PSoC4/CyLib.c **** }
 957              		.loc 1 2977 0
 958 0000 1F23     		movs	r3, #31
 959 0002 1840     		ands	r0, r3
 960              	.LVL65:
 961 0004 1E3B     		subs	r3, r3, #30
 962 0006 8340     		lsls	r3, r3, r0
 963 0008 014A     		ldr	r2, .L72
2978:Generated_Source\PSoC4/CyLib.c **** 
 964              		.loc 1 2978 0
 965              		@ sp needed
2977:Generated_Source\PSoC4/CyLib.c **** }
 966              		.loc 1 2977 0
 967 000a 1360     		str	r3, [r2]
2978:Generated_Source\PSoC4/CyLib.c **** 
 968              		.loc 1 2978 0
 969 000c 7047     		bx	lr
 970              	.L73:
 971 000e C046     		.align	2
 972              	.L72:
 973 0010 00E200E0 		.word	-536813056
 974              		.cfi_endproc
 975              	.LFE23:
 976              		.size	CyIntSetPending, .-CyIntSetPending
 977              		.section	.text.CyIntClearPending,"ax",%progbits
 978              		.align	1
 979              		.global	CyIntClearPending
 980              		.code	16
 981              		.thumb_func
 982              		.type	CyIntClearPending, %function
 983              	CyIntClearPending:
 984              	.LFB24:
2991:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 985              		.loc 1 2991 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 990              	.LVL66:
2992:Generated_Source\PSoC4/CyLib.c **** }
 991              		.loc 1 2992 0
 992 0000 1F23     		movs	r3, #31
 993 0002 1840     		ands	r0, r3
 994              	.LVL67:
 995 0004 1E3B     		subs	r3, r3, #30
 996 0006 8340     		lsls	r3, r3, r0
 997 0008 014A     		ldr	r2, .L75
2993:Generated_Source\PSoC4/CyLib.c **** 
 998              		.loc 1 2993 0
 999              		@ sp needed
2992:Generated_Source\PSoC4/CyLib.c **** }
 1000              		.loc 1 2992 0
 1001 000a 1360     		str	r3, [r2]
2993:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 73


 1002              		.loc 1 2993 0
 1003 000c 7047     		bx	lr
 1004              	.L76:
 1005 000e C046     		.align	2
 1006              	.L75:
 1007 0010 80E200E0 		.word	-536812928
 1008              		.cfi_endproc
 1009              	.LFE24:
 1010              		.size	CyIntClearPending, .-CyIntClearPending
 1011              		.section	.text.CyHalt,"ax",%progbits
 1012              		.align	1
 1013              		.global	CyHalt
 1014              		.code	16
 1015              		.thumb_func
 1016              		.type	CyHalt, %function
 1017              	CyHalt:
 1018              	.LFB25:
3006:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
 1019              		.loc 1 3006 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 1024              	.LVL68:
 1025              		.loc 1 3015 0
 1026              		.syntax divided
 1027              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 1028 0000 01BE     		    bkpt    1
 1029              	@ 0 "" 2
3016:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3017:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3018:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3019:Generated_Source\PSoC4/CyLib.c **** }
 1030              		.loc 1 3019 0
 1031              		.thumb
 1032              		.syntax unified
 1033              		@ sp needed
 1034 0002 7047     		bx	lr
 1035              		.cfi_endproc
 1036              	.LFE25:
 1037              		.size	CyHalt, .-CyHalt
 1038              		.section	.text.CySoftwareReset,"ax",%progbits
 1039              		.align	1
 1040              		.global	CySoftwareReset
 1041              		.code	16
 1042              		.thumb_func
 1043              		.type	CySoftwareReset, %function
 1044              	CySoftwareReset:
 1045              	.LFB26:
3020:Generated_Source\PSoC4/CyLib.c **** 
3021:Generated_Source\PSoC4/CyLib.c **** 
3022:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3023:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3024:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3027:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 74


3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3030:Generated_Source\PSoC4/CyLib.c **** {
 1046              		.loc 1 3030 0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 0
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050              		@ link register save eliminated.
3031:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3032:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3033:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3034:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3035:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1051              		.loc 1 3035 0
 1052 0000 034A     		ldr	r2, .L79
3036:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1053              		.loc 1 3036 0
 1054 0002 0449     		ldr	r1, .L79+4
3035:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1055              		.loc 1 3035 0
 1056 0004 1368     		ldr	r3, [r2]
3037:Generated_Source\PSoC4/CyLib.c **** }
 1057              		.loc 1 3037 0
 1058              		@ sp needed
3036:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1059              		.loc 1 3036 0
 1060 0006 9BB2     		uxth	r3, r3
 1061 0008 0B43     		orrs	r3, r1
3035:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1062              		.loc 1 3035 0
 1063 000a 1360     		str	r3, [r2]
 1064              		.loc 1 3037 0
 1065 000c 7047     		bx	lr
 1066              	.L80:
 1067 000e C046     		.align	2
 1068              	.L79:
 1069 0010 0CED00E0 		.word	-536810228
 1070 0014 0400FA05 		.word	100270084
 1071              		.cfi_endproc
 1072              	.LFE26:
 1073              		.size	CySoftwareReset, .-CySoftwareReset
 1074              		.section	.text.CyDelay,"ax",%progbits
 1075              		.align	1
 1076              		.global	CyDelay
 1077              		.code	16
 1078              		.thumb_func
 1079              		.type	CyDelay, %function
 1080              	CyDelay:
 1081              	.LFB27:
3038:Generated_Source\PSoC4/CyLib.c **** 
3039:Generated_Source\PSoC4/CyLib.c **** 
3040:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3041:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3042:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3043:Generated_Source\PSoC4/CyLib.c **** *
3044:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3045:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 75


3046:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3047:Generated_Source\PSoC4/CyLib.c **** *
3048:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3049:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3050:Generated_Source\PSoC4/CyLib.c **** {
 1082              		.loc 1 3050 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 1086              	.LVL69:
 1087 0000 70B5     		push	{r4, r5, r6, lr}
 1088              		.cfi_def_cfa_offset 16
 1089              		.cfi_offset 4, -16
 1090              		.cfi_offset 5, -12
 1091              		.cfi_offset 6, -8
 1092              		.cfi_offset 14, -4
3051:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1093              		.loc 1 3051 0
 1094 0002 8025     		movs	r5, #128
3050:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1095              		.loc 1 3050 0
 1096 0004 0400     		movs	r4, r0
 1097              		.loc 1 3051 0
 1098 0006 2D02     		lsls	r5, r5, #8
 1099              	.LVL70:
 1100              	.L82:
 1101 0008 064B     		ldr	r3, .L85
 1102 000a AC42     		cmp	r4, r5
 1103 000c 05D9     		bls	.L84
3052:Generated_Source\PSoC4/CyLib.c ****     {
3053:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3054:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3055:Generated_Source\PSoC4/CyLib.c ****          */
3056:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1104              		.loc 1 3056 0
 1105 000e 5868     		ldr	r0, [r3, #4]
 1106 0010 FFF7FEFF 		bl	CyDelayCycles
 1107              	.LVL71:
3057:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1108              		.loc 1 3057 0
 1109 0014 044B     		ldr	r3, .L85+4
 1110 0016 E418     		adds	r4, r4, r3
 1111              	.LVL72:
 1112 0018 F6E7     		b	.L82
 1113              	.L84:
3058:Generated_Source\PSoC4/CyLib.c ****     }
3059:Generated_Source\PSoC4/CyLib.c **** 
3060:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1114              		.loc 1 3060 0
 1115 001a 9868     		ldr	r0, [r3, #8]
3061:Generated_Source\PSoC4/CyLib.c **** }
 1116              		.loc 1 3061 0
 1117              		@ sp needed
3060:Generated_Source\PSoC4/CyLib.c **** }
 1118              		.loc 1 3060 0
 1119 001c 6043     		muls	r0, r4
 1120 001e FFF7FEFF 		bl	CyDelayCycles
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 76


 1121              	.LVL73:
 1122              	.LVL74:
 1123              		.loc 1 3061 0
 1124 0022 70BD     		pop	{r4, r5, r6, pc}
 1125              	.L86:
 1126              		.align	2
 1127              	.L85:
 1128 0024 00000000 		.word	.LANCHOR0
 1129 0028 0080FFFF 		.word	-32768
 1130              		.cfi_endproc
 1131              	.LFE27:
 1132              		.size	CyDelay, .-CyDelay
 1133              		.section	.text.CyDelayUs,"ax",%progbits
 1134              		.align	1
 1135              		.global	CyDelayUs
 1136              		.code	16
 1137              		.thumb_func
 1138              		.type	CyDelayUs, %function
 1139              	CyDelayUs:
 1140              	.LFB28:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3066:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3068:Generated_Source\PSoC4/CyLib.c **** *
3069:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3070:Generated_Source\PSoC4/CyLib.c **** *
3071:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3072:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3073:Generated_Source\PSoC4/CyLib.c **** {
 1141              		.loc 1 3073 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              	.LVL75:
 1146 0000 10B5     		push	{r4, lr}
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 4, -8
 1149              		.cfi_offset 14, -4
3074:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1150              		.loc 1 3074 0
 1151 0002 034B     		ldr	r3, .L88
3075:Generated_Source\PSoC4/CyLib.c **** }
 1152              		.loc 1 3075 0
 1153              		@ sp needed
3074:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1154              		.loc 1 3074 0
 1155 0004 1B7B     		ldrb	r3, [r3, #12]
 1156 0006 5843     		muls	r0, r3
 1157              	.LVL76:
 1158 0008 FFF7FEFF 		bl	CyDelayCycles
 1159              	.LVL77:
 1160              		.loc 1 3075 0
 1161 000c 10BD     		pop	{r4, pc}
 1162              	.L89:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 77


 1163 000e C046     		.align	2
 1164              	.L88:
 1165 0010 00000000 		.word	.LANCHOR0
 1166              		.cfi_endproc
 1167              	.LFE28:
 1168              		.size	CyDelayUs, .-CyDelayUs
 1169              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1170              		.align	1
 1171              		.global	CySysClkWriteImoFreq
 1172              		.code	16
 1173              		.thumb_func
 1174              		.type	CySysClkWriteImoFreq, %function
 1175              	CySysClkWriteImoFreq:
 1176              	.LFB6:
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1177              		.loc 1 769 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 24
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181              	.LVL78:
 1182 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1183              		.cfi_def_cfa_offset 20
 1184              		.cfi_offset 4, -20
 1185              		.cfi_offset 5, -16
 1186              		.cfi_offset 6, -12
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 0500     		movs	r5, r0
 1190 0004 87B0     		sub	sp, sp, #28
 1191              		.cfi_def_cfa_offset 48
 791:Generated_Source\PSoC4/CyLib.c **** 
 1192              		.loc 1 791 0
 1193 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1194              	.LVL79:
 841:Generated_Source\PSoC4/CyLib.c ****         {
 1195              		.loc 1 841 0
 1196 000a EB1E     		subs	r3, r5, #3
 791:Generated_Source\PSoC4/CyLib.c **** 
 1197              		.loc 1 791 0
 1198 000c 0490     		str	r0, [sp, #16]
 1199              	.LVL80:
 841:Generated_Source\PSoC4/CyLib.c ****         {
 1200              		.loc 1 841 0
 1201 000e 0393     		str	r3, [sp, #12]
 1202 0010 2D2B     		cmp	r3, #45
 1203 0012 5CD8     		bhi	.L91
 843:Generated_Source\PSoC4/CyLib.c ****             {
 1204              		.loc 1 843 0
 1205 0014 314B     		ldr	r3, .L102
 1206 0016 1B78     		ldrb	r3, [r3]
 1207 0018 9D42     		cmp	r5, r3
 1208 001a 04D8     		bhi	.L92
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1209              		.loc 1 845 0
 1210 001c 304B     		ldr	r3, .L102+4
 1211 001e 1C78     		ldrb	r4, [r3]
 846:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 78


 1212              		.loc 1 846 0
 1213 0020 304B     		ldr	r3, .L102+8
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1214              		.loc 1 845 0
 1215 0022 E4B2     		uxtb	r4, r4
 1216              	.LVL81:
 1217 0024 1EE0     		b	.L100
 1218              	.LVL82:
 1219              	.L92:
 848:Generated_Source\PSoC4/CyLib.c ****             {
 1220              		.loc 1 848 0
 1221 0026 304B     		ldr	r3, .L102+12
 1222 0028 1B78     		ldrb	r3, [r3]
 1223 002a 9D42     		cmp	r5, r3
 1224 002c 04D8     		bhi	.L94
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1225              		.loc 1 850 0
 1226 002e 2F4B     		ldr	r3, .L102+16
 1227 0030 1C78     		ldrb	r4, [r3]
 851:Generated_Source\PSoC4/CyLib.c ****             }
 1228              		.loc 1 851 0
 1229 0032 2F4B     		ldr	r3, .L102+20
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1230              		.loc 1 850 0
 1231 0034 E4B2     		uxtb	r4, r4
 1232              	.LVL83:
 1233 0036 15E0     		b	.L100
 1234              	.LVL84:
 1235              	.L94:
 853:Generated_Source\PSoC4/CyLib.c ****             {
 1236              		.loc 1 853 0
 1237 0038 2E4B     		ldr	r3, .L102+24
 1238 003a 1B78     		ldrb	r3, [r3]
 1239 003c 9D42     		cmp	r5, r3
 1240 003e 04D8     		bhi	.L95
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1241              		.loc 1 855 0
 1242 0040 2D4B     		ldr	r3, .L102+28
 1243 0042 1C78     		ldrb	r4, [r3]
 856:Generated_Source\PSoC4/CyLib.c ****             }
 1244              		.loc 1 856 0
 1245 0044 2D4B     		ldr	r3, .L102+32
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1246              		.loc 1 855 0
 1247 0046 E4B2     		uxtb	r4, r4
 1248              	.LVL85:
 1249 0048 0CE0     		b	.L100
 1250              	.LVL86:
 1251              	.L95:
 858:Generated_Source\PSoC4/CyLib.c ****             {
 1252              		.loc 1 858 0
 1253 004a 2D4B     		ldr	r3, .L102+36
 1254 004c 1B78     		ldrb	r3, [r3]
 1255 004e 9D42     		cmp	r5, r3
 1256 0050 04D8     		bhi	.L96
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1257              		.loc 1 860 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 79


 1258 0052 2C4B     		ldr	r3, .L102+40
 1259 0054 1C78     		ldrb	r4, [r3]
 861:Generated_Source\PSoC4/CyLib.c ****             }
 1260              		.loc 1 861 0
 1261 0056 2C4B     		ldr	r3, .L102+44
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1262              		.loc 1 860 0
 1263 0058 E4B2     		uxtb	r4, r4
 1264              	.LVL87:
 1265 005a 03E0     		b	.L100
 1266              	.LVL88:
 1267              	.L96:
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1268              		.loc 1 865 0
 1269 005c 2B4B     		ldr	r3, .L102+48
 1270 005e 1C78     		ldrb	r4, [r3]
 866:Generated_Source\PSoC4/CyLib.c ****             }
 1271              		.loc 1 866 0
 1272 0060 2B4B     		ldr	r3, .L102+52
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1273              		.loc 1 865 0
 1274 0062 E4B2     		uxtb	r4, r4
 1275              	.LVL89:
 1276              	.L100:
 866:Generated_Source\PSoC4/CyLib.c ****             }
 1277              		.loc 1 866 0
 1278 0064 1B78     		ldrb	r3, [r3]
 870:Generated_Source\PSoC4/CyLib.c **** 
 1279              		.loc 1 870 0
 1280 0066 EA1E     		subs	r2, r5, #3
 866:Generated_Source\PSoC4/CyLib.c ****             }
 1281              		.loc 1 866 0
 1282 0068 DBB2     		uxtb	r3, r3
 1283 006a 0193     		str	r3, [sp, #4]
 1284              	.LVL90:
 870:Generated_Source\PSoC4/CyLib.c **** 
 1285              		.loc 1 870 0
 1286 006c 294B     		ldr	r3, .L102+56
 1287 006e 2A4F     		ldr	r7, .L102+60
 1288 0070 9A5C     		ldrb	r2, [r3, r2]
 1289 0072 0593     		str	r3, [sp, #20]
 1290 0074 0292     		str	r2, [sp, #8]
 1291              	.LVL91:
 882:Generated_Source\PSoC4/CyLib.c ****             {
 1292              		.loc 1 882 0
 1293 0076 2F2A     		cmp	r2, #47
 1294 0078 04D9     		bls	.L97
 882:Generated_Source\PSoC4/CyLib.c ****             {
 1295              		.loc 1 882 0 is_stmt 0 discriminator 1
 1296 007a 2A2D     		cmp	r5, #42
 1297 007c 02D9     		bls	.L97
 885:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1298              		.loc 1 885 0 is_stmt 1
 1299 007e 1926     		movs	r6, #25
 1300 0080 3E60     		str	r6, [r7]
 1301 0082 08E0     		b	.L101
 1302              	.L97:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 80


 894:Generated_Source\PSoC4/CyLib.c ****             }
 1303              		.loc 1 894 0
 1304 0084 3F23     		movs	r3, #63
 1305 0086 3E68     		ldr	r6, [r7]
 1306 0088 1E40     		ands	r6, r3
 1307              	.LVL92:
 906:Generated_Source\PSoC4/CyLib.c ****             {
 1308              		.loc 1 906 0
 1309 008a 029B     		ldr	r3, [sp, #8]
 1310 008c B342     		cmp	r3, r6
 1311 008e 05D2     		bcs	.L98
 909:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1312              		.loc 1 909 0
 1313 0090 214B     		ldr	r3, .L102+60
 1314 0092 029A     		ldr	r2, [sp, #8]
 1315 0094 1A60     		str	r2, [r3]
 1316              	.LVL93:
 1317              	.L101:
 910:Generated_Source\PSoC4/CyLib.c ****             }
 1318              		.loc 1 910 0
 1319 0096 0520     		movs	r0, #5
 1320 0098 FFF7FEFF 		bl	CyDelayCycles
 1321              	.LVL94:
 1322              	.L98:
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1323              		.loc 1 914 0
 1324 009c 1C4B     		ldr	r3, .L102+52
 1325 009e 1F4A     		ldr	r2, .L102+64
 1326 00a0 ED18     		adds	r5, r5, r3
 1327              	.LVL95:
 1328 00a2 2B78     		ldrb	r3, [r5]
 917:Generated_Source\PSoC4/CyLib.c **** 
 1329              		.loc 1 917 0
 1330 00a4 0520     		movs	r0, #5
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1331              		.loc 1 914 0
 1332 00a6 DBB2     		uxtb	r3, r3
 1333 00a8 1360     		str	r3, [r2]
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1334              		.loc 1 915 0
 1335 00aa 1D4B     		ldr	r3, .L102+68
 916:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1336              		.loc 1 916 0
 1337 00ac 019A     		ldr	r2, [sp, #4]
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1338              		.loc 1 915 0
 1339 00ae 1C60     		str	r4, [r3]
 916:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1340              		.loc 1 916 0
 1341 00b0 1C4B     		ldr	r3, .L102+72
 1342 00b2 1A60     		str	r2, [r3]
 917:Generated_Source\PSoC4/CyLib.c **** 
 1343              		.loc 1 917 0
 1344 00b4 FFF7FEFF 		bl	CyDelayUs
 1345              	.LVL96:
 919:Generated_Source\PSoC4/CyLib.c ****             {
 1346              		.loc 1 919 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 81


 1347 00b8 029B     		ldr	r3, [sp, #8]
 1348 00ba B342     		cmp	r3, r6
 1349 00bc 08D9     		bls	.L99
 922:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1350              		.loc 1 922 0
 1351 00be 059B     		ldr	r3, [sp, #20]
 1352 00c0 039A     		ldr	r2, [sp, #12]
 923:Generated_Source\PSoC4/CyLib.c ****             }
 1353              		.loc 1 923 0
 1354 00c2 0520     		movs	r0, #5
 922:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1355              		.loc 1 922 0
 1356 00c4 9B5C     		ldrb	r3, [r3, r2]
 1357 00c6 3B60     		str	r3, [r7]
 923:Generated_Source\PSoC4/CyLib.c ****             }
 1358              		.loc 1 923 0
 1359 00c8 FFF7FEFF 		bl	CyDelayCycles
 1360              	.LVL97:
 1361 00cc 00E0     		b	.L99
 1362              	.LVL98:
 1363              	.L91:
 1364              	.LBB42:
 1365              	.LBB43:
3015:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1366              		.loc 1 3015 0
 1367              		.syntax divided
 1368              	@ 3015 "Generated_Source\PSoC4\CyLib.c" 1
 1369 00ce 01BE     		    bkpt    1
 1370              	@ 0 "" 2
 1371              	.LVL99:
 1372              		.thumb
 1373              		.syntax unified
 1374              	.L99:
 1375              	.LBE43:
 1376              	.LBE42:
 948:Generated_Source\PSoC4/CyLib.c ****     }
 1377              		.loc 1 948 0
 1378 00d0 0498     		ldr	r0, [sp, #16]
 1379 00d2 FFF7FEFF 		bl	CyExitCriticalSection
 1380              	.LVL100:
 949:Generated_Source\PSoC4/CyLib.c **** 
 1381              		.loc 1 949 0
 1382 00d6 07B0     		add	sp, sp, #28
 1383              		@ sp needed
 1384 00d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1385              	.L103:
 1386 00da C046     		.align	2
 1387              	.L102:
 1388 00dc C0F1FF0F 		.word	268431808
 1389 00e0 C1F1FF0F 		.word	268431809
 1390 00e4 C2F1FF0F 		.word	268431810
 1391 00e8 C3F1FF0F 		.word	268431811
 1392 00ec C4F1FF0F 		.word	268431812
 1393 00f0 C5F1FF0F 		.word	268431813
 1394 00f4 C6F1FF0F 		.word	268431814
 1395 00f8 C7F1FF0F 		.word	268431815
 1396 00fc C8F1FF0F 		.word	268431816
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 82


 1397 0100 C9F1FF0F 		.word	268431817
 1398 0104 CAF1FF0F 		.word	268431818
 1399 0108 CBF1FF0F 		.word	268431819
 1400 010c CCF1FF0F 		.word	268431820
 1401 0110 CDF1FF0F 		.word	268431821
 1402 0114 00000000 		.word	.LANCHOR1
 1403 0118 2CFF0B40 		.word	1074528044
 1404 011c 28FF0B40 		.word	1074528040
 1405 0120 1CFF0B40 		.word	1074528028
 1406 0124 20FF0B40 		.word	1074528032
 1407              		.cfi_endproc
 1408              	.LFE6:
 1409              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1410              		.section	.text.CySysLvdEnable,"ax",%progbits
 1411              		.align	1
 1412              		.global	CySysLvdEnable
 1413              		.code	16
 1414              		.thumb_func
 1415              		.type	CySysLvdEnable, %function
 1416              	CySysLvdEnable:
 1417              	.LFB7:
2609:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1418              		.loc 1 2609 0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 0
 1421              		@ frame_needed = 0, uses_anonymous_args = 0
 1422              	.LVL101:
 1423 0000 70B5     		push	{r4, r5, r6, lr}
 1424              		.cfi_def_cfa_offset 16
 1425              		.cfi_offset 4, -16
 1426              		.cfi_offset 5, -12
 1427              		.cfi_offset 6, -8
 1428              		.cfi_offset 14, -4
2611:Generated_Source\PSoC4/CyLib.c **** 
 1429              		.loc 1 2611 0
 1430 0002 0225     		movs	r5, #2
2614:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1431              		.loc 1 2614 0
 1432 0004 1E21     		movs	r1, #30
2611:Generated_Source\PSoC4/CyLib.c **** 
 1433              		.loc 1 2611 0
 1434 0006 0C4C     		ldr	r4, .L105
2614:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1435              		.loc 1 2614 0
 1436 0008 0C4A     		ldr	r2, .L105+4
2611:Generated_Source\PSoC4/CyLib.c **** 
 1437              		.loc 1 2611 0
 1438 000a 2368     		ldr	r3, [r4]
2614:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1439              		.loc 1 2614 0
 1440 000c 4000     		lsls	r0, r0, #1
 1441              	.LVL102:
2611:Generated_Source\PSoC4/CyLib.c **** 
 1442              		.loc 1 2611 0
 1443 000e AB43     		bics	r3, r5
 1444 0010 2360     		str	r3, [r4]
2614:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 83


 1445              		.loc 1 2614 0
 1446 0012 1368     		ldr	r3, [r2]
 1447 0014 0840     		ands	r0, r1
 1448 0016 8B43     		bics	r3, r1
 1449 0018 1843     		orrs	r0, r3
 1450 001a 1060     		str	r0, [r2]
2621:Generated_Source\PSoC4/CyLib.c **** 
 1451              		.loc 1 2621 0
 1452 001c FA20     		movs	r0, #250
2618:Generated_Source\PSoC4/CyLib.c **** 
 1453              		.loc 1 2618 0
 1454 001e 1368     		ldr	r3, [r2]
 1455 0020 1D39     		subs	r1, r1, #29
 1456 0022 0B43     		orrs	r3, r1
 1457 0024 1360     		str	r3, [r2]
2621:Generated_Source\PSoC4/CyLib.c **** 
 1458              		.loc 1 2621 0
 1459 0026 8000     		lsls	r0, r0, #2
 1460 0028 FFF7FEFF 		bl	CyDelayUs
 1461              	.LVL103:
 1462              	.LBB44:
 1463              	.LBB45:
2674:Generated_Source\PSoC4/CyLib.c ****     }
 1464              		.loc 1 2674 0
 1465 002c 044B     		ldr	r3, .L105+8
 1466              	.LBE45:
 1467              	.LBE44:
2628:Generated_Source\PSoC4/CyLib.c **** 
 1468              		.loc 1 2628 0
 1469              		@ sp needed
 1470              	.LBB47:
 1471              	.LBB46:
2674:Generated_Source\PSoC4/CyLib.c ****     }
 1472              		.loc 1 2674 0
 1473 002e 1D60     		str	r5, [r3]
 1474              	.LBE46:
 1475              	.LBE47:
2627:Generated_Source\PSoC4/CyLib.c ****     }
 1476              		.loc 1 2627 0
 1477 0030 2368     		ldr	r3, [r4]
 1478 0032 1D43     		orrs	r5, r3
 1479 0034 2560     		str	r5, [r4]
2628:Generated_Source\PSoC4/CyLib.c **** 
 1480              		.loc 1 2628 0
 1481 0036 70BD     		pop	{r4, r5, r6, pc}
 1482              	.L106:
 1483              		.align	2
 1484              	.L105:
 1485 0038 08000B40 		.word	1074462728
 1486 003c 18000B40 		.word	1074462744
 1487 0040 04000B40 		.word	1074462724
 1488              		.cfi_endproc
 1489              	.LFE7:
 1490              		.size	CySysLvdEnable, .-CySysLvdEnable
 1491              		.global	__aeabi_uidiv
 1492              		.section	.text.CyDelayFreq,"ax",%progbits
 1493              		.align	1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 84


 1494              		.global	CyDelayFreq
 1495              		.code	16
 1496              		.thumb_func
 1497              		.type	CyDelayFreq, %function
 1498              	CyDelayFreq:
 1499              	.LFB29:
3076:Generated_Source\PSoC4/CyLib.c **** 
3077:Generated_Source\PSoC4/CyLib.c **** 
3078:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3079:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3080:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3081:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3082:Generated_Source\PSoC4/CyLib.c **** *
3083:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3084:Generated_Source\PSoC4/CyLib.c **** *
3085:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3086:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3087:Generated_Source\PSoC4/CyLib.c **** {
 1500              		.loc 1 3087 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504              	.LVL104:
 1505 0000 70B5     		push	{r4, r5, r6, lr}
 1506              		.cfi_def_cfa_offset 16
 1507              		.cfi_offset 4, -16
 1508              		.cfi_offset 5, -12
 1509              		.cfi_offset 6, -8
 1510              		.cfi_offset 14, -4
 1511 0002 0C4C     		ldr	r4, .L110
3088:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1512              		.loc 1 3088 0
 1513 0004 0028     		cmp	r0, #0
 1514 0006 01D0     		beq	.L108
3089:Generated_Source\PSoC4/CyLib.c ****     {
3090:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1515              		.loc 1 3090 0
 1516 0008 2061     		str	r0, [r4, #16]
 1517 000a 01E0     		b	.L109
 1518              	.L108:
3091:Generated_Source\PSoC4/CyLib.c ****     }
3092:Generated_Source\PSoC4/CyLib.c ****     else
3093:Generated_Source\PSoC4/CyLib.c ****     {
3094:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1519              		.loc 1 3094 0
 1520 000c 0A4B     		ldr	r3, .L110+4
 1521 000e 2361     		str	r3, [r4, #16]
 1522              	.L109:
3095:Generated_Source\PSoC4/CyLib.c ****     }
3096:Generated_Source\PSoC4/CyLib.c **** 
3097:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1523              		.loc 1 3097 0
 1524 0010 2569     		ldr	r5, [r4, #16]
 1525 0012 0A4B     		ldr	r3, .L110+8
 1526 0014 0A49     		ldr	r1, .L110+12
 1527 0016 E818     		adds	r0, r5, r3
 1528              	.LVL105:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 85


 1529 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1530              	.LVL106:
3098:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1531              		.loc 1 3098 0
 1532 001c FA21     		movs	r1, #250
 1533 001e 094B     		ldr	r3, .L110+16
3097:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1534              		.loc 1 3097 0
 1535 0020 2073     		strb	r0, [r4, #12]
 1536              		.loc 1 3098 0
 1537 0022 8900     		lsls	r1, r1, #2
 1538 0024 E818     		adds	r0, r5, r3
 1539 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1540              	.LVL107:
 1541 002a A060     		str	r0, [r4, #8]
3099:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1542              		.loc 1 3099 0
 1543 002c C003     		lsls	r0, r0, #15
 1544 002e 6060     		str	r0, [r4, #4]
3100:Generated_Source\PSoC4/CyLib.c **** }
 1545              		.loc 1 3100 0
 1546              		@ sp needed
 1547 0030 70BD     		pop	{r4, r5, r6, pc}
 1548              	.L111:
 1549 0032 C046     		.align	2
 1550              	.L110:
 1551 0034 00000000 		.word	.LANCHOR0
 1552 0038 00366E01 		.word	24000000
 1553 003c 3F420F00 		.word	999999
 1554 0040 40420F00 		.word	1000000
 1555 0044 E7030000 		.word	999
 1556              		.cfi_endproc
 1557              	.LFE29:
 1558              		.size	CyDelayFreq, .-CyDelayFreq
 1559              		.section	.text.CySysTickInit,"ax",%progbits
 1560              		.align	1
 1561              		.global	CySysTickInit
 1562              		.code	16
 1563              		.thumb_func
 1564              		.type	CySysTickInit, %function
 1565              	CySysTickInit:
 1566              	.LFB31:
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c **** 
3103:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3104:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3105:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3106:Generated_Source\PSoC4/CyLib.c **** *
3107:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3108:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3109:Generated_Source\PSoC4/CyLib.c **** *
3110:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
3111:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
3112:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3113:Generated_Source\PSoC4/CyLib.c **** *
3114:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3115:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 86


3116:Generated_Source\PSoC4/CyLib.c **** *
3117:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3118:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3119:Generated_Source\PSoC4/CyLib.c **** {
3120:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3121:Generated_Source\PSoC4/CyLib.c ****     {
3122:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3123:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3124:Generated_Source\PSoC4/CyLib.c ****     }
3125:Generated_Source\PSoC4/CyLib.c **** 
3126:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3127:Generated_Source\PSoC4/CyLib.c **** }
3128:Generated_Source\PSoC4/CyLib.c **** 
3129:Generated_Source\PSoC4/CyLib.c **** 
3130:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3131:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3132:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3133:Generated_Source\PSoC4/CyLib.c **** *
3134:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3135:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3136:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3137:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3140:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3141:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3142:Generated_Source\PSoC4/CyLib.c **** *
3143:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3144:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3145:Generated_Source\PSoC4/CyLib.c **** *
3146:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3147:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3148:Generated_Source\PSoC4/CyLib.c **** {
 1567              		.loc 1 3148 0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
 1571              	.LVL108:
 1572 0000 10B5     		push	{r4, lr}
 1573              		.cfi_def_cfa_offset 8
 1574              		.cfi_offset 4, -8
 1575              		.cfi_offset 14, -4
3149:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3152:Generated_Source\PSoC4/CyLib.c ****     {
3153:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1576              		.loc 1 3153 0
 1577 0002 0024     		movs	r4, #0
3154:Generated_Source\PSoC4/CyLib.c ****     }
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3157:Generated_Source\PSoC4/CyLib.c **** 
3158:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3159:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3160:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3161:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 87


3162:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1578              		.loc 1 3162 0
 1579 0004 FA21     		movs	r1, #250
3153:Generated_Source\PSoC4/CyLib.c ****     }
 1580              		.loc 1 3153 0
 1581 0006 094B     		ldr	r3, .L113
 1582              	.LBB48:
 1583              	.LBB49:
2780:Generated_Source\PSoC4/CyLib.c **** 
 1584              		.loc 1 2780 0
 1585 0008 094A     		ldr	r2, .L113+4
 1586              	.LBE49:
 1587              	.LBE48:
3153:Generated_Source\PSoC4/CyLib.c ****     }
 1588              		.loc 1 3153 0
 1589 000a 1C60     		str	r4, [r3]
 1590              	.LVL109:
 1591 000c 1C61     		str	r4, [r3, #16]
 1592 000e 5C60     		str	r4, [r3, #4]
 1593              	.LVL110:
 1594 0010 9C60     		str	r4, [r3, #8]
 1595              	.LVL111:
 1596 0012 DC60     		str	r4, [r3, #12]
 1597              	.LVL112:
 1598              	.LBB52:
 1599              	.LBB50:
2780:Generated_Source\PSoC4/CyLib.c **** 
 1600              		.loc 1 2780 0
 1601 0014 074B     		ldr	r3, .L113+8
 1602              	.LVL113:
 1603              	.LBE50:
 1604              	.LBE52:
 1605              		.loc 1 3162 0
 1606 0016 8900     		lsls	r1, r1, #2
 1607              	.LBB53:
 1608              	.LBB51:
2780:Generated_Source\PSoC4/CyLib.c **** 
 1609              		.loc 1 2780 0
 1610 0018 1A60     		str	r2, [r3]
 1611              	.LVL114:
 1612              	.LBE51:
 1613              	.LBE53:
 1614              		.loc 1 3162 0
 1615 001a 074B     		ldr	r3, .L113+12
3163:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3164:Generated_Source\PSoC4/CyLib.c **** }
 1616              		.loc 1 3164 0
 1617              		@ sp needed
3162:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1618              		.loc 1 3162 0
 1619 001c 1869     		ldr	r0, [r3, #16]
 1620 001e FFF7FEFF 		bl	__aeabi_uidiv
 1621              	.LVL115:
 1622              	.LBB54:
 1623              	.LBB55:
3165:Generated_Source\PSoC4/CyLib.c **** 
3166:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 88


3167:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3168:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3169:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3172:Generated_Source\PSoC4/CyLib.c **** *
3173:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3174:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3175:Generated_Source\PSoC4/CyLib.c **** *
3176:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3177:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3178:Generated_Source\PSoC4/CyLib.c **** {
3179:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3180:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3189:Generated_Source\PSoC4/CyLib.c **** *
3190:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3191:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3194:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3195:Generated_Source\PSoC4/CyLib.c **** {
3196:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
3197:Generated_Source\PSoC4/CyLib.c **** }
3198:Generated_Source\PSoC4/CyLib.c **** 
3199:Generated_Source\PSoC4/CyLib.c **** 
3200:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3201:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3202:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3203:Generated_Source\PSoC4/CyLib.c **** *
3204:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3205:Generated_Source\PSoC4/CyLib.c **** *
3206:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3207:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3208:Generated_Source\PSoC4/CyLib.c **** *
3209:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3210:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3211:Generated_Source\PSoC4/CyLib.c **** {
3212:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
3213:Generated_Source\PSoC4/CyLib.c **** }
3214:Generated_Source\PSoC4/CyLib.c **** 
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3217:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3218:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3219:Generated_Source\PSoC4/CyLib.c **** *
3220:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3221:Generated_Source\PSoC4/CyLib.c **** *
3222:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3223:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 89


3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3226:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3227:Generated_Source\PSoC4/CyLib.c **** {
3228:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
3229:Generated_Source\PSoC4/CyLib.c **** }
3230:Generated_Source\PSoC4/CyLib.c **** 
3231:Generated_Source\PSoC4/CyLib.c **** 
3232:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3233:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3234:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3235:Generated_Source\PSoC4/CyLib.c **** *
3236:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3237:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3238:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3239:Generated_Source\PSoC4/CyLib.c **** *
3240:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3243:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3244:Generated_Source\PSoC4/CyLib.c **** {
3245:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1624              		.loc 1 3245 0
 1625 0022 064B     		ldr	r3, .L113+16
 1626 0024 1860     		str	r0, [r3]
 1627              	.LVL116:
 1628              	.LBE55:
 1629              	.LBE54:
 1630              	.LBB56:
 1631              	.LBB57:
3246:Generated_Source\PSoC4/CyLib.c **** }
3247:Generated_Source\PSoC4/CyLib.c **** 
3248:Generated_Source\PSoC4/CyLib.c **** 
3249:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3250:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3251:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3252:Generated_Source\PSoC4/CyLib.c **** *
3253:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3254:Generated_Source\PSoC4/CyLib.c **** *
3255:Generated_Source\PSoC4/CyLib.c **** * \return
3256:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3259:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3260:Generated_Source\PSoC4/CyLib.c **** {
3261:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
3262:Generated_Source\PSoC4/CyLib.c **** }
3263:Generated_Source\PSoC4/CyLib.c **** 
3264:Generated_Source\PSoC4/CyLib.c **** 
3265:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3266:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3267:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3268:Generated_Source\PSoC4/CyLib.c **** *
3269:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3270:Generated_Source\PSoC4/CyLib.c **** *
3271:Generated_Source\PSoC4/CyLib.c **** * \return
3272:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 90


3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3275:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3276:Generated_Source\PSoC4/CyLib.c **** {
3277:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
3278:Generated_Source\PSoC4/CyLib.c **** }
3279:Generated_Source\PSoC4/CyLib.c **** 
3280:Generated_Source\PSoC4/CyLib.c **** 
3281:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
3282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3285:Generated_Source\PSoC4/CyLib.c ****     *
3286:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3287:Generated_Source\PSoC4/CyLib.c ****     *
3288:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3289:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3290:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3291:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3292:Generated_Source\PSoC4/CyLib.c ****     *
3293:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
3294:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
3295:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
3296:Generated_Source\PSoC4/CyLib.c ****     *
3297:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3298:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3299:Generated_Source\PSoC4/CyLib.c ****     *
3300:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3301:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3302:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3303:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3304:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3305:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3306:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3307:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3308:Generated_Source\PSoC4/CyLib.c ****     {
3309:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
3310:Generated_Source\PSoC4/CyLib.c ****         {
3311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
3312:Generated_Source\PSoC4/CyLib.c ****         }
3313:Generated_Source\PSoC4/CyLib.c ****         else
3314:Generated_Source\PSoC4/CyLib.c ****         {
3315:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
3316:Generated_Source\PSoC4/CyLib.c ****         }
3317:Generated_Source\PSoC4/CyLib.c ****     }
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c ****     
3320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3323:Generated_Source\PSoC4/CyLib.c ****     *
3324:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3325:Generated_Source\PSoC4/CyLib.c ****     *
3326:Generated_Source\PSoC4/CyLib.c ****     *  \return 
3327:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3328:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3329:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 91


3330:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3332:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3333:Generated_Source\PSoC4/CyLib.c ****     {
3334:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
3335:Generated_Source\PSoC4/CyLib.c ****     }
3336:Generated_Source\PSoC4/CyLib.c ****     
3337:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3338:Generated_Source\PSoC4/CyLib.c **** 
3339:Generated_Source\PSoC4/CyLib.c **** 
3340:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3341:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3342:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3343:Generated_Source\PSoC4/CyLib.c **** *
3344:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3345:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3346:Generated_Source\PSoC4/CyLib.c **** *
3347:Generated_Source\PSoC4/CyLib.c **** * \return
3348:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3349:Generated_Source\PSoC4/CyLib.c **** *
3350:Generated_Source\PSoC4/CyLib.c **** *
3351:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3352:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3353:Generated_Source\PSoC4/CyLib.c **** *
3354:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3355:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3356:Generated_Source\PSoC4/CyLib.c **** {
3357:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
3358:Generated_Source\PSoC4/CyLib.c **** }
3359:Generated_Source\PSoC4/CyLib.c **** 
3360:Generated_Source\PSoC4/CyLib.c **** 
3361:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3362:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3363:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3364:Generated_Source\PSoC4/CyLib.c **** *
3365:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3366:Generated_Source\PSoC4/CyLib.c **** *
3367:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3368:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3369:Generated_Source\PSoC4/CyLib.c **** {
3370:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1632              		.loc 1 3370 0
 1633 0026 064B     		ldr	r3, .L113+20
 1634 0028 1C60     		str	r4, [r3]
 1635              	.LBE57:
 1636              	.LBE56:
3164:Generated_Source\PSoC4/CyLib.c **** 
 1637              		.loc 1 3164 0
 1638 002a 10BD     		pop	{r4, pc}
 1639              	.L114:
 1640              		.align	2
 1641              	.L113:
 1642 002c 00000000 		.word	.LANCHOR2
 1643 0030 00000000 		.word	CySysTickServiceCallbacks
 1644 0034 3C000020 		.word	536870972
 1645 0038 00000000 		.word	.LANCHOR0
 1646 003c 14E000E0 		.word	-536813548
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 92


 1647 0040 18E000E0 		.word	-536813544
 1648              		.cfi_endproc
 1649              	.LFE31:
 1650              		.size	CySysTickInit, .-CySysTickInit
 1651              		.section	.text.CySysTickStop,"ax",%progbits
 1652              		.align	1
 1653              		.global	CySysTickStop
 1654              		.code	16
 1655              		.thumb_func
 1656              		.type	CySysTickStop, %function
 1657              	CySysTickStop:
 1658              	.LFB33:
3195:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1659              		.loc 1 3195 0
 1660              		.cfi_startproc
 1661              		@ args = 0, pretend = 0, frame = 0
 1662              		@ frame_needed = 0, uses_anonymous_args = 0
 1663              		@ link register save eliminated.
3196:Generated_Source\PSoC4/CyLib.c **** }
 1664              		.loc 1 3196 0
 1665 0000 0121     		movs	r1, #1
 1666 0002 024A     		ldr	r2, .L116
3197:Generated_Source\PSoC4/CyLib.c **** 
 1667              		.loc 1 3197 0
 1668              		@ sp needed
3196:Generated_Source\PSoC4/CyLib.c **** }
 1669              		.loc 1 3196 0
 1670 0004 1368     		ldr	r3, [r2]
 1671 0006 8B43     		bics	r3, r1
 1672 0008 1360     		str	r3, [r2]
3197:Generated_Source\PSoC4/CyLib.c **** 
 1673              		.loc 1 3197 0
 1674 000a 7047     		bx	lr
 1675              	.L117:
 1676              		.align	2
 1677              	.L116:
 1678 000c 10E000E0 		.word	-536813552
 1679              		.cfi_endproc
 1680              	.LFE33:
 1681              		.size	CySysTickStop, .-CySysTickStop
 1682              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1683              		.align	1
 1684              		.global	CySysTickEnableInterrupt
 1685              		.code	16
 1686              		.thumb_func
 1687              		.type	CySysTickEnableInterrupt, %function
 1688              	CySysTickEnableInterrupt:
 1689              	.LFB34:
3211:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1690              		.loc 1 3211 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 0
 1693              		@ frame_needed = 0, uses_anonymous_args = 0
 1694              		@ link register save eliminated.
3212:Generated_Source\PSoC4/CyLib.c **** }
 1695              		.loc 1 3212 0
 1696 0000 0221     		movs	r1, #2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 93


 1697 0002 024A     		ldr	r2, .L119
3213:Generated_Source\PSoC4/CyLib.c **** 
 1698              		.loc 1 3213 0
 1699              		@ sp needed
3212:Generated_Source\PSoC4/CyLib.c **** }
 1700              		.loc 1 3212 0
 1701 0004 1368     		ldr	r3, [r2]
 1702 0006 0B43     		orrs	r3, r1
 1703 0008 1360     		str	r3, [r2]
3213:Generated_Source\PSoC4/CyLib.c **** 
 1704              		.loc 1 3213 0
 1705 000a 7047     		bx	lr
 1706              	.L120:
 1707              		.align	2
 1708              	.L119:
 1709 000c 10E000E0 		.word	-536813552
 1710              		.cfi_endproc
 1711              	.LFE34:
 1712              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1713              		.section	.text.CySysTickEnable,"ax",%progbits
 1714              		.align	1
 1715              		.global	CySysTickEnable
 1716              		.code	16
 1717              		.thumb_func
 1718              		.type	CySysTickEnable, %function
 1719              	CySysTickEnable:
 1720              	.LFB32:
3178:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1721              		.loc 1 3178 0
 1722              		.cfi_startproc
 1723              		@ args = 0, pretend = 0, frame = 0
 1724              		@ frame_needed = 0, uses_anonymous_args = 0
 1725 0000 10B5     		push	{r4, lr}
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 4, -8
 1728              		.cfi_offset 14, -4
3179:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1729              		.loc 1 3179 0
 1730 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1731              	.LVL117:
3180:Generated_Source\PSoC4/CyLib.c **** }
 1732              		.loc 1 3180 0
 1733 0006 0121     		movs	r1, #1
 1734 0008 024A     		ldr	r2, .L122
3181:Generated_Source\PSoC4/CyLib.c **** 
 1735              		.loc 1 3181 0
 1736              		@ sp needed
3180:Generated_Source\PSoC4/CyLib.c **** }
 1737              		.loc 1 3180 0
 1738 000a 1368     		ldr	r3, [r2]
 1739 000c 0B43     		orrs	r3, r1
 1740 000e 1360     		str	r3, [r2]
3181:Generated_Source\PSoC4/CyLib.c **** 
 1741              		.loc 1 3181 0
 1742 0010 10BD     		pop	{r4, pc}
 1743              	.L123:
 1744 0012 C046     		.align	2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 94


 1745              	.L122:
 1746 0014 10E000E0 		.word	-536813552
 1747              		.cfi_endproc
 1748              	.LFE32:
 1749              		.size	CySysTickEnable, .-CySysTickEnable
 1750              		.section	.text.CySysTickStart,"ax",%progbits
 1751              		.align	1
 1752              		.global	CySysTickStart
 1753              		.code	16
 1754              		.thumb_func
 1755              		.type	CySysTickStart, %function
 1756              	CySysTickStart:
 1757              	.LFB30:
3119:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1758              		.loc 1 3119 0
 1759              		.cfi_startproc
 1760              		@ args = 0, pretend = 0, frame = 0
 1761              		@ frame_needed = 0, uses_anonymous_args = 0
 1762 0000 10B5     		push	{r4, lr}
 1763              		.cfi_def_cfa_offset 8
 1764              		.cfi_offset 4, -8
 1765              		.cfi_offset 14, -4
3120:Generated_Source\PSoC4/CyLib.c ****     {
 1766              		.loc 1 3120 0
 1767 0002 054C     		ldr	r4, .L126
 1768 0004 6369     		ldr	r3, [r4, #20]
 1769 0006 002B     		cmp	r3, #0
 1770 0008 03D1     		bne	.L125
3122:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1771              		.loc 1 3122 0
 1772 000a FFF7FEFF 		bl	CySysTickInit
 1773              	.LVL118:
3123:Generated_Source\PSoC4/CyLib.c ****     }
 1774              		.loc 1 3123 0
 1775 000e 0123     		movs	r3, #1
 1776 0010 6361     		str	r3, [r4, #20]
 1777              	.L125:
3126:Generated_Source\PSoC4/CyLib.c **** }
 1778              		.loc 1 3126 0
 1779 0012 FFF7FEFF 		bl	CySysTickEnable
 1780              	.LVL119:
3127:Generated_Source\PSoC4/CyLib.c **** 
 1781              		.loc 1 3127 0
 1782              		@ sp needed
 1783 0016 10BD     		pop	{r4, pc}
 1784              	.L127:
 1785              		.align	2
 1786              	.L126:
 1787 0018 00000000 		.word	.LANCHOR2
 1788              		.cfi_endproc
 1789              	.LFE30:
 1790              		.size	CySysTickStart, .-CySysTickStart
 1791              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1792              		.align	1
 1793              		.global	CySysTickDisableInterrupt
 1794              		.code	16
 1795              		.thumb_func
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 95


 1796              		.type	CySysTickDisableInterrupt, %function
 1797              	CySysTickDisableInterrupt:
 1798              	.LFB35:
3227:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1799              		.loc 1 3227 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              		@ link register save eliminated.
3228:Generated_Source\PSoC4/CyLib.c **** }
 1804              		.loc 1 3228 0
 1805 0000 0221     		movs	r1, #2
 1806 0002 024A     		ldr	r2, .L129
3229:Generated_Source\PSoC4/CyLib.c **** 
 1807              		.loc 1 3229 0
 1808              		@ sp needed
3228:Generated_Source\PSoC4/CyLib.c **** }
 1809              		.loc 1 3228 0
 1810 0004 1368     		ldr	r3, [r2]
 1811 0006 8B43     		bics	r3, r1
 1812 0008 1360     		str	r3, [r2]
3229:Generated_Source\PSoC4/CyLib.c **** 
 1813              		.loc 1 3229 0
 1814 000a 7047     		bx	lr
 1815              	.L130:
 1816              		.align	2
 1817              	.L129:
 1818 000c 10E000E0 		.word	-536813552
 1819              		.cfi_endproc
 1820              	.LFE35:
 1821              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1822              		.section	.text.CySysTickSetReload,"ax",%progbits
 1823              		.align	1
 1824              		.global	CySysTickSetReload
 1825              		.code	16
 1826              		.thumb_func
 1827              		.type	CySysTickSetReload, %function
 1828              	CySysTickSetReload:
 1829              	.LFB36:
3244:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1830              		.loc 1 3244 0
 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 0
 1833              		@ frame_needed = 0, uses_anonymous_args = 0
 1834              		@ link register save eliminated.
 1835              	.LVL120:
3245:Generated_Source\PSoC4/CyLib.c **** }
 1836              		.loc 1 3245 0
 1837 0000 024B     		ldr	r3, .L132
 1838 0002 0002     		lsls	r0, r0, #8
 1839              	.LVL121:
 1840 0004 000A     		lsrs	r0, r0, #8
 1841 0006 1860     		str	r0, [r3]
3246:Generated_Source\PSoC4/CyLib.c **** 
 1842              		.loc 1 3246 0
 1843              		@ sp needed
 1844 0008 7047     		bx	lr
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 96


 1845              	.L133:
 1846 000a C046     		.align	2
 1847              	.L132:
 1848 000c 14E000E0 		.word	-536813548
 1849              		.cfi_endproc
 1850              	.LFE36:
 1851              		.size	CySysTickSetReload, .-CySysTickSetReload
 1852              		.section	.text.CySysTickGetReload,"ax",%progbits
 1853              		.align	1
 1854              		.global	CySysTickGetReload
 1855              		.code	16
 1856              		.thumb_func
 1857              		.type	CySysTickGetReload, %function
 1858              	CySysTickGetReload:
 1859              	.LFB37:
3260:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1860              		.loc 1 3260 0
 1861              		.cfi_startproc
 1862              		@ args = 0, pretend = 0, frame = 0
 1863              		@ frame_needed = 0, uses_anonymous_args = 0
 1864              		@ link register save eliminated.
3261:Generated_Source\PSoC4/CyLib.c **** }
 1865              		.loc 1 3261 0
 1866 0000 024B     		ldr	r3, .L135
3262:Generated_Source\PSoC4/CyLib.c **** 
 1867              		.loc 1 3262 0
 1868              		@ sp needed
3261:Generated_Source\PSoC4/CyLib.c **** }
 1869              		.loc 1 3261 0
 1870 0002 1868     		ldr	r0, [r3]
 1871 0004 0002     		lsls	r0, r0, #8
 1872 0006 000A     		lsrs	r0, r0, #8
3262:Generated_Source\PSoC4/CyLib.c **** 
 1873              		.loc 1 3262 0
 1874 0008 7047     		bx	lr
 1875              	.L136:
 1876 000a C046     		.align	2
 1877              	.L135:
 1878 000c 14E000E0 		.word	-536813548
 1879              		.cfi_endproc
 1880              	.LFE37:
 1881              		.size	CySysTickGetReload, .-CySysTickGetReload
 1882              		.section	.text.CySysTickGetValue,"ax",%progbits
 1883              		.align	1
 1884              		.global	CySysTickGetValue
 1885              		.code	16
 1886              		.thumb_func
 1887              		.type	CySysTickGetValue, %function
 1888              	CySysTickGetValue:
 1889              	.LFB38:
3276:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1890              		.loc 1 3276 0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 0, uses_anonymous_args = 0
 1894              		@ link register save eliminated.
3277:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 97


 1895              		.loc 1 3277 0
 1896 0000 024B     		ldr	r3, .L138
3278:Generated_Source\PSoC4/CyLib.c **** 
 1897              		.loc 1 3278 0
 1898              		@ sp needed
3277:Generated_Source\PSoC4/CyLib.c **** }
 1899              		.loc 1 3277 0
 1900 0002 1868     		ldr	r0, [r3]
 1901 0004 0002     		lsls	r0, r0, #8
 1902 0006 000A     		lsrs	r0, r0, #8
3278:Generated_Source\PSoC4/CyLib.c **** 
 1903              		.loc 1 3278 0
 1904 0008 7047     		bx	lr
 1905              	.L139:
 1906 000a C046     		.align	2
 1907              	.L138:
 1908 000c 18E000E0 		.word	-536813544
 1909              		.cfi_endproc
 1910              	.LFE38:
 1911              		.size	CySysTickGetValue, .-CySysTickGetValue
 1912              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1913              		.align	1
 1914              		.global	CySysTickGetCountFlag
 1915              		.code	16
 1916              		.thumb_func
 1917              		.type	CySysTickGetCountFlag, %function
 1918              	CySysTickGetCountFlag:
 1919              	.LFB39:
3356:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1920              		.loc 1 3356 0
 1921              		.cfi_startproc
 1922              		@ args = 0, pretend = 0, frame = 0
 1923              		@ frame_needed = 0, uses_anonymous_args = 0
 1924              		@ link register save eliminated.
3357:Generated_Source\PSoC4/CyLib.c **** }
 1925              		.loc 1 3357 0
 1926 0000 024B     		ldr	r3, .L141
3358:Generated_Source\PSoC4/CyLib.c **** 
 1927              		.loc 1 3358 0
 1928              		@ sp needed
3357:Generated_Source\PSoC4/CyLib.c **** }
 1929              		.loc 1 3357 0
 1930 0002 1868     		ldr	r0, [r3]
 1931 0004 C003     		lsls	r0, r0, #15
 1932 0006 C00F     		lsrs	r0, r0, #31
3358:Generated_Source\PSoC4/CyLib.c **** 
 1933              		.loc 1 3358 0
 1934 0008 7047     		bx	lr
 1935              	.L142:
 1936 000a C046     		.align	2
 1937              	.L141:
 1938 000c 10E000E0 		.word	-536813552
 1939              		.cfi_endproc
 1940              	.LFE39:
 1941              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1942              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1943              		.align	1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 98


 1944              		.code	16
 1945              		.thumb_func
 1946              		.type	CySysTickServiceCallbacks, %function
 1947              	CySysTickServiceCallbacks:
 1948              	.LFB43:
3371:Generated_Source\PSoC4/CyLib.c **** }
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3376:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c **** *
3378:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3379:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3380:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3381:Generated_Source\PSoC4/CyLib.c **** *
3382:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3383:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3384:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3385:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3386:Generated_Source\PSoC4/CyLib.c **** *  functions.
3387:Generated_Source\PSoC4/CyLib.c **** *
3388:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3389:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3390:Generated_Source\PSoC4/CyLib.c **** *
3391:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3392:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3393:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3394:Generated_Source\PSoC4/CyLib.c **** *
3395:Generated_Source\PSoC4/CyLib.c **** * \return
3396:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3397:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3398:Generated_Source\PSoC4/CyLib.c **** *
3399:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3400:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3401:Generated_Source\PSoC4/CyLib.c **** *
3402:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3403:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3404:Generated_Source\PSoC4/CyLib.c **** {
3405:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3406:Generated_Source\PSoC4/CyLib.c **** 
3407:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3408:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3409:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3410:Generated_Source\PSoC4/CyLib.c **** }
3411:Generated_Source\PSoC4/CyLib.c **** 
3412:Generated_Source\PSoC4/CyLib.c **** 
3413:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3414:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3415:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3416:Generated_Source\PSoC4/CyLib.c **** *
3417:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3420:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3421:Generated_Source\PSoC4/CyLib.c **** *
3422:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 99


3423:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3424:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3425:Generated_Source\PSoC4/CyLib.c **** *
3426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3427:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3428:Generated_Source\PSoC4/CyLib.c **** {
3429:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3430:Generated_Source\PSoC4/CyLib.c **** }
3431:Generated_Source\PSoC4/CyLib.c **** 
3432:Generated_Source\PSoC4/CyLib.c **** 
3433:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3434:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3435:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3436:Generated_Source\PSoC4/CyLib.c **** *
3437:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3438:Generated_Source\PSoC4/CyLib.c **** *
3439:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3440:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3441:Generated_Source\PSoC4/CyLib.c **** {
 1949              		.loc 1 3441 0
 1950              		.cfi_startproc
 1951              		@ args = 0, pretend = 0, frame = 0
 1952              		@ frame_needed = 0, uses_anonymous_args = 0
 1953 0000 10B5     		push	{r4, lr}
 1954              		.cfi_def_cfa_offset 8
 1955              		.cfi_offset 4, -8
 1956              		.cfi_offset 14, -4
3442:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3443:Generated_Source\PSoC4/CyLib.c **** 
3444:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3445:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1957              		.loc 1 3445 0
 1958 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1959              	.LVL122:
 1960 0006 0128     		cmp	r0, #1
 1961 0008 08D1     		bne	.L143
 1962 000a 0024     		movs	r4, #0
 1963              	.L146:
 1964              	.LBB60:
3446:Generated_Source\PSoC4/CyLib.c ****     {
3447:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3448:Generated_Source\PSoC4/CyLib.c ****         {
3449:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1965              		.loc 1 3449 0
 1966 000c 044B     		ldr	r3, .L152
 1967 000e E358     		ldr	r3, [r4, r3]
 1968 0010 002B     		cmp	r3, #0
 1969 0012 00D0     		beq	.L145
3450:Generated_Source\PSoC4/CyLib.c ****             {
3451:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1970              		.loc 1 3451 0
 1971 0014 9847     		blx	r3
 1972              	.LVL123:
 1973              	.L145:
 1974 0016 0434     		adds	r4, r4, #4
3447:Generated_Source\PSoC4/CyLib.c ****         {
 1975              		.loc 1 3447 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 100


 1976 0018 142C     		cmp	r4, #20
 1977 001a F7D1     		bne	.L146
 1978              	.L143:
 1979              	.LBE60:
3452:Generated_Source\PSoC4/CyLib.c ****             }
3453:Generated_Source\PSoC4/CyLib.c ****         }
3454:Generated_Source\PSoC4/CyLib.c ****     }
3455:Generated_Source\PSoC4/CyLib.c **** }
 1980              		.loc 1 3455 0
 1981              		@ sp needed
 1982 001c 10BD     		pop	{r4, pc}
 1983              	.L153:
 1984 001e C046     		.align	2
 1985              	.L152:
 1986 0020 00000000 		.word	.LANCHOR2
 1987              		.cfi_endproc
 1988              	.LFE43:
 1989              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1990              		.section	.text.CySysTickClear,"ax",%progbits
 1991              		.align	1
 1992              		.global	CySysTickClear
 1993              		.code	16
 1994              		.thumb_func
 1995              		.type	CySysTickClear, %function
 1996              	CySysTickClear:
 1997              	.LFB40:
3369:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1998              		.loc 1 3369 0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 0, uses_anonymous_args = 0
 2002              		@ link register save eliminated.
3370:Generated_Source\PSoC4/CyLib.c **** }
 2003              		.loc 1 3370 0
 2004 0000 0022     		movs	r2, #0
 2005 0002 014B     		ldr	r3, .L155
3371:Generated_Source\PSoC4/CyLib.c **** 
 2006              		.loc 1 3371 0
 2007              		@ sp needed
3370:Generated_Source\PSoC4/CyLib.c **** }
 2008              		.loc 1 3370 0
 2009 0004 1A60     		str	r2, [r3]
3371:Generated_Source\PSoC4/CyLib.c **** 
 2010              		.loc 1 3371 0
 2011 0006 7047     		bx	lr
 2012              	.L156:
 2013              		.align	2
 2014              	.L155:
 2015 0008 18E000E0 		.word	-536813544
 2016              		.cfi_endproc
 2017              	.LFE40:
 2018              		.size	CySysTickClear, .-CySysTickClear
 2019              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2020              		.align	1
 2021              		.global	CySysTickSetCallback
 2022              		.code	16
 2023              		.thumb_func
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 101


 2024              		.type	CySysTickSetCallback, %function
 2025              	CySysTickSetCallback:
 2026              	.LFB41:
3404:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2027              		.loc 1 3404 0
 2028              		.cfi_startproc
 2029              		@ args = 0, pretend = 0, frame = 0
 2030              		@ frame_needed = 0, uses_anonymous_args = 0
 2031              		@ link register save eliminated.
 2032              	.LVL124:
3407:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2033              		.loc 1 3407 0
 2034 0000 024A     		ldr	r2, .L158
 2035 0002 8300     		lsls	r3, r0, #2
 2036 0004 9858     		ldr	r0, [r3, r2]
 2037              	.LVL125:
3410:Generated_Source\PSoC4/CyLib.c **** 
 2038              		.loc 1 3410 0
 2039              		@ sp needed
3408:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2040              		.loc 1 3408 0
 2041 0006 9950     		str	r1, [r3, r2]
3410:Generated_Source\PSoC4/CyLib.c **** 
 2042              		.loc 1 3410 0
 2043 0008 7047     		bx	lr
 2044              	.L159:
 2045 000a C046     		.align	2
 2046              	.L158:
 2047 000c 00000000 		.word	.LANCHOR2
 2048              		.cfi_endproc
 2049              	.LFE41:
 2050              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2051              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2052              		.align	1
 2053              		.global	CySysTickGetCallback
 2054              		.code	16
 2055              		.thumb_func
 2056              		.type	CySysTickGetCallback, %function
 2057              	CySysTickGetCallback:
 2058              	.LFB42:
3428:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2059              		.loc 1 3428 0
 2060              		.cfi_startproc
 2061              		@ args = 0, pretend = 0, frame = 0
 2062              		@ frame_needed = 0, uses_anonymous_args = 0
 2063              		@ link register save eliminated.
 2064              	.LVL126:
3429:Generated_Source\PSoC4/CyLib.c **** }
 2065              		.loc 1 3429 0
 2066 0000 014B     		ldr	r3, .L161
 2067 0002 8000     		lsls	r0, r0, #2
 2068              	.LVL127:
 2069 0004 C058     		ldr	r0, [r0, r3]
3430:Generated_Source\PSoC4/CyLib.c **** 
 2070              		.loc 1 3430 0
 2071              		@ sp needed
 2072 0006 7047     		bx	lr
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 102


 2073              	.L162:
 2074              		.align	2
 2075              	.L161:
 2076 0008 00000000 		.word	.LANCHOR2
 2077              		.cfi_endproc
 2078              	.LFE42:
 2079              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2080              		.section	.text.CyGetUniqueId,"ax",%progbits
 2081              		.align	1
 2082              		.global	CyGetUniqueId
 2083              		.code	16
 2084              		.thumb_func
 2085              		.type	CyGetUniqueId, %function
 2086              	CyGetUniqueId:
 2087              	.LFB44:
3456:Generated_Source\PSoC4/CyLib.c **** 
3457:Generated_Source\PSoC4/CyLib.c **** 
3458:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3459:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3460:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3461:Generated_Source\PSoC4/CyLib.c **** *
3462:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3463:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3464:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3465:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3466:Generated_Source\PSoC4/CyLib.c **** *
3467:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3468:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3469:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3472:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3473:Generated_Source\PSoC4/CyLib.c **** {
 2088              		.loc 1 3473 0
 2089              		.cfi_startproc
 2090              		@ args = 0, pretend = 0, frame = 0
 2091              		@ frame_needed = 0, uses_anonymous_args = 0
 2092              		@ link register save eliminated.
 2093              	.LVL128:
3474:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3475:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2094              		.loc 1 3475 0
 2095 0000 144B     		ldr	r3, .L164
3476:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
3477:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
3478:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
3479:Generated_Source\PSoC4/CyLib.c **** 
3480:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
3481:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
3482:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
3483:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
3484:Generated_Source\PSoC4/CyLib.c **** #else
3485:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3486:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3487:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3488:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3489:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 103


3490:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3491:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3492:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3493:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3494:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3495:Generated_Source\PSoC4/CyLib.c **** }
 2096              		.loc 1 3495 0
 2097              		@ sp needed
3475:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2098              		.loc 1 3475 0
 2099 0002 1A78     		ldrb	r2, [r3]
3476:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2100              		.loc 1 3476 0
 2101 0004 144B     		ldr	r3, .L164+4
3475:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2102              		.loc 1 3475 0
 2103 0006 D1B2     		uxtb	r1, r2
 2104 0008 0160     		str	r1, [r0]
3476:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2105              		.loc 1 3476 0
 2106 000a 1B78     		ldrb	r3, [r3]
 2107 000c 1B02     		lsls	r3, r3, #8
 2108 000e 0B43     		orrs	r3, r1
 2109 0010 1A00     		movs	r2, r3
 2110 0012 0360     		str	r3, [r0]
3477:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2111              		.loc 1 3477 0
 2112 0014 114B     		ldr	r3, .L164+8
 2113 0016 1B78     		ldrb	r3, [r3]
 2114 0018 1B04     		lsls	r3, r3, #16
 2115 001a 1343     		orrs	r3, r2
3478:Generated_Source\PSoC4/CyLib.c **** 
 2116              		.loc 1 3478 0
 2117 001c 104A     		ldr	r2, .L164+12
3477:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2118              		.loc 1 3477 0
 2119 001e 0360     		str	r3, [r0]
3478:Generated_Source\PSoC4/CyLib.c **** 
 2120              		.loc 1 3478 0
 2121 0020 1278     		ldrb	r2, [r2]
 2122 0022 1206     		lsls	r2, r2, #24
 2123 0024 1343     		orrs	r3, r2
 2124 0026 0360     		str	r3, [r0]
3480:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2125              		.loc 1 3480 0
 2126 0028 0E4B     		ldr	r3, .L164+16
 2127 002a 1A78     		ldrb	r2, [r3]
3481:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2128              		.loc 1 3481 0
 2129 002c 0E4B     		ldr	r3, .L164+20
3480:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2130              		.loc 1 3480 0
 2131 002e D1B2     		uxtb	r1, r2
 2132 0030 4160     		str	r1, [r0, #4]
3481:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2133              		.loc 1 3481 0
 2134 0032 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 104


 2135 0034 1B02     		lsls	r3, r3, #8
 2136 0036 0B43     		orrs	r3, r1
 2137 0038 1A00     		movs	r2, r3
 2138 003a 4360     		str	r3, [r0, #4]
3482:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2139              		.loc 1 3482 0
 2140 003c 0B4B     		ldr	r3, .L164+24
 2141 003e 1B78     		ldrb	r3, [r3]
 2142 0040 1B04     		lsls	r3, r3, #16
 2143 0042 1343     		orrs	r3, r2
3483:Generated_Source\PSoC4/CyLib.c **** #else
 2144              		.loc 1 3483 0
 2145 0044 0A4A     		ldr	r2, .L164+28
3482:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2146              		.loc 1 3482 0
 2147 0046 4360     		str	r3, [r0, #4]
3483:Generated_Source\PSoC4/CyLib.c **** #else
 2148              		.loc 1 3483 0
 2149 0048 1278     		ldrb	r2, [r2]
 2150 004a 1206     		lsls	r2, r2, #24
 2151 004c 1343     		orrs	r3, r2
 2152 004e 4360     		str	r3, [r0, #4]
 2153              		.loc 1 3495 0
 2154 0050 7047     		bx	lr
 2155              	.L165:
 2156 0052 C046     		.align	2
 2157              	.L164:
 2158 0054 78F1FF0F 		.word	268431736
 2159 0058 79F1FF0F 		.word	268431737
 2160 005c 7AF1FF0F 		.word	268431738
 2161 0060 7BF1FF0F 		.word	268431739
 2162 0064 7CF1FF0F 		.word	268431740
 2163 0068 7DF1FF0F 		.word	268431741
 2164 006c 7EF1FF0F 		.word	268431742
 2165 0070 7FF1FF0F 		.word	268431743
 2166              		.cfi_endproc
 2167              	.LFE44:
 2168              		.size	CyGetUniqueId, .-CyGetUniqueId
 2169              		.global	CySysClkPumpConfig
 2170              		.global	cyImoFreqMhz2Reg
 2171              		.global	CySysTickInitVar
 2172              		.global	cydelay32kMs
 2173              		.global	cydelayFreqMhz
 2174              		.global	cydelayFreqKhz
 2175              		.global	cydelayFreqHz
 2176              		.section	.rodata
 2177              		.set	.LANCHOR1,. + 0
 2178              		.type	cyImoFreqMhz2Reg, %object
 2179              		.size	cyImoFreqMhz2Reg, 46
 2180              	cyImoFreqMhz2Reg:
 2181 0000 03       		.byte	3
 2182 0001 04       		.byte	4
 2183 0002 05       		.byte	5
 2184 0003 06       		.byte	6
 2185 0004 07       		.byte	7
 2186 0005 08       		.byte	8
 2187 0006 09       		.byte	9
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 105


 2188 0007 0A       		.byte	10
 2189 0008 0B       		.byte	11
 2190 0009 0C       		.byte	12
 2191 000a 0E       		.byte	14
 2192 000b 0F       		.byte	15
 2193 000c 10       		.byte	16
 2194 000d 11       		.byte	17
 2195 000e 12       		.byte	18
 2196 000f 13       		.byte	19
 2197 0010 14       		.byte	20
 2198 0011 15       		.byte	21
 2199 0012 16       		.byte	22
 2200 0013 17       		.byte	23
 2201 0014 18       		.byte	24
 2202 0015 19       		.byte	25
 2203 0016 1B       		.byte	27
 2204 0017 1C       		.byte	28
 2205 0018 1D       		.byte	29
 2206 0019 1E       		.byte	30
 2207 001a 1F       		.byte	31
 2208 001b 20       		.byte	32
 2209 001c 21       		.byte	33
 2210 001d 22       		.byte	34
 2211 001e 23       		.byte	35
 2212 001f 25       		.byte	37
 2213 0020 26       		.byte	38
 2214 0021 27       		.byte	39
 2215 0022 28       		.byte	40
 2216 0023 29       		.byte	41
 2217 0024 2A       		.byte	42
 2218 0025 2B       		.byte	43
 2219 0026 2E       		.byte	46
 2220 0027 2F       		.byte	47
 2221 0028 30       		.byte	48
 2222 0029 31       		.byte	49
 2223 002a 32       		.byte	50
 2224 002b 33       		.byte	51
 2225 002c 34       		.byte	52
 2226 002d 35       		.byte	53
 2227              		.data
 2228              		.align	2
 2229              		.set	.LANCHOR0,. + 0
 2230              		.type	CySysClkPumpConfig, %object
 2231              		.size	CySysClkPumpConfig, 4
 2232              	CySysClkPumpConfig:
 2233 0000 01000000 		.word	1
 2234              		.type	cydelay32kMs, %object
 2235              		.size	cydelay32kMs, 4
 2236              	cydelay32kMs:
 2237 0004 0000E02E 		.word	786432000
 2238              		.type	cydelayFreqKhz, %object
 2239              		.size	cydelayFreqKhz, 4
 2240              	cydelayFreqKhz:
 2241 0008 C05D0000 		.word	24000
 2242              		.type	cydelayFreqMhz, %object
 2243              		.size	cydelayFreqMhz, 1
 2244              	cydelayFreqMhz:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 106


 2245 000c 18       		.byte	24
 2246 000d 000000   		.space	3
 2247              		.type	cydelayFreqHz, %object
 2248              		.size	cydelayFreqHz, 4
 2249              	cydelayFreqHz:
 2250 0010 00366E01 		.word	24000000
 2251              		.bss
 2252              		.align	2
 2253              		.set	.LANCHOR2,. + 0
 2254              		.type	CySysTickCallbacks, %object
 2255              		.size	CySysTickCallbacks, 20
 2256              	CySysTickCallbacks:
 2257 0000 00000000 		.space	20
 2257      00000000 
 2257      00000000 
 2257      00000000 
 2257      00000000 
 2258              		.type	CySysTickInitVar, %object
 2259              		.size	CySysTickInitVar, 4
 2260              	CySysTickInitVar:
 2261 0014 00000000 		.space	4
 2262              		.text
 2263              	.Letext0:
 2264              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2265              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2266              		.section	.debug_info,"",%progbits
 2267              	.Ldebug_info0:
 2268 0000 D70B0000 		.4byte	0xbd7
 2269 0004 0400     		.2byte	0x4
 2270 0006 00000000 		.4byte	.Ldebug_abbrev0
 2271 000a 04       		.byte	0x4
 2272 000b 01       		.uleb128 0x1
 2273 000c 75030000 		.4byte	.LASF103
 2274 0010 0C       		.byte	0xc
 2275 0011 41060000 		.4byte	.LASF104
 2276 0015 DC050000 		.4byte	.LASF105
 2277 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 2278 001d 00000000 		.4byte	0
 2279 0021 00000000 		.4byte	.Ldebug_line0
 2280 0025 02       		.uleb128 0x2
 2281 0026 01       		.byte	0x1
 2282 0027 06       		.byte	0x6
 2283 0028 FE000000 		.4byte	.LASF0
 2284 002c 02       		.uleb128 0x2
 2285 002d 01       		.byte	0x1
 2286 002e 08       		.byte	0x8
 2287 002f E0040000 		.4byte	.LASF1
 2288 0033 02       		.uleb128 0x2
 2289 0034 02       		.byte	0x2
 2290 0035 05       		.byte	0x5
 2291 0036 EE040000 		.4byte	.LASF2
 2292 003a 02       		.uleb128 0x2
 2293 003b 02       		.byte	0x2
 2294 003c 07       		.byte	0x7
 2295 003d B6020000 		.4byte	.LASF3
 2296 0041 02       		.uleb128 0x2
 2297 0042 04       		.byte	0x4
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 107


 2298 0043 05       		.byte	0x5
 2299 0044 3D010000 		.4byte	.LASF4
 2300 0048 02       		.uleb128 0x2
 2301 0049 04       		.byte	0x4
 2302 004a 07       		.byte	0x7
 2303 004b 3E020000 		.4byte	.LASF5
 2304 004f 02       		.uleb128 0x2
 2305 0050 08       		.byte	0x8
 2306 0051 05       		.byte	0x5
 2307 0052 F0000000 		.4byte	.LASF6
 2308 0056 02       		.uleb128 0x2
 2309 0057 08       		.byte	0x8
 2310 0058 07       		.byte	0x7
 2311 0059 84000000 		.4byte	.LASF7
 2312 005d 03       		.uleb128 0x3
 2313 005e 04       		.byte	0x4
 2314 005f 05       		.byte	0x5
 2315 0060 696E7400 		.ascii	"int\000"
 2316 0064 02       		.uleb128 0x2
 2317 0065 04       		.byte	0x4
 2318 0066 07       		.byte	0x7
 2319 0067 22020000 		.4byte	.LASF8
 2320 006b 04       		.uleb128 0x4
 2321 006c 68010000 		.4byte	.LASF9
 2322 0070 02       		.byte	0x2
 2323 0071 F701     		.2byte	0x1f7
 2324 0073 2C000000 		.4byte	0x2c
 2325 0077 04       		.uleb128 0x4
 2326 0078 17000000 		.4byte	.LASF10
 2327 007c 02       		.byte	0x2
 2328 007d F801     		.2byte	0x1f8
 2329 007f 3A000000 		.4byte	0x3a
 2330 0083 04       		.uleb128 0x4
 2331 0084 A8010000 		.4byte	.LASF11
 2332 0088 02       		.byte	0x2
 2333 0089 F901     		.2byte	0x1f9
 2334 008b 48000000 		.4byte	0x48
 2335 008f 02       		.uleb128 0x2
 2336 0090 04       		.byte	0x4
 2337 0091 04       		.byte	0x4
 2338 0092 63040000 		.4byte	.LASF12
 2339 0096 02       		.uleb128 0x2
 2340 0097 08       		.byte	0x8
 2341 0098 04       		.byte	0x4
 2342 0099 84010000 		.4byte	.LASF13
 2343 009d 02       		.uleb128 0x2
 2344 009e 01       		.byte	0x1
 2345 009f 08       		.byte	0x8
 2346 00a0 31050000 		.4byte	.LASF14
 2347 00a4 04       		.uleb128 0x4
 2348 00a5 CA040000 		.4byte	.LASF15
 2349 00a9 02       		.byte	0x2
 2350 00aa A102     		.2byte	0x2a1
 2351 00ac B0000000 		.4byte	0xb0
 2352 00b0 05       		.uleb128 0x5
 2353 00b1 6B000000 		.4byte	0x6b
 2354 00b5 04       		.uleb128 0x4
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 108


 2355 00b6 24030000 		.4byte	.LASF16
 2356 00ba 02       		.byte	0x2
 2357 00bb A302     		.2byte	0x2a3
 2358 00bd C1000000 		.4byte	0xc1
 2359 00c1 05       		.uleb128 0x5
 2360 00c2 83000000 		.4byte	0x83
 2361 00c6 04       		.uleb128 0x4
 2362 00c7 36050000 		.4byte	.LASF17
 2363 00cb 02       		.byte	0x2
 2364 00cc B302     		.2byte	0x2b3
 2365 00ce D2000000 		.4byte	0xd2
 2366 00d2 06       		.uleb128 0x6
 2367 00d3 04       		.byte	0x4
 2368 00d4 D8000000 		.4byte	0xd8
 2369 00d8 07       		.uleb128 0x7
 2370 00d9 02       		.uleb128 0x2
 2371 00da 08       		.byte	0x8
 2372 00db 04       		.byte	0x4
 2373 00dc 61030000 		.4byte	.LASF18
 2374 00e0 02       		.uleb128 0x2
 2375 00e1 04       		.byte	0x4
 2376 00e2 07       		.byte	0x7
 2377 00e3 46030000 		.4byte	.LASF19
 2378 00e7 04       		.uleb128 0x4
 2379 00e8 8E040000 		.4byte	.LASF20
 2380 00ec 03       		.byte	0x3
 2381 00ed 0801     		.2byte	0x108
 2382 00ef D2000000 		.4byte	0xd2
 2383 00f3 08       		.uleb128 0x8
 2384 00f4 D9040000 		.4byte	.LASF23
 2385 00f8 01       		.byte	0x1
 2386 00f9 BD0B     		.2byte	0xbbd
 2387 00fb 01       		.byte	0x1
 2388 00fc 0D010000 		.4byte	0x10d
 2389 0100 09       		.uleb128 0x9
 2390 0101 2A050000 		.4byte	.LASF25
 2391 0105 01       		.byte	0x1
 2392 0106 BD0B     		.2byte	0xbbd
 2393 0108 6B000000 		.4byte	0x6b
 2394 010c 00       		.byte	0
 2395 010d 0A       		.uleb128 0xa
 2396 010e 91010000 		.4byte	.LASF21
 2397 0112 01       		.byte	0x1
 2398 0113 700A     		.2byte	0xa70
 2399 0115 01       		.byte	0x1
 2400 0116 0B       		.uleb128 0xb
 2401 0117 87060000 		.4byte	.LASF106
 2402 011b 01       		.byte	0x1
 2403 011c 700D     		.2byte	0xd70
 2404 011e 01       		.byte	0x1
 2405 011f 2E010000 		.4byte	0x12e
 2406 0123 0C       		.uleb128 0xc
 2407 0124 6900     		.ascii	"i\000"
 2408 0126 01       		.byte	0x1
 2409 0127 720D     		.2byte	0xd72
 2410 0129 83000000 		.4byte	0x83
 2411 012d 00       		.byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 109


 2412 012e 0A       		.uleb128 0xa
 2413 012f 2F020000 		.4byte	.LASF22
 2414 0133 01       		.byte	0x1
 2415 0134 280D     		.2byte	0xd28
 2416 0136 01       		.byte	0x1
 2417 0137 08       		.uleb128 0x8
 2418 0138 74060000 		.4byte	.LASF24
 2419 013c 01       		.byte	0x1
 2420 013d AB0C     		.2byte	0xcab
 2421 013f 01       		.byte	0x1
 2422 0140 51010000 		.4byte	0x151
 2423 0144 09       		.uleb128 0x9
 2424 0145 F8010000 		.4byte	.LASF26
 2425 0149 01       		.byte	0x1
 2426 014a AB0C     		.2byte	0xcab
 2427 014c 83000000 		.4byte	0x83
 2428 0150 00       		.byte	0
 2429 0151 0D       		.uleb128 0xd
 2430 0152 FD020000 		.4byte	.LASF107
 2431 0156 01       		.byte	0x1
 2432 0157 D10A     		.2byte	0xad1
 2433 0159 C6000000 		.4byte	0xc6
 2434 015d 01       		.byte	0x1
 2435 015e 93010000 		.4byte	0x193
 2436 0162 09       		.uleb128 0x9
 2437 0163 D8020000 		.4byte	.LASF27
 2438 0167 01       		.byte	0x1
 2439 0168 D10A     		.2byte	0xad1
 2440 016a 6B000000 		.4byte	0x6b
 2441 016e 09       		.uleb128 0x9
 2442 016f 6D030000 		.4byte	.LASF28
 2443 0173 01       		.byte	0x1
 2444 0174 D10A     		.2byte	0xad1
 2445 0176 C6000000 		.4byte	0xc6
 2446 017a 0E       		.uleb128 0xe
 2447 017b 53000000 		.4byte	.LASF29
 2448 017f 01       		.byte	0x1
 2449 0180 D30A     		.2byte	0xad3
 2450 0182 C6000000 		.4byte	0xc6
 2451 0186 0E       		.uleb128 0xe
 2452 0187 00000000 		.4byte	.LASF30
 2453 018b 01       		.byte	0x1
 2454 018c D40A     		.2byte	0xad4
 2455 018e 93010000 		.4byte	0x193
 2456 0192 00       		.byte	0
 2457 0193 06       		.uleb128 0x6
 2458 0194 04       		.byte	0x4
 2459 0195 C6000000 		.4byte	0xc6
 2460 0199 0F       		.uleb128 0xf
 2461 019a 1F060000 		.4byte	.LASF31
 2462 019e 01       		.byte	0x1
 2463 019f 62       		.byte	0x62
 2464 01a0 00000000 		.4byte	.LFB0
 2465 01a4 14000000 		.4byte	.LFE0-.LFB0
 2466 01a8 01       		.uleb128 0x1
 2467 01a9 9C       		.byte	0x9c
 2468 01aa 0F       		.uleb128 0xf
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 110


 2469 01ab 6B020000 		.4byte	.LASF32
 2470 01af 01       		.byte	0x1
 2471 01b0 83       		.byte	0x83
 2472 01b1 00000000 		.4byte	.LFB1
 2473 01b5 10000000 		.4byte	.LFE1-.LFB1
 2474 01b9 01       		.uleb128 0x1
 2475 01ba 9C       		.byte	0x9c
 2476 01bb 10       		.uleb128 0x10
 2477 01bc 27000000 		.4byte	.LASF35
 2478 01c0 01       		.byte	0x1
 2479 01c1 1C02     		.2byte	0x21c
 2480 01c3 00000000 		.4byte	.LFB2
 2481 01c7 20000000 		.4byte	.LFE2-.LFB2
 2482 01cb 01       		.uleb128 0x1
 2483 01cc 9C       		.byte	0x9c
 2484 01cd 14020000 		.4byte	0x214
 2485 01d1 11       		.uleb128 0x11
 2486 01d2 16050000 		.4byte	.LASF37
 2487 01d6 01       		.byte	0x1
 2488 01d7 1C02     		.2byte	0x21c
 2489 01d9 83000000 		.4byte	0x83
 2490 01dd 00000000 		.4byte	.LLST0
 2491 01e1 12       		.uleb128 0x12
 2492 01e2 1B010000 		.4byte	.LASF33
 2493 01e6 01       		.byte	0x1
 2494 01e7 1E02     		.2byte	0x21e
 2495 01e9 6B000000 		.4byte	0x6b
 2496 01ed 2C000000 		.4byte	.LLST1
 2497 01f1 12       		.uleb128 0x12
 2498 01f2 6D060000 		.4byte	.LASF34
 2499 01f6 01       		.byte	0x1
 2500 01f7 1F02     		.2byte	0x21f
 2501 01f9 83000000 		.4byte	0x83
 2502 01fd 3F000000 		.4byte	.LLST2
 2503 0201 13       		.uleb128 0x13
 2504 0202 08000000 		.4byte	.LVL1
 2505 0206 B90B0000 		.4byte	0xbb9
 2506 020a 13       		.uleb128 0x13
 2507 020b 1A000000 		.4byte	.LVL4
 2508 020f C40B0000 		.4byte	0xbc4
 2509 0213 00       		.byte	0
 2510 0214 10       		.uleb128 0x10
 2511 0215 0F030000 		.4byte	.LASF36
 2512 0219 01       		.byte	0x1
 2513 021a 6402     		.2byte	0x264
 2514 021c 00000000 		.4byte	.LFB3
 2515 0220 34000000 		.4byte	.LFE3-.LFB3
 2516 0224 01       		.uleb128 0x1
 2517 0225 9C       		.byte	0x9c
 2518 0226 39020000 		.4byte	0x239
 2519 022a 14       		.uleb128 0x14
 2520 022b 7D010000 		.4byte	.LASF38
 2521 022f 01       		.byte	0x1
 2522 0230 6402     		.2byte	0x264
 2523 0232 83000000 		.4byte	0x83
 2524 0236 01       		.uleb128 0x1
 2525 0237 50       		.byte	0x50
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 111


 2526 0238 00       		.byte	0
 2527 0239 15       		.uleb128 0x15
 2528 023a B4010000 		.4byte	.LASF43
 2529 023e 01       		.byte	0x1
 2530 023f 8902     		.2byte	0x289
 2531 0241 83000000 		.4byte	0x83
 2532 0245 00000000 		.4byte	.LFB4
 2533 0249 18000000 		.4byte	.LFE4-.LFB4
 2534 024d 01       		.uleb128 0x1
 2535 024e 9C       		.byte	0x9c
 2536 024f 86020000 		.4byte	0x286
 2537 0253 12       		.uleb128 0x12
 2538 0254 1B010000 		.4byte	.LASF33
 2539 0258 01       		.byte	0x1
 2540 0259 8B02     		.2byte	0x28b
 2541 025b 6B000000 		.4byte	0x6b
 2542 025f 5D000000 		.4byte	.LLST3
 2543 0263 12       		.uleb128 0x12
 2544 0264 0B040000 		.4byte	.LASF39
 2545 0268 01       		.byte	0x1
 2546 0269 8C02     		.2byte	0x28c
 2547 026b 83000000 		.4byte	0x83
 2548 026f 70000000 		.4byte	.LLST4
 2549 0273 13       		.uleb128 0x13
 2550 0274 06000000 		.4byte	.LVL7
 2551 0278 B90B0000 		.4byte	0xbb9
 2552 027c 13       		.uleb128 0x13
 2553 027d 0E000000 		.4byte	.LVL9
 2554 0281 C40B0000 		.4byte	0xbc4
 2555 0285 00       		.byte	0
 2556 0286 10       		.uleb128 0x10
 2557 0287 53050000 		.4byte	.LASF40
 2558 028b 01       		.byte	0x1
 2559 028c C602     		.2byte	0x2c6
 2560 028e 00000000 		.4byte	.LFB5
 2561 0292 2C000000 		.4byte	.LFE5-.LFB5
 2562 0296 01       		.uleb128 0x1
 2563 0297 9C       		.byte	0x9c
 2564 0298 CF020000 		.4byte	0x2cf
 2565 029c 11       		.uleb128 0x11
 2566 029d 17060000 		.4byte	.LASF41
 2567 02a1 01       		.byte	0x1
 2568 02a2 C602     		.2byte	0x2c6
 2569 02a4 83000000 		.4byte	0x83
 2570 02a8 92000000 		.4byte	.LLST5
 2571 02ac 12       		.uleb128 0x12
 2572 02ad 1B010000 		.4byte	.LASF33
 2573 02b1 01       		.byte	0x1
 2574 02b2 C802     		.2byte	0x2c8
 2575 02b4 6B000000 		.4byte	0x6b
 2576 02b8 BE000000 		.4byte	.LLST6
 2577 02bc 13       		.uleb128 0x13
 2578 02bd 08000000 		.4byte	.LVL12
 2579 02c1 B90B0000 		.4byte	0xbb9
 2580 02c5 13       		.uleb128 0x13
 2581 02c6 22000000 		.4byte	.LVL14
 2582 02ca C40B0000 		.4byte	0xbc4
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 112


 2583 02ce 00       		.byte	0
 2584 02cf 16       		.uleb128 0x16
 2585 02d0 BD050000 		.4byte	.LASF42
 2586 02d4 01       		.byte	0x1
 2587 02d5 4E0A     		.2byte	0xa4e
 2588 02d7 00000000 		.4byte	.LFB8
 2589 02db 20000000 		.4byte	.LFE8-.LFB8
 2590 02df 01       		.uleb128 0x1
 2591 02e0 9C       		.byte	0x9c
 2592 02e1 17       		.uleb128 0x17
 2593 02e2 50020000 		.4byte	.LASF82
 2594 02e6 01       		.byte	0x1
 2595 02e7 600A     		.2byte	0xa60
 2596 02e9 83000000 		.4byte	0x83
 2597 02ed 00000000 		.4byte	.LFB9
 2598 02f1 10000000 		.4byte	.LFE9-.LFB9
 2599 02f5 01       		.uleb128 0x1
 2600 02f6 9C       		.byte	0x9c
 2601 02f7 18       		.uleb128 0x18
 2602 02f8 0D010000 		.4byte	0x10d
 2603 02fc 00000000 		.4byte	.LFB10
 2604 0300 0C000000 		.4byte	.LFE10-.LFB10
 2605 0304 01       		.uleb128 0x1
 2606 0305 9C       		.byte	0x9c
 2607 0306 15       		.uleb128 0x15
 2608 0307 A2020000 		.4byte	.LASF44
 2609 030b 01       		.byte	0x1
 2610 030c 8A0A     		.2byte	0xa8a
 2611 030e 83000000 		.4byte	0x83
 2612 0312 00000000 		.4byte	.LFB11
 2613 0316 14000000 		.4byte	.LFE11-.LFB11
 2614 031a 01       		.uleb128 0x1
 2615 031b 9C       		.byte	0x9c
 2616 031c 41030000 		.4byte	0x341
 2617 0320 11       		.uleb128 0x11
 2618 0321 2A050000 		.4byte	.LASF25
 2619 0325 01       		.byte	0x1
 2620 0326 8A0A     		.2byte	0xa8a
 2621 0328 83000000 		.4byte	0x83
 2622 032c D1000000 		.4byte	.LLST7
 2623 0330 12       		.uleb128 0x12
 2624 0331 39030000 		.4byte	.LASF45
 2625 0335 01       		.byte	0x1
 2626 0336 8C0A     		.2byte	0xa8c
 2627 0338 83000000 		.4byte	0x83
 2628 033c EF000000 		.4byte	.LLST8
 2629 0340 00       		.byte	0
 2630 0341 15       		.uleb128 0x15
 2631 0342 61000000 		.4byte	.LASF46
 2632 0346 01       		.byte	0x1
 2633 0347 A10A     		.2byte	0xaa1
 2634 0349 83000000 		.4byte	0x83
 2635 034d 00000000 		.4byte	.LFB12
 2636 0351 10000000 		.4byte	.LFE12-.LFB12
 2637 0355 01       		.uleb128 0x1
 2638 0356 9C       		.byte	0x9c
 2639 0357 6A030000 		.4byte	0x36a
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 113


 2640 035b 19       		.uleb128 0x19
 2641 035c 1E000000 		.4byte	.LASF47
 2642 0360 01       		.byte	0x1
 2643 0361 A30A     		.2byte	0xaa3
 2644 0363 83000000 		.4byte	0x83
 2645 0367 01       		.uleb128 0x1
 2646 0368 50       		.byte	0x50
 2647 0369 00       		.byte	0
 2648 036a 10       		.uleb128 0x10
 2649 036b AC000000 		.4byte	.LASF48
 2650 036f 01       		.byte	0x1
 2651 0370 B80A     		.2byte	0xab8
 2652 0372 00000000 		.4byte	.LFB13
 2653 0376 0C000000 		.4byte	.LFE13-.LFB13
 2654 037a 01       		.uleb128 0x1
 2655 037b 9C       		.byte	0x9c
 2656 037c 8F030000 		.4byte	0x38f
 2657 0380 14       		.uleb128 0x14
 2658 0381 AF010000 		.4byte	.LASF49
 2659 0385 01       		.byte	0x1
 2660 0386 B80A     		.2byte	0xab8
 2661 0388 83000000 		.4byte	0x83
 2662 038c 01       		.uleb128 0x1
 2663 038d 50       		.byte	0x50
 2664 038e 00       		.byte	0
 2665 038f 1A       		.uleb128 0x1a
 2666 0390 51010000 		.4byte	0x151
 2667 0394 00000000 		.4byte	.LFB14
 2668 0398 14000000 		.4byte	.LFE14-.LFB14
 2669 039c 01       		.uleb128 0x1
 2670 039d 9C       		.byte	0x9c
 2671 039e DD030000 		.4byte	0x3dd
 2672 03a2 1B       		.uleb128 0x1b
 2673 03a3 62010000 		.4byte	0x162
 2674 03a7 11010000 		.4byte	.LLST9
 2675 03ab 1C       		.uleb128 0x1c
 2676 03ac 6E010000 		.4byte	0x16e
 2677 03b0 01       		.uleb128 0x1
 2678 03b1 51       		.byte	0x51
 2679 03b2 1D       		.uleb128 0x1d
 2680 03b3 7A010000 		.4byte	0x17a
 2681 03b7 01       		.uleb128 0x1
 2682 03b8 50       		.byte	0x50
 2683 03b9 1E       		.uleb128 0x1e
 2684 03ba 86010000 		.4byte	0x186
 2685 03be 00000020 		.4byte	0x20000000
 2686 03c2 1F       		.uleb128 0x1f
 2687 03c3 F3000000 		.4byte	0xf3
 2688 03c7 04000000 		.4byte	.LBB28
 2689 03cb 02000000 		.4byte	.LBE28-.LBB28
 2690 03cf 01       		.byte	0x1
 2691 03d0 D60A     		.2byte	0xad6
 2692 03d2 1B       		.uleb128 0x1b
 2693 03d3 00010000 		.4byte	0x100
 2694 03d7 32010000 		.4byte	.LLST10
 2695 03db 00       		.byte	0
 2696 03dc 00       		.byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 114


 2697 03dd 15       		.uleb128 0x15
 2698 03de 04050000 		.4byte	.LASF50
 2699 03e2 01       		.byte	0x1
 2700 03e3 F30A     		.2byte	0xaf3
 2701 03e5 C6000000 		.4byte	0xc6
 2702 03e9 00000000 		.4byte	.LFB15
 2703 03ed 12000000 		.4byte	.LFE15-.LFB15
 2704 03f1 01       		.uleb128 0x1
 2705 03f2 9C       		.byte	0x9c
 2706 03f3 32040000 		.4byte	0x432
 2707 03f7 11       		.uleb128 0x11
 2708 03f8 D8020000 		.4byte	.LASF27
 2709 03fc 01       		.byte	0x1
 2710 03fd F30A     		.2byte	0xaf3
 2711 03ff 6B000000 		.4byte	0x6b
 2712 0403 46010000 		.4byte	.LLST11
 2713 0407 20       		.uleb128 0x20
 2714 0408 00000000 		.4byte	.LASF30
 2715 040c 01       		.byte	0x1
 2716 040d F50A     		.2byte	0xaf5
 2717 040f 93010000 		.4byte	0x193
 2718 0413 00000020 		.4byte	0x20000000
 2719 0417 1F       		.uleb128 0x1f
 2720 0418 F3000000 		.4byte	0xf3
 2721 041c 04000000 		.4byte	.LBB30
 2722 0420 02000000 		.4byte	.LBE30-.LBB30
 2723 0424 01       		.byte	0x1
 2724 0425 F70A     		.2byte	0xaf7
 2725 0427 1B       		.uleb128 0x1b
 2726 0428 00010000 		.4byte	0x100
 2727 042c 67010000 		.4byte	.LLST12
 2728 0430 00       		.byte	0
 2729 0431 00       		.byte	0
 2730 0432 15       		.uleb128 0x15
 2731 0433 C9020000 		.4byte	.LASF51
 2732 0437 01       		.byte	0x1
 2733 0438 090B     		.2byte	0xb09
 2734 043a C6000000 		.4byte	0xc6
 2735 043e 00000000 		.4byte	.LFB16
 2736 0442 18000000 		.4byte	.LFE16-.LFB16
 2737 0446 01       		.uleb128 0x1
 2738 0447 9C       		.byte	0x9c
 2739 0448 A3040000 		.4byte	0x4a3
 2740 044c 11       		.uleb128 0x11
 2741 044d D8020000 		.4byte	.LASF27
 2742 0451 01       		.byte	0x1
 2743 0452 090B     		.2byte	0xb09
 2744 0454 6B000000 		.4byte	0x6b
 2745 0458 7B010000 		.4byte	.LLST13
 2746 045c 14       		.uleb128 0x14
 2747 045d 6D030000 		.4byte	.LASF28
 2748 0461 01       		.byte	0x1
 2749 0462 090B     		.2byte	0xb09
 2750 0464 C6000000 		.4byte	0xc6
 2751 0468 01       		.uleb128 0x1
 2752 0469 51       		.byte	0x51
 2753 046a 19       		.uleb128 0x19
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 115


 2754 046b 53000000 		.4byte	.LASF29
 2755 046f 01       		.byte	0x1
 2756 0470 0B0B     		.2byte	0xb0b
 2757 0472 C6000000 		.4byte	0xc6
 2758 0476 01       		.uleb128 0x1
 2759 0477 50       		.byte	0x50
 2760 0478 20       		.uleb128 0x20
 2761 0479 00000000 		.4byte	.LASF30
 2762 047d 01       		.byte	0x1
 2763 047e 0C0B     		.2byte	0xb0c
 2764 0480 93010000 		.4byte	0x193
 2765 0484 00000020 		.4byte	0x20000000
 2766 0488 1F       		.uleb128 0x1f
 2767 0489 F3000000 		.4byte	0xf3
 2768 048d 04000000 		.4byte	.LBB32
 2769 0491 02000000 		.4byte	.LBE32-.LBB32
 2770 0495 01       		.byte	0x1
 2771 0496 0E0B     		.2byte	0xb0e
 2772 0498 1B       		.uleb128 0x1b
 2773 0499 00010000 		.4byte	0x100
 2774 049d 9C010000 		.4byte	.LLST14
 2775 04a1 00       		.byte	0
 2776 04a2 00       		.byte	0
 2777 04a3 15       		.uleb128 0x15
 2778 04a4 A0040000 		.4byte	.LASF52
 2779 04a8 01       		.byte	0x1
 2780 04a9 250B     		.2byte	0xb25
 2781 04ab C6000000 		.4byte	0xc6
 2782 04af 00000000 		.4byte	.LFB17
 2783 04b3 14000000 		.4byte	.LFE17-.LFB17
 2784 04b7 01       		.uleb128 0x1
 2785 04b8 9C       		.byte	0x9c
 2786 04b9 F8040000 		.4byte	0x4f8
 2787 04bd 11       		.uleb128 0x11
 2788 04be D8020000 		.4byte	.LASF27
 2789 04c2 01       		.byte	0x1
 2790 04c3 250B     		.2byte	0xb25
 2791 04c5 6B000000 		.4byte	0x6b
 2792 04c9 B0010000 		.4byte	.LLST15
 2793 04cd 20       		.uleb128 0x20
 2794 04ce 00000000 		.4byte	.LASF30
 2795 04d2 01       		.byte	0x1
 2796 04d3 270B     		.2byte	0xb27
 2797 04d5 93010000 		.4byte	0x193
 2798 04d9 00000020 		.4byte	0x20000000
 2799 04dd 1F       		.uleb128 0x1f
 2800 04de F3000000 		.4byte	0xf3
 2801 04e2 04000000 		.4byte	.LBB34
 2802 04e6 02000000 		.4byte	.LBE34-.LBB34
 2803 04ea 01       		.byte	0x1
 2804 04eb 290B     		.2byte	0xb29
 2805 04ed 1B       		.uleb128 0x1b
 2806 04ee 00010000 		.4byte	0x100
 2807 04f2 D1010000 		.4byte	.LLST16
 2808 04f6 00       		.byte	0
 2809 04f7 00       		.byte	0
 2810 04f8 10       		.uleb128 0x10
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 116


 2811 04f9 52040000 		.4byte	.LASF53
 2812 04fd 01       		.byte	0x1
 2813 04fe 380B     		.2byte	0xb38
 2814 0500 00000000 		.4byte	.LFB18
 2815 0504 40000000 		.4byte	.LFE18-.LFB18
 2816 0508 01       		.uleb128 0x1
 2817 0509 9C       		.byte	0x9c
 2818 050a AD050000 		.4byte	0x5ad
 2819 050e 11       		.uleb128 0x11
 2820 050f D8020000 		.4byte	.LASF27
 2821 0513 01       		.byte	0x1
 2822 0514 380B     		.2byte	0xb38
 2823 0516 6B000000 		.4byte	0x6b
 2824 051a E5010000 		.4byte	.LLST17
 2825 051e 11       		.uleb128 0x11
 2826 051f DF020000 		.4byte	.LASF54
 2827 0523 01       		.byte	0x1
 2828 0524 380B     		.2byte	0xb38
 2829 0526 6B000000 		.4byte	0x6b
 2830 052a 06020000 		.4byte	.LLST18
 2831 052e 12       		.uleb128 0x12
 2832 052f 1B010000 		.4byte	.LASF33
 2833 0533 01       		.byte	0x1
 2834 0534 3A0B     		.2byte	0xb3a
 2835 0536 6B000000 		.4byte	0x6b
 2836 053a 27020000 		.4byte	.LLST19
 2837 053e 12       		.uleb128 0x12
 2838 053f 8B010000 		.4byte	.LASF55
 2839 0543 01       		.byte	0x1
 2840 0544 3B0B     		.2byte	0xb3b
 2841 0546 83000000 		.4byte	0x83
 2842 054a 3A020000 		.4byte	.LLST20
 2843 054e 12       		.uleb128 0x12
 2844 054f F8010000 		.4byte	.LASF26
 2845 0553 01       		.byte	0x1
 2846 0554 3C0B     		.2byte	0xb3c
 2847 0556 83000000 		.4byte	0x83
 2848 055a 4D020000 		.4byte	.LLST21
 2849 055e 21       		.uleb128 0x21
 2850 055f F3000000 		.4byte	0xf3
 2851 0563 0A000000 		.4byte	.LBB36
 2852 0567 02000000 		.4byte	.LBE36-.LBB36
 2853 056b 01       		.byte	0x1
 2854 056c 3E0B     		.2byte	0xb3e
 2855 056e 7C050000 		.4byte	0x57c
 2856 0572 1B       		.uleb128 0x1b
 2857 0573 00010000 		.4byte	0x100
 2858 0577 6B020000 		.4byte	.LLST22
 2859 057b 00       		.byte	0
 2860 057c 21       		.uleb128 0x21
 2861 057d F3000000 		.4byte	0xf3
 2862 0581 10000000 		.4byte	.LBB38
 2863 0585 02000000 		.4byte	.LBE38-.LBB38
 2864 0589 01       		.byte	0x1
 2865 058a 3F0B     		.2byte	0xb3f
 2866 058c 9A050000 		.4byte	0x59a
 2867 0590 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 117


 2868 0591 00010000 		.4byte	0x100
 2869 0595 7F020000 		.4byte	.LLST23
 2870 0599 00       		.byte	0
 2871 059a 13       		.uleb128 0x13
 2872 059b 24000000 		.4byte	.LVL45
 2873 059f B90B0000 		.4byte	0xbb9
 2874 05a3 13       		.uleb128 0x13
 2875 05a4 38000000 		.4byte	.LVL49
 2876 05a8 C40B0000 		.4byte	0xbc4
 2877 05ac 00       		.byte	0
 2878 05ad 15       		.uleb128 0x15
 2879 05ae CC010000 		.4byte	.LASF56
 2880 05b2 01       		.byte	0x1
 2881 05b3 5A0B     		.2byte	0xb5a
 2882 05b5 6B000000 		.4byte	0x6b
 2883 05b9 00000000 		.4byte	.LFB19
 2884 05bd 28000000 		.4byte	.LFE19-.LFB19
 2885 05c1 01       		.uleb128 0x1
 2886 05c2 9C       		.byte	0x9c
 2887 05c3 02060000 		.4byte	0x602
 2888 05c7 11       		.uleb128 0x11
 2889 05c8 D8020000 		.4byte	.LASF27
 2890 05cc 01       		.byte	0x1
 2891 05cd 5A0B     		.2byte	0xb5a
 2892 05cf 6B000000 		.4byte	0x6b
 2893 05d3 93020000 		.4byte	.LLST24
 2894 05d7 12       		.uleb128 0x12
 2895 05d8 DF020000 		.4byte	.LASF54
 2896 05dc 01       		.byte	0x1
 2897 05dd 5C0B     		.2byte	0xb5c
 2898 05df 6B000000 		.4byte	0x6b
 2899 05e3 B4020000 		.4byte	.LLST25
 2900 05e7 1F       		.uleb128 0x1f
 2901 05e8 F3000000 		.4byte	0xf3
 2902 05ec 04000000 		.4byte	.LBB40
 2903 05f0 02000000 		.4byte	.LBE40-.LBB40
 2904 05f4 01       		.byte	0x1
 2905 05f5 5E0B     		.2byte	0xb5e
 2906 05f7 1B       		.uleb128 0x1b
 2907 05f8 00010000 		.4byte	0x100
 2908 05fc D5020000 		.4byte	.LLST26
 2909 0600 00       		.byte	0
 2910 0601 00       		.byte	0
 2911 0602 10       		.uleb128 0x10
 2912 0603 F8040000 		.4byte	.LASF57
 2913 0607 01       		.byte	0x1
 2914 0608 6F0B     		.2byte	0xb6f
 2915 060a 00000000 		.4byte	.LFB20
 2916 060e 14000000 		.4byte	.LFE20-.LFB20
 2917 0612 01       		.uleb128 0x1
 2918 0613 9C       		.byte	0x9c
 2919 0614 29060000 		.4byte	0x629
 2920 0618 11       		.uleb128 0x11
 2921 0619 D8020000 		.4byte	.LASF27
 2922 061d 01       		.byte	0x1
 2923 061e 6F0B     		.2byte	0xb6f
 2924 0620 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 118


 2925 0624 E9020000 		.4byte	.LLST27
 2926 0628 00       		.byte	0
 2927 0629 15       		.uleb128 0x15
 2928 062a E2000000 		.4byte	.LASF58
 2929 062e 01       		.byte	0x1
 2930 062f 810B     		.2byte	0xb81
 2931 0631 6B000000 		.4byte	0x6b
 2932 0635 00000000 		.4byte	.LFB21
 2933 0639 18000000 		.4byte	.LFE21-.LFB21
 2934 063d 01       		.uleb128 0x1
 2935 063e 9C       		.byte	0x9c
 2936 063f 54060000 		.4byte	0x654
 2937 0643 11       		.uleb128 0x11
 2938 0644 D8020000 		.4byte	.LASF27
 2939 0648 01       		.byte	0x1
 2940 0649 810B     		.2byte	0xb81
 2941 064b 6B000000 		.4byte	0x6b
 2942 064f 0A030000 		.4byte	.LLST28
 2943 0653 00       		.byte	0
 2944 0654 10       		.uleb128 0x10
 2945 0655 46010000 		.4byte	.LASF59
 2946 0659 01       		.byte	0x1
 2947 065a 910B     		.2byte	0xb91
 2948 065c 00000000 		.4byte	.LFB22
 2949 0660 14000000 		.4byte	.LFE22-.LFB22
 2950 0664 01       		.uleb128 0x1
 2951 0665 9C       		.byte	0x9c
 2952 0666 7B060000 		.4byte	0x67b
 2953 066a 11       		.uleb128 0x11
 2954 066b D8020000 		.4byte	.LASF27
 2955 066f 01       		.byte	0x1
 2956 0670 910B     		.2byte	0xb91
 2957 0672 6B000000 		.4byte	0x6b
 2958 0676 2B030000 		.4byte	.LLST29
 2959 067a 00       		.byte	0
 2960 067b 10       		.uleb128 0x10
 2961 067c 92020000 		.4byte	.LASF60
 2962 0680 01       		.byte	0x1
 2963 0681 9F0B     		.2byte	0xb9f
 2964 0683 00000000 		.4byte	.LFB23
 2965 0687 14000000 		.4byte	.LFE23-.LFB23
 2966 068b 01       		.uleb128 0x1
 2967 068c 9C       		.byte	0x9c
 2968 068d A2060000 		.4byte	0x6a2
 2969 0691 11       		.uleb128 0x11
 2970 0692 D8020000 		.4byte	.LASF27
 2971 0696 01       		.byte	0x1
 2972 0697 9F0B     		.2byte	0xb9f
 2973 0699 6B000000 		.4byte	0x6b
 2974 069d 4C030000 		.4byte	.LLST30
 2975 06a1 00       		.byte	0
 2976 06a2 10       		.uleb128 0x10
 2977 06a3 4F030000 		.4byte	.LASF61
 2978 06a7 01       		.byte	0x1
 2979 06a8 AE0B     		.2byte	0xbae
 2980 06aa 00000000 		.4byte	.LFB24
 2981 06ae 14000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 119


 2982 06b2 01       		.uleb128 0x1
 2983 06b3 9C       		.byte	0x9c
 2984 06b4 C9060000 		.4byte	0x6c9
 2985 06b8 11       		.uleb128 0x11
 2986 06b9 D8020000 		.4byte	.LASF27
 2987 06bd 01       		.byte	0x1
 2988 06be AE0B     		.2byte	0xbae
 2989 06c0 6B000000 		.4byte	0x6b
 2990 06c4 6D030000 		.4byte	.LLST31
 2991 06c8 00       		.byte	0
 2992 06c9 1A       		.uleb128 0x1a
 2993 06ca F3000000 		.4byte	0xf3
 2994 06ce 00000000 		.4byte	.LFB25
 2995 06d2 04000000 		.4byte	.LFE25-.LFB25
 2996 06d6 01       		.uleb128 0x1
 2997 06d7 9C       		.byte	0x9c
 2998 06d8 E4060000 		.4byte	0x6e4
 2999 06dc 1C       		.uleb128 0x1c
 3000 06dd 00010000 		.4byte	0x100
 3001 06e1 01       		.uleb128 0x1
 3002 06e2 50       		.byte	0x50
 3003 06e3 00       		.byte	0
 3004 06e4 16       		.uleb128 0x16
 3005 06e5 B9000000 		.4byte	.LASF62
 3006 06e9 01       		.byte	0x1
 3007 06ea D50B     		.2byte	0xbd5
 3008 06ec 00000000 		.4byte	.LFB26
 3009 06f0 18000000 		.4byte	.LFE26-.LFB26
 3010 06f4 01       		.uleb128 0x1
 3011 06f5 9C       		.byte	0x9c
 3012 06f6 10       		.uleb128 0x10
 3013 06f7 9B050000 		.4byte	.LASF63
 3014 06fb 01       		.byte	0x1
 3015 06fc E90B     		.2byte	0xbe9
 3016 06fe 00000000 		.4byte	.LFB27
 3017 0702 2C000000 		.4byte	.LFE27-.LFB27
 3018 0706 01       		.uleb128 0x1
 3019 0707 9C       		.byte	0x9c
 3020 0708 2F070000 		.4byte	0x72f
 3021 070c 11       		.uleb128 0x11
 3022 070d AF040000 		.4byte	.LASF64
 3023 0711 01       		.byte	0x1
 3024 0712 E90B     		.2byte	0xbe9
 3025 0714 83000000 		.4byte	0x83
 3026 0718 8E030000 		.4byte	.LLST32
 3027 071c 13       		.uleb128 0x13
 3028 071d 14000000 		.4byte	.LVL71
 3029 0721 CF0B0000 		.4byte	0xbcf
 3030 0725 13       		.uleb128 0x13
 3031 0726 22000000 		.4byte	.LVL73
 3032 072a CF0B0000 		.4byte	0xbcf
 3033 072e 00       		.byte	0
 3034 072f 10       		.uleb128 0x10
 3035 0730 20050000 		.4byte	.LASF65
 3036 0734 01       		.byte	0x1
 3037 0735 000C     		.2byte	0xc00
 3038 0737 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 120


 3039 073b 14000000 		.4byte	.LFE28-.LFB28
 3040 073f 01       		.uleb128 0x1
 3041 0740 9C       		.byte	0x9c
 3042 0741 5F070000 		.4byte	0x75f
 3043 0745 11       		.uleb128 0x11
 3044 0746 60060000 		.4byte	.LASF66
 3045 074a 01       		.byte	0x1
 3046 074b 000C     		.2byte	0xc00
 3047 074d 77000000 		.4byte	0x77
 3048 0751 AC030000 		.4byte	.LLST33
 3049 0755 13       		.uleb128 0x13
 3050 0756 0C000000 		.4byte	.LVL77
 3051 075a CF0B0000 		.4byte	0xbcf
 3052 075e 00       		.byte	0
 3053 075f 10       		.uleb128 0x10
 3054 0760 E8020000 		.4byte	.LASF67
 3055 0764 01       		.byte	0x1
 3056 0765 0003     		.2byte	0x300
 3057 0767 00000000 		.4byte	.LFB6
 3058 076b 28010000 		.4byte	.LFE6-.LFB6
 3059 076f 01       		.uleb128 0x1
 3060 0770 9C       		.byte	0x9c
 3061 0771 47080000 		.4byte	0x847
 3062 0775 11       		.uleb128 0x11
 3063 0776 0A010000 		.4byte	.LASF68
 3064 077a 01       		.byte	0x1
 3065 077b 0003     		.2byte	0x300
 3066 077d 83000000 		.4byte	0x83
 3067 0781 CD030000 		.4byte	.LLST34
 3068 0785 12       		.uleb128 0x12
 3069 0786 0F000000 		.4byte	.LASF69
 3070 078a 01       		.byte	0x1
 3071 078b 0603     		.2byte	0x306
 3072 078d 6B000000 		.4byte	0x6b
 3073 0791 17040000 		.4byte	.LLST35
 3074 0795 12       		.uleb128 0x12
 3075 0796 03040000 		.4byte	.LASF70
 3076 079a 01       		.byte	0x1
 3077 079b 0703     		.2byte	0x307
 3078 079d 6B000000 		.4byte	0x6b
 3079 07a1 56040000 		.4byte	.LLST36
 3080 07a5 12       		.uleb128 0x12
 3081 07a6 30060000 		.4byte	.LASF71
 3082 07aa 01       		.byte	0x1
 3083 07ab 0803     		.2byte	0x308
 3084 07ad 6B000000 		.4byte	0x6b
 3085 07b1 6A040000 		.4byte	.LLST37
 3086 07b5 12       		.uleb128 0x12
 3087 07b6 6F000000 		.4byte	.LASF72
 3088 07ba 01       		.byte	0x1
 3089 07bb 0903     		.2byte	0x309
 3090 07bd 6B000000 		.4byte	0x6b
 3091 07c1 7E040000 		.4byte	.LLST38
 3092 07c5 19       		.uleb128 0x19
 3093 07c6 1B010000 		.4byte	.LASF33
 3094 07ca 01       		.byte	0x1
 3095 07cb 1403     		.2byte	0x314
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 121


 3096 07cd 6B000000 		.4byte	0x6b
 3097 07d1 02       		.uleb128 0x2
 3098 07d2 91       		.byte	0x91
 3099 07d3 60       		.sleb128 -32
 3100 07d4 21       		.uleb128 0x21
 3101 07d5 F3000000 		.4byte	0xf3
 3102 07d9 CE000000 		.4byte	.LBB42
 3103 07dd 02000000 		.4byte	.LBE42-.LBB42
 3104 07e1 01       		.byte	0x1
 3105 07e2 A103     		.2byte	0x3a1
 3106 07e4 F2070000 		.4byte	0x7f2
 3107 07e8 1B       		.uleb128 0x1b
 3108 07e9 00010000 		.4byte	0x100
 3109 07ed 91040000 		.4byte	.LLST39
 3110 07f1 00       		.byte	0
 3111 07f2 13       		.uleb128 0x13
 3112 07f3 0A000000 		.4byte	.LVL79
 3113 07f7 B90B0000 		.4byte	0xbb9
 3114 07fb 22       		.uleb128 0x22
 3115 07fc 9C000000 		.4byte	.LVL94
 3116 0800 CF0B0000 		.4byte	0xbcf
 3117 0804 0E080000 		.4byte	0x80e
 3118 0808 23       		.uleb128 0x23
 3119 0809 01       		.uleb128 0x1
 3120 080a 50       		.byte	0x50
 3121 080b 01       		.uleb128 0x1
 3122 080c 35       		.byte	0x35
 3123 080d 00       		.byte	0
 3124 080e 22       		.uleb128 0x22
 3125 080f B8000000 		.4byte	.LVL96
 3126 0813 2F070000 		.4byte	0x72f
 3127 0817 21080000 		.4byte	0x821
 3128 081b 23       		.uleb128 0x23
 3129 081c 01       		.uleb128 0x1
 3130 081d 50       		.byte	0x50
 3131 081e 01       		.uleb128 0x1
 3132 081f 35       		.byte	0x35
 3133 0820 00       		.byte	0
 3134 0821 22       		.uleb128 0x22
 3135 0822 CC000000 		.4byte	.LVL97
 3136 0826 CF0B0000 		.4byte	0xbcf
 3137 082a 34080000 		.4byte	0x834
 3138 082e 23       		.uleb128 0x23
 3139 082f 01       		.uleb128 0x1
 3140 0830 50       		.byte	0x50
 3141 0831 01       		.uleb128 0x1
 3142 0832 35       		.byte	0x35
 3143 0833 00       		.byte	0
 3144 0834 24       		.uleb128 0x24
 3145 0835 D6000000 		.4byte	.LVL100
 3146 0839 C40B0000 		.4byte	0xbc4
 3147 083d 23       		.uleb128 0x23
 3148 083e 01       		.uleb128 0x1
 3149 083f 50       		.byte	0x50
 3150 0840 04       		.uleb128 0x4
 3151 0841 91       		.byte	0x91
 3152 0842 60       		.sleb128 -32
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 122


 3153 0843 94       		.byte	0x94
 3154 0844 01       		.byte	0x1
 3155 0845 00       		.byte	0
 3156 0846 00       		.byte	0
 3157 0847 10       		.uleb128 0x10
 3158 0848 7F040000 		.4byte	.LASF73
 3159 084c 01       		.byte	0x1
 3160 084d 300A     		.2byte	0xa30
 3161 084f 00000000 		.4byte	.LFB7
 3162 0853 44000000 		.4byte	.LFE7-.LFB7
 3163 0857 01       		.uleb128 0x1
 3164 0858 9C       		.byte	0x9c
 3165 0859 8F080000 		.4byte	0x88f
 3166 085d 11       		.uleb128 0x11
 3167 085e CF040000 		.4byte	.LASF74
 3168 0862 01       		.byte	0x1
 3169 0863 300A     		.2byte	0xa30
 3170 0865 83000000 		.4byte	0x83
 3171 0869 A5040000 		.4byte	.LLST40
 3172 086d 25       		.uleb128 0x25
 3173 086e 0D010000 		.4byte	0x10d
 3174 0872 2C000000 		.4byte	.LBB44
 3175 0876 00000000 		.4byte	.Ldebug_ranges0+0
 3176 087a 01       		.byte	0x1
 3177 087b 400A     		.2byte	0xa40
 3178 087d 24       		.uleb128 0x24
 3179 087e 2C000000 		.4byte	.LVL103
 3180 0882 2F070000 		.4byte	0x72f
 3181 0886 23       		.uleb128 0x23
 3182 0887 01       		.uleb128 0x1
 3183 0888 50       		.byte	0x50
 3184 0889 03       		.uleb128 0x3
 3185 088a 0A       		.byte	0xa
 3186 088b E803     		.2byte	0x3e8
 3187 088d 00       		.byte	0
 3188 088e 00       		.byte	0
 3189 088f 26       		.uleb128 0x26
 3190 0890 0F010000 		.4byte	.LASF75
 3191 0894 01       		.byte	0x1
 3192 0895 0E0C     		.2byte	0xc0e
 3193 0897 00000000 		.4byte	.LFB29
 3194 089b 48000000 		.4byte	.LFE29-.LFB29
 3195 089f 01       		.uleb128 0x1
 3196 08a0 9C       		.byte	0x9c
 3197 08a1 B6080000 		.4byte	0x8b6
 3198 08a5 11       		.uleb128 0x11
 3199 08a6 0A010000 		.4byte	.LASF68
 3200 08aa 01       		.byte	0x1
 3201 08ab 0E0C     		.2byte	0xc0e
 3202 08ad 83000000 		.4byte	0x83
 3203 08b1 C6040000 		.4byte	.LLST41
 3204 08b5 00       		.byte	0
 3205 08b6 26       		.uleb128 0x26
 3206 08b7 EA010000 		.4byte	.LASF76
 3207 08bb 01       		.byte	0x1
 3208 08bc 4B0C     		.2byte	0xc4b
 3209 08be 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 123


 3210 08c2 44000000 		.4byte	.LFE31-.LFB31
 3211 08c6 01       		.uleb128 0x1
 3212 08c7 9C       		.byte	0x9c
 3213 08c8 48090000 		.4byte	0x948
 3214 08cc 27       		.uleb128 0x27
 3215 08cd 6900     		.ascii	"i\000"
 3216 08cf 01       		.byte	0x1
 3217 08d0 4D0C     		.2byte	0xc4d
 3218 08d2 83000000 		.4byte	0x83
 3219 08d6 E7040000 		.4byte	.LLST42
 3220 08da 28       		.uleb128 0x28
 3221 08db 51010000 		.4byte	0x151
 3222 08df 08000000 		.4byte	.LBB48
 3223 08e3 18000000 		.4byte	.Ldebug_ranges0+0x18
 3224 08e7 01       		.byte	0x1
 3225 08e8 540C     		.2byte	0xc54
 3226 08ea 19090000 		.4byte	0x919
 3227 08ee 1B       		.uleb128 0x1b
 3228 08ef 6E010000 		.4byte	0x16e
 3229 08f3 2B050000 		.4byte	.LLST43
 3230 08f7 1B       		.uleb128 0x1b
 3231 08f8 62010000 		.4byte	0x162
 3232 08fc 43050000 		.4byte	.LLST44
 3233 0900 29       		.uleb128 0x29
 3234 0901 18000000 		.4byte	.Ldebug_ranges0+0x18
 3235 0905 2A       		.uleb128 0x2a
 3236 0906 7A010000 		.4byte	0x17a
 3237 090a 57050000 		.4byte	.LLST45
 3238 090e 1E       		.uleb128 0x1e
 3239 090f 86010000 		.4byte	0x186
 3240 0913 00000020 		.4byte	0x20000000
 3241 0917 00       		.byte	0
 3242 0918 00       		.byte	0
 3243 0919 21       		.uleb128 0x21
 3244 091a 37010000 		.4byte	0x137
 3245 091e 22000000 		.4byte	.LBB54
 3246 0922 04000000 		.4byte	.LBE54-.LBB54
 3247 0926 01       		.byte	0x1
 3248 0927 5A0C     		.2byte	0xc5a
 3249 0929 37090000 		.4byte	0x937
 3250 092d 1B       		.uleb128 0x1b
 3251 092e 44010000 		.4byte	0x144
 3252 0932 7A050000 		.4byte	.LLST46
 3253 0936 00       		.byte	0
 3254 0937 2B       		.uleb128 0x2b
 3255 0938 2E010000 		.4byte	0x12e
 3256 093c 26000000 		.4byte	.LBB56
 3257 0940 04000000 		.4byte	.LBE56-.LBB56
 3258 0944 01       		.byte	0x1
 3259 0945 5B0C     		.2byte	0xc5b
 3260 0947 00       		.byte	0
 3261 0948 16       		.uleb128 0x16
 3262 0949 09060000 		.4byte	.LASF77
 3263 094d 01       		.byte	0x1
 3264 094e 7A0C     		.2byte	0xc7a
 3265 0950 00000000 		.4byte	.LFB33
 3266 0954 10000000 		.4byte	.LFE33-.LFB33
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 124


 3267 0958 01       		.uleb128 0x1
 3268 0959 9C       		.byte	0x9c
 3269 095a 16       		.uleb128 0x16
 3270 095b C9000000 		.4byte	.LASF78
 3271 095f 01       		.byte	0x1
 3272 0960 8A0C     		.2byte	0xc8a
 3273 0962 00000000 		.4byte	.LFB34
 3274 0966 10000000 		.4byte	.LFE34-.LFB34
 3275 096a 01       		.uleb128 0x1
 3276 096b 9C       		.byte	0x9c
 3277 096c 10       		.uleb128 0x10
 3278 096d 43050000 		.4byte	.LASF79
 3279 0971 01       		.byte	0x1
 3280 0972 690C     		.2byte	0xc69
 3281 0974 00000000 		.4byte	.LFB32
 3282 0978 18000000 		.4byte	.LFE32-.LFB32
 3283 097c 01       		.uleb128 0x1
 3284 097d 9C       		.byte	0x9c
 3285 097e 8C090000 		.4byte	0x98c
 3286 0982 13       		.uleb128 0x13
 3287 0983 06000000 		.4byte	.LVL117
 3288 0987 5A090000 		.4byte	0x95a
 3289 098b 00       		.byte	0
 3290 098c 10       		.uleb128 0x10
 3291 098d 2A030000 		.4byte	.LASF80
 3292 0991 01       		.byte	0x1
 3293 0992 2E0C     		.2byte	0xc2e
 3294 0994 00000000 		.4byte	.LFB30
 3295 0998 1C000000 		.4byte	.LFE30-.LFB30
 3296 099c 01       		.uleb128 0x1
 3297 099d 9C       		.byte	0x9c
 3298 099e B5090000 		.4byte	0x9b5
 3299 09a2 13       		.uleb128 0x13
 3300 09a3 0E000000 		.4byte	.LVL118
 3301 09a7 B6080000 		.4byte	0x8b6
 3302 09ab 13       		.uleb128 0x13
 3303 09ac 16000000 		.4byte	.LVL119
 3304 09b0 6C090000 		.4byte	0x96c
 3305 09b4 00       		.byte	0
 3306 09b5 16       		.uleb128 0x16
 3307 09b6 A3050000 		.4byte	.LASF81
 3308 09ba 01       		.byte	0x1
 3309 09bb 9A0C     		.2byte	0xc9a
 3310 09bd 00000000 		.4byte	.LFB35
 3311 09c1 10000000 		.4byte	.LFE35-.LFB35
 3312 09c5 01       		.uleb128 0x1
 3313 09c6 9C       		.byte	0x9c
 3314 09c7 1A       		.uleb128 0x1a
 3315 09c8 37010000 		.4byte	0x137
 3316 09cc 00000000 		.4byte	.LFB36
 3317 09d0 10000000 		.4byte	.LFE36-.LFB36
 3318 09d4 01       		.uleb128 0x1
 3319 09d5 9C       		.byte	0x9c
 3320 09d6 E4090000 		.4byte	0x9e4
 3321 09da 1B       		.uleb128 0x1b
 3322 09db 44010000 		.4byte	0x144
 3323 09df 8D050000 		.4byte	.LLST47
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 125


 3324 09e3 00       		.byte	0
 3325 09e4 17       		.uleb128 0x17
 3326 09e5 2A010000 		.4byte	.LASF83
 3327 09e9 01       		.byte	0x1
 3328 09ea BB0C     		.2byte	0xcbb
 3329 09ec 83000000 		.4byte	0x83
 3330 09f0 00000000 		.4byte	.LFB37
 3331 09f4 10000000 		.4byte	.LFE37-.LFB37
 3332 09f8 01       		.uleb128 0x1
 3333 09f9 9C       		.byte	0x9c
 3334 09fa 17       		.uleb128 0x17
 3335 09fb 32040000 		.4byte	.LASF84
 3336 09ff 01       		.byte	0x1
 3337 0a00 CB0C     		.2byte	0xccb
 3338 0a02 83000000 		.4byte	0x83
 3339 0a06 00000000 		.4byte	.LFB38
 3340 0a0a 10000000 		.4byte	.LFE38-.LFB38
 3341 0a0e 01       		.uleb128 0x1
 3342 0a0f 9C       		.byte	0x9c
 3343 0a10 17       		.uleb128 0x17
 3344 0a11 0C020000 		.4byte	.LASF85
 3345 0a15 01       		.byte	0x1
 3346 0a16 1B0D     		.2byte	0xd1b
 3347 0a18 83000000 		.4byte	0x83
 3348 0a1c 00000000 		.4byte	.LFB39
 3349 0a20 10000000 		.4byte	.LFE39-.LFB39
 3350 0a24 01       		.uleb128 0x1
 3351 0a25 9C       		.byte	0x9c
 3352 0a26 2C       		.uleb128 0x2c
 3353 0a27 16010000 		.4byte	0x116
 3354 0a2b 00000000 		.4byte	.LFB43
 3355 0a2f 24000000 		.4byte	.LFE43-.LFB43
 3356 0a33 01       		.uleb128 0x1
 3357 0a34 9C       		.byte	0x9c
 3358 0a35 5B0A0000 		.4byte	0xa5b
 3359 0a39 2D       		.uleb128 0x2d
 3360 0a3a 23010000 		.4byte	0x123
 3361 0a3e 2E       		.uleb128 0x2e
 3362 0a3f 0C000000 		.4byte	.LBB60
 3363 0a43 10000000 		.4byte	.LBE60-.LBB60
 3364 0a47 510A0000 		.4byte	0xa51
 3365 0a4b 2D       		.uleb128 0x2d
 3366 0a4c 23010000 		.4byte	0x123
 3367 0a50 00       		.byte	0
 3368 0a51 13       		.uleb128 0x13
 3369 0a52 06000000 		.4byte	.LVL122
 3370 0a56 100A0000 		.4byte	0xa10
 3371 0a5a 00       		.byte	0
 3372 0a5b 18       		.uleb128 0x18
 3373 0a5c 2E010000 		.4byte	0x12e
 3374 0a60 00000000 		.4byte	.LFB40
 3375 0a64 0C000000 		.4byte	.LFE40-.LFB40
 3376 0a68 01       		.uleb128 0x1
 3377 0a69 9C       		.byte	0x9c
 3378 0a6a 15       		.uleb128 0x15
 3379 0a6b 6A050000 		.4byte	.LASF86
 3380 0a6f 01       		.byte	0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 126


 3381 0a70 4B0D     		.2byte	0xd4b
 3382 0a72 E7000000 		.4byte	0xe7
 3383 0a76 00000000 		.4byte	.LFB41
 3384 0a7a 10000000 		.4byte	.LFE41-.LFB41
 3385 0a7e 01       		.uleb128 0x1
 3386 0a7f 9C       		.byte	0x9c
 3387 0a80 B10A0000 		.4byte	0xab1
 3388 0a84 11       		.uleb128 0x11
 3389 0a85 D8020000 		.4byte	.LASF27
 3390 0a89 01       		.byte	0x1
 3391 0a8a 4B0D     		.2byte	0xd4b
 3392 0a8c 83000000 		.4byte	0x83
 3393 0a90 AE050000 		.4byte	.LLST48
 3394 0a94 14       		.uleb128 0x14
 3395 0a95 18040000 		.4byte	.LASF87
 3396 0a99 01       		.byte	0x1
 3397 0a9a 4B0D     		.2byte	0xd4b
 3398 0a9c E7000000 		.4byte	0xe7
 3399 0aa0 01       		.uleb128 0x1
 3400 0aa1 51       		.byte	0x51
 3401 0aa2 19       		.uleb128 0x19
 3402 0aa3 5A000000 		.4byte	.LASF88
 3403 0aa7 01       		.byte	0x1
 3404 0aa8 4D0D     		.2byte	0xd4d
 3405 0aaa E7000000 		.4byte	0xe7
 3406 0aae 01       		.uleb128 0x1
 3407 0aaf 50       		.byte	0x50
 3408 0ab0 00       		.byte	0
 3409 0ab1 15       		.uleb128 0x15
 3410 0ab2 53010000 		.4byte	.LASF89
 3411 0ab6 01       		.byte	0x1
 3412 0ab7 630D     		.2byte	0xd63
 3413 0ab9 E7000000 		.4byte	0xe7
 3414 0abd 00000000 		.4byte	.LFB42
 3415 0ac1 0C000000 		.4byte	.LFE42-.LFB42
 3416 0ac5 01       		.uleb128 0x1
 3417 0ac6 9C       		.byte	0x9c
 3418 0ac7 DC0A0000 		.4byte	0xadc
 3419 0acb 11       		.uleb128 0x11
 3420 0acc D8020000 		.4byte	.LASF27
 3421 0ad0 01       		.byte	0x1
 3422 0ad1 630D     		.2byte	0xd63
 3423 0ad3 83000000 		.4byte	0x83
 3424 0ad7 CF050000 		.4byte	.LLST49
 3425 0adb 00       		.byte	0
 3426 0adc 10       		.uleb128 0x10
 3427 0add FE010000 		.4byte	.LASF90
 3428 0ae1 01       		.byte	0x1
 3429 0ae2 900D     		.2byte	0xd90
 3430 0ae4 00000000 		.4byte	.LFB44
 3431 0ae8 74000000 		.4byte	.LFE44-.LFB44
 3432 0aec 01       		.uleb128 0x1
 3433 0aed 9C       		.byte	0x9c
 3434 0aee 010B0000 		.4byte	0xb01
 3435 0af2 14       		.uleb128 0x14
 3436 0af3 92050000 		.4byte	.LASF91
 3437 0af7 01       		.byte	0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 127


 3438 0af8 900D     		.2byte	0xd90
 3439 0afa 010B0000 		.4byte	0xb01
 3440 0afe 01       		.uleb128 0x1
 3441 0aff 50       		.byte	0x50
 3442 0b00 00       		.byte	0
 3443 0b01 06       		.uleb128 0x6
 3444 0b02 04       		.byte	0x4
 3445 0b03 83000000 		.4byte	0x83
 3446 0b07 2F       		.uleb128 0x2f
 3447 0b08 E7000000 		.4byte	0xe7
 3448 0b0c 170B0000 		.4byte	0xb17
 3449 0b10 30       		.uleb128 0x30
 3450 0b11 E0000000 		.4byte	0xe0
 3451 0b15 04       		.byte	0x4
 3452 0b16 00       		.byte	0
 3453 0b17 31       		.uleb128 0x31
 3454 0b18 7F050000 		.4byte	.LASF92
 3455 0b1c 01       		.byte	0x1
 3456 0b1d 22       		.byte	0x22
 3457 0b1e 070B0000 		.4byte	0xb07
 3458 0b22 05       		.uleb128 0x5
 3459 0b23 03       		.byte	0x3
 3460 0b24 00000000 		.4byte	CySysTickCallbacks
 3461 0b28 32       		.uleb128 0x32
 3462 0b29 44040000 		.4byte	.LASF93
 3463 0b2d 01       		.byte	0x1
 3464 0b2e 1B       		.byte	0x1b
 3465 0b2f 83000000 		.4byte	0x83
 3466 0b33 05       		.uleb128 0x5
 3467 0b34 03       		.byte	0x3
 3468 0b35 00000000 		.4byte	cydelayFreqHz
 3469 0b39 32       		.uleb128 0x32
 3470 0b3a 6E010000 		.4byte	.LASF94
 3471 0b3e 01       		.byte	0x1
 3472 0b3f 1C       		.byte	0x1c
 3473 0b40 83000000 		.4byte	0x83
 3474 0b44 05       		.uleb128 0x5
 3475 0b45 03       		.byte	0x3
 3476 0b46 00000000 		.4byte	cydelayFreqKhz
 3477 0b4a 32       		.uleb128 0x32
 3478 0b4b CD050000 		.4byte	.LASF95
 3479 0b4f 01       		.byte	0x1
 3480 0b50 1D       		.byte	0x1d
 3481 0b51 6B000000 		.4byte	0x6b
 3482 0b55 05       		.uleb128 0x5
 3483 0b56 03       		.byte	0x3
 3484 0b57 00000000 		.4byte	cydelayFreqMhz
 3485 0b5b 32       		.uleb128 0x32
 3486 0b5c DD010000 		.4byte	.LASF96
 3487 0b60 01       		.byte	0x1
 3488 0b61 1E       		.byte	0x1e
 3489 0b62 83000000 		.4byte	0x83
 3490 0b66 05       		.uleb128 0x5
 3491 0b67 03       		.byte	0x3
 3492 0b68 00000000 		.4byte	cydelay32kMs
 3493 0b6c 32       		.uleb128 0x32
 3494 0b6d 9B000000 		.4byte	.LASF97
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 128


 3495 0b71 01       		.byte	0x1
 3496 0b72 36       		.byte	0x36
 3497 0b73 83000000 		.4byte	0x83
 3498 0b77 05       		.uleb128 0x5
 3499 0b78 03       		.byte	0x3
 3500 0b79 00000000 		.4byte	CySysTickInitVar
 3501 0b7d 2F       		.uleb128 0x2f
 3502 0b7e 8D0B0000 		.4byte	0xb8d
 3503 0b82 8D0B0000 		.4byte	0xb8d
 3504 0b86 30       		.uleb128 0x30
 3505 0b87 E0000000 		.4byte	0xe0
 3506 0b8b 2D       		.byte	0x2d
 3507 0b8c 00       		.byte	0
 3508 0b8d 33       		.uleb128 0x33
 3509 0b8e 6B000000 		.4byte	0x6b
 3510 0b92 32       		.uleb128 0x32
 3511 0b93 21040000 		.4byte	.LASF98
 3512 0b97 01       		.byte	0x1
 3513 0b98 3B       		.byte	0x3b
 3514 0b99 A30B0000 		.4byte	0xba3
 3515 0b9d 05       		.uleb128 0x5
 3516 0b9e 03       		.byte	0x3
 3517 0b9f 00000000 		.4byte	cyImoFreqMhz2Reg
 3518 0ba3 33       		.uleb128 0x33
 3519 0ba4 7D0B0000 		.4byte	0xb7d
 3520 0ba8 32       		.uleb128 0x32
 3521 0ba9 40000000 		.4byte	.LASF99
 3522 0bad 01       		.byte	0x1
 3523 0bae 51       		.byte	0x51
 3524 0baf 83000000 		.4byte	0x83
 3525 0bb3 05       		.uleb128 0x5
 3526 0bb4 03       		.byte	0x3
 3527 0bb5 00000000 		.4byte	CySysClkPumpConfig
 3528 0bb9 34       		.uleb128 0x34
 3529 0bba 7B020000 		.4byte	.LASF100
 3530 0bbe 7B020000 		.4byte	.LASF100
 3531 0bc2 03       		.byte	0x3
 3532 0bc3 F8       		.byte	0xf8
 3533 0bc4 34       		.uleb128 0x34
 3534 0bc5 69040000 		.4byte	.LASF101
 3535 0bc9 69040000 		.4byte	.LASF101
 3536 0bcd 03       		.byte	0x3
 3537 0bce F9       		.byte	0xf9
 3538 0bcf 34       		.uleb128 0x34
 3539 0bd0 BC040000 		.4byte	.LASF102
 3540 0bd4 BC040000 		.4byte	.LASF102
 3541 0bd8 03       		.byte	0x3
 3542 0bd9 EF       		.byte	0xef
 3543 0bda 00       		.byte	0
 3544              		.section	.debug_abbrev,"",%progbits
 3545              	.Ldebug_abbrev0:
 3546 0000 01       		.uleb128 0x1
 3547 0001 11       		.uleb128 0x11
 3548 0002 01       		.byte	0x1
 3549 0003 25       		.uleb128 0x25
 3550 0004 0E       		.uleb128 0xe
 3551 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 129


 3552 0006 0B       		.uleb128 0xb
 3553 0007 03       		.uleb128 0x3
 3554 0008 0E       		.uleb128 0xe
 3555 0009 1B       		.uleb128 0x1b
 3556 000a 0E       		.uleb128 0xe
 3557 000b 55       		.uleb128 0x55
 3558 000c 17       		.uleb128 0x17
 3559 000d 11       		.uleb128 0x11
 3560 000e 01       		.uleb128 0x1
 3561 000f 10       		.uleb128 0x10
 3562 0010 17       		.uleb128 0x17
 3563 0011 00       		.byte	0
 3564 0012 00       		.byte	0
 3565 0013 02       		.uleb128 0x2
 3566 0014 24       		.uleb128 0x24
 3567 0015 00       		.byte	0
 3568 0016 0B       		.uleb128 0xb
 3569 0017 0B       		.uleb128 0xb
 3570 0018 3E       		.uleb128 0x3e
 3571 0019 0B       		.uleb128 0xb
 3572 001a 03       		.uleb128 0x3
 3573 001b 0E       		.uleb128 0xe
 3574 001c 00       		.byte	0
 3575 001d 00       		.byte	0
 3576 001e 03       		.uleb128 0x3
 3577 001f 24       		.uleb128 0x24
 3578 0020 00       		.byte	0
 3579 0021 0B       		.uleb128 0xb
 3580 0022 0B       		.uleb128 0xb
 3581 0023 3E       		.uleb128 0x3e
 3582 0024 0B       		.uleb128 0xb
 3583 0025 03       		.uleb128 0x3
 3584 0026 08       		.uleb128 0x8
 3585 0027 00       		.byte	0
 3586 0028 00       		.byte	0
 3587 0029 04       		.uleb128 0x4
 3588 002a 16       		.uleb128 0x16
 3589 002b 00       		.byte	0
 3590 002c 03       		.uleb128 0x3
 3591 002d 0E       		.uleb128 0xe
 3592 002e 3A       		.uleb128 0x3a
 3593 002f 0B       		.uleb128 0xb
 3594 0030 3B       		.uleb128 0x3b
 3595 0031 05       		.uleb128 0x5
 3596 0032 49       		.uleb128 0x49
 3597 0033 13       		.uleb128 0x13
 3598 0034 00       		.byte	0
 3599 0035 00       		.byte	0
 3600 0036 05       		.uleb128 0x5
 3601 0037 35       		.uleb128 0x35
 3602 0038 00       		.byte	0
 3603 0039 49       		.uleb128 0x49
 3604 003a 13       		.uleb128 0x13
 3605 003b 00       		.byte	0
 3606 003c 00       		.byte	0
 3607 003d 06       		.uleb128 0x6
 3608 003e 0F       		.uleb128 0xf
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 130


 3609 003f 00       		.byte	0
 3610 0040 0B       		.uleb128 0xb
 3611 0041 0B       		.uleb128 0xb
 3612 0042 49       		.uleb128 0x49
 3613 0043 13       		.uleb128 0x13
 3614 0044 00       		.byte	0
 3615 0045 00       		.byte	0
 3616 0046 07       		.uleb128 0x7
 3617 0047 15       		.uleb128 0x15
 3618 0048 00       		.byte	0
 3619 0049 27       		.uleb128 0x27
 3620 004a 19       		.uleb128 0x19
 3621 004b 00       		.byte	0
 3622 004c 00       		.byte	0
 3623 004d 08       		.uleb128 0x8
 3624 004e 2E       		.uleb128 0x2e
 3625 004f 01       		.byte	0x1
 3626 0050 3F       		.uleb128 0x3f
 3627 0051 19       		.uleb128 0x19
 3628 0052 03       		.uleb128 0x3
 3629 0053 0E       		.uleb128 0xe
 3630 0054 3A       		.uleb128 0x3a
 3631 0055 0B       		.uleb128 0xb
 3632 0056 3B       		.uleb128 0x3b
 3633 0057 05       		.uleb128 0x5
 3634 0058 27       		.uleb128 0x27
 3635 0059 19       		.uleb128 0x19
 3636 005a 20       		.uleb128 0x20
 3637 005b 0B       		.uleb128 0xb
 3638 005c 01       		.uleb128 0x1
 3639 005d 13       		.uleb128 0x13
 3640 005e 00       		.byte	0
 3641 005f 00       		.byte	0
 3642 0060 09       		.uleb128 0x9
 3643 0061 05       		.uleb128 0x5
 3644 0062 00       		.byte	0
 3645 0063 03       		.uleb128 0x3
 3646 0064 0E       		.uleb128 0xe
 3647 0065 3A       		.uleb128 0x3a
 3648 0066 0B       		.uleb128 0xb
 3649 0067 3B       		.uleb128 0x3b
 3650 0068 05       		.uleb128 0x5
 3651 0069 49       		.uleb128 0x49
 3652 006a 13       		.uleb128 0x13
 3653 006b 00       		.byte	0
 3654 006c 00       		.byte	0
 3655 006d 0A       		.uleb128 0xa
 3656 006e 2E       		.uleb128 0x2e
 3657 006f 00       		.byte	0
 3658 0070 3F       		.uleb128 0x3f
 3659 0071 19       		.uleb128 0x19
 3660 0072 03       		.uleb128 0x3
 3661 0073 0E       		.uleb128 0xe
 3662 0074 3A       		.uleb128 0x3a
 3663 0075 0B       		.uleb128 0xb
 3664 0076 3B       		.uleb128 0x3b
 3665 0077 05       		.uleb128 0x5
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 131


 3666 0078 27       		.uleb128 0x27
 3667 0079 19       		.uleb128 0x19
 3668 007a 20       		.uleb128 0x20
 3669 007b 0B       		.uleb128 0xb
 3670 007c 00       		.byte	0
 3671 007d 00       		.byte	0
 3672 007e 0B       		.uleb128 0xb
 3673 007f 2E       		.uleb128 0x2e
 3674 0080 01       		.byte	0x1
 3675 0081 03       		.uleb128 0x3
 3676 0082 0E       		.uleb128 0xe
 3677 0083 3A       		.uleb128 0x3a
 3678 0084 0B       		.uleb128 0xb
 3679 0085 3B       		.uleb128 0x3b
 3680 0086 05       		.uleb128 0x5
 3681 0087 27       		.uleb128 0x27
 3682 0088 19       		.uleb128 0x19
 3683 0089 20       		.uleb128 0x20
 3684 008a 0B       		.uleb128 0xb
 3685 008b 01       		.uleb128 0x1
 3686 008c 13       		.uleb128 0x13
 3687 008d 00       		.byte	0
 3688 008e 00       		.byte	0
 3689 008f 0C       		.uleb128 0xc
 3690 0090 34       		.uleb128 0x34
 3691 0091 00       		.byte	0
 3692 0092 03       		.uleb128 0x3
 3693 0093 08       		.uleb128 0x8
 3694 0094 3A       		.uleb128 0x3a
 3695 0095 0B       		.uleb128 0xb
 3696 0096 3B       		.uleb128 0x3b
 3697 0097 05       		.uleb128 0x5
 3698 0098 49       		.uleb128 0x49
 3699 0099 13       		.uleb128 0x13
 3700 009a 00       		.byte	0
 3701 009b 00       		.byte	0
 3702 009c 0D       		.uleb128 0xd
 3703 009d 2E       		.uleb128 0x2e
 3704 009e 01       		.byte	0x1
 3705 009f 3F       		.uleb128 0x3f
 3706 00a0 19       		.uleb128 0x19
 3707 00a1 03       		.uleb128 0x3
 3708 00a2 0E       		.uleb128 0xe
 3709 00a3 3A       		.uleb128 0x3a
 3710 00a4 0B       		.uleb128 0xb
 3711 00a5 3B       		.uleb128 0x3b
 3712 00a6 05       		.uleb128 0x5
 3713 00a7 27       		.uleb128 0x27
 3714 00a8 19       		.uleb128 0x19
 3715 00a9 49       		.uleb128 0x49
 3716 00aa 13       		.uleb128 0x13
 3717 00ab 20       		.uleb128 0x20
 3718 00ac 0B       		.uleb128 0xb
 3719 00ad 01       		.uleb128 0x1
 3720 00ae 13       		.uleb128 0x13
 3721 00af 00       		.byte	0
 3722 00b0 00       		.byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 132


 3723 00b1 0E       		.uleb128 0xe
 3724 00b2 34       		.uleb128 0x34
 3725 00b3 00       		.byte	0
 3726 00b4 03       		.uleb128 0x3
 3727 00b5 0E       		.uleb128 0xe
 3728 00b6 3A       		.uleb128 0x3a
 3729 00b7 0B       		.uleb128 0xb
 3730 00b8 3B       		.uleb128 0x3b
 3731 00b9 05       		.uleb128 0x5
 3732 00ba 49       		.uleb128 0x49
 3733 00bb 13       		.uleb128 0x13
 3734 00bc 00       		.byte	0
 3735 00bd 00       		.byte	0
 3736 00be 0F       		.uleb128 0xf
 3737 00bf 2E       		.uleb128 0x2e
 3738 00c0 00       		.byte	0
 3739 00c1 3F       		.uleb128 0x3f
 3740 00c2 19       		.uleb128 0x19
 3741 00c3 03       		.uleb128 0x3
 3742 00c4 0E       		.uleb128 0xe
 3743 00c5 3A       		.uleb128 0x3a
 3744 00c6 0B       		.uleb128 0xb
 3745 00c7 3B       		.uleb128 0x3b
 3746 00c8 0B       		.uleb128 0xb
 3747 00c9 27       		.uleb128 0x27
 3748 00ca 19       		.uleb128 0x19
 3749 00cb 11       		.uleb128 0x11
 3750 00cc 01       		.uleb128 0x1
 3751 00cd 12       		.uleb128 0x12
 3752 00ce 06       		.uleb128 0x6
 3753 00cf 40       		.uleb128 0x40
 3754 00d0 18       		.uleb128 0x18
 3755 00d1 9742     		.uleb128 0x2117
 3756 00d3 19       		.uleb128 0x19
 3757 00d4 00       		.byte	0
 3758 00d5 00       		.byte	0
 3759 00d6 10       		.uleb128 0x10
 3760 00d7 2E       		.uleb128 0x2e
 3761 00d8 01       		.byte	0x1
 3762 00d9 3F       		.uleb128 0x3f
 3763 00da 19       		.uleb128 0x19
 3764 00db 03       		.uleb128 0x3
 3765 00dc 0E       		.uleb128 0xe
 3766 00dd 3A       		.uleb128 0x3a
 3767 00de 0B       		.uleb128 0xb
 3768 00df 3B       		.uleb128 0x3b
 3769 00e0 05       		.uleb128 0x5
 3770 00e1 27       		.uleb128 0x27
 3771 00e2 19       		.uleb128 0x19
 3772 00e3 11       		.uleb128 0x11
 3773 00e4 01       		.uleb128 0x1
 3774 00e5 12       		.uleb128 0x12
 3775 00e6 06       		.uleb128 0x6
 3776 00e7 40       		.uleb128 0x40
 3777 00e8 18       		.uleb128 0x18
 3778 00e9 9742     		.uleb128 0x2117
 3779 00eb 19       		.uleb128 0x19
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 133


 3780 00ec 01       		.uleb128 0x1
 3781 00ed 13       		.uleb128 0x13
 3782 00ee 00       		.byte	0
 3783 00ef 00       		.byte	0
 3784 00f0 11       		.uleb128 0x11
 3785 00f1 05       		.uleb128 0x5
 3786 00f2 00       		.byte	0
 3787 00f3 03       		.uleb128 0x3
 3788 00f4 0E       		.uleb128 0xe
 3789 00f5 3A       		.uleb128 0x3a
 3790 00f6 0B       		.uleb128 0xb
 3791 00f7 3B       		.uleb128 0x3b
 3792 00f8 05       		.uleb128 0x5
 3793 00f9 49       		.uleb128 0x49
 3794 00fa 13       		.uleb128 0x13
 3795 00fb 02       		.uleb128 0x2
 3796 00fc 17       		.uleb128 0x17
 3797 00fd 00       		.byte	0
 3798 00fe 00       		.byte	0
 3799 00ff 12       		.uleb128 0x12
 3800 0100 34       		.uleb128 0x34
 3801 0101 00       		.byte	0
 3802 0102 03       		.uleb128 0x3
 3803 0103 0E       		.uleb128 0xe
 3804 0104 3A       		.uleb128 0x3a
 3805 0105 0B       		.uleb128 0xb
 3806 0106 3B       		.uleb128 0x3b
 3807 0107 05       		.uleb128 0x5
 3808 0108 49       		.uleb128 0x49
 3809 0109 13       		.uleb128 0x13
 3810 010a 02       		.uleb128 0x2
 3811 010b 17       		.uleb128 0x17
 3812 010c 00       		.byte	0
 3813 010d 00       		.byte	0
 3814 010e 13       		.uleb128 0x13
 3815 010f 898201   		.uleb128 0x4109
 3816 0112 00       		.byte	0
 3817 0113 11       		.uleb128 0x11
 3818 0114 01       		.uleb128 0x1
 3819 0115 31       		.uleb128 0x31
 3820 0116 13       		.uleb128 0x13
 3821 0117 00       		.byte	0
 3822 0118 00       		.byte	0
 3823 0119 14       		.uleb128 0x14
 3824 011a 05       		.uleb128 0x5
 3825 011b 00       		.byte	0
 3826 011c 03       		.uleb128 0x3
 3827 011d 0E       		.uleb128 0xe
 3828 011e 3A       		.uleb128 0x3a
 3829 011f 0B       		.uleb128 0xb
 3830 0120 3B       		.uleb128 0x3b
 3831 0121 05       		.uleb128 0x5
 3832 0122 49       		.uleb128 0x49
 3833 0123 13       		.uleb128 0x13
 3834 0124 02       		.uleb128 0x2
 3835 0125 18       		.uleb128 0x18
 3836 0126 00       		.byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 134


 3837 0127 00       		.byte	0
 3838 0128 15       		.uleb128 0x15
 3839 0129 2E       		.uleb128 0x2e
 3840 012a 01       		.byte	0x1
 3841 012b 3F       		.uleb128 0x3f
 3842 012c 19       		.uleb128 0x19
 3843 012d 03       		.uleb128 0x3
 3844 012e 0E       		.uleb128 0xe
 3845 012f 3A       		.uleb128 0x3a
 3846 0130 0B       		.uleb128 0xb
 3847 0131 3B       		.uleb128 0x3b
 3848 0132 05       		.uleb128 0x5
 3849 0133 27       		.uleb128 0x27
 3850 0134 19       		.uleb128 0x19
 3851 0135 49       		.uleb128 0x49
 3852 0136 13       		.uleb128 0x13
 3853 0137 11       		.uleb128 0x11
 3854 0138 01       		.uleb128 0x1
 3855 0139 12       		.uleb128 0x12
 3856 013a 06       		.uleb128 0x6
 3857 013b 40       		.uleb128 0x40
 3858 013c 18       		.uleb128 0x18
 3859 013d 9742     		.uleb128 0x2117
 3860 013f 19       		.uleb128 0x19
 3861 0140 01       		.uleb128 0x1
 3862 0141 13       		.uleb128 0x13
 3863 0142 00       		.byte	0
 3864 0143 00       		.byte	0
 3865 0144 16       		.uleb128 0x16
 3866 0145 2E       		.uleb128 0x2e
 3867 0146 00       		.byte	0
 3868 0147 3F       		.uleb128 0x3f
 3869 0148 19       		.uleb128 0x19
 3870 0149 03       		.uleb128 0x3
 3871 014a 0E       		.uleb128 0xe
 3872 014b 3A       		.uleb128 0x3a
 3873 014c 0B       		.uleb128 0xb
 3874 014d 3B       		.uleb128 0x3b
 3875 014e 05       		.uleb128 0x5
 3876 014f 27       		.uleb128 0x27
 3877 0150 19       		.uleb128 0x19
 3878 0151 11       		.uleb128 0x11
 3879 0152 01       		.uleb128 0x1
 3880 0153 12       		.uleb128 0x12
 3881 0154 06       		.uleb128 0x6
 3882 0155 40       		.uleb128 0x40
 3883 0156 18       		.uleb128 0x18
 3884 0157 9742     		.uleb128 0x2117
 3885 0159 19       		.uleb128 0x19
 3886 015a 00       		.byte	0
 3887 015b 00       		.byte	0
 3888 015c 17       		.uleb128 0x17
 3889 015d 2E       		.uleb128 0x2e
 3890 015e 00       		.byte	0
 3891 015f 3F       		.uleb128 0x3f
 3892 0160 19       		.uleb128 0x19
 3893 0161 03       		.uleb128 0x3
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 135


 3894 0162 0E       		.uleb128 0xe
 3895 0163 3A       		.uleb128 0x3a
 3896 0164 0B       		.uleb128 0xb
 3897 0165 3B       		.uleb128 0x3b
 3898 0166 05       		.uleb128 0x5
 3899 0167 27       		.uleb128 0x27
 3900 0168 19       		.uleb128 0x19
 3901 0169 49       		.uleb128 0x49
 3902 016a 13       		.uleb128 0x13
 3903 016b 11       		.uleb128 0x11
 3904 016c 01       		.uleb128 0x1
 3905 016d 12       		.uleb128 0x12
 3906 016e 06       		.uleb128 0x6
 3907 016f 40       		.uleb128 0x40
 3908 0170 18       		.uleb128 0x18
 3909 0171 9742     		.uleb128 0x2117
 3910 0173 19       		.uleb128 0x19
 3911 0174 00       		.byte	0
 3912 0175 00       		.byte	0
 3913 0176 18       		.uleb128 0x18
 3914 0177 2E       		.uleb128 0x2e
 3915 0178 00       		.byte	0
 3916 0179 31       		.uleb128 0x31
 3917 017a 13       		.uleb128 0x13
 3918 017b 11       		.uleb128 0x11
 3919 017c 01       		.uleb128 0x1
 3920 017d 12       		.uleb128 0x12
 3921 017e 06       		.uleb128 0x6
 3922 017f 40       		.uleb128 0x40
 3923 0180 18       		.uleb128 0x18
 3924 0181 9742     		.uleb128 0x2117
 3925 0183 19       		.uleb128 0x19
 3926 0184 00       		.byte	0
 3927 0185 00       		.byte	0
 3928 0186 19       		.uleb128 0x19
 3929 0187 34       		.uleb128 0x34
 3930 0188 00       		.byte	0
 3931 0189 03       		.uleb128 0x3
 3932 018a 0E       		.uleb128 0xe
 3933 018b 3A       		.uleb128 0x3a
 3934 018c 0B       		.uleb128 0xb
 3935 018d 3B       		.uleb128 0x3b
 3936 018e 05       		.uleb128 0x5
 3937 018f 49       		.uleb128 0x49
 3938 0190 13       		.uleb128 0x13
 3939 0191 02       		.uleb128 0x2
 3940 0192 18       		.uleb128 0x18
 3941 0193 00       		.byte	0
 3942 0194 00       		.byte	0
 3943 0195 1A       		.uleb128 0x1a
 3944 0196 2E       		.uleb128 0x2e
 3945 0197 01       		.byte	0x1
 3946 0198 31       		.uleb128 0x31
 3947 0199 13       		.uleb128 0x13
 3948 019a 11       		.uleb128 0x11
 3949 019b 01       		.uleb128 0x1
 3950 019c 12       		.uleb128 0x12
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 136


 3951 019d 06       		.uleb128 0x6
 3952 019e 40       		.uleb128 0x40
 3953 019f 18       		.uleb128 0x18
 3954 01a0 9742     		.uleb128 0x2117
 3955 01a2 19       		.uleb128 0x19
 3956 01a3 01       		.uleb128 0x1
 3957 01a4 13       		.uleb128 0x13
 3958 01a5 00       		.byte	0
 3959 01a6 00       		.byte	0
 3960 01a7 1B       		.uleb128 0x1b
 3961 01a8 05       		.uleb128 0x5
 3962 01a9 00       		.byte	0
 3963 01aa 31       		.uleb128 0x31
 3964 01ab 13       		.uleb128 0x13
 3965 01ac 02       		.uleb128 0x2
 3966 01ad 17       		.uleb128 0x17
 3967 01ae 00       		.byte	0
 3968 01af 00       		.byte	0
 3969 01b0 1C       		.uleb128 0x1c
 3970 01b1 05       		.uleb128 0x5
 3971 01b2 00       		.byte	0
 3972 01b3 31       		.uleb128 0x31
 3973 01b4 13       		.uleb128 0x13
 3974 01b5 02       		.uleb128 0x2
 3975 01b6 18       		.uleb128 0x18
 3976 01b7 00       		.byte	0
 3977 01b8 00       		.byte	0
 3978 01b9 1D       		.uleb128 0x1d
 3979 01ba 34       		.uleb128 0x34
 3980 01bb 00       		.byte	0
 3981 01bc 31       		.uleb128 0x31
 3982 01bd 13       		.uleb128 0x13
 3983 01be 02       		.uleb128 0x2
 3984 01bf 18       		.uleb128 0x18
 3985 01c0 00       		.byte	0
 3986 01c1 00       		.byte	0
 3987 01c2 1E       		.uleb128 0x1e
 3988 01c3 34       		.uleb128 0x34
 3989 01c4 00       		.byte	0
 3990 01c5 31       		.uleb128 0x31
 3991 01c6 13       		.uleb128 0x13
 3992 01c7 1C       		.uleb128 0x1c
 3993 01c8 06       		.uleb128 0x6
 3994 01c9 00       		.byte	0
 3995 01ca 00       		.byte	0
 3996 01cb 1F       		.uleb128 0x1f
 3997 01cc 1D       		.uleb128 0x1d
 3998 01cd 01       		.byte	0x1
 3999 01ce 31       		.uleb128 0x31
 4000 01cf 13       		.uleb128 0x13
 4001 01d0 11       		.uleb128 0x11
 4002 01d1 01       		.uleb128 0x1
 4003 01d2 12       		.uleb128 0x12
 4004 01d3 06       		.uleb128 0x6
 4005 01d4 58       		.uleb128 0x58
 4006 01d5 0B       		.uleb128 0xb
 4007 01d6 59       		.uleb128 0x59
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 137


 4008 01d7 05       		.uleb128 0x5
 4009 01d8 00       		.byte	0
 4010 01d9 00       		.byte	0
 4011 01da 20       		.uleb128 0x20
 4012 01db 34       		.uleb128 0x34
 4013 01dc 00       		.byte	0
 4014 01dd 03       		.uleb128 0x3
 4015 01de 0E       		.uleb128 0xe
 4016 01df 3A       		.uleb128 0x3a
 4017 01e0 0B       		.uleb128 0xb
 4018 01e1 3B       		.uleb128 0x3b
 4019 01e2 05       		.uleb128 0x5
 4020 01e3 49       		.uleb128 0x49
 4021 01e4 13       		.uleb128 0x13
 4022 01e5 1C       		.uleb128 0x1c
 4023 01e6 06       		.uleb128 0x6
 4024 01e7 00       		.byte	0
 4025 01e8 00       		.byte	0
 4026 01e9 21       		.uleb128 0x21
 4027 01ea 1D       		.uleb128 0x1d
 4028 01eb 01       		.byte	0x1
 4029 01ec 31       		.uleb128 0x31
 4030 01ed 13       		.uleb128 0x13
 4031 01ee 11       		.uleb128 0x11
 4032 01ef 01       		.uleb128 0x1
 4033 01f0 12       		.uleb128 0x12
 4034 01f1 06       		.uleb128 0x6
 4035 01f2 58       		.uleb128 0x58
 4036 01f3 0B       		.uleb128 0xb
 4037 01f4 59       		.uleb128 0x59
 4038 01f5 05       		.uleb128 0x5
 4039 01f6 01       		.uleb128 0x1
 4040 01f7 13       		.uleb128 0x13
 4041 01f8 00       		.byte	0
 4042 01f9 00       		.byte	0
 4043 01fa 22       		.uleb128 0x22
 4044 01fb 898201   		.uleb128 0x4109
 4045 01fe 01       		.byte	0x1
 4046 01ff 11       		.uleb128 0x11
 4047 0200 01       		.uleb128 0x1
 4048 0201 31       		.uleb128 0x31
 4049 0202 13       		.uleb128 0x13
 4050 0203 01       		.uleb128 0x1
 4051 0204 13       		.uleb128 0x13
 4052 0205 00       		.byte	0
 4053 0206 00       		.byte	0
 4054 0207 23       		.uleb128 0x23
 4055 0208 8A8201   		.uleb128 0x410a
 4056 020b 00       		.byte	0
 4057 020c 02       		.uleb128 0x2
 4058 020d 18       		.uleb128 0x18
 4059 020e 9142     		.uleb128 0x2111
 4060 0210 18       		.uleb128 0x18
 4061 0211 00       		.byte	0
 4062 0212 00       		.byte	0
 4063 0213 24       		.uleb128 0x24
 4064 0214 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 138


 4065 0217 01       		.byte	0x1
 4066 0218 11       		.uleb128 0x11
 4067 0219 01       		.uleb128 0x1
 4068 021a 31       		.uleb128 0x31
 4069 021b 13       		.uleb128 0x13
 4070 021c 00       		.byte	0
 4071 021d 00       		.byte	0
 4072 021e 25       		.uleb128 0x25
 4073 021f 1D       		.uleb128 0x1d
 4074 0220 00       		.byte	0
 4075 0221 31       		.uleb128 0x31
 4076 0222 13       		.uleb128 0x13
 4077 0223 52       		.uleb128 0x52
 4078 0224 01       		.uleb128 0x1
 4079 0225 55       		.uleb128 0x55
 4080 0226 17       		.uleb128 0x17
 4081 0227 58       		.uleb128 0x58
 4082 0228 0B       		.uleb128 0xb
 4083 0229 59       		.uleb128 0x59
 4084 022a 05       		.uleb128 0x5
 4085 022b 00       		.byte	0
 4086 022c 00       		.byte	0
 4087 022d 26       		.uleb128 0x26
 4088 022e 2E       		.uleb128 0x2e
 4089 022f 01       		.byte	0x1
 4090 0230 3F       		.uleb128 0x3f
 4091 0231 19       		.uleb128 0x19
 4092 0232 03       		.uleb128 0x3
 4093 0233 0E       		.uleb128 0xe
 4094 0234 3A       		.uleb128 0x3a
 4095 0235 0B       		.uleb128 0xb
 4096 0236 3B       		.uleb128 0x3b
 4097 0237 05       		.uleb128 0x5
 4098 0238 27       		.uleb128 0x27
 4099 0239 19       		.uleb128 0x19
 4100 023a 11       		.uleb128 0x11
 4101 023b 01       		.uleb128 0x1
 4102 023c 12       		.uleb128 0x12
 4103 023d 06       		.uleb128 0x6
 4104 023e 40       		.uleb128 0x40
 4105 023f 18       		.uleb128 0x18
 4106 0240 9642     		.uleb128 0x2116
 4107 0242 19       		.uleb128 0x19
 4108 0243 01       		.uleb128 0x1
 4109 0244 13       		.uleb128 0x13
 4110 0245 00       		.byte	0
 4111 0246 00       		.byte	0
 4112 0247 27       		.uleb128 0x27
 4113 0248 34       		.uleb128 0x34
 4114 0249 00       		.byte	0
 4115 024a 03       		.uleb128 0x3
 4116 024b 08       		.uleb128 0x8
 4117 024c 3A       		.uleb128 0x3a
 4118 024d 0B       		.uleb128 0xb
 4119 024e 3B       		.uleb128 0x3b
 4120 024f 05       		.uleb128 0x5
 4121 0250 49       		.uleb128 0x49
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 139


 4122 0251 13       		.uleb128 0x13
 4123 0252 02       		.uleb128 0x2
 4124 0253 17       		.uleb128 0x17
 4125 0254 00       		.byte	0
 4126 0255 00       		.byte	0
 4127 0256 28       		.uleb128 0x28
 4128 0257 1D       		.uleb128 0x1d
 4129 0258 01       		.byte	0x1
 4130 0259 31       		.uleb128 0x31
 4131 025a 13       		.uleb128 0x13
 4132 025b 52       		.uleb128 0x52
 4133 025c 01       		.uleb128 0x1
 4134 025d 55       		.uleb128 0x55
 4135 025e 17       		.uleb128 0x17
 4136 025f 58       		.uleb128 0x58
 4137 0260 0B       		.uleb128 0xb
 4138 0261 59       		.uleb128 0x59
 4139 0262 05       		.uleb128 0x5
 4140 0263 01       		.uleb128 0x1
 4141 0264 13       		.uleb128 0x13
 4142 0265 00       		.byte	0
 4143 0266 00       		.byte	0
 4144 0267 29       		.uleb128 0x29
 4145 0268 0B       		.uleb128 0xb
 4146 0269 01       		.byte	0x1
 4147 026a 55       		.uleb128 0x55
 4148 026b 17       		.uleb128 0x17
 4149 026c 00       		.byte	0
 4150 026d 00       		.byte	0
 4151 026e 2A       		.uleb128 0x2a
 4152 026f 34       		.uleb128 0x34
 4153 0270 00       		.byte	0
 4154 0271 31       		.uleb128 0x31
 4155 0272 13       		.uleb128 0x13
 4156 0273 02       		.uleb128 0x2
 4157 0274 17       		.uleb128 0x17
 4158 0275 00       		.byte	0
 4159 0276 00       		.byte	0
 4160 0277 2B       		.uleb128 0x2b
 4161 0278 1D       		.uleb128 0x1d
 4162 0279 00       		.byte	0
 4163 027a 31       		.uleb128 0x31
 4164 027b 13       		.uleb128 0x13
 4165 027c 11       		.uleb128 0x11
 4166 027d 01       		.uleb128 0x1
 4167 027e 12       		.uleb128 0x12
 4168 027f 06       		.uleb128 0x6
 4169 0280 58       		.uleb128 0x58
 4170 0281 0B       		.uleb128 0xb
 4171 0282 59       		.uleb128 0x59
 4172 0283 05       		.uleb128 0x5
 4173 0284 00       		.byte	0
 4174 0285 00       		.byte	0
 4175 0286 2C       		.uleb128 0x2c
 4176 0287 2E       		.uleb128 0x2e
 4177 0288 01       		.byte	0x1
 4178 0289 31       		.uleb128 0x31
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 140


 4179 028a 13       		.uleb128 0x13
 4180 028b 11       		.uleb128 0x11
 4181 028c 01       		.uleb128 0x1
 4182 028d 12       		.uleb128 0x12
 4183 028e 06       		.uleb128 0x6
 4184 028f 40       		.uleb128 0x40
 4185 0290 18       		.uleb128 0x18
 4186 0291 9642     		.uleb128 0x2116
 4187 0293 19       		.uleb128 0x19
 4188 0294 01       		.uleb128 0x1
 4189 0295 13       		.uleb128 0x13
 4190 0296 00       		.byte	0
 4191 0297 00       		.byte	0
 4192 0298 2D       		.uleb128 0x2d
 4193 0299 34       		.uleb128 0x34
 4194 029a 00       		.byte	0
 4195 029b 31       		.uleb128 0x31
 4196 029c 13       		.uleb128 0x13
 4197 029d 00       		.byte	0
 4198 029e 00       		.byte	0
 4199 029f 2E       		.uleb128 0x2e
 4200 02a0 0B       		.uleb128 0xb
 4201 02a1 01       		.byte	0x1
 4202 02a2 11       		.uleb128 0x11
 4203 02a3 01       		.uleb128 0x1
 4204 02a4 12       		.uleb128 0x12
 4205 02a5 06       		.uleb128 0x6
 4206 02a6 01       		.uleb128 0x1
 4207 02a7 13       		.uleb128 0x13
 4208 02a8 00       		.byte	0
 4209 02a9 00       		.byte	0
 4210 02aa 2F       		.uleb128 0x2f
 4211 02ab 01       		.uleb128 0x1
 4212 02ac 01       		.byte	0x1
 4213 02ad 49       		.uleb128 0x49
 4214 02ae 13       		.uleb128 0x13
 4215 02af 01       		.uleb128 0x1
 4216 02b0 13       		.uleb128 0x13
 4217 02b1 00       		.byte	0
 4218 02b2 00       		.byte	0
 4219 02b3 30       		.uleb128 0x30
 4220 02b4 21       		.uleb128 0x21
 4221 02b5 00       		.byte	0
 4222 02b6 49       		.uleb128 0x49
 4223 02b7 13       		.uleb128 0x13
 4224 02b8 2F       		.uleb128 0x2f
 4225 02b9 0B       		.uleb128 0xb
 4226 02ba 00       		.byte	0
 4227 02bb 00       		.byte	0
 4228 02bc 31       		.uleb128 0x31
 4229 02bd 34       		.uleb128 0x34
 4230 02be 00       		.byte	0
 4231 02bf 03       		.uleb128 0x3
 4232 02c0 0E       		.uleb128 0xe
 4233 02c1 3A       		.uleb128 0x3a
 4234 02c2 0B       		.uleb128 0xb
 4235 02c3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 141


 4236 02c4 0B       		.uleb128 0xb
 4237 02c5 49       		.uleb128 0x49
 4238 02c6 13       		.uleb128 0x13
 4239 02c7 02       		.uleb128 0x2
 4240 02c8 18       		.uleb128 0x18
 4241 02c9 00       		.byte	0
 4242 02ca 00       		.byte	0
 4243 02cb 32       		.uleb128 0x32
 4244 02cc 34       		.uleb128 0x34
 4245 02cd 00       		.byte	0
 4246 02ce 03       		.uleb128 0x3
 4247 02cf 0E       		.uleb128 0xe
 4248 02d0 3A       		.uleb128 0x3a
 4249 02d1 0B       		.uleb128 0xb
 4250 02d2 3B       		.uleb128 0x3b
 4251 02d3 0B       		.uleb128 0xb
 4252 02d4 49       		.uleb128 0x49
 4253 02d5 13       		.uleb128 0x13
 4254 02d6 3F       		.uleb128 0x3f
 4255 02d7 19       		.uleb128 0x19
 4256 02d8 02       		.uleb128 0x2
 4257 02d9 18       		.uleb128 0x18
 4258 02da 00       		.byte	0
 4259 02db 00       		.byte	0
 4260 02dc 33       		.uleb128 0x33
 4261 02dd 26       		.uleb128 0x26
 4262 02de 00       		.byte	0
 4263 02df 49       		.uleb128 0x49
 4264 02e0 13       		.uleb128 0x13
 4265 02e1 00       		.byte	0
 4266 02e2 00       		.byte	0
 4267 02e3 34       		.uleb128 0x34
 4268 02e4 2E       		.uleb128 0x2e
 4269 02e5 00       		.byte	0
 4270 02e6 3F       		.uleb128 0x3f
 4271 02e7 19       		.uleb128 0x19
 4272 02e8 3C       		.uleb128 0x3c
 4273 02e9 19       		.uleb128 0x19
 4274 02ea 6E       		.uleb128 0x6e
 4275 02eb 0E       		.uleb128 0xe
 4276 02ec 03       		.uleb128 0x3
 4277 02ed 0E       		.uleb128 0xe
 4278 02ee 3A       		.uleb128 0x3a
 4279 02ef 0B       		.uleb128 0xb
 4280 02f0 3B       		.uleb128 0x3b
 4281 02f1 0B       		.uleb128 0xb
 4282 02f2 00       		.byte	0
 4283 02f3 00       		.byte	0
 4284 02f4 00       		.byte	0
 4285              		.section	.debug_loc,"",%progbits
 4286              	.Ldebug_loc0:
 4287              	.LLST0:
 4288 0000 00000000 		.4byte	.LVL0
 4289 0004 07000000 		.4byte	.LVL1-1
 4290 0008 0100     		.2byte	0x1
 4291 000a 50       		.byte	0x50
 4292 000b 07000000 		.4byte	.LVL1-1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 142


 4293 000f 1A000000 		.4byte	.LVL5
 4294 0013 0100     		.2byte	0x1
 4295 0015 54       		.byte	0x54
 4296 0016 1A000000 		.4byte	.LVL5
 4297 001a 20000000 		.4byte	.LFE2
 4298 001e 0400     		.2byte	0x4
 4299 0020 F3       		.byte	0xf3
 4300 0021 01       		.uleb128 0x1
 4301 0022 50       		.byte	0x50
 4302 0023 9F       		.byte	0x9f
 4303 0024 00000000 		.4byte	0
 4304 0028 00000000 		.4byte	0
 4305              	.LLST1:
 4306 002c 08000000 		.4byte	.LVL1
 4307 0030 19000000 		.4byte	.LVL4-1
 4308 0034 0100     		.2byte	0x1
 4309 0036 50       		.byte	0x50
 4310 0037 00000000 		.4byte	0
 4311 003b 00000000 		.4byte	0
 4312              	.LLST2:
 4313 003f 10000000 		.4byte	.LVL2
 4314 0043 14000000 		.4byte	.LVL3
 4315 0047 0100     		.2byte	0x1
 4316 0049 52       		.byte	0x52
 4317 004a 14000000 		.4byte	.LVL3
 4318 004e 19000000 		.4byte	.LVL4-1
 4319 0052 0100     		.2byte	0x1
 4320 0054 53       		.byte	0x53
 4321 0055 00000000 		.4byte	0
 4322 0059 00000000 		.4byte	0
 4323              	.LLST3:
 4324 005d 06000000 		.4byte	.LVL7
 4325 0061 0D000000 		.4byte	.LVL9-1
 4326 0065 0100     		.2byte	0x1
 4327 0067 50       		.byte	0x50
 4328 0068 00000000 		.4byte	0
 4329 006c 00000000 		.4byte	0
 4330              	.LLST4:
 4331 0070 0A000000 		.4byte	.LVL8
 4332 0074 12000000 		.4byte	.LVL10
 4333 0078 0500     		.2byte	0x5
 4334 007a 74       		.byte	0x74
 4335 007b 00       		.sleb128 0
 4336 007c 37       		.byte	0x37
 4337 007d 1A       		.byte	0x1a
 4338 007e 9F       		.byte	0x9f
 4339 007f 12000000 		.4byte	.LVL10
 4340 0083 18000000 		.4byte	.LFE4
 4341 0087 0100     		.2byte	0x1
 4342 0089 50       		.byte	0x50
 4343 008a 00000000 		.4byte	0
 4344 008e 00000000 		.4byte	0
 4345              	.LLST5:
 4346 0092 00000000 		.4byte	.LVL11
 4347 0096 07000000 		.4byte	.LVL12-1
 4348 009a 0100     		.2byte	0x1
 4349 009c 50       		.byte	0x50
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 143


 4350 009d 07000000 		.4byte	.LVL12-1
 4351 00a1 0C000000 		.4byte	.LVL13
 4352 00a5 0100     		.2byte	0x1
 4353 00a7 54       		.byte	0x54
 4354 00a8 0C000000 		.4byte	.LVL13
 4355 00ac 2C000000 		.4byte	.LFE5
 4356 00b0 0400     		.2byte	0x4
 4357 00b2 F3       		.byte	0xf3
 4358 00b3 01       		.uleb128 0x1
 4359 00b4 50       		.byte	0x50
 4360 00b5 9F       		.byte	0x9f
 4361 00b6 00000000 		.4byte	0
 4362 00ba 00000000 		.4byte	0
 4363              	.LLST6:
 4364 00be 08000000 		.4byte	.LVL12
 4365 00c2 21000000 		.4byte	.LVL14-1
 4366 00c6 0100     		.2byte	0x1
 4367 00c8 50       		.byte	0x50
 4368 00c9 00000000 		.4byte	0
 4369 00cd 00000000 		.4byte	0
 4370              	.LLST7:
 4371 00d1 00000000 		.4byte	.LVL15
 4372 00d5 08000000 		.4byte	.LVL16
 4373 00d9 0100     		.2byte	0x1
 4374 00db 50       		.byte	0x50
 4375 00dc 08000000 		.4byte	.LVL16
 4376 00e0 14000000 		.4byte	.LFE11
 4377 00e4 0100     		.2byte	0x1
 4378 00e6 52       		.byte	0x52
 4379 00e7 00000000 		.4byte	0
 4380 00eb 00000000 		.4byte	0
 4381              	.LLST8:
 4382 00ef 0A000000 		.4byte	.LVL17
 4383 00f3 0C000000 		.4byte	.LVL18
 4384 00f7 0500     		.2byte	0x5
 4385 00f9 70       		.byte	0x70
 4386 00fa 00       		.sleb128 0
 4387 00fb 49       		.byte	0x49
 4388 00fc 1A       		.byte	0x1a
 4389 00fd 9F       		.byte	0x9f
 4390 00fe 0C000000 		.4byte	.LVL18
 4391 0102 14000000 		.4byte	.LFE11
 4392 0106 0100     		.2byte	0x1
 4393 0108 50       		.byte	0x50
 4394 0109 00000000 		.4byte	0
 4395 010d 00000000 		.4byte	0
 4396              	.LLST9:
 4397 0111 00000000 		.4byte	.LVL21
 4398 0115 0A000000 		.4byte	.LVL24
 4399 0119 0100     		.2byte	0x1
 4400 011b 50       		.byte	0x50
 4401 011c 0A000000 		.4byte	.LVL24
 4402 0120 14000000 		.4byte	.LFE14
 4403 0124 0400     		.2byte	0x4
 4404 0126 F3       		.byte	0xf3
 4405 0127 01       		.uleb128 0x1
 4406 0128 50       		.byte	0x50
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 144


 4407 0129 9F       		.byte	0x9f
 4408 012a 00000000 		.4byte	0
 4409 012e 00000000 		.4byte	0
 4410              	.LLST10:
 4411 0132 04000000 		.4byte	.LVL22
 4412 0136 06000000 		.4byte	.LVL23
 4413 013a 0200     		.2byte	0x2
 4414 013c 30       		.byte	0x30
 4415 013d 9F       		.byte	0x9f
 4416 013e 00000000 		.4byte	0
 4417 0142 00000000 		.4byte	0
 4418              	.LLST11:
 4419 0146 00000000 		.4byte	.LVL26
 4420 014a 0A000000 		.4byte	.LVL29
 4421 014e 0100     		.2byte	0x1
 4422 0150 50       		.byte	0x50
 4423 0151 0A000000 		.4byte	.LVL29
 4424 0155 12000000 		.4byte	.LFE15
 4425 0159 0400     		.2byte	0x4
 4426 015b F3       		.byte	0xf3
 4427 015c 01       		.uleb128 0x1
 4428 015d 50       		.byte	0x50
 4429 015e 9F       		.byte	0x9f
 4430 015f 00000000 		.4byte	0
 4431 0163 00000000 		.4byte	0
 4432              	.LLST12:
 4433 0167 04000000 		.4byte	.LVL27
 4434 016b 06000000 		.4byte	.LVL28
 4435 016f 0200     		.2byte	0x2
 4436 0171 30       		.byte	0x30
 4437 0172 9F       		.byte	0x9f
 4438 0173 00000000 		.4byte	0
 4439 0177 00000000 		.4byte	0
 4440              	.LLST13:
 4441 017b 00000000 		.4byte	.LVL30
 4442 017f 0A000000 		.4byte	.LVL33
 4443 0183 0100     		.2byte	0x1
 4444 0185 50       		.byte	0x50
 4445 0186 0A000000 		.4byte	.LVL33
 4446 018a 18000000 		.4byte	.LFE16
 4447 018e 0400     		.2byte	0x4
 4448 0190 F3       		.byte	0xf3
 4449 0191 01       		.uleb128 0x1
 4450 0192 50       		.byte	0x50
 4451 0193 9F       		.byte	0x9f
 4452 0194 00000000 		.4byte	0
 4453 0198 00000000 		.4byte	0
 4454              	.LLST14:
 4455 019c 04000000 		.4byte	.LVL31
 4456 01a0 06000000 		.4byte	.LVL32
 4457 01a4 0200     		.2byte	0x2
 4458 01a6 30       		.byte	0x30
 4459 01a7 9F       		.byte	0x9f
 4460 01a8 00000000 		.4byte	0
 4461 01ac 00000000 		.4byte	0
 4462              	.LLST15:
 4463 01b0 00000000 		.4byte	.LVL35
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 145


 4464 01b4 0A000000 		.4byte	.LVL38
 4465 01b8 0100     		.2byte	0x1
 4466 01ba 50       		.byte	0x50
 4467 01bb 0A000000 		.4byte	.LVL38
 4468 01bf 14000000 		.4byte	.LFE17
 4469 01c3 0400     		.2byte	0x4
 4470 01c5 F3       		.byte	0xf3
 4471 01c6 01       		.uleb128 0x1
 4472 01c7 50       		.byte	0x50
 4473 01c8 9F       		.byte	0x9f
 4474 01c9 00000000 		.4byte	0
 4475 01cd 00000000 		.4byte	0
 4476              	.LLST16:
 4477 01d1 04000000 		.4byte	.LVL36
 4478 01d5 06000000 		.4byte	.LVL37
 4479 01d9 0200     		.2byte	0x2
 4480 01db 30       		.byte	0x30
 4481 01dc 9F       		.byte	0x9f
 4482 01dd 00000000 		.4byte	0
 4483 01e1 00000000 		.4byte	0
 4484              	.LLST17:
 4485 01e5 00000000 		.4byte	.LVL39
 4486 01e9 23000000 		.4byte	.LVL45-1
 4487 01ed 0100     		.2byte	0x1
 4488 01ef 50       		.byte	0x50
 4489 01f0 23000000 		.4byte	.LVL45-1
 4490 01f4 40000000 		.4byte	.LFE18
 4491 01f8 0400     		.2byte	0x4
 4492 01fa F3       		.byte	0xf3
 4493 01fb 01       		.uleb128 0x1
 4494 01fc 50       		.byte	0x50
 4495 01fd 9F       		.byte	0x9f
 4496 01fe 00000000 		.4byte	0
 4497 0202 00000000 		.4byte	0
 4498              	.LLST18:
 4499 0206 00000000 		.4byte	.LVL39
 4500 020a 23000000 		.4byte	.LVL45-1
 4501 020e 0100     		.2byte	0x1
 4502 0210 51       		.byte	0x51
 4503 0211 23000000 		.4byte	.LVL45-1
 4504 0215 40000000 		.4byte	.LFE18
 4505 0219 0400     		.2byte	0x4
 4506 021b F3       		.byte	0xf3
 4507 021c 01       		.uleb128 0x1
 4508 021d 51       		.byte	0x51
 4509 021e 9F       		.byte	0x9f
 4510 021f 00000000 		.4byte	0
 4511 0223 00000000 		.4byte	0
 4512              	.LLST19:
 4513 0227 24000000 		.4byte	.LVL45
 4514 022b 37000000 		.4byte	.LVL49-1
 4515 022f 0100     		.2byte	0x1
 4516 0231 50       		.byte	0x50
 4517 0232 00000000 		.4byte	0
 4518 0236 00000000 		.4byte	0
 4519              	.LLST20:
 4520 023a 1C000000 		.4byte	.LVL44
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 146


 4521 023e 38000000 		.4byte	.LVL50
 4522 0242 0100     		.2byte	0x1
 4523 0244 55       		.byte	0x55
 4524 0245 00000000 		.4byte	0
 4525 0249 00000000 		.4byte	0
 4526              	.LLST21:
 4527 024d 2E000000 		.4byte	.LVL46
 4528 0251 32000000 		.4byte	.LVL48
 4529 0255 0100     		.2byte	0x1
 4530 0257 53       		.byte	0x53
 4531 0258 32000000 		.4byte	.LVL48
 4532 025c 38000000 		.4byte	.LVL51
 4533 0260 0100     		.2byte	0x1
 4534 0262 56       		.byte	0x56
 4535 0263 00000000 		.4byte	0
 4536 0267 00000000 		.4byte	0
 4537              	.LLST22:
 4538 026b 0A000000 		.4byte	.LVL40
 4539 026f 0C000000 		.4byte	.LVL41
 4540 0273 0200     		.2byte	0x2
 4541 0275 30       		.byte	0x30
 4542 0276 9F       		.byte	0x9f
 4543 0277 00000000 		.4byte	0
 4544 027b 00000000 		.4byte	0
 4545              	.LLST23:
 4546 027f 10000000 		.4byte	.LVL42
 4547 0283 12000000 		.4byte	.LVL43
 4548 0287 0200     		.2byte	0x2
 4549 0289 30       		.byte	0x30
 4550 028a 9F       		.byte	0x9f
 4551 028b 00000000 		.4byte	0
 4552 028f 00000000 		.4byte	0
 4553              	.LLST24:
 4554 0293 00000000 		.4byte	.LVL52
 4555 0297 1E000000 		.4byte	.LVL57
 4556 029b 0100     		.2byte	0x1
 4557 029d 50       		.byte	0x50
 4558 029e 1E000000 		.4byte	.LVL57
 4559 02a2 28000000 		.4byte	.LFE19
 4560 02a6 0400     		.2byte	0x4
 4561 02a8 F3       		.byte	0xf3
 4562 02a9 01       		.uleb128 0x1
 4563 02aa 50       		.byte	0x50
 4564 02ab 9F       		.byte	0x9f
 4565 02ac 00000000 		.4byte	0
 4566 02b0 00000000 		.4byte	0
 4567              	.LLST25:
 4568 02b4 10000000 		.4byte	.LVL55
 4569 02b8 1C000000 		.4byte	.LVL56
 4570 02bc 0F00     		.2byte	0xf
 4571 02be 71       		.byte	0x71
 4572 02bf 00       		.sleb128 0
 4573 02c0 70       		.byte	0x70
 4574 02c1 00       		.sleb128 0
 4575 02c2 33       		.byte	0x33
 4576 02c3 1A       		.byte	0x1a
 4577 02c4 08       		.byte	0x8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 147


 4578 02c5 FF       		.byte	0xff
 4579 02c6 1A       		.byte	0x1a
 4580 02c7 33       		.byte	0x33
 4581 02c8 24       		.byte	0x24
 4582 02c9 23       		.byte	0x23
 4583 02ca 06       		.uleb128 0x6
 4584 02cb 25       		.byte	0x25
 4585 02cc 9F       		.byte	0x9f
 4586 02cd 00000000 		.4byte	0
 4587 02d1 00000000 		.4byte	0
 4588              	.LLST26:
 4589 02d5 04000000 		.4byte	.LVL53
 4590 02d9 06000000 		.4byte	.LVL54
 4591 02dd 0200     		.2byte	0x2
 4592 02df 30       		.byte	0x30
 4593 02e0 9F       		.byte	0x9f
 4594 02e1 00000000 		.4byte	0
 4595 02e5 00000000 		.4byte	0
 4596              	.LLST27:
 4597 02e9 00000000 		.4byte	.LVL58
 4598 02ed 04000000 		.4byte	.LVL59
 4599 02f1 0100     		.2byte	0x1
 4600 02f3 50       		.byte	0x50
 4601 02f4 04000000 		.4byte	.LVL59
 4602 02f8 14000000 		.4byte	.LFE20
 4603 02fc 0400     		.2byte	0x4
 4604 02fe F3       		.byte	0xf3
 4605 02ff 01       		.uleb128 0x1
 4606 0300 50       		.byte	0x50
 4607 0301 9F       		.byte	0x9f
 4608 0302 00000000 		.4byte	0
 4609 0306 00000000 		.4byte	0
 4610              	.LLST28:
 4611 030a 00000000 		.4byte	.LVL60
 4612 030e 06000000 		.4byte	.LVL61
 4613 0312 0100     		.2byte	0x1
 4614 0314 50       		.byte	0x50
 4615 0315 06000000 		.4byte	.LVL61
 4616 0319 18000000 		.4byte	.LFE21
 4617 031d 0400     		.2byte	0x4
 4618 031f F3       		.byte	0xf3
 4619 0320 01       		.uleb128 0x1
 4620 0321 50       		.byte	0x50
 4621 0322 9F       		.byte	0x9f
 4622 0323 00000000 		.4byte	0
 4623 0327 00000000 		.4byte	0
 4624              	.LLST29:
 4625 032b 00000000 		.4byte	.LVL62
 4626 032f 04000000 		.4byte	.LVL63
 4627 0333 0100     		.2byte	0x1
 4628 0335 50       		.byte	0x50
 4629 0336 04000000 		.4byte	.LVL63
 4630 033a 14000000 		.4byte	.LFE22
 4631 033e 0400     		.2byte	0x4
 4632 0340 F3       		.byte	0xf3
 4633 0341 01       		.uleb128 0x1
 4634 0342 50       		.byte	0x50
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 148


 4635 0343 9F       		.byte	0x9f
 4636 0344 00000000 		.4byte	0
 4637 0348 00000000 		.4byte	0
 4638              	.LLST30:
 4639 034c 00000000 		.4byte	.LVL64
 4640 0350 04000000 		.4byte	.LVL65
 4641 0354 0100     		.2byte	0x1
 4642 0356 50       		.byte	0x50
 4643 0357 04000000 		.4byte	.LVL65
 4644 035b 14000000 		.4byte	.LFE23
 4645 035f 0400     		.2byte	0x4
 4646 0361 F3       		.byte	0xf3
 4647 0362 01       		.uleb128 0x1
 4648 0363 50       		.byte	0x50
 4649 0364 9F       		.byte	0x9f
 4650 0365 00000000 		.4byte	0
 4651 0369 00000000 		.4byte	0
 4652              	.LLST31:
 4653 036d 00000000 		.4byte	.LVL66
 4654 0371 04000000 		.4byte	.LVL67
 4655 0375 0100     		.2byte	0x1
 4656 0377 50       		.byte	0x50
 4657 0378 04000000 		.4byte	.LVL67
 4658 037c 14000000 		.4byte	.LFE24
 4659 0380 0400     		.2byte	0x4
 4660 0382 F3       		.byte	0xf3
 4661 0383 01       		.uleb128 0x1
 4662 0384 50       		.byte	0x50
 4663 0385 9F       		.byte	0x9f
 4664 0386 00000000 		.4byte	0
 4665 038a 00000000 		.4byte	0
 4666              	.LLST32:
 4667 038e 00000000 		.4byte	.LVL69
 4668 0392 08000000 		.4byte	.LVL70
 4669 0396 0100     		.2byte	0x1
 4670 0398 50       		.byte	0x50
 4671 0399 08000000 		.4byte	.LVL70
 4672 039d 22000000 		.4byte	.LVL74
 4673 03a1 0100     		.2byte	0x1
 4674 03a3 54       		.byte	0x54
 4675 03a4 00000000 		.4byte	0
 4676 03a8 00000000 		.4byte	0
 4677              	.LLST33:
 4678 03ac 00000000 		.4byte	.LVL75
 4679 03b0 08000000 		.4byte	.LVL76
 4680 03b4 0100     		.2byte	0x1
 4681 03b6 50       		.byte	0x50
 4682 03b7 08000000 		.4byte	.LVL76
 4683 03bb 14000000 		.4byte	.LFE28
 4684 03bf 0400     		.2byte	0x4
 4685 03c1 F3       		.byte	0xf3
 4686 03c2 01       		.uleb128 0x1
 4687 03c3 50       		.byte	0x50
 4688 03c4 9F       		.byte	0x9f
 4689 03c5 00000000 		.4byte	0
 4690 03c9 00000000 		.4byte	0
 4691              	.LLST34:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 149


 4692 03cd 00000000 		.4byte	.LVL78
 4693 03d1 09000000 		.4byte	.LVL79-1
 4694 03d5 0100     		.2byte	0x1
 4695 03d7 50       		.byte	0x50
 4696 03d8 09000000 		.4byte	.LVL79-1
 4697 03dc A2000000 		.4byte	.LVL95
 4698 03e0 0100     		.2byte	0x1
 4699 03e2 55       		.byte	0x55
 4700 03e3 A2000000 		.4byte	.LVL95
 4701 03e7 CE000000 		.4byte	.LVL98
 4702 03eb 0700     		.2byte	0x7
 4703 03ed 75       		.byte	0x75
 4704 03ee B39C8080 		.sleb128 -268431821
 4704      7F
 4705 03f3 9F       		.byte	0x9f
 4706 03f4 CE000000 		.4byte	.LVL98
 4707 03f8 D0000000 		.4byte	.LVL99
 4708 03fc 0100     		.2byte	0x1
 4709 03fe 55       		.byte	0x55
 4710 03ff D0000000 		.4byte	.LVL99
 4711 0403 28010000 		.4byte	.LFE6
 4712 0407 0600     		.2byte	0x6
 4713 0409 91       		.byte	0x91
 4714 040a 5C       		.sleb128 -36
 4715 040b 06       		.byte	0x6
 4716 040c 23       		.byte	0x23
 4717 040d 03       		.uleb128 0x3
 4718 040e 9F       		.byte	0x9f
 4719 040f 00000000 		.4byte	0
 4720 0413 00000000 		.4byte	0
 4721              	.LLST35:
 4722 0417 24000000 		.4byte	.LVL81
 4723 041b 26000000 		.4byte	.LVL82
 4724 041f 0100     		.2byte	0x1
 4725 0421 54       		.byte	0x54
 4726 0422 36000000 		.4byte	.LVL83
 4727 0426 38000000 		.4byte	.LVL84
 4728 042a 0100     		.2byte	0x1
 4729 042c 54       		.byte	0x54
 4730 042d 48000000 		.4byte	.LVL85
 4731 0431 4A000000 		.4byte	.LVL86
 4732 0435 0100     		.2byte	0x1
 4733 0437 54       		.byte	0x54
 4734 0438 5A000000 		.4byte	.LVL87
 4735 043c 5C000000 		.4byte	.LVL88
 4736 0440 0100     		.2byte	0x1
 4737 0442 54       		.byte	0x54
 4738 0443 64000000 		.4byte	.LVL89
 4739 0447 CE000000 		.4byte	.LVL98
 4740 044b 0100     		.2byte	0x1
 4741 044d 54       		.byte	0x54
 4742 044e 00000000 		.4byte	0
 4743 0452 00000000 		.4byte	0
 4744              	.LLST36:
 4745 0456 6C000000 		.4byte	.LVL90
 4746 045a CE000000 		.4byte	.LVL98
 4747 045e 0200     		.2byte	0x2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 150


 4748 0460 91       		.byte	0x91
 4749 0461 54       		.sleb128 -44
 4750 0462 00000000 		.4byte	0
 4751 0466 00000000 		.4byte	0
 4752              	.LLST37:
 4753 046a 76000000 		.4byte	.LVL91
 4754 046e CE000000 		.4byte	.LVL98
 4755 0472 0200     		.2byte	0x2
 4756 0474 91       		.byte	0x91
 4757 0475 58       		.sleb128 -40
 4758 0476 00000000 		.4byte	0
 4759 047a 00000000 		.4byte	0
 4760              	.LLST38:
 4761 047e 8A000000 		.4byte	.LVL92
 4762 0482 96000000 		.4byte	.LVL93
 4763 0486 0100     		.2byte	0x1
 4764 0488 56       		.byte	0x56
 4765 0489 00000000 		.4byte	0
 4766 048d 00000000 		.4byte	0
 4767              	.LLST39:
 4768 0491 CE000000 		.4byte	.LVL98
 4769 0495 D0000000 		.4byte	.LVL99
 4770 0499 0200     		.2byte	0x2
 4771 049b 30       		.byte	0x30
 4772 049c 9F       		.byte	0x9f
 4773 049d 00000000 		.4byte	0
 4774 04a1 00000000 		.4byte	0
 4775              	.LLST40:
 4776 04a5 00000000 		.4byte	.LVL101
 4777 04a9 0E000000 		.4byte	.LVL102
 4778 04ad 0100     		.2byte	0x1
 4779 04af 50       		.byte	0x50
 4780 04b0 0E000000 		.4byte	.LVL102
 4781 04b4 44000000 		.4byte	.LFE7
 4782 04b8 0400     		.2byte	0x4
 4783 04ba F3       		.byte	0xf3
 4784 04bb 01       		.uleb128 0x1
 4785 04bc 50       		.byte	0x50
 4786 04bd 9F       		.byte	0x9f
 4787 04be 00000000 		.4byte	0
 4788 04c2 00000000 		.4byte	0
 4789              	.LLST41:
 4790 04c6 00000000 		.4byte	.LVL104
 4791 04ca 18000000 		.4byte	.LVL105
 4792 04ce 0100     		.2byte	0x1
 4793 04d0 50       		.byte	0x50
 4794 04d1 18000000 		.4byte	.LVL105
 4795 04d5 48000000 		.4byte	.LFE29
 4796 04d9 0400     		.2byte	0x4
 4797 04db F3       		.byte	0xf3
 4798 04dc 01       		.uleb128 0x1
 4799 04dd 50       		.byte	0x50
 4800 04de 9F       		.byte	0x9f
 4801 04df 00000000 		.4byte	0
 4802 04e3 00000000 		.4byte	0
 4803              	.LLST42:
 4804 04e7 00000000 		.4byte	.LVL108
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 151


 4805 04eb 0C000000 		.4byte	.LVL109
 4806 04ef 0200     		.2byte	0x2
 4807 04f1 30       		.byte	0x30
 4808 04f2 9F       		.byte	0x9f
 4809 04f3 0C000000 		.4byte	.LVL109
 4810 04f7 10000000 		.4byte	.LVL110
 4811 04fb 0200     		.2byte	0x2
 4812 04fd 31       		.byte	0x31
 4813 04fe 9F       		.byte	0x9f
 4814 04ff 10000000 		.4byte	.LVL110
 4815 0503 12000000 		.4byte	.LVL111
 4816 0507 0200     		.2byte	0x2
 4817 0509 32       		.byte	0x32
 4818 050a 9F       		.byte	0x9f
 4819 050b 12000000 		.4byte	.LVL111
 4820 050f 14000000 		.4byte	.LVL112
 4821 0513 0200     		.2byte	0x2
 4822 0515 33       		.byte	0x33
 4823 0516 9F       		.byte	0x9f
 4824 0517 14000000 		.4byte	.LVL112
 4825 051b 44000000 		.4byte	.LFE31
 4826 051f 0200     		.2byte	0x2
 4827 0521 35       		.byte	0x35
 4828 0522 9F       		.byte	0x9f
 4829 0523 00000000 		.4byte	0
 4830 0527 00000000 		.4byte	0
 4831              	.LLST43:
 4832 052b 14000000 		.4byte	.LVL112
 4833 052f 1A000000 		.4byte	.LVL114
 4834 0533 0600     		.2byte	0x6
 4835 0535 03       		.byte	0x3
 4836 0536 00000000 		.4byte	CySysTickServiceCallbacks
 4837 053a 9F       		.byte	0x9f
 4838 053b 00000000 		.4byte	0
 4839 053f 00000000 		.4byte	0
 4840              	.LLST44:
 4841 0543 14000000 		.4byte	.LVL112
 4842 0547 1A000000 		.4byte	.LVL114
 4843 054b 0200     		.2byte	0x2
 4844 054d 3F       		.byte	0x3f
 4845 054e 9F       		.byte	0x9f
 4846 054f 00000000 		.4byte	0
 4847 0553 00000000 		.4byte	0
 4848              	.LLST45:
 4849 0557 14000000 		.4byte	.LVL112
 4850 055b 16000000 		.4byte	.LVL113
 4851 055f 0500     		.2byte	0x5
 4852 0561 0C       		.byte	0xc
 4853 0562 3C000020 		.4byte	0x2000003c
 4854 0566 16000000 		.4byte	.LVL113
 4855 056a 1A000000 		.4byte	.LVL114
 4856 056e 0200     		.2byte	0x2
 4857 0570 73       		.byte	0x73
 4858 0571 00       		.sleb128 0
 4859 0572 00000000 		.4byte	0
 4860 0576 00000000 		.4byte	0
 4861              	.LLST46:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 152


 4862 057a 22000000 		.4byte	.LVL115
 4863 057e 26000000 		.4byte	.LVL116
 4864 0582 0100     		.2byte	0x1
 4865 0584 50       		.byte	0x50
 4866 0585 00000000 		.4byte	0
 4867 0589 00000000 		.4byte	0
 4868              	.LLST47:
 4869 058d 00000000 		.4byte	.LVL120
 4870 0591 04000000 		.4byte	.LVL121
 4871 0595 0100     		.2byte	0x1
 4872 0597 50       		.byte	0x50
 4873 0598 04000000 		.4byte	.LVL121
 4874 059c 10000000 		.4byte	.LFE36
 4875 05a0 0400     		.2byte	0x4
 4876 05a2 F3       		.byte	0xf3
 4877 05a3 01       		.uleb128 0x1
 4878 05a4 50       		.byte	0x50
 4879 05a5 9F       		.byte	0x9f
 4880 05a6 00000000 		.4byte	0
 4881 05aa 00000000 		.4byte	0
 4882              	.LLST48:
 4883 05ae 00000000 		.4byte	.LVL124
 4884 05b2 06000000 		.4byte	.LVL125
 4885 05b6 0100     		.2byte	0x1
 4886 05b8 50       		.byte	0x50
 4887 05b9 06000000 		.4byte	.LVL125
 4888 05bd 10000000 		.4byte	.LFE41
 4889 05c1 0400     		.2byte	0x4
 4890 05c3 F3       		.byte	0xf3
 4891 05c4 01       		.uleb128 0x1
 4892 05c5 50       		.byte	0x50
 4893 05c6 9F       		.byte	0x9f
 4894 05c7 00000000 		.4byte	0
 4895 05cb 00000000 		.4byte	0
 4896              	.LLST49:
 4897 05cf 00000000 		.4byte	.LVL126
 4898 05d3 04000000 		.4byte	.LVL127
 4899 05d7 0100     		.2byte	0x1
 4900 05d9 50       		.byte	0x50
 4901 05da 04000000 		.4byte	.LVL127
 4902 05de 0C000000 		.4byte	.LFE42
 4903 05e2 0400     		.2byte	0x4
 4904 05e4 F3       		.byte	0xf3
 4905 05e5 01       		.uleb128 0x1
 4906 05e6 50       		.byte	0x50
 4907 05e7 9F       		.byte	0x9f
 4908 05e8 00000000 		.4byte	0
 4909 05ec 00000000 		.4byte	0
 4910              		.section	.debug_aranges,"",%progbits
 4911 0000 7C010000 		.4byte	0x17c
 4912 0004 0200     		.2byte	0x2
 4913 0006 00000000 		.4byte	.Ldebug_info0
 4914 000a 04       		.byte	0x4
 4915 000b 00       		.byte	0
 4916 000c 0000     		.2byte	0
 4917 000e 0000     		.2byte	0
 4918 0010 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 153


 4919 0014 14000000 		.4byte	.LFE0-.LFB0
 4920 0018 00000000 		.4byte	.LFB1
 4921 001c 10000000 		.4byte	.LFE1-.LFB1
 4922 0020 00000000 		.4byte	.LFB2
 4923 0024 20000000 		.4byte	.LFE2-.LFB2
 4924 0028 00000000 		.4byte	.LFB3
 4925 002c 34000000 		.4byte	.LFE3-.LFB3
 4926 0030 00000000 		.4byte	.LFB4
 4927 0034 18000000 		.4byte	.LFE4-.LFB4
 4928 0038 00000000 		.4byte	.LFB5
 4929 003c 2C000000 		.4byte	.LFE5-.LFB5
 4930 0040 00000000 		.4byte	.LFB8
 4931 0044 20000000 		.4byte	.LFE8-.LFB8
 4932 0048 00000000 		.4byte	.LFB9
 4933 004c 10000000 		.4byte	.LFE9-.LFB9
 4934 0050 00000000 		.4byte	.LFB10
 4935 0054 0C000000 		.4byte	.LFE10-.LFB10
 4936 0058 00000000 		.4byte	.LFB11
 4937 005c 14000000 		.4byte	.LFE11-.LFB11
 4938 0060 00000000 		.4byte	.LFB12
 4939 0064 10000000 		.4byte	.LFE12-.LFB12
 4940 0068 00000000 		.4byte	.LFB13
 4941 006c 0C000000 		.4byte	.LFE13-.LFB13
 4942 0070 00000000 		.4byte	.LFB14
 4943 0074 14000000 		.4byte	.LFE14-.LFB14
 4944 0078 00000000 		.4byte	.LFB15
 4945 007c 12000000 		.4byte	.LFE15-.LFB15
 4946 0080 00000000 		.4byte	.LFB16
 4947 0084 18000000 		.4byte	.LFE16-.LFB16
 4948 0088 00000000 		.4byte	.LFB17
 4949 008c 14000000 		.4byte	.LFE17-.LFB17
 4950 0090 00000000 		.4byte	.LFB18
 4951 0094 40000000 		.4byte	.LFE18-.LFB18
 4952 0098 00000000 		.4byte	.LFB19
 4953 009c 28000000 		.4byte	.LFE19-.LFB19
 4954 00a0 00000000 		.4byte	.LFB20
 4955 00a4 14000000 		.4byte	.LFE20-.LFB20
 4956 00a8 00000000 		.4byte	.LFB21
 4957 00ac 18000000 		.4byte	.LFE21-.LFB21
 4958 00b0 00000000 		.4byte	.LFB22
 4959 00b4 14000000 		.4byte	.LFE22-.LFB22
 4960 00b8 00000000 		.4byte	.LFB23
 4961 00bc 14000000 		.4byte	.LFE23-.LFB23
 4962 00c0 00000000 		.4byte	.LFB24
 4963 00c4 14000000 		.4byte	.LFE24-.LFB24
 4964 00c8 00000000 		.4byte	.LFB25
 4965 00cc 04000000 		.4byte	.LFE25-.LFB25
 4966 00d0 00000000 		.4byte	.LFB26
 4967 00d4 18000000 		.4byte	.LFE26-.LFB26
 4968 00d8 00000000 		.4byte	.LFB27
 4969 00dc 2C000000 		.4byte	.LFE27-.LFB27
 4970 00e0 00000000 		.4byte	.LFB28
 4971 00e4 14000000 		.4byte	.LFE28-.LFB28
 4972 00e8 00000000 		.4byte	.LFB6
 4973 00ec 28010000 		.4byte	.LFE6-.LFB6
 4974 00f0 00000000 		.4byte	.LFB7
 4975 00f4 44000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 154


 4976 00f8 00000000 		.4byte	.LFB29
 4977 00fc 48000000 		.4byte	.LFE29-.LFB29
 4978 0100 00000000 		.4byte	.LFB31
 4979 0104 44000000 		.4byte	.LFE31-.LFB31
 4980 0108 00000000 		.4byte	.LFB33
 4981 010c 10000000 		.4byte	.LFE33-.LFB33
 4982 0110 00000000 		.4byte	.LFB34
 4983 0114 10000000 		.4byte	.LFE34-.LFB34
 4984 0118 00000000 		.4byte	.LFB32
 4985 011c 18000000 		.4byte	.LFE32-.LFB32
 4986 0120 00000000 		.4byte	.LFB30
 4987 0124 1C000000 		.4byte	.LFE30-.LFB30
 4988 0128 00000000 		.4byte	.LFB35
 4989 012c 10000000 		.4byte	.LFE35-.LFB35
 4990 0130 00000000 		.4byte	.LFB36
 4991 0134 10000000 		.4byte	.LFE36-.LFB36
 4992 0138 00000000 		.4byte	.LFB37
 4993 013c 10000000 		.4byte	.LFE37-.LFB37
 4994 0140 00000000 		.4byte	.LFB38
 4995 0144 10000000 		.4byte	.LFE38-.LFB38
 4996 0148 00000000 		.4byte	.LFB39
 4997 014c 10000000 		.4byte	.LFE39-.LFB39
 4998 0150 00000000 		.4byte	.LFB43
 4999 0154 24000000 		.4byte	.LFE43-.LFB43
 5000 0158 00000000 		.4byte	.LFB40
 5001 015c 0C000000 		.4byte	.LFE40-.LFB40
 5002 0160 00000000 		.4byte	.LFB41
 5003 0164 10000000 		.4byte	.LFE41-.LFB41
 5004 0168 00000000 		.4byte	.LFB42
 5005 016c 0C000000 		.4byte	.LFE42-.LFB42
 5006 0170 00000000 		.4byte	.LFB44
 5007 0174 74000000 		.4byte	.LFE44-.LFB44
 5008 0178 00000000 		.4byte	0
 5009 017c 00000000 		.4byte	0
 5010              		.section	.debug_ranges,"",%progbits
 5011              	.Ldebug_ranges0:
 5012 0000 2C000000 		.4byte	.LBB44
 5013 0004 2E000000 		.4byte	.LBE44
 5014 0008 2E000000 		.4byte	.LBB47
 5015 000c 30000000 		.4byte	.LBE47
 5016 0010 00000000 		.4byte	0
 5017 0014 00000000 		.4byte	0
 5018 0018 08000000 		.4byte	.LBB48
 5019 001c 0A000000 		.4byte	.LBE48
 5020 0020 14000000 		.4byte	.LBB52
 5021 0024 16000000 		.4byte	.LBE52
 5022 0028 18000000 		.4byte	.LBB53
 5023 002c 1A000000 		.4byte	.LBE53
 5024 0030 00000000 		.4byte	0
 5025 0034 00000000 		.4byte	0
 5026 0038 00000000 		.4byte	.LFB0
 5027 003c 14000000 		.4byte	.LFE0
 5028 0040 00000000 		.4byte	.LFB1
 5029 0044 10000000 		.4byte	.LFE1
 5030 0048 00000000 		.4byte	.LFB2
 5031 004c 20000000 		.4byte	.LFE2
 5032 0050 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 155


 5033 0054 34000000 		.4byte	.LFE3
 5034 0058 00000000 		.4byte	.LFB4
 5035 005c 18000000 		.4byte	.LFE4
 5036 0060 00000000 		.4byte	.LFB5
 5037 0064 2C000000 		.4byte	.LFE5
 5038 0068 00000000 		.4byte	.LFB8
 5039 006c 20000000 		.4byte	.LFE8
 5040 0070 00000000 		.4byte	.LFB9
 5041 0074 10000000 		.4byte	.LFE9
 5042 0078 00000000 		.4byte	.LFB10
 5043 007c 0C000000 		.4byte	.LFE10
 5044 0080 00000000 		.4byte	.LFB11
 5045 0084 14000000 		.4byte	.LFE11
 5046 0088 00000000 		.4byte	.LFB12
 5047 008c 10000000 		.4byte	.LFE12
 5048 0090 00000000 		.4byte	.LFB13
 5049 0094 0C000000 		.4byte	.LFE13
 5050 0098 00000000 		.4byte	.LFB14
 5051 009c 14000000 		.4byte	.LFE14
 5052 00a0 00000000 		.4byte	.LFB15
 5053 00a4 12000000 		.4byte	.LFE15
 5054 00a8 00000000 		.4byte	.LFB16
 5055 00ac 18000000 		.4byte	.LFE16
 5056 00b0 00000000 		.4byte	.LFB17
 5057 00b4 14000000 		.4byte	.LFE17
 5058 00b8 00000000 		.4byte	.LFB18
 5059 00bc 40000000 		.4byte	.LFE18
 5060 00c0 00000000 		.4byte	.LFB19
 5061 00c4 28000000 		.4byte	.LFE19
 5062 00c8 00000000 		.4byte	.LFB20
 5063 00cc 14000000 		.4byte	.LFE20
 5064 00d0 00000000 		.4byte	.LFB21
 5065 00d4 18000000 		.4byte	.LFE21
 5066 00d8 00000000 		.4byte	.LFB22
 5067 00dc 14000000 		.4byte	.LFE22
 5068 00e0 00000000 		.4byte	.LFB23
 5069 00e4 14000000 		.4byte	.LFE23
 5070 00e8 00000000 		.4byte	.LFB24
 5071 00ec 14000000 		.4byte	.LFE24
 5072 00f0 00000000 		.4byte	.LFB25
 5073 00f4 04000000 		.4byte	.LFE25
 5074 00f8 00000000 		.4byte	.LFB26
 5075 00fc 18000000 		.4byte	.LFE26
 5076 0100 00000000 		.4byte	.LFB27
 5077 0104 2C000000 		.4byte	.LFE27
 5078 0108 00000000 		.4byte	.LFB28
 5079 010c 14000000 		.4byte	.LFE28
 5080 0110 00000000 		.4byte	.LFB6
 5081 0114 28010000 		.4byte	.LFE6
 5082 0118 00000000 		.4byte	.LFB7
 5083 011c 44000000 		.4byte	.LFE7
 5084 0120 00000000 		.4byte	.LFB29
 5085 0124 48000000 		.4byte	.LFE29
 5086 0128 00000000 		.4byte	.LFB31
 5087 012c 44000000 		.4byte	.LFE31
 5088 0130 00000000 		.4byte	.LFB33
 5089 0134 10000000 		.4byte	.LFE33
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 156


 5090 0138 00000000 		.4byte	.LFB34
 5091 013c 10000000 		.4byte	.LFE34
 5092 0140 00000000 		.4byte	.LFB32
 5093 0144 18000000 		.4byte	.LFE32
 5094 0148 00000000 		.4byte	.LFB30
 5095 014c 1C000000 		.4byte	.LFE30
 5096 0150 00000000 		.4byte	.LFB35
 5097 0154 10000000 		.4byte	.LFE35
 5098 0158 00000000 		.4byte	.LFB36
 5099 015c 10000000 		.4byte	.LFE36
 5100 0160 00000000 		.4byte	.LFB37
 5101 0164 10000000 		.4byte	.LFE37
 5102 0168 00000000 		.4byte	.LFB38
 5103 016c 10000000 		.4byte	.LFE38
 5104 0170 00000000 		.4byte	.LFB39
 5105 0174 10000000 		.4byte	.LFE39
 5106 0178 00000000 		.4byte	.LFB43
 5107 017c 24000000 		.4byte	.LFE43
 5108 0180 00000000 		.4byte	.LFB40
 5109 0184 0C000000 		.4byte	.LFE40
 5110 0188 00000000 		.4byte	.LFB41
 5111 018c 10000000 		.4byte	.LFE41
 5112 0190 00000000 		.4byte	.LFB42
 5113 0194 0C000000 		.4byte	.LFE42
 5114 0198 00000000 		.4byte	.LFB44
 5115 019c 74000000 		.4byte	.LFE44
 5116 01a0 00000000 		.4byte	0
 5117 01a4 00000000 		.4byte	0
 5118              		.section	.debug_line,"",%progbits
 5119              	.Ldebug_line0:
 5120 0000 EB040000 		.section	.debug_str,"MS",%progbits,1
 5120      02004D00 
 5120      00000201 
 5120      FB0E0D00 
 5120      01010101 
 5121              	.LASF30:
 5122 0000 72616D56 		.ascii	"ramVectorTable\000"
 5122      6563746F 
 5122      72546162 
 5122      6C6500
 5123              	.LASF69:
 5124 000f 62675472 		.ascii	"bgTrim4\000"
 5124      696D3400 
 5125              	.LASF10:
 5126 0017 75696E74 		.ascii	"uint16\000"
 5126      313600
 5127              	.LASF47:
 5128 001e 696E7453 		.ascii	"intState\000"
 5128      74617465 
 5128      00
 5129              	.LASF35:
 5130 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5130      73436C6B 
 5130      57726974 
 5130      65486663 
 5130      6C6B4469 
 5131              	.LASF99:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 157


 5132 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 5132      73436C6B 
 5132      50756D70 
 5132      436F6E66 
 5132      696700
 5133              	.LASF29:
 5134 0053 6F6C6449 		.ascii	"oldIsr\000"
 5134      737200
 5135              	.LASF88:
 5136 005a 72657456 		.ascii	"retVal\000"
 5136      616C00
 5137              	.LASF46:
 5138 0061 43794469 		.ascii	"CyDisableInts\000"
 5138      7361626C 
 5138      65496E74 
 5138      7300
 5139              	.LASF72:
 5140 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 5140      656E7449 
 5140      6D6F5472 
 5140      696D3256 
 5140      616C7565 
 5141              	.LASF7:
 5142 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 5142      206C6F6E 
 5142      6720756E 
 5142      7369676E 
 5142      65642069 
 5143              	.LASF97:
 5144 009b 43795379 		.ascii	"CySysTickInitVar\000"
 5144      73546963 
 5144      6B496E69 
 5144      74566172 
 5144      00
 5145              	.LASF48:
 5146 00ac 4379456E 		.ascii	"CyEnableInts\000"
 5146      61626C65 
 5146      496E7473 
 5146      00
 5147              	.LASF62:
 5148 00b9 4379536F 		.ascii	"CySoftwareReset\000"
 5148      66747761 
 5148      72655265 
 5148      73657400 
 5149              	.LASF78:
 5150 00c9 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5150      73546963 
 5150      6B456E61 
 5150      626C6549 
 5150      6E746572 
 5151              	.LASF58:
 5152 00e2 4379496E 		.ascii	"CyIntGetState\000"
 5152      74476574 
 5152      53746174 
 5152      6500
 5153              	.LASF6:
 5154 00f0 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 158


 5154      206C6F6E 
 5154      6720696E 
 5154      7400
 5155              	.LASF0:
 5156 00fe 7369676E 		.ascii	"signed char\000"
 5156      65642063 
 5156      68617200 
 5157              	.LASF68:
 5158 010a 66726571 		.ascii	"freq\000"
 5158      00
 5159              	.LASF75:
 5160 010f 43794465 		.ascii	"CyDelayFreq\000"
 5160      6C617946 
 5160      72657100 
 5161              	.LASF33:
 5162 011b 696E7465 		.ascii	"interruptState\000"
 5162      72727570 
 5162      74537461 
 5162      746500
 5163              	.LASF83:
 5164 012a 43795379 		.ascii	"CySysTickGetReload\000"
 5164      73546963 
 5164      6B476574 
 5164      52656C6F 
 5164      616400
 5165              	.LASF4:
 5166 013d 6C6F6E67 		.ascii	"long int\000"
 5166      20696E74 
 5166      00
 5167              	.LASF59:
 5168 0146 4379496E 		.ascii	"CyIntDisable\000"
 5168      74446973 
 5168      61626C65 
 5168      00
 5169              	.LASF89:
 5170 0153 43795379 		.ascii	"CySysTickGetCallback\000"
 5170      73546963 
 5170      6B476574 
 5170      43616C6C 
 5170      6261636B 
 5171              	.LASF9:
 5172 0168 75696E74 		.ascii	"uint8\000"
 5172      3800
 5173              	.LASF94:
 5174 016e 63796465 		.ascii	"cydelayFreqKhz\000"
 5174      6C617946 
 5174      7265714B 
 5174      687A00
 5175              	.LASF38:
 5176 017d 656E6162 		.ascii	"enable\000"
 5176      6C6500
 5177              	.LASF13:
 5178 0184 646F7562 		.ascii	"double\000"
 5178      6C6500
 5179              	.LASF55:
 5180 018b 73686966 		.ascii	"shift\000"
 5180      7400
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 159


 5181              	.LASF21:
 5182 0191 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5182      734C7664 
 5182      436C6561 
 5182      72496E74 
 5182      65727275 
 5183              	.LASF11:
 5184 01a8 75696E74 		.ascii	"uint32\000"
 5184      333200
 5185              	.LASF49:
 5186 01af 6D61736B 		.ascii	"mask\000"
 5186      00
 5187              	.LASF43:
 5188 01b4 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5188      73436C6B 
 5188      47657453 
 5188      7973636C 
 5188      6B536F75 
 5189              	.LASF56:
 5190 01cc 4379496E 		.ascii	"CyIntGetPriority\000"
 5190      74476574 
 5190      5072696F 
 5190      72697479 
 5190      00
 5191              	.LASF96:
 5192 01dd 63796465 		.ascii	"cydelay32kMs\000"
 5192      6C617933 
 5192      326B4D73 
 5192      00
 5193              	.LASF76:
 5194 01ea 43795379 		.ascii	"CySysTickInit\000"
 5194      73546963 
 5194      6B496E69 
 5194      7400
 5195              	.LASF26:
 5196 01f8 76616C75 		.ascii	"value\000"
 5196      6500
 5197              	.LASF90:
 5198 01fe 43794765 		.ascii	"CyGetUniqueId\000"
 5198      74556E69 
 5198      71756549 
 5198      6400
 5199              	.LASF85:
 5200 020c 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5200      73546963 
 5200      6B476574 
 5200      436F756E 
 5200      74466C61 
 5201              	.LASF8:
 5202 0222 756E7369 		.ascii	"unsigned int\000"
 5202      676E6564 
 5202      20696E74 
 5202      00
 5203              	.LASF22:
 5204 022f 43795379 		.ascii	"CySysTickClear\000"
 5204      73546963 
 5204      6B436C65 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 160


 5204      617200
 5205              	.LASF5:
 5206 023e 6C6F6E67 		.ascii	"long unsigned int\000"
 5206      20756E73 
 5206      69676E65 
 5206      6420696E 
 5206      7400
 5207              	.LASF82:
 5208 0250 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5208      734C7664 
 5208      47657449 
 5208      6E746572 
 5208      72757074 
 5209              	.LASF32:
 5210 026b 43795379 		.ascii	"CySysClkImoStop\000"
 5210      73436C6B 
 5210      496D6F53 
 5210      746F7000 
 5211              	.LASF100:
 5212 027b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5212      74657243 
 5212      72697469 
 5212      63616C53 
 5212      65637469 
 5213              	.LASF60:
 5214 0292 4379496E 		.ascii	"CyIntSetPending\000"
 5214      74536574 
 5214      50656E64 
 5214      696E6700 
 5215              	.LASF44:
 5216 02a2 43795379 		.ascii	"CySysGetResetReason\000"
 5216      73476574 
 5216      52657365 
 5216      74526561 
 5216      736F6E00 
 5217              	.LASF3:
 5218 02b6 73686F72 		.ascii	"short unsigned int\000"
 5218      7420756E 
 5218      7369676E 
 5218      65642069 
 5218      6E7400
 5219              	.LASF51:
 5220 02c9 4379496E 		.ascii	"CyIntSetVector\000"
 5220      74536574 
 5220      56656374 
 5220      6F7200
 5221              	.LASF27:
 5222 02d8 6E756D62 		.ascii	"number\000"
 5222      657200
 5223              	.LASF54:
 5224 02df 7072696F 		.ascii	"priority\000"
 5224      72697479 
 5224      00
 5225              	.LASF67:
 5226 02e8 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5226      73436C6B 
 5226      57726974 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 161


 5226      65496D6F 
 5226      46726571 
 5227              	.LASF107:
 5228 02fd 4379496E 		.ascii	"CyIntSetSysVector\000"
 5228      74536574 
 5228      53797356 
 5228      6563746F 
 5228      7200
 5229              	.LASF36:
 5230 030f 43795379 		.ascii	"CySysEnablePumpClock\000"
 5230      73456E61 
 5230      626C6550 
 5230      756D7043 
 5230      6C6F636B 
 5231              	.LASF16:
 5232 0324 72656733 		.ascii	"reg32\000"
 5232      3200
 5233              	.LASF80:
 5234 032a 43795379 		.ascii	"CySysTickStart\000"
 5234      73546963 
 5234      6B537461 
 5234      727400
 5235              	.LASF45:
 5236 0339 72657475 		.ascii	"returnStatus\000"
 5236      726E5374 
 5236      61747573 
 5236      00
 5237              	.LASF19:
 5238 0346 73697A65 		.ascii	"sizetype\000"
 5238      74797065 
 5238      00
 5239              	.LASF61:
 5240 034f 4379496E 		.ascii	"CyIntClearPending\000"
 5240      74436C65 
 5240      61725065 
 5240      6E64696E 
 5240      6700
 5241              	.LASF18:
 5242 0361 6C6F6E67 		.ascii	"long double\000"
 5242      20646F75 
 5242      626C6500 
 5243              	.LASF28:
 5244 036d 61646472 		.ascii	"address\000"
 5244      65737300 
 5245              	.LASF103:
 5246 0375 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5246      43313120 
 5246      352E342E 
 5246      31203230 
 5246      31363036 
 5247 03a8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5247      20726576 
 5247      6973696F 
 5247      6E203233 
 5247      37373135 
 5248 03db 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 5248      66756E63 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 162


 5248      74696F6E 
 5248      2D736563 
 5248      74696F6E 
 5249              	.LASF70:
 5250 0403 62675472 		.ascii	"bgTrim5\000"
 5250      696D3500 
 5251              	.LASF39:
 5252 040b 73797363 		.ascii	"sysclkSource\000"
 5252      6C6B536F 
 5252      75726365 
 5252      00
 5253              	.LASF87:
 5254 0418 66756E63 		.ascii	"function\000"
 5254      74696F6E 
 5254      00
 5255              	.LASF98:
 5256 0421 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5256      6F467265 
 5256      714D687A 
 5256      32526567 
 5256      00
 5257              	.LASF84:
 5258 0432 43795379 		.ascii	"CySysTickGetValue\000"
 5258      73546963 
 5258      6B476574 
 5258      56616C75 
 5258      6500
 5259              	.LASF93:
 5260 0444 63796465 		.ascii	"cydelayFreqHz\000"
 5260      6C617946 
 5260      72657148 
 5260      7A00
 5261              	.LASF53:
 5262 0452 4379496E 		.ascii	"CyIntSetPriority\000"
 5262      74536574 
 5262      5072696F 
 5262      72697479 
 5262      00
 5263              	.LASF12:
 5264 0463 666C6F61 		.ascii	"float\000"
 5264      7400
 5265              	.LASF101:
 5266 0469 43794578 		.ascii	"CyExitCriticalSection\000"
 5266      69744372 
 5266      69746963 
 5266      616C5365 
 5266      6374696F 
 5267              	.LASF73:
 5268 047f 43795379 		.ascii	"CySysLvdEnable\000"
 5268      734C7664 
 5268      456E6162 
 5268      6C6500
 5269              	.LASF20:
 5270 048e 63795379 		.ascii	"cySysTickCallback\000"
 5270      73546963 
 5270      6B43616C 
 5270      6C626163 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 163


 5270      6B00
 5271              	.LASF52:
 5272 04a0 4379496E 		.ascii	"CyIntGetVector\000"
 5272      74476574 
 5272      56656374 
 5272      6F7200
 5273              	.LASF64:
 5274 04af 6D696C6C 		.ascii	"milliseconds\000"
 5274      69736563 
 5274      6F6E6473 
 5274      00
 5275              	.LASF102:
 5276 04bc 43794465 		.ascii	"CyDelayCycles\000"
 5276      6C617943 
 5276      79636C65 
 5276      7300
 5277              	.LASF15:
 5278 04ca 72656738 		.ascii	"reg8\000"
 5278      00
 5279              	.LASF74:
 5280 04cf 74687265 		.ascii	"threshold\000"
 5280      73686F6C 
 5280      6400
 5281              	.LASF23:
 5282 04d9 43794861 		.ascii	"CyHalt\000"
 5282      6C7400
 5283              	.LASF1:
 5284 04e0 756E7369 		.ascii	"unsigned char\000"
 5284      676E6564 
 5284      20636861 
 5284      7200
 5285              	.LASF2:
 5286 04ee 73686F72 		.ascii	"short int\000"
 5286      7420696E 
 5286      7400
 5287              	.LASF57:
 5288 04f8 4379496E 		.ascii	"CyIntEnable\000"
 5288      74456E61 
 5288      626C6500 
 5289              	.LASF50:
 5290 0504 4379496E 		.ascii	"CyIntGetSysVector\000"
 5290      74476574 
 5290      53797356 
 5290      6563746F 
 5290      7200
 5291              	.LASF37:
 5292 0516 636C6B53 		.ascii	"clkSelect\000"
 5292      656C6563 
 5292      7400
 5293              	.LASF65:
 5294 0520 43794465 		.ascii	"CyDelayUs\000"
 5294      6C617955 
 5294      7300
 5295              	.LASF25:
 5296 052a 72656173 		.ascii	"reason\000"
 5296      6F6E00
 5297              	.LASF14:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 164


 5298 0531 63686172 		.ascii	"char\000"
 5298      00
 5299              	.LASF17:
 5300 0536 63796973 		.ascii	"cyisraddress\000"
 5300      72616464 
 5300      72657373 
 5300      00
 5301              	.LASF79:
 5302 0543 43795379 		.ascii	"CySysTickEnable\000"
 5302      73546963 
 5302      6B456E61 
 5302      626C6500 
 5303              	.LASF40:
 5304 0553 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5304      73436C6B 
 5304      57726974 
 5304      65537973 
 5304      636C6B44 
 5305              	.LASF86:
 5306 056a 43795379 		.ascii	"CySysTickSetCallback\000"
 5306      73546963 
 5306      6B536574 
 5306      43616C6C 
 5306      6261636B 
 5307              	.LASF92:
 5308 057f 43795379 		.ascii	"CySysTickCallbacks\000"
 5308      73546963 
 5308      6B43616C 
 5308      6C626163 
 5308      6B7300
 5309              	.LASF91:
 5310 0592 756E6971 		.ascii	"uniqueId\000"
 5310      75654964 
 5310      00
 5311              	.LASF63:
 5312 059b 43794465 		.ascii	"CyDelay\000"
 5312      6C617900 
 5313              	.LASF81:
 5314 05a3 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5314      73546963 
 5314      6B446973 
 5314      61626C65 
 5314      496E7465 
 5315              	.LASF42:
 5316 05bd 43795379 		.ascii	"CySysLvdDisable\000"
 5316      734C7664 
 5316      44697361 
 5316      626C6500 
 5317              	.LASF95:
 5318 05cd 63796465 		.ascii	"cydelayFreqMhz\000"
 5318      6C617946 
 5318      7265714D 
 5318      687A00
 5319              	.LASF105:
 5320 05dc 433A5C55 		.ascii	"C:\\Users\\Ala\\Desktop\\Cypress\\BeoM_main.cydsn\000"
 5320      73657273 
 5320      5C416C61 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFDdBv0.s 			page 165


 5320      5C446573 
 5320      6B746F70 
 5321              	.LASF77:
 5322 0609 43795379 		.ascii	"CySysTickStop\000"
 5322      73546963 
 5322      6B53746F 
 5322      7000
 5323              	.LASF41:
 5324 0617 64697669 		.ascii	"divider\000"
 5324      64657200 
 5325              	.LASF31:
 5326 061f 43795379 		.ascii	"CySysClkImoStart\000"
 5326      73436C6B 
 5326      496D6F53 
 5326      74617274 
 5326      00
 5327              	.LASF71:
 5328 0630 6E657749 		.ascii	"newImoTrim2Value\000"
 5328      6D6F5472 
 5328      696D3256 
 5328      616C7565 
 5328      00
 5329              	.LASF104:
 5330 0641 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5330      72617465 
 5330      645F536F 
 5330      75726365 
 5330      5C50536F 
 5331              	.LASF66:
 5332 0660 6D696372 		.ascii	"microseconds\000"
 5332      6F736563 
 5332      6F6E6473 
 5332      00
 5333              	.LASF34:
 5334 066d 746D7052 		.ascii	"tmpReg\000"
 5334      656700
 5335              	.LASF24:
 5336 0674 43795379 		.ascii	"CySysTickSetReload\000"
 5336      73546963 
 5336      6B536574 
 5336      52656C6F 
 5336      616400
 5337              	.LASF106:
 5338 0687 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5338      73546963 
 5338      6B536572 
 5338      76696365 
 5338      43616C6C 
 5339              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
