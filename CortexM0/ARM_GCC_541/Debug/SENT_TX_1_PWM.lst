ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SENT_TX_1_PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SENT_TX_1_PWM_initVar
  20              		.bss
  21              		.type	SENT_TX_1_PWM_initVar, %object
  22              		.size	SENT_TX_1_PWM_initVar, 1
  23              	SENT_TX_1_PWM_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.SENT_TX_1_PWM_Init,"ax",%progbits
  26              		.align	2
  27              		.global	SENT_TX_1_PWM_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	SENT_TX_1_PWM_Init, %function
  31              	SENT_TX_1_PWM_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC4\\SENT_TX_1_PWM.c"
   1:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * File Name: SENT_TX_1_PWM.c
   3:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Version 2.10
   4:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
   5:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Description:
   6:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  This file provides the source code to the API for the SENT_TX_1_PWM
   7:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  component
   8:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
   9:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Note:
  10:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
  11:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
  12:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
  13:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
  19:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** #include "SENT_TX_1_PWM.h"
  20:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
  21:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** uint8 SENT_TX_1_PWM_initVar = 0u;
  22:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
  23:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
  24:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 2


  25:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_Init
  26:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
  27:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
  28:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
  29:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Initialize/Restore default SENT_TX_1_PWM configuration.
  30:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
  31:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
  32:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
  33:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
  34:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
  35:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
  36:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
  37:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_Init(void)
  39:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
  34              		.loc 1 39 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
  41:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM__QUAD == SENT_TX_1_PWM_CONFIG)
  43:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_CONTROL_REG = SENT_TX_1_PWM_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         
  45:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_TRIG_CONTROL1_REG  = SENT_TX_1_PWM_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
  48:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_SetInterruptMode(SENT_TX_1_PWM_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         
  51:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****          /* Set other values */
  52:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_SetCounterMode(SENT_TX_1_PWM_COUNT_DOWN);
  53:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_WritePeriod(SENT_TX_1_PWM_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_WriteCounter(SENT_TX_1_PWM_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif  /* (SENT_TX_1_PWM__QUAD == SENT_TX_1_PWM_CONFIG) */
  56:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
  57:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM__TIMER == SENT_TX_1_PWM_CONFIG)
  58:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_CONTROL_REG = SENT_TX_1_PWM_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         
  60:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_TRIG_CONTROL1_REG  = SENT_TX_1_PWM_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     
  63:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_SetInterruptMode(SENT_TX_1_PWM_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         
  66:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_WritePeriod(SENT_TX_1_PWM_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
  69:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #if (SENT_TX_1_PWM__COMPARE == SENT_TX_1_PWM_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_WriteCompare(SENT_TX_1_PWM_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 3


  72:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #if (1u == SENT_TX_1_PWM_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                 SENT_TX_1_PWM_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                 SENT_TX_1_PWM_WriteCompareBuf(SENT_TX_1_PWM_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #endif  /* (1u == SENT_TX_1_PWM_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #endif  /* (SENT_TX_1_PWM__COMPARE == SENT_TX_1_PWM_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
  78:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #if (SENT_TX_1_PWM_CY_TCPWM_V2 && SENT_TX_1_PWM_TIMER_UPDOWN_CNT_USED && !SENT_TX_1_PWM_CY_
  80:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_WriteCounter(1u);
  81:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #elif(SENT_TX_1_PWM__COUNT_DOWN == SENT_TX_1_PWM_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_WriteCounter(SENT_TX_1_PWM_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #else
  84:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_WriteCounter(0u);
  85:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #endif /* (SENT_TX_1_PWM_CY_TCPWM_V2 && SENT_TX_1_PWM_TIMER_UPDOWN_CNT_USED && !SENT_TX_1_P
  86:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif  /* (SENT_TX_1_PWM__TIMER == SENT_TX_1_PWM_CONFIG) */
  87:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
  88:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM__PWM_SEL == SENT_TX_1_PWM_CONFIG)
  89:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_CONTROL_REG = SENT_TX_1_PWM_CTRL_PWM_BASE_CONFIG;
  44              		.loc 1 89 0
  45 0004 124B     		ldr	r3, .L2
  46 0006 134A     		ldr	r2, .L2+4
  47 0008 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
  91:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #if (SENT_TX_1_PWM__PWM_PR == SENT_TX_1_PWM_PWM_MODE)
  92:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_CONTROL_REG |= SENT_TX_1_PWM_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_WriteCounter(SENT_TX_1_PWM_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #else
  95:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_CONTROL_REG |= SENT_TX_1_PWM_CTRL_PWM_ALIGN | SENT_TX_1_PWM_CTRL_PWM_KILL
  48              		.loc 1 95 0
  49 000a 114B     		ldr	r3, .L2
  50 000c 104A     		ldr	r2, .L2
  51 000e 1268     		ldr	r2, [r2]
  52 0010 1A60     		str	r2, [r3]
  96:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             
  97:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #if (SENT_TX_1_PWM_CY_TCPWM_V2 && SENT_TX_1_PWM_PWM_UPDOWN_CNT_USED && !SENT_TX_1_PWM_C
  99:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                 SENT_TX_1_PWM_WriteCounter(1u);
 100:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #elif (SENT_TX_1_PWM__RIGHT == SENT_TX_1_PWM_PWM_ALIGN)
 101:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                 SENT_TX_1_PWM_WriteCounter(SENT_TX_1_PWM_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #else 
 103:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                 SENT_TX_1_PWM_WriteCounter(0u);
  53              		.loc 1 103 0
  54 0012 0020     		movs	r0, #0
  55 0014 FFF7FEFF 		bl	SENT_TX_1_PWM_WriteCounter
 104:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #endif  /* (SENT_TX_1_PWM_CY_TCPWM_V2 && SENT_TX_1_PWM_PWM_UPDOWN_CNT_USED && !SENT_TX_
 105:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #endif  /* (SENT_TX_1_PWM__PWM_PR == SENT_TX_1_PWM_PWM_MODE) */
 106:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 107:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #if (SENT_TX_1_PWM__PWM_DT == SENT_TX_1_PWM_PWM_MODE)
 108:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_CONTROL_REG |= SENT_TX_1_PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #endif  /* (SENT_TX_1_PWM__PWM_DT == SENT_TX_1_PWM_PWM_MODE) */
 110:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 111:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #if (SENT_TX_1_PWM__PWM == SENT_TX_1_PWM_PWM_MODE)
 112:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_CONTROL_REG |= SENT_TX_1_PWM_CTRL_PWM_PRESCALER;
  56              		.loc 1 112 0
  57 0018 0D4B     		ldr	r3, .L2
  58 001a 0D4A     		ldr	r2, .L2
  59 001c 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 4


  60 001e 1A60     		str	r2, [r3]
 113:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #endif  /* (SENT_TX_1_PWM__PWM == SENT_TX_1_PWM_PWM_MODE) */
 114:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 115:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_TRIG_CONTROL1_REG  = SENT_TX_1_PWM_PWM_SIGNALS_MODES;
  61              		.loc 1 116 0
  62 0020 0D4B     		ldr	r3, .L2+8
  63 0022 0C22     		movs	r2, #12
  64 0024 1A60     		str	r2, [r3]
 117:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     
 118:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_SetInterruptMode(SENT_TX_1_PWM_PWM_INTERRUPT_MASK);
  65              		.loc 1 119 0
  66 0026 0120     		movs	r0, #1
  67 0028 FFF7FEFF 		bl	SENT_TX_1_PWM_SetInterruptMode
 120:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 121:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #if (SENT_TX_1_PWM__PWM_PR == SENT_TX_1_PWM_PWM_MODE)
 123:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                     (SENT_TX_1_PWM_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                     SENT_TX_1_PWM_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                     SENT_TX_1_PWM_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #else
 128:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #if (SENT_TX_1_PWM__LEFT == SENT_TX_1_PWM_PWM_ALIGN)
 129:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                 SENT_TX_1_PWM_TRIG_CONTROL2_REG = SENT_TX_1_PWM_PWM_MODE_LEFT;
  68              		.loc 1 129 0
  69 002c 0B4B     		ldr	r3, .L2+12
  70 002e 3122     		movs	r2, #49
  71 0030 1A60     		str	r2, [r3]
 130:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #endif  /* ( SENT_TX_1_PWM_PWM_LEFT == SENT_TX_1_PWM_PWM_ALIGN) */
 131:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 132:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #if (SENT_TX_1_PWM__RIGHT == SENT_TX_1_PWM_PWM_ALIGN)
 133:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                 SENT_TX_1_PWM_TRIG_CONTROL2_REG = SENT_TX_1_PWM_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #endif  /* ( SENT_TX_1_PWM_PWM_RIGHT == SENT_TX_1_PWM_PWM_ALIGN) */
 135:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 136:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #if (SENT_TX_1_PWM__CENTER == SENT_TX_1_PWM_PWM_ALIGN)
 137:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                 SENT_TX_1_PWM_TRIG_CONTROL2_REG = SENT_TX_1_PWM_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #endif  /* ( SENT_TX_1_PWM_PWM_CENTER == SENT_TX_1_PWM_PWM_ALIGN) */
 139:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 140:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #if (SENT_TX_1_PWM__ASYMMETRIC == SENT_TX_1_PWM_PWM_ALIGN)
 141:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                 SENT_TX_1_PWM_TRIG_CONTROL2_REG = SENT_TX_1_PWM_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             #endif  /* (SENT_TX_1_PWM__ASYMMETRIC == SENT_TX_1_PWM_PWM_ALIGN) */
 143:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #endif  /* (SENT_TX_1_PWM__PWM_PR == SENT_TX_1_PWM_PWM_MODE) */
 144:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 145:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_WritePeriod(SENT_TX_1_PWM_PWM_PERIOD_VALUE );
  72              		.loc 1 146 0
  73 0032 3720     		movs	r0, #55
  74 0034 FFF7FEFF 		bl	SENT_TX_1_PWM_WritePeriod
 147:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_WriteCompare(SENT_TX_1_PWM_PWM_COMPARE_VALUE);
  75              		.loc 1 147 0
  76 0038 0520     		movs	r0, #5
  77 003a FFF7FEFF 		bl	SENT_TX_1_PWM_WriteCompare
 148:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 149:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #if (1u == SENT_TX_1_PWM_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_WriteCompareBuf(SENT_TX_1_PWM_PWM_COMPARE_BUF_VALUE);
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 5


 152:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #endif  /* (1u == SENT_TX_1_PWM_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 154:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #if (1u == SENT_TX_1_PWM_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_SetPeriodSwap(1u);
  78              		.loc 1 155 0
  79 003e 0120     		movs	r0, #1
  80 0040 FFF7FEFF 		bl	SENT_TX_1_PWM_SetPeriodSwap
 156:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_WritePeriodBuf(SENT_TX_1_PWM_PWM_PERIOD_BUF_VALUE);
  81              		.loc 1 156 0
  82 0044 3720     		movs	r0, #55
  83 0046 FFF7FEFF 		bl	SENT_TX_1_PWM_WritePeriodBuf
 157:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #endif  /* (1u == SENT_TX_1_PWM_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif  /* (SENT_TX_1_PWM__PWM_SEL == SENT_TX_1_PWM_CONFIG) */
 159:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     
 160:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
  84              		.loc 1 160 0
  85 004a C046     		nop
  86 004c BD46     		mov	sp, r7
  87              		@ sp needed
  88 004e 80BD     		pop	{r7, pc}
  89              	.L3:
  90              		.align	2
  91              	.L2:
  92 0050 00010540 		.word	1074069760
  93 0054 08001004 		.word	68157448
  94 0058 24010540 		.word	1074069796
  95 005c 28010540 		.word	1074069800
  96              		.cfi_endproc
  97              	.LFE0:
  98              		.size	SENT_TX_1_PWM_Init, .-SENT_TX_1_PWM_Init
  99              		.section	.text.SENT_TX_1_PWM_Enable,"ax",%progbits
 100              		.align	2
 101              		.global	SENT_TX_1_PWM_Enable
 102              		.code	16
 103              		.thumb_func
 104              		.type	SENT_TX_1_PWM_Enable, %function
 105              	SENT_TX_1_PWM_Enable:
 106              	.LFB1:
 161:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 162:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 163:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_Enable
 165:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 166:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 167:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 168:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Enables the SENT_TX_1_PWM.
 169:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 170:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 171:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 172:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 173:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 174:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 175:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 176:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_Enable(void)
 178:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 107              		.loc 1 178 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 6


 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 8
 110              		@ frame_needed = 1, uses_anonymous_args = 0
 111 0000 90B5     		push	{r4, r7, lr}
 112              		.cfi_def_cfa_offset 12
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 83B0     		sub	sp, sp, #12
 117              		.cfi_def_cfa_offset 24
 118 0004 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 181:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 120              		.loc 1 181 0
 121 0006 FC1D     		adds	r4, r7, #7
 122 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 123 000c 0300     		movs	r3, r0
 124 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_BLOCK_CONTROL_REG |= SENT_TX_1_PWM_MASK;
 125              		.loc 1 182 0
 126 0010 094B     		ldr	r3, .L5
 127 0012 094A     		ldr	r2, .L5
 128 0014 1268     		ldr	r2, [r2]
 129 0016 0121     		movs	r1, #1
 130 0018 0A43     		orrs	r2, r1
 131 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 132              		.loc 1 183 0
 133 001c FB1D     		adds	r3, r7, #7
 134 001e 1B78     		ldrb	r3, [r3]
 135 0020 1800     		movs	r0, r3
 136 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 185:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM__PWM_SEL == SENT_TX_1_PWM_CONFIG)
 187:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #if (0u == SENT_TX_1_PWM_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_TriggerCommand(SENT_TX_1_PWM_MASK, SENT_TX_1_PWM_CMD_START);
 137              		.loc 1 188 0
 138 0026 1821     		movs	r1, #24
 139 0028 0120     		movs	r0, #1
 140 002a FFF7FEFF 		bl	SENT_TX_1_PWM_TriggerCommand
 189:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #endif /* (0u == SENT_TX_1_PWM_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif /* (SENT_TX_1_PWM__PWM_SEL == SENT_TX_1_PWM_CONFIG) */
 191:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 192:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM__TIMER == SENT_TX_1_PWM_CONFIG)
 193:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #if (0u == SENT_TX_1_PWM_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_TriggerCommand(SENT_TX_1_PWM_MASK, SENT_TX_1_PWM_CMD_START);
 195:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #endif /* (0u == SENT_TX_1_PWM_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif /* (SENT_TX_1_PWM__TIMER == SENT_TX_1_PWM_CONFIG) */
 197:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     
 198:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM__QUAD == SENT_TX_1_PWM_CONFIG)
 199:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #if (0u != SENT_TX_1_PWM_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             SENT_TX_1_PWM_TriggerCommand(SENT_TX_1_PWM_MASK, SENT_TX_1_PWM_CMD_RELOAD);
 201:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         #endif /* (0u != SENT_TX_1_PWM_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif  /* (SENT_TX_1_PWM__QUAD == SENT_TX_1_PWM_CONFIG) */
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 7


 203:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 141              		.loc 1 203 0
 142 002e C046     		nop
 143 0030 BD46     		mov	sp, r7
 144 0032 03B0     		add	sp, sp, #12
 145              		@ sp needed
 146 0034 90BD     		pop	{r4, r7, pc}
 147              	.L6:
 148 0036 C046     		.align	2
 149              	.L5:
 150 0038 00000540 		.word	1074069504
 151              		.cfi_endproc
 152              	.LFE1:
 153              		.size	SENT_TX_1_PWM_Enable, .-SENT_TX_1_PWM_Enable
 154              		.section	.text.SENT_TX_1_PWM_Start,"ax",%progbits
 155              		.align	2
 156              		.global	SENT_TX_1_PWM_Start
 157              		.code	16
 158              		.thumb_func
 159              		.type	SENT_TX_1_PWM_Start, %function
 160              	SENT_TX_1_PWM_Start:
 161              	.LFB2:
 204:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 205:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 206:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_Start
 208:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 209:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 210:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 211:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Initializes the SENT_TX_1_PWM with default customizer
 212:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  values when called the first time and enables the SENT_TX_1_PWM.
 213:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  just enabled.
 215:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 216:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 217:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 218:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 219:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 220:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 221:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 222:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Global variables:
 223:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  SENT_TX_1_PWM_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  to 1 the first time SENT_TX_1_PWM_Start() is called. This allows
 226:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  calls to the SENT_TX_1_PWM_Start() routine.
 228:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 229:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_Start(void)
 231:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 162              		.loc 1 231 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166 0000 80B5     		push	{r7, lr}
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 7, -8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 8


 169              		.cfi_offset 14, -4
 170 0002 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     if (0u == SENT_TX_1_PWM_initVar)
 172              		.loc 1 232 0
 173 0004 064B     		ldr	r3, .L9
 174 0006 1B78     		ldrb	r3, [r3]
 175 0008 002B     		cmp	r3, #0
 176 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     {
 234:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_Init();
 177              		.loc 1 234 0
 178 000c FFF7FEFF 		bl	SENT_TX_1_PWM_Init
 235:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         SENT_TX_1_PWM_initVar = 1u;
 179              		.loc 1 235 0
 180 0010 034B     		ldr	r3, .L9
 181 0012 0122     		movs	r2, #1
 182 0014 1A70     		strb	r2, [r3]
 183              	.L8:
 236:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     }
 237:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 238:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_Enable();
 184              		.loc 1 238 0
 185 0016 FFF7FEFF 		bl	SENT_TX_1_PWM_Enable
 239:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 186              		.loc 1 239 0
 187 001a C046     		nop
 188 001c BD46     		mov	sp, r7
 189              		@ sp needed
 190 001e 80BD     		pop	{r7, pc}
 191              	.L10:
 192              		.align	2
 193              	.L9:
 194 0020 00000000 		.word	SENT_TX_1_PWM_initVar
 195              		.cfi_endproc
 196              	.LFE2:
 197              		.size	SENT_TX_1_PWM_Start, .-SENT_TX_1_PWM_Start
 198              		.section	.text.SENT_TX_1_PWM_Stop,"ax",%progbits
 199              		.align	2
 200              		.global	SENT_TX_1_PWM_Stop
 201              		.code	16
 202              		.thumb_func
 203              		.type	SENT_TX_1_PWM_Stop, %function
 204              	SENT_TX_1_PWM_Stop:
 205              	.LFB3:
 240:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 241:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 242:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_Stop
 244:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 245:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 246:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 247:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Disables the SENT_TX_1_PWM.
 248:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 249:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 250:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 251:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 9


 252:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 253:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 254:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 255:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_Stop(void)
 257:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 206              		.loc 1 257 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 8
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210 0000 90B5     		push	{r4, r7, lr}
 211              		.cfi_def_cfa_offset 12
 212              		.cfi_offset 4, -12
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0002 83B0     		sub	sp, sp, #12
 216              		.cfi_def_cfa_offset 24
 217 0004 00AF     		add	r7, sp, #0
 218              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 260:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 219              		.loc 1 260 0
 220 0006 FC1D     		adds	r4, r7, #7
 221 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 222 000c 0300     		movs	r3, r0
 223 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 262:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_BLOCK_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_MASK;
 224              		.loc 1 262 0
 225 0010 074B     		ldr	r3, .L12
 226 0012 074A     		ldr	r2, .L12
 227 0014 1268     		ldr	r2, [r2]
 228 0016 0121     		movs	r1, #1
 229 0018 8A43     		bics	r2, r1
 230 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 264:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 231              		.loc 1 264 0
 232 001c FB1D     		adds	r3, r7, #7
 233 001e 1B78     		ldrb	r3, [r3]
 234 0020 1800     		movs	r0, r3
 235 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 236              		.loc 1 265 0
 237 0026 C046     		nop
 238 0028 BD46     		mov	sp, r7
 239 002a 03B0     		add	sp, sp, #12
 240              		@ sp needed
 241 002c 90BD     		pop	{r4, r7, pc}
 242              	.L13:
 243 002e C046     		.align	2
 244              	.L12:
 245 0030 00000540 		.word	1074069504
 246              		.cfi_endproc
 247              	.LFE3:
 248              		.size	SENT_TX_1_PWM_Stop, .-SENT_TX_1_PWM_Stop
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 10


 249              		.section	.text.SENT_TX_1_PWM_SetMode,"ax",%progbits
 250              		.align	2
 251              		.global	SENT_TX_1_PWM_SetMode
 252              		.code	16
 253              		.thumb_func
 254              		.type	SENT_TX_1_PWM_SetMode, %function
 255              	SENT_TX_1_PWM_SetMode:
 256              	.LFB4:
 266:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 267:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 268:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetMode
 270:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 271:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 272:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 273:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Sets the operation mode of the SENT_TX_1_PWM. This function is used when
 274:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  configured as a generic SENT_TX_1_PWM and the actual mode of operation is
 275:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 277:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 278:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  mode: Mode for the SENT_TX_1_PWM to operate in
 279:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
 280:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   - SENT_TX_1_PWM_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_MODE_PWM - PWM
 286:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 289:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 290:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 291:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 292:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 257              		.loc 1 294 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 16
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 90B5     		push	{r4, r7, lr}
 262              		.cfi_def_cfa_offset 12
 263              		.cfi_offset 4, -12
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 0002 85B0     		sub	sp, sp, #20
 267              		.cfi_def_cfa_offset 32
 268 0004 00AF     		add	r7, sp, #0
 269              		.cfi_def_cfa_register 7
 270 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 297:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 271              		.loc 1 297 0
 272 0008 0F23     		movs	r3, #15
 273 000a FC18     		adds	r4, r7, r3
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 11


 274 000c FFF7FEFF 		bl	CyEnterCriticalSection
 275 0010 0300     		movs	r3, r0
 276 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 299:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_MODE_MASK;
 277              		.loc 1 299 0
 278 0014 0A4B     		ldr	r3, .L15
 279 0016 0A4A     		ldr	r2, .L15
 280 0018 1268     		ldr	r2, [r2]
 281 001a 0A49     		ldr	r1, .L15+4
 282 001c 0A40     		ands	r2, r1
 283 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG |= mode;
 284              		.loc 1 300 0
 285 0020 074B     		ldr	r3, .L15
 286 0022 074A     		ldr	r2, .L15
 287 0024 1168     		ldr	r1, [r2]
 288 0026 7A68     		ldr	r2, [r7, #4]
 289 0028 0A43     		orrs	r2, r1
 290 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 302:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 291              		.loc 1 302 0
 292 002c 0F23     		movs	r3, #15
 293 002e FB18     		adds	r3, r7, r3
 294 0030 1B78     		ldrb	r3, [r3]
 295 0032 1800     		movs	r0, r3
 296 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 297              		.loc 1 303 0
 298 0038 C046     		nop
 299 003a BD46     		mov	sp, r7
 300 003c 05B0     		add	sp, sp, #20
 301              		@ sp needed
 302 003e 90BD     		pop	{r4, r7, pc}
 303              	.L16:
 304              		.align	2
 305              	.L15:
 306 0040 00010540 		.word	1074069760
 307 0044 FFFFFFF8 		.word	-117440513
 308              		.cfi_endproc
 309              	.LFE4:
 310              		.size	SENT_TX_1_PWM_SetMode, .-SENT_TX_1_PWM_SetMode
 311              		.section	.text.SENT_TX_1_PWM_SetQDMode,"ax",%progbits
 312              		.align	2
 313              		.global	SENT_TX_1_PWM_SetQDMode
 314              		.code	16
 315              		.thumb_func
 316              		.type	SENT_TX_1_PWM_SetQDMode, %function
 317              	SENT_TX_1_PWM_SetQDMode:
 318              	.LFB5:
 304:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 305:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 306:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetQDMode
 308:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 309:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 12


 310:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 311:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 314:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 315:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
 317:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 322:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 323:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 324:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 325:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 319              		.loc 1 327 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 16
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323 0000 90B5     		push	{r4, r7, lr}
 324              		.cfi_def_cfa_offset 12
 325              		.cfi_offset 4, -12
 326              		.cfi_offset 7, -8
 327              		.cfi_offset 14, -4
 328 0002 85B0     		sub	sp, sp, #20
 329              		.cfi_def_cfa_offset 32
 330 0004 00AF     		add	r7, sp, #0
 331              		.cfi_def_cfa_register 7
 332 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 330:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 333              		.loc 1 330 0
 334 0008 0F23     		movs	r3, #15
 335 000a FC18     		adds	r4, r7, r3
 336 000c FFF7FEFF 		bl	CyEnterCriticalSection
 337 0010 0300     		movs	r3, r0
 338 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 332:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_QUAD_MODE_MASK;
 339              		.loc 1 332 0
 340 0014 0A4B     		ldr	r3, .L18
 341 0016 0A4A     		ldr	r2, .L18
 342 0018 1268     		ldr	r2, [r2]
 343 001a 0A49     		ldr	r1, .L18+4
 344 001c 0A40     		ands	r2, r1
 345 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG |= qdMode;
 346              		.loc 1 333 0
 347 0020 074B     		ldr	r3, .L18
 348 0022 074A     		ldr	r2, .L18
 349 0024 1168     		ldr	r1, [r2]
 350 0026 7A68     		ldr	r2, [r7, #4]
 351 0028 0A43     		orrs	r2, r1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 13


 352 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 335:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 353              		.loc 1 335 0
 354 002c 0F23     		movs	r3, #15
 355 002e FB18     		adds	r3, r7, r3
 356 0030 1B78     		ldrb	r3, [r3]
 357 0032 1800     		movs	r0, r3
 358 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 359              		.loc 1 336 0
 360 0038 C046     		nop
 361 003a BD46     		mov	sp, r7
 362 003c 05B0     		add	sp, sp, #20
 363              		@ sp needed
 364 003e 90BD     		pop	{r4, r7, pc}
 365              	.L19:
 366              		.align	2
 367              	.L18:
 368 0040 00010540 		.word	1074069760
 369 0044 FFFF8FFF 		.word	-7340033
 370              		.cfi_endproc
 371              	.LFE5:
 372              		.size	SENT_TX_1_PWM_SetQDMode, .-SENT_TX_1_PWM_SetQDMode
 373              		.section	.text.SENT_TX_1_PWM_SetPrescaler,"ax",%progbits
 374              		.align	2
 375              		.global	SENT_TX_1_PWM_SetPrescaler
 376              		.code	16
 377              		.thumb_func
 378              		.type	SENT_TX_1_PWM_SetPrescaler, %function
 379              	SENT_TX_1_PWM_SetPrescaler:
 380              	.LFB6:
 337:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 338:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 339:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetPrescaler
 341:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 342:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 343:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 344:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 347:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 348:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
 350:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 359:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 360:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 361:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 14


 362:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 381              		.loc 1 364 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 16
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 90B5     		push	{r4, r7, lr}
 386              		.cfi_def_cfa_offset 12
 387              		.cfi_offset 4, -12
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 85B0     		sub	sp, sp, #20
 391              		.cfi_def_cfa_offset 32
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
 394 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 367:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 395              		.loc 1 367 0
 396 0008 0F23     		movs	r3, #15
 397 000a FC18     		adds	r4, r7, r3
 398 000c FFF7FEFF 		bl	CyEnterCriticalSection
 399 0010 0300     		movs	r3, r0
 400 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 369:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_PRESCALER_MASK;
 401              		.loc 1 369 0
 402 0014 0A4B     		ldr	r3, .L21
 403 0016 0A4A     		ldr	r2, .L21
 404 0018 1268     		ldr	r2, [r2]
 405 001a 0A49     		ldr	r1, .L21+4
 406 001c 0A40     		ands	r2, r1
 407 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG |= prescaler;
 408              		.loc 1 370 0
 409 0020 074B     		ldr	r3, .L21
 410 0022 074A     		ldr	r2, .L21
 411 0024 1168     		ldr	r1, [r2]
 412 0026 7A68     		ldr	r2, [r7, #4]
 413 0028 0A43     		orrs	r2, r1
 414 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 372:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 415              		.loc 1 372 0
 416 002c 0F23     		movs	r3, #15
 417 002e FB18     		adds	r3, r7, r3
 418 0030 1B78     		ldrb	r3, [r3]
 419 0032 1800     		movs	r0, r3
 420 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 421              		.loc 1 373 0
 422 0038 C046     		nop
 423 003a BD46     		mov	sp, r7
 424 003c 05B0     		add	sp, sp, #20
 425              		@ sp needed
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 15


 426 003e 90BD     		pop	{r4, r7, pc}
 427              	.L22:
 428              		.align	2
 429              	.L21:
 430 0040 00010540 		.word	1074069760
 431 0044 FF00FFFF 		.word	-65281
 432              		.cfi_endproc
 433              	.LFE6:
 434              		.size	SENT_TX_1_PWM_SetPrescaler, .-SENT_TX_1_PWM_SetPrescaler
 435              		.section	.text.SENT_TX_1_PWM_SetOneShot,"ax",%progbits
 436              		.align	2
 437              		.global	SENT_TX_1_PWM_SetOneShot
 438              		.code	16
 439              		.thumb_func
 440              		.type	SENT_TX_1_PWM_SetOneShot, %function
 441              	SENT_TX_1_PWM_SetOneShot:
 442              	.LFB7:
 374:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 375:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 376:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetOneShot
 378:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 379:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 380:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 381:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the register that controls whether the SENT_TX_1_PWM runs
 382:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  SENT_TX_1_PWM operates in the continuous mode.
 384:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 385:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 386:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
 388:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 391:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 392:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 393:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 394:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 443              		.loc 1 396 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 16
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447 0000 90B5     		push	{r4, r7, lr}
 448              		.cfi_def_cfa_offset 12
 449              		.cfi_offset 4, -12
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 85B0     		sub	sp, sp, #20
 453              		.cfi_def_cfa_offset 32
 454 0004 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 456 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 399:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 16


 457              		.loc 1 399 0
 458 0008 0F23     		movs	r3, #15
 459 000a FC18     		adds	r4, r7, r3
 460 000c FFF7FEFF 		bl	CyEnterCriticalSection
 461 0010 0300     		movs	r3, r0
 462 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 401:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_ONESHOT_MASK;
 463              		.loc 1 401 0
 464 0014 0C4B     		ldr	r3, .L24
 465 0016 0C4A     		ldr	r2, .L24
 466 0018 1268     		ldr	r2, [r2]
 467 001a 0C49     		ldr	r1, .L24+4
 468 001c 0A40     		ands	r2, r1
 469 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG |= ((uint32)((oneShotEnable & SENT_TX_1_PWM_1BIT_MASK) <<
 470              		.loc 1 402 0
 471 0020 094B     		ldr	r3, .L24
 472 0022 094A     		ldr	r2, .L24
 473 0024 1168     		ldr	r1, [r2]
 474 0026 7A68     		ldr	r2, [r7, #4]
 475 0028 9004     		lsls	r0, r2, #18
 476 002a 8022     		movs	r2, #128
 477 002c D202     		lsls	r2, r2, #11
 478 002e 0240     		ands	r2, r0
 479 0030 0A43     		orrs	r2, r1
 480 0032 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                                                                SENT_TX_1_PWM_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 405:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 481              		.loc 1 405 0
 482 0034 0F23     		movs	r3, #15
 483 0036 FB18     		adds	r3, r7, r3
 484 0038 1B78     		ldrb	r3, [r3]
 485 003a 1800     		movs	r0, r3
 486 003c FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 487              		.loc 1 406 0
 488 0040 C046     		nop
 489 0042 BD46     		mov	sp, r7
 490 0044 05B0     		add	sp, sp, #20
 491              		@ sp needed
 492 0046 90BD     		pop	{r4, r7, pc}
 493              	.L25:
 494              		.align	2
 495              	.L24:
 496 0048 00010540 		.word	1074069760
 497 004c FFFFFBFF 		.word	-262145
 498              		.cfi_endproc
 499              	.LFE7:
 500              		.size	SENT_TX_1_PWM_SetOneShot, .-SENT_TX_1_PWM_SetOneShot
 501              		.section	.text.SENT_TX_1_PWM_SetPWMMode,"ax",%progbits
 502              		.align	2
 503              		.global	SENT_TX_1_PWM_SetPWMMode
 504              		.code	16
 505              		.thumb_func
 506              		.type	SENT_TX_1_PWM_SetPWMMode, %function
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 17


 507              	SENT_TX_1_PWM_SetPWMMode:
 508              	.LFB8:
 407:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 408:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 409:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetPWMMode
 411:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 412:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 413:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 414:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  the mode.
 419:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 420:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 421:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
 424:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 445:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 446:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 447:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 448:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 509              		.loc 1 450 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 8
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513 0000 80B5     		push	{r7, lr}
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 82B0     		sub	sp, sp, #8
 518              		.cfi_def_cfa_offset 16
 519 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 18


 520              		.cfi_def_cfa_register 7
 521 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_TRIG_CONTROL2_REG = (modeMask & SENT_TX_1_PWM_6BIT_MASK);
 522              		.loc 1 451 0
 523 0008 044B     		ldr	r3, .L27
 524 000a 7A68     		ldr	r2, [r7, #4]
 525 000c 3F21     		movs	r1, #63
 526 000e 0A40     		ands	r2, r1
 527 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 528              		.loc 1 452 0
 529 0012 C046     		nop
 530 0014 BD46     		mov	sp, r7
 531 0016 02B0     		add	sp, sp, #8
 532              		@ sp needed
 533 0018 80BD     		pop	{r7, pc}
 534              	.L28:
 535 001a C046     		.align	2
 536              	.L27:
 537 001c 28010540 		.word	1074069800
 538              		.cfi_endproc
 539              	.LFE8:
 540              		.size	SENT_TX_1_PWM_SetPWMMode, .-SENT_TX_1_PWM_SetPWMMode
 541              		.section	.text.SENT_TX_1_PWM_SetPWMSyncKill,"ax",%progbits
 542              		.align	2
 543              		.global	SENT_TX_1_PWM_SetPWMSyncKill
 544              		.code	16
 545              		.thumb_func
 546              		.type	SENT_TX_1_PWM_SetPWMSyncKill, %function
 547              	SENT_TX_1_PWM_SetPWMSyncKill:
 548              	.LFB9:
 453:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 454:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 455:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 456:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetPWMSyncKill
 458:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 459:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 460:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 461:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 466:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 469:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 474:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 475:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 476:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
 478:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - 0 - Asynchronous
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 19


 479:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 481:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 482:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 483:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 484:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 549              		.loc 1 486 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 16
 552              		@ frame_needed = 1, uses_anonymous_args = 0
 553 0000 90B5     		push	{r4, r7, lr}
 554              		.cfi_def_cfa_offset 12
 555              		.cfi_offset 4, -12
 556              		.cfi_offset 7, -8
 557              		.cfi_offset 14, -4
 558 0002 85B0     		sub	sp, sp, #20
 559              		.cfi_def_cfa_offset 32
 560 0004 00AF     		add	r7, sp, #0
 561              		.cfi_def_cfa_register 7
 562 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 489:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 563              		.loc 1 489 0
 564 0008 0F23     		movs	r3, #15
 565 000a FC18     		adds	r4, r7, r3
 566 000c FFF7FEFF 		bl	CyEnterCriticalSection
 567 0010 0300     		movs	r3, r0
 568 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 491:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_PWM_SYNC_KILL_MASK;
 569              		.loc 1 491 0
 570 0014 0C4B     		ldr	r3, .L30
 571 0016 0C4A     		ldr	r2, .L30
 572 0018 1268     		ldr	r2, [r2]
 573 001a 0421     		movs	r1, #4
 574 001c 8A43     		bics	r2, r1
 575 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG |= ((uint32)((syncKillEnable & SENT_TX_1_PWM_1BIT_MASK)  <<
 576              		.loc 1 492 0
 577 0020 094B     		ldr	r3, .L30
 578 0022 094A     		ldr	r2, .L30
 579 0024 1168     		ldr	r1, [r2]
 580 0026 7A68     		ldr	r2, [r7, #4]
 581 0028 9200     		lsls	r2, r2, #2
 582 002a 0420     		movs	r0, #4
 583 002c 0240     		ands	r2, r0
 584 002e 0A43     		orrs	r2, r1
 585 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                                                SENT_TX_1_PWM_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 495:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 586              		.loc 1 495 0
 587 0032 0F23     		movs	r3, #15
 588 0034 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 20


 589 0036 1B78     		ldrb	r3, [r3]
 590 0038 1800     		movs	r0, r3
 591 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 592              		.loc 1 496 0
 593 003e C046     		nop
 594 0040 BD46     		mov	sp, r7
 595 0042 05B0     		add	sp, sp, #20
 596              		@ sp needed
 597 0044 90BD     		pop	{r4, r7, pc}
 598              	.L31:
 599 0046 C046     		.align	2
 600              	.L30:
 601 0048 00010540 		.word	1074069760
 602              		.cfi_endproc
 603              	.LFE9:
 604              		.size	SENT_TX_1_PWM_SetPWMSyncKill, .-SENT_TX_1_PWM_SetPWMSyncKill
 605              		.section	.text.SENT_TX_1_PWM_SetPWMStopOnKill,"ax",%progbits
 606              		.align	2
 607              		.global	SENT_TX_1_PWM_SetPWMStopOnKill
 608              		.code	16
 609              		.thumb_func
 610              		.type	SENT_TX_1_PWM_SetPWMStopOnKill, %function
 611              	SENT_TX_1_PWM_SetPWMStopOnKill:
 612              	.LFB10:
 497:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 498:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 499:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetPWMStopOnKill
 501:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 502:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 503:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 504:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 508:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 509:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 510:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
 512:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 515:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 516:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 517:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 518:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 613              		.loc 1 520 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 16
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617 0000 90B5     		push	{r4, r7, lr}
 618              		.cfi_def_cfa_offset 12
 619              		.cfi_offset 4, -12
 620              		.cfi_offset 7, -8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 21


 621              		.cfi_offset 14, -4
 622 0002 85B0     		sub	sp, sp, #20
 623              		.cfi_def_cfa_offset 32
 624 0004 00AF     		add	r7, sp, #0
 625              		.cfi_def_cfa_register 7
 626 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 523:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 627              		.loc 1 523 0
 628 0008 0F23     		movs	r3, #15
 629 000a FC18     		adds	r4, r7, r3
 630 000c FFF7FEFF 		bl	CyEnterCriticalSection
 631 0010 0300     		movs	r3, r0
 632 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 525:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_PWM_STOP_KILL_MASK;
 633              		.loc 1 525 0
 634 0014 0C4B     		ldr	r3, .L33
 635 0016 0C4A     		ldr	r2, .L33
 636 0018 1268     		ldr	r2, [r2]
 637 001a 0821     		movs	r1, #8
 638 001c 8A43     		bics	r2, r1
 639 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & SENT_TX_1_PWM_1BIT_MASK)  <<
 640              		.loc 1 526 0
 641 0020 094B     		ldr	r3, .L33
 642 0022 094A     		ldr	r2, .L33
 643 0024 1168     		ldr	r1, [r2]
 644 0026 7A68     		ldr	r2, [r7, #4]
 645 0028 D200     		lsls	r2, r2, #3
 646 002a 0820     		movs	r0, #8
 647 002c 0240     		ands	r2, r0
 648 002e 0A43     		orrs	r2, r1
 649 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                                                          SENT_TX_1_PWM_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 529:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 650              		.loc 1 529 0
 651 0032 0F23     		movs	r3, #15
 652 0034 FB18     		adds	r3, r7, r3
 653 0036 1B78     		ldrb	r3, [r3]
 654 0038 1800     		movs	r0, r3
 655 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 656              		.loc 1 530 0
 657 003e C046     		nop
 658 0040 BD46     		mov	sp, r7
 659 0042 05B0     		add	sp, sp, #20
 660              		@ sp needed
 661 0044 90BD     		pop	{r4, r7, pc}
 662              	.L34:
 663 0046 C046     		.align	2
 664              	.L33:
 665 0048 00010540 		.word	1074069760
 666              		.cfi_endproc
 667              	.LFE10:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 22


 668              		.size	SENT_TX_1_PWM_SetPWMStopOnKill, .-SENT_TX_1_PWM_SetPWMStopOnKill
 669              		.section	.text.SENT_TX_1_PWM_SetPWMDeadTime,"ax",%progbits
 670              		.align	2
 671              		.global	SENT_TX_1_PWM_SetPWMDeadTime
 672              		.code	16
 673              		.thumb_func
 674              		.type	SENT_TX_1_PWM_SetPWMDeadTime, %function
 675              	SENT_TX_1_PWM_SetPWMDeadTime:
 676              	.LFB11:
 531:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 532:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 533:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetPWMDeadTime
 535:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 536:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 537:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 538:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 543:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 544:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 545:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 548:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 549:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 550:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 551:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 677              		.loc 1 553 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 16
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 90B5     		push	{r4, r7, lr}
 682              		.cfi_def_cfa_offset 12
 683              		.cfi_offset 4, -12
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 85B0     		sub	sp, sp, #20
 687              		.cfi_def_cfa_offset 32
 688 0004 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 690 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 556:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 691              		.loc 1 556 0
 692 0008 0F23     		movs	r3, #15
 693 000a FC18     		adds	r4, r7, r3
 694 000c FFF7FEFF 		bl	CyEnterCriticalSection
 695 0010 0300     		movs	r3, r0
 696 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 558:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_PRESCALER_MASK;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 23


 697              		.loc 1 558 0
 698 0014 0C4B     		ldr	r3, .L36
 699 0016 0C4A     		ldr	r2, .L36
 700 0018 1268     		ldr	r2, [r2]
 701 001a 0C49     		ldr	r1, .L36+4
 702 001c 0A40     		ands	r2, r1
 703 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG |= ((uint32)((deadTime & SENT_TX_1_PWM_8BIT_MASK) <<
 704              		.loc 1 559 0
 705 0020 094B     		ldr	r3, .L36
 706 0022 094A     		ldr	r2, .L36
 707 0024 1168     		ldr	r1, [r2]
 708 0026 7A68     		ldr	r2, [r7, #4]
 709 0028 1202     		lsls	r2, r2, #8
 710 002a 1204     		lsls	r2, r2, #16
 711 002c 120C     		lsrs	r2, r2, #16
 712 002e 0A43     		orrs	r2, r1
 713 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                                                           SENT_TX_1_PWM_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 562:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 714              		.loc 1 562 0
 715 0032 0F23     		movs	r3, #15
 716 0034 FB18     		adds	r3, r7, r3
 717 0036 1B78     		ldrb	r3, [r3]
 718 0038 1800     		movs	r0, r3
 719 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 720              		.loc 1 563 0
 721 003e C046     		nop
 722 0040 BD46     		mov	sp, r7
 723 0042 05B0     		add	sp, sp, #20
 724              		@ sp needed
 725 0044 90BD     		pop	{r4, r7, pc}
 726              	.L37:
 727 0046 C046     		.align	2
 728              	.L36:
 729 0048 00010540 		.word	1074069760
 730 004c FF00FFFF 		.word	-65281
 731              		.cfi_endproc
 732              	.LFE11:
 733              		.size	SENT_TX_1_PWM_SetPWMDeadTime, .-SENT_TX_1_PWM_SetPWMDeadTime
 734              		.section	.text.SENT_TX_1_PWM_SetPWMInvert,"ax",%progbits
 735              		.align	2
 736              		.global	SENT_TX_1_PWM_SetPWMInvert
 737              		.code	16
 738              		.thumb_func
 739              		.type	SENT_TX_1_PWM_SetPWMInvert, %function
 740              	SENT_TX_1_PWM_SetPWMInvert:
 741              	.LFB12:
 564:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 565:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 566:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetPWMInvert
 568:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 569:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 570:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 24


 571:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 575:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 576:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
 578:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *         - SENT_TX_1_PWM_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 581:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 582:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 583:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 584:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 742              		.loc 1 586 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 16
 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746 0000 90B5     		push	{r4, r7, lr}
 747              		.cfi_def_cfa_offset 12
 748              		.cfi_offset 4, -12
 749              		.cfi_offset 7, -8
 750              		.cfi_offset 14, -4
 751 0002 85B0     		sub	sp, sp, #20
 752              		.cfi_def_cfa_offset 32
 753 0004 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 755 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 589:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 756              		.loc 1 589 0
 757 0008 0F23     		movs	r3, #15
 758 000a FC18     		adds	r4, r7, r3
 759 000c FFF7FEFF 		bl	CyEnterCriticalSection
 760 0010 0300     		movs	r3, r0
 761 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 591:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_INV_OUT_MASK;
 762              		.loc 1 591 0
 763 0014 0A4B     		ldr	r3, .L39
 764 0016 0A4A     		ldr	r2, .L39
 765 0018 1268     		ldr	r2, [r2]
 766 001a 0A49     		ldr	r1, .L39+4
 767 001c 0A40     		ands	r2, r1
 768 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG |= mask;
 769              		.loc 1 592 0
 770 0020 074B     		ldr	r3, .L39
 771 0022 074A     		ldr	r2, .L39
 772 0024 1168     		ldr	r1, [r2]
 773 0026 7A68     		ldr	r2, [r7, #4]
 774 0028 0A43     		orrs	r2, r1
 775 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 25


 594:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 776              		.loc 1 594 0
 777 002c 0F23     		movs	r3, #15
 778 002e FB18     		adds	r3, r7, r3
 779 0030 1B78     		ldrb	r3, [r3]
 780 0032 1800     		movs	r0, r3
 781 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 782              		.loc 1 595 0
 783 0038 C046     		nop
 784 003a BD46     		mov	sp, r7
 785 003c 05B0     		add	sp, sp, #20
 786              		@ sp needed
 787 003e 90BD     		pop	{r4, r7, pc}
 788              	.L40:
 789              		.align	2
 790              	.L39:
 791 0040 00010540 		.word	1074069760
 792 0044 FFFFCFFF 		.word	-3145729
 793              		.cfi_endproc
 794              	.LFE12:
 795              		.size	SENT_TX_1_PWM_SetPWMInvert, .-SENT_TX_1_PWM_SetPWMInvert
 796              		.section	.text.SENT_TX_1_PWM_WriteCounter,"ax",%progbits
 797              		.align	2
 798              		.global	SENT_TX_1_PWM_WriteCounter
 799              		.code	16
 800              		.thumb_func
 801              		.type	SENT_TX_1_PWM_WriteCounter, %function
 802              	SENT_TX_1_PWM_WriteCounter:
 803              	.LFB13:
 596:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 597:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 598:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 599:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_WriteCounter
 601:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 602:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 603:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 604:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 608:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 609:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  count: value to write
 610:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 611:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 612:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 613:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 614:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 804              		.loc 1 616 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 8
 807              		@ frame_needed = 1, uses_anonymous_args = 0
 808 0000 80B5     		push	{r7, lr}
 809              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 26


 810              		.cfi_offset 7, -8
 811              		.cfi_offset 14, -4
 812 0002 82B0     		sub	sp, sp, #8
 813              		.cfi_def_cfa_offset 16
 814 0004 00AF     		add	r7, sp, #0
 815              		.cfi_def_cfa_register 7
 816 0006 7860     		str	r0, [r7, #4]
 617:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_COUNTER_REG = (count & SENT_TX_1_PWM_16BIT_MASK);
 817              		.loc 1 617 0
 818 0008 044B     		ldr	r3, .L42
 819 000a 7A68     		ldr	r2, [r7, #4]
 820 000c 1204     		lsls	r2, r2, #16
 821 000e 120C     		lsrs	r2, r2, #16
 822 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 823              		.loc 1 618 0
 824 0012 C046     		nop
 825 0014 BD46     		mov	sp, r7
 826 0016 02B0     		add	sp, sp, #8
 827              		@ sp needed
 828 0018 80BD     		pop	{r7, pc}
 829              	.L43:
 830 001a C046     		.align	2
 831              	.L42:
 832 001c 08010540 		.word	1074069768
 833              		.cfi_endproc
 834              	.LFE13:
 835              		.size	SENT_TX_1_PWM_WriteCounter, .-SENT_TX_1_PWM_WriteCounter
 836              		.section	.text.SENT_TX_1_PWM_ReadCounter,"ax",%progbits
 837              		.align	2
 838              		.global	SENT_TX_1_PWM_ReadCounter
 839              		.code	16
 840              		.thumb_func
 841              		.type	SENT_TX_1_PWM_ReadCounter, %function
 842              	SENT_TX_1_PWM_ReadCounter:
 843              	.LFB14:
 619:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 620:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 621:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_ReadCounter
 623:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 624:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 625:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 626:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 628:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 629:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 630:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 631:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 632:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Current counter value
 633:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 634:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** uint32 SENT_TX_1_PWM_ReadCounter(void)
 636:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 844              		.loc 1 636 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 27


 847              		@ frame_needed = 1, uses_anonymous_args = 0
 848 0000 80B5     		push	{r7, lr}
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 7, -8
 851              		.cfi_offset 14, -4
 852 0002 00AF     		add	r7, sp, #0
 853              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     return (SENT_TX_1_PWM_COUNTER_REG & SENT_TX_1_PWM_16BIT_MASK);
 854              		.loc 1 637 0
 855 0004 034B     		ldr	r3, .L46
 856 0006 1B68     		ldr	r3, [r3]
 857 0008 1B04     		lsls	r3, r3, #16
 858 000a 1B0C     		lsrs	r3, r3, #16
 638:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 859              		.loc 1 638 0
 860 000c 1800     		movs	r0, r3
 861 000e BD46     		mov	sp, r7
 862              		@ sp needed
 863 0010 80BD     		pop	{r7, pc}
 864              	.L47:
 865 0012 C046     		.align	2
 866              	.L46:
 867 0014 08010540 		.word	1074069768
 868              		.cfi_endproc
 869              	.LFE14:
 870              		.size	SENT_TX_1_PWM_ReadCounter, .-SENT_TX_1_PWM_ReadCounter
 871              		.section	.text.SENT_TX_1_PWM_SetCounterMode,"ax",%progbits
 872              		.align	2
 873              		.global	SENT_TX_1_PWM_SetCounterMode
 874              		.code	16
 875              		.thumb_func
 876              		.type	SENT_TX_1_PWM_SetCounterMode, %function
 877              	SENT_TX_1_PWM_SetCounterMode:
 878              	.LFB15:
 639:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 640:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 641:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetCounterMode
 643:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 644:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 645:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 646:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 649:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 650:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
 652:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *                                         and period
 659:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 660:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 661:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 28


 662:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 663:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 879              		.loc 1 665 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 16
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883 0000 90B5     		push	{r4, r7, lr}
 884              		.cfi_def_cfa_offset 12
 885              		.cfi_offset 4, -12
 886              		.cfi_offset 7, -8
 887              		.cfi_offset 14, -4
 888 0002 85B0     		sub	sp, sp, #20
 889              		.cfi_def_cfa_offset 32
 890 0004 00AF     		add	r7, sp, #0
 891              		.cfi_def_cfa_register 7
 892 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 668:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 893              		.loc 1 668 0
 894 0008 0F23     		movs	r3, #15
 895 000a FC18     		adds	r4, r7, r3
 896 000c FFF7FEFF 		bl	CyEnterCriticalSection
 897 0010 0300     		movs	r3, r0
 898 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 670:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_UPDOWN_MASK;
 899              		.loc 1 670 0
 900 0014 0A4B     		ldr	r3, .L49
 901 0016 0A4A     		ldr	r2, .L49
 902 0018 1268     		ldr	r2, [r2]
 903 001a 0A49     		ldr	r1, .L49+4
 904 001c 0A40     		ands	r2, r1
 905 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG |= counterMode;
 906              		.loc 1 671 0
 907 0020 074B     		ldr	r3, .L49
 908 0022 074A     		ldr	r2, .L49
 909 0024 1168     		ldr	r1, [r2]
 910 0026 7A68     		ldr	r2, [r7, #4]
 911 0028 0A43     		orrs	r2, r1
 912 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 673:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 913              		.loc 1 673 0
 914 002c 0F23     		movs	r3, #15
 915 002e FB18     		adds	r3, r7, r3
 916 0030 1B78     		ldrb	r3, [r3]
 917 0032 1800     		movs	r0, r3
 918 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 919              		.loc 1 674 0
 920 0038 C046     		nop
 921 003a BD46     		mov	sp, r7
 922 003c 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 29


 923              		@ sp needed
 924 003e 90BD     		pop	{r4, r7, pc}
 925              	.L50:
 926              		.align	2
 927              	.L49:
 928 0040 00010540 		.word	1074069760
 929 0044 FFFFFCFF 		.word	-196609
 930              		.cfi_endproc
 931              	.LFE15:
 932              		.size	SENT_TX_1_PWM_SetCounterMode, .-SENT_TX_1_PWM_SetCounterMode
 933              		.section	.text.SENT_TX_1_PWM_WritePeriod,"ax",%progbits
 934              		.align	2
 935              		.global	SENT_TX_1_PWM_WritePeriod
 936              		.code	16
 937              		.thumb_func
 938              		.type	SENT_TX_1_PWM_WritePeriod, %function
 939              	SENT_TX_1_PWM_WritePeriod:
 940              	.LFB16:
 675:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 676:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 677:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_WritePeriod
 679:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 680:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 681:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 682:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 686:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 687:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  period: Period value
 688:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 689:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 690:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 691:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 692:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 941              		.loc 1 694 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 8
 944              		@ frame_needed = 1, uses_anonymous_args = 0
 945 0000 80B5     		push	{r7, lr}
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 7, -8
 948              		.cfi_offset 14, -4
 949 0002 82B0     		sub	sp, sp, #8
 950              		.cfi_def_cfa_offset 16
 951 0004 00AF     		add	r7, sp, #0
 952              		.cfi_def_cfa_register 7
 953 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_PERIOD_REG = (period & SENT_TX_1_PWM_16BIT_MASK);
 954              		.loc 1 695 0
 955 0008 044B     		ldr	r3, .L52
 956 000a 7A68     		ldr	r2, [r7, #4]
 957 000c 1204     		lsls	r2, r2, #16
 958 000e 120C     		lsrs	r2, r2, #16
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 30


 959 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 960              		.loc 1 696 0
 961 0012 C046     		nop
 962 0014 BD46     		mov	sp, r7
 963 0016 02B0     		add	sp, sp, #8
 964              		@ sp needed
 965 0018 80BD     		pop	{r7, pc}
 966              	.L53:
 967 001a C046     		.align	2
 968              	.L52:
 969 001c 14010540 		.word	1074069780
 970              		.cfi_endproc
 971              	.LFE16:
 972              		.size	SENT_TX_1_PWM_WritePeriod, .-SENT_TX_1_PWM_WritePeriod
 973              		.section	.text.SENT_TX_1_PWM_ReadPeriod,"ax",%progbits
 974              		.align	2
 975              		.global	SENT_TX_1_PWM_ReadPeriod
 976              		.code	16
 977              		.thumb_func
 978              		.type	SENT_TX_1_PWM_ReadPeriod, %function
 979              	SENT_TX_1_PWM_ReadPeriod:
 980              	.LFB17:
 697:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 698:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 699:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_ReadPeriod
 701:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 702:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 703:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 704:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 706:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 707:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 708:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 709:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 710:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Period value
 711:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 712:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** uint32 SENT_TX_1_PWM_ReadPeriod(void)
 714:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 981              		.loc 1 714 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985 0000 80B5     		push	{r7, lr}
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 7, -8
 988              		.cfi_offset 14, -4
 989 0002 00AF     		add	r7, sp, #0
 990              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     return (SENT_TX_1_PWM_PERIOD_REG & SENT_TX_1_PWM_16BIT_MASK);
 991              		.loc 1 715 0
 992 0004 034B     		ldr	r3, .L56
 993 0006 1B68     		ldr	r3, [r3]
 994 0008 1B04     		lsls	r3, r3, #16
 995 000a 1B0C     		lsrs	r3, r3, #16
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 31


 716:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 996              		.loc 1 716 0
 997 000c 1800     		movs	r0, r3
 998 000e BD46     		mov	sp, r7
 999              		@ sp needed
 1000 0010 80BD     		pop	{r7, pc}
 1001              	.L57:
 1002 0012 C046     		.align	2
 1003              	.L56:
 1004 0014 14010540 		.word	1074069780
 1005              		.cfi_endproc
 1006              	.LFE17:
 1007              		.size	SENT_TX_1_PWM_ReadPeriod, .-SENT_TX_1_PWM_ReadPeriod
 1008              		.section	.text.SENT_TX_1_PWM_SetCompareSwap,"ax",%progbits
 1009              		.align	2
 1010              		.global	SENT_TX_1_PWM_SetCompareSwap
 1011              		.code	16
 1012              		.thumb_func
 1013              		.type	SENT_TX_1_PWM_SetCompareSwap, %function
 1014              	SENT_TX_1_PWM_SetCompareSwap:
 1015              	.LFB18:
 717:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 718:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 719:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetCompareSwap
 721:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 722:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 723:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 724:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 729:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 730:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  swapEnable
 731:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
 732:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 735:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 736:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 737:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 738:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1016              		.loc 1 740 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 16
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020 0000 90B5     		push	{r4, r7, lr}
 1021              		.cfi_def_cfa_offset 12
 1022              		.cfi_offset 4, -12
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 85B0     		sub	sp, sp, #20
 1026              		.cfi_def_cfa_offset 32
 1027 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 32


 1028              		.cfi_def_cfa_register 7
 1029 0006 7860     		str	r0, [r7, #4]
 741:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 743:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1030              		.loc 1 743 0
 1031 0008 0F23     		movs	r3, #15
 1032 000a FC18     		adds	r4, r7, r3
 1033 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1034 0010 0300     		movs	r3, r0
 1035 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 745:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_RELOAD_CC_MASK;
 1036              		.loc 1 745 0
 1037 0014 0B4B     		ldr	r3, .L59
 1038 0016 0B4A     		ldr	r2, .L59
 1039 0018 1268     		ldr	r2, [r2]
 1040 001a 0121     		movs	r1, #1
 1041 001c 8A43     		bics	r2, r1
 1042 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG |= (swapEnable & SENT_TX_1_PWM_1BIT_MASK);
 1043              		.loc 1 746 0
 1044 0020 084B     		ldr	r3, .L59
 1045 0022 084A     		ldr	r2, .L59
 1046 0024 1168     		ldr	r1, [r2]
 1047 0026 7A68     		ldr	r2, [r7, #4]
 1048 0028 0120     		movs	r0, #1
 1049 002a 0240     		ands	r2, r0
 1050 002c 0A43     		orrs	r2, r1
 1051 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 748:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1052              		.loc 1 748 0
 1053 0030 0F23     		movs	r3, #15
 1054 0032 FB18     		adds	r3, r7, r3
 1055 0034 1B78     		ldrb	r3, [r3]
 1056 0036 1800     		movs	r0, r3
 1057 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1058              		.loc 1 749 0
 1059 003c C046     		nop
 1060 003e BD46     		mov	sp, r7
 1061 0040 05B0     		add	sp, sp, #20
 1062              		@ sp needed
 1063 0042 90BD     		pop	{r4, r7, pc}
 1064              	.L60:
 1065              		.align	2
 1066              	.L59:
 1067 0044 00010540 		.word	1074069760
 1068              		.cfi_endproc
 1069              	.LFE18:
 1070              		.size	SENT_TX_1_PWM_SetCompareSwap, .-SENT_TX_1_PWM_SetCompareSwap
 1071              		.section	.text.SENT_TX_1_PWM_WritePeriodBuf,"ax",%progbits
 1072              		.align	2
 1073              		.global	SENT_TX_1_PWM_WritePeriodBuf
 1074              		.code	16
 1075              		.thumb_func
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 33


 1076              		.type	SENT_TX_1_PWM_WritePeriodBuf, %function
 1077              	SENT_TX_1_PWM_WritePeriodBuf:
 1078              	.LFB19:
 750:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 751:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 752:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_WritePeriodBuf
 754:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 755:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 756:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 757:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 759:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 760:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 762:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 763:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 764:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 765:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1079              		.loc 1 767 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 8
 1082              		@ frame_needed = 1, uses_anonymous_args = 0
 1083 0000 80B5     		push	{r7, lr}
 1084              		.cfi_def_cfa_offset 8
 1085              		.cfi_offset 7, -8
 1086              		.cfi_offset 14, -4
 1087 0002 82B0     		sub	sp, sp, #8
 1088              		.cfi_def_cfa_offset 16
 1089 0004 00AF     		add	r7, sp, #0
 1090              		.cfi_def_cfa_register 7
 1091 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_PERIOD_BUF_REG = (periodBuf & SENT_TX_1_PWM_16BIT_MASK);
 1092              		.loc 1 768 0
 1093 0008 044B     		ldr	r3, .L62
 1094 000a 7A68     		ldr	r2, [r7, #4]
 1095 000c 1204     		lsls	r2, r2, #16
 1096 000e 120C     		lsrs	r2, r2, #16
 1097 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1098              		.loc 1 769 0
 1099 0012 C046     		nop
 1100 0014 BD46     		mov	sp, r7
 1101 0016 02B0     		add	sp, sp, #8
 1102              		@ sp needed
 1103 0018 80BD     		pop	{r7, pc}
 1104              	.L63:
 1105 001a C046     		.align	2
 1106              	.L62:
 1107 001c 18010540 		.word	1074069784
 1108              		.cfi_endproc
 1109              	.LFE19:
 1110              		.size	SENT_TX_1_PWM_WritePeriodBuf, .-SENT_TX_1_PWM_WritePeriodBuf
 1111              		.section	.text.SENT_TX_1_PWM_ReadPeriodBuf,"ax",%progbits
 1112              		.align	2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 34


 1113              		.global	SENT_TX_1_PWM_ReadPeriodBuf
 1114              		.code	16
 1115              		.thumb_func
 1116              		.type	SENT_TX_1_PWM_ReadPeriodBuf, %function
 1117              	SENT_TX_1_PWM_ReadPeriodBuf:
 1118              	.LFB20:
 770:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 771:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 772:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_ReadPeriodBuf
 774:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 775:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 776:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 777:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 779:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 780:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 781:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 782:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 783:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Period value
 784:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 785:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** uint32 SENT_TX_1_PWM_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1119              		.loc 1 787 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123 0000 80B5     		push	{r7, lr}
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 7, -8
 1126              		.cfi_offset 14, -4
 1127 0002 00AF     		add	r7, sp, #0
 1128              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     return (SENT_TX_1_PWM_PERIOD_BUF_REG & SENT_TX_1_PWM_16BIT_MASK);
 1129              		.loc 1 788 0
 1130 0004 034B     		ldr	r3, .L66
 1131 0006 1B68     		ldr	r3, [r3]
 1132 0008 1B04     		lsls	r3, r3, #16
 1133 000a 1B0C     		lsrs	r3, r3, #16
 789:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1134              		.loc 1 789 0
 1135 000c 1800     		movs	r0, r3
 1136 000e BD46     		mov	sp, r7
 1137              		@ sp needed
 1138 0010 80BD     		pop	{r7, pc}
 1139              	.L67:
 1140 0012 C046     		.align	2
 1141              	.L66:
 1142 0014 18010540 		.word	1074069784
 1143              		.cfi_endproc
 1144              	.LFE20:
 1145              		.size	SENT_TX_1_PWM_ReadPeriodBuf, .-SENT_TX_1_PWM_ReadPeriodBuf
 1146              		.section	.text.SENT_TX_1_PWM_SetPeriodSwap,"ax",%progbits
 1147              		.align	2
 1148              		.global	SENT_TX_1_PWM_SetPeriodSwap
 1149              		.code	16
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 35


 1150              		.thumb_func
 1151              		.type	SENT_TX_1_PWM_SetPeriodSwap, %function
 1152              	SENT_TX_1_PWM_SetPeriodSwap:
 1153              	.LFB21:
 790:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 791:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 792:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetPeriodSwap
 794:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 795:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 796:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 797:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  switch event.
 801:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 802:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 803:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  swapEnable
 804:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
 805:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 808:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 809:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 810:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 811:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1154              		.loc 1 813 0
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 16
 1157              		@ frame_needed = 1, uses_anonymous_args = 0
 1158 0000 90B5     		push	{r4, r7, lr}
 1159              		.cfi_def_cfa_offset 12
 1160              		.cfi_offset 4, -12
 1161              		.cfi_offset 7, -8
 1162              		.cfi_offset 14, -4
 1163 0002 85B0     		sub	sp, sp, #20
 1164              		.cfi_def_cfa_offset 32
 1165 0004 00AF     		add	r7, sp, #0
 1166              		.cfi_def_cfa_register 7
 1167 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 816:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1168              		.loc 1 816 0
 1169 0008 0F23     		movs	r3, #15
 1170 000a FC18     		adds	r4, r7, r3
 1171 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1172 0010 0300     		movs	r3, r0
 1173 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 818:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG &= (uint32)~SENT_TX_1_PWM_RELOAD_PERIOD_MASK;
 1174              		.loc 1 818 0
 1175 0014 0C4B     		ldr	r3, .L69
 1176 0016 0C4A     		ldr	r2, .L69
 1177 0018 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 36


 1178 001a 0221     		movs	r1, #2
 1179 001c 8A43     		bics	r2, r1
 1180 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_CONTROL_REG |= ((uint32)((swapEnable & SENT_TX_1_PWM_1BIT_MASK) <<
 1181              		.loc 1 819 0
 1182 0020 094B     		ldr	r3, .L69
 1183 0022 094A     		ldr	r2, .L69
 1184 0024 1168     		ldr	r1, [r2]
 1185 0026 7A68     		ldr	r2, [r7, #4]
 1186 0028 5200     		lsls	r2, r2, #1
 1187 002a 0220     		movs	r0, #2
 1188 002c 0240     		ands	r2, r0
 1189 002e 0A43     		orrs	r2, r1
 1190 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****                                                             SENT_TX_1_PWM_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 822:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1191              		.loc 1 822 0
 1192 0032 0F23     		movs	r3, #15
 1193 0034 FB18     		adds	r3, r7, r3
 1194 0036 1B78     		ldrb	r3, [r3]
 1195 0038 1800     		movs	r0, r3
 1196 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1197              		.loc 1 823 0
 1198 003e C046     		nop
 1199 0040 BD46     		mov	sp, r7
 1200 0042 05B0     		add	sp, sp, #20
 1201              		@ sp needed
 1202 0044 90BD     		pop	{r4, r7, pc}
 1203              	.L70:
 1204 0046 C046     		.align	2
 1205              	.L69:
 1206 0048 00010540 		.word	1074069760
 1207              		.cfi_endproc
 1208              	.LFE21:
 1209              		.size	SENT_TX_1_PWM_SetPeriodSwap, .-SENT_TX_1_PWM_SetPeriodSwap
 1210              		.section	.text.SENT_TX_1_PWM_WriteCompare,"ax",%progbits
 1211              		.align	2
 1212              		.global	SENT_TX_1_PWM_WriteCompare
 1213              		.code	16
 1214              		.thumb_func
 1215              		.type	SENT_TX_1_PWM_WriteCompare, %function
 1216              	SENT_TX_1_PWM_WriteCompare:
 1217              	.LFB22:
 824:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 825:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 826:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_WriteCompare
 828:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 829:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 830:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 831:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 834:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 835:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  compare: Compare value
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 37


 836:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 837:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 838:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 839:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 840:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Note:
 841:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 848:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1218              		.loc 1 850 0
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 8
 1221              		@ frame_needed = 1, uses_anonymous_args = 0
 1222 0000 80B5     		push	{r7, lr}
 1223              		.cfi_def_cfa_offset 8
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 82B0     		sub	sp, sp, #8
 1227              		.cfi_def_cfa_offset 16
 1228 0004 00AF     		add	r7, sp, #0
 1229              		.cfi_def_cfa_register 7
 1230 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif /* (SENT_TX_1_PWM_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 855:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         currentMode = ((SENT_TX_1_PWM_CONTROL_REG & SENT_TX_1_PWM_UPDOWN_MASK) >> SENT_TX_1_PWM_UPD
 857:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 858:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         if (((uint32)SENT_TX_1_PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
 860:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             compare++;
 861:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
 862:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         else if (((uint32)SENT_TX_1_PWM__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
 864:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             compare--;
 865:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
 866:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         else
 867:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
 868:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
 869:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         
 870:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     
 871:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif /* (SENT_TX_1_PWM_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     
 873:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_COMP_CAP_REG = (compare & SENT_TX_1_PWM_16BIT_MASK);
 1231              		.loc 1 873 0
 1232 0008 044B     		ldr	r3, .L72
 1233 000a 7A68     		ldr	r2, [r7, #4]
 1234 000c 1204     		lsls	r2, r2, #16
 1235 000e 120C     		lsrs	r2, r2, #16
 1236 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 38


 874:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1237              		.loc 1 874 0
 1238 0012 C046     		nop
 1239 0014 BD46     		mov	sp, r7
 1240 0016 02B0     		add	sp, sp, #8
 1241              		@ sp needed
 1242 0018 80BD     		pop	{r7, pc}
 1243              	.L73:
 1244 001a C046     		.align	2
 1245              	.L72:
 1246 001c 0C010540 		.word	1074069772
 1247              		.cfi_endproc
 1248              	.LFE22:
 1249              		.size	SENT_TX_1_PWM_WriteCompare, .-SENT_TX_1_PWM_WriteCompare
 1250              		.section	.text.SENT_TX_1_PWM_ReadCompare,"ax",%progbits
 1251              		.align	2
 1252              		.global	SENT_TX_1_PWM_ReadCompare
 1253              		.code	16
 1254              		.thumb_func
 1255              		.type	SENT_TX_1_PWM_ReadCompare, %function
 1256              	SENT_TX_1_PWM_ReadCompare:
 1257              	.LFB23:
 875:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 876:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 877:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_ReadCompare
 879:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 880:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 881:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 882:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 888:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 889:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 890:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 891:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 892:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Compare value
 893:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 894:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Note:
 895:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 899:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** uint32 SENT_TX_1_PWM_ReadCompare(void)
 901:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1258              		.loc 1 901 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 0
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262 0000 80B5     		push	{r7, lr}
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 7, -8
 1265              		.cfi_offset 14, -4
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 39


 1266 0002 00AF     		add	r7, sp, #0
 1267              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif /* (SENT_TX_1_PWM_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 907:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         currentMode = ((SENT_TX_1_PWM_CONTROL_REG & SENT_TX_1_PWM_UPDOWN_MASK) >> SENT_TX_1_PWM_UPD
 909:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         
 910:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         regVal = SENT_TX_1_PWM_COMP_CAP_REG;
 911:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         
 912:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         if (((uint32)SENT_TX_1_PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
 914:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             regVal--;
 915:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
 916:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         else if (((uint32)SENT_TX_1_PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
 918:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             regVal++;
 919:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
 920:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         else
 921:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
 922:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
 923:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 924:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         return (regVal & SENT_TX_1_PWM_16BIT_MASK);
 925:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #else
 926:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         return (SENT_TX_1_PWM_COMP_CAP_REG & SENT_TX_1_PWM_16BIT_MASK);
 1268              		.loc 1 926 0
 1269 0004 034B     		ldr	r3, .L76
 1270 0006 1B68     		ldr	r3, [r3]
 1271 0008 1B04     		lsls	r3, r3, #16
 1272 000a 1B0C     		lsrs	r3, r3, #16
 927:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif /* (SENT_TX_1_PWM_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1273              		.loc 1 928 0
 1274 000c 1800     		movs	r0, r3
 1275 000e BD46     		mov	sp, r7
 1276              		@ sp needed
 1277 0010 80BD     		pop	{r7, pc}
 1278              	.L77:
 1279 0012 C046     		.align	2
 1280              	.L76:
 1281 0014 0C010540 		.word	1074069772
 1282              		.cfi_endproc
 1283              	.LFE23:
 1284              		.size	SENT_TX_1_PWM_ReadCompare, .-SENT_TX_1_PWM_ReadCompare
 1285              		.section	.text.SENT_TX_1_PWM_WriteCompareBuf,"ax",%progbits
 1286              		.align	2
 1287              		.global	SENT_TX_1_PWM_WriteCompareBuf
 1288              		.code	16
 1289              		.thumb_func
 1290              		.type	SENT_TX_1_PWM_WriteCompareBuf, %function
 1291              	SENT_TX_1_PWM_WriteCompareBuf:
 1292              	.LFB24:
 929:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 930:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 931:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 40


 932:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_WriteCompareBuf
 933:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 934:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 935:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 936:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 939:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 940:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 942:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 943:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 944:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 945:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Note:
 946:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 953:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1293              		.loc 1 955 0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 8
 1296              		@ frame_needed = 1, uses_anonymous_args = 0
 1297 0000 80B5     		push	{r7, lr}
 1298              		.cfi_def_cfa_offset 8
 1299              		.cfi_offset 7, -8
 1300              		.cfi_offset 14, -4
 1301 0002 82B0     		sub	sp, sp, #8
 1302              		.cfi_def_cfa_offset 16
 1303 0004 00AF     		add	r7, sp, #0
 1304              		.cfi_def_cfa_register 7
 1305 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif /* (SENT_TX_1_PWM_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 960:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         currentMode = ((SENT_TX_1_PWM_CONTROL_REG & SENT_TX_1_PWM_UPDOWN_MASK) >> SENT_TX_1_PWM_UPD
 962:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 963:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         if (((uint32)SENT_TX_1_PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
 965:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             compareBuf++;
 966:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
 967:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         else if (((uint32)SENT_TX_1_PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
 969:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             compareBuf --;
 970:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
 971:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         else
 972:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
 973:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
 974:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif /* (SENT_TX_1_PWM_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 41


 976:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_COMP_CAP_BUF_REG = (compareBuf & SENT_TX_1_PWM_16BIT_MASK);
 1306              		.loc 1 976 0
 1307 0008 044B     		ldr	r3, .L79
 1308 000a 7A68     		ldr	r2, [r7, #4]
 1309 000c 1204     		lsls	r2, r2, #16
 1310 000e 120C     		lsrs	r2, r2, #16
 1311 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1312              		.loc 1 977 0
 1313 0012 C046     		nop
 1314 0014 BD46     		mov	sp, r7
 1315 0016 02B0     		add	sp, sp, #8
 1316              		@ sp needed
 1317 0018 80BD     		pop	{r7, pc}
 1318              	.L80:
 1319 001a C046     		.align	2
 1320              	.L79:
 1321 001c 10010540 		.word	1074069776
 1322              		.cfi_endproc
 1323              	.LFE24:
 1324              		.size	SENT_TX_1_PWM_WriteCompareBuf, .-SENT_TX_1_PWM_WriteCompareBuf
 1325              		.section	.text.SENT_TX_1_PWM_ReadCompareBuf,"ax",%progbits
 1326              		.align	2
 1327              		.global	SENT_TX_1_PWM_ReadCompareBuf
 1328              		.code	16
 1329              		.thumb_func
 1330              		.type	SENT_TX_1_PWM_ReadCompareBuf, %function
 1331              	SENT_TX_1_PWM_ReadCompareBuf:
 1332              	.LFB25:
 978:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 979:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
 980:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_ReadCompareBuf
 982:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
 983:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 984:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
 985:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 988:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
 989:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
 990:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 991:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
 992:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 994:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Note:
 995:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
 999:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** uint32 SENT_TX_1_PWM_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1333              		.loc 1 1001 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 0
 1336              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 42


 1337 0000 80B5     		push	{r7, lr}
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 7, -8
 1340              		.cfi_offset 14, -4
 1341 0002 00AF     		add	r7, sp, #0
 1342              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif /* (SENT_TX_1_PWM_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1007:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #if (SENT_TX_1_PWM_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         currentMode = ((SENT_TX_1_PWM_CONTROL_REG & SENT_TX_1_PWM_UPDOWN_MASK) >> SENT_TX_1_PWM_UPD
1009:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1010:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         regVal = SENT_TX_1_PWM_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         
1012:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         if (((uint32)SENT_TX_1_PWM__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
1014:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             regVal--;
1015:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
1016:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         else if (((uint32)SENT_TX_1_PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
1018:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             regVal++;
1019:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
1020:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         else
1021:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         {
1022:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         }
1023:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1024:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         return (regVal & SENT_TX_1_PWM_16BIT_MASK);
1025:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #else
1026:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****         return (SENT_TX_1_PWM_COMP_CAP_BUF_REG & SENT_TX_1_PWM_16BIT_MASK);
 1343              		.loc 1 1026 0
 1344 0004 034B     		ldr	r3, .L83
 1345 0006 1B68     		ldr	r3, [r3]
 1346 0008 1B04     		lsls	r3, r3, #16
 1347 000a 1B0C     		lsrs	r3, r3, #16
1027:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     #endif /* (SENT_TX_1_PWM_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1348              		.loc 1 1028 0
 1349 000c 1800     		movs	r0, r3
 1350 000e BD46     		mov	sp, r7
 1351              		@ sp needed
 1352 0010 80BD     		pop	{r7, pc}
 1353              	.L84:
 1354 0012 C046     		.align	2
 1355              	.L83:
 1356 0014 10010540 		.word	1074069776
 1357              		.cfi_endproc
 1358              	.LFE25:
 1359              		.size	SENT_TX_1_PWM_ReadCompareBuf, .-SENT_TX_1_PWM_ReadCompareBuf
 1360              		.section	.text.SENT_TX_1_PWM_ReadCapture,"ax",%progbits
 1361              		.align	2
 1362              		.global	SENT_TX_1_PWM_ReadCapture
 1363              		.code	16
 1364              		.thumb_func
 1365              		.type	SENT_TX_1_PWM_ReadCapture, %function
 1366              	SENT_TX_1_PWM_ReadCapture:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 43


 1367              	.LFB26:
1029:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1030:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1031:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_ReadCapture
1033:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1034:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1035:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1036:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1039:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1040:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
1041:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1042:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1043:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Capture value
1044:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1045:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** uint32 SENT_TX_1_PWM_ReadCapture(void)
1047:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1368              		.loc 1 1047 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 1, uses_anonymous_args = 0
 1372 0000 80B5     		push	{r7, lr}
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 7, -8
 1375              		.cfi_offset 14, -4
 1376 0002 00AF     		add	r7, sp, #0
 1377              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     return (SENT_TX_1_PWM_COMP_CAP_REG & SENT_TX_1_PWM_16BIT_MASK);
 1378              		.loc 1 1048 0
 1379 0004 034B     		ldr	r3, .L87
 1380 0006 1B68     		ldr	r3, [r3]
 1381 0008 1B04     		lsls	r3, r3, #16
 1382 000a 1B0C     		lsrs	r3, r3, #16
1049:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1383              		.loc 1 1049 0
 1384 000c 1800     		movs	r0, r3
 1385 000e BD46     		mov	sp, r7
 1386              		@ sp needed
 1387 0010 80BD     		pop	{r7, pc}
 1388              	.L88:
 1389 0012 C046     		.align	2
 1390              	.L87:
 1391 0014 0C010540 		.word	1074069772
 1392              		.cfi_endproc
 1393              	.LFE26:
 1394              		.size	SENT_TX_1_PWM_ReadCapture, .-SENT_TX_1_PWM_ReadCapture
 1395              		.section	.text.SENT_TX_1_PWM_ReadCaptureBuf,"ax",%progbits
 1396              		.align	2
 1397              		.global	SENT_TX_1_PWM_ReadCaptureBuf
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	SENT_TX_1_PWM_ReadCaptureBuf, %function
 1401              	SENT_TX_1_PWM_ReadCaptureBuf:
 1402              	.LFB27:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 44


1050:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1051:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1052:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_ReadCaptureBuf
1054:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1055:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1056:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1057:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1060:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1061:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
1062:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1063:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1064:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1066:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** uint32 SENT_TX_1_PWM_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1403              		.loc 1 1068 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 1, uses_anonymous_args = 0
 1407 0000 80B5     		push	{r7, lr}
 1408              		.cfi_def_cfa_offset 8
 1409              		.cfi_offset 7, -8
 1410              		.cfi_offset 14, -4
 1411 0002 00AF     		add	r7, sp, #0
 1412              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     return (SENT_TX_1_PWM_COMP_CAP_BUF_REG & SENT_TX_1_PWM_16BIT_MASK);
 1413              		.loc 1 1069 0
 1414 0004 034B     		ldr	r3, .L91
 1415 0006 1B68     		ldr	r3, [r3]
 1416 0008 1B04     		lsls	r3, r3, #16
 1417 000a 1B0C     		lsrs	r3, r3, #16
1070:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1418              		.loc 1 1070 0
 1419 000c 1800     		movs	r0, r3
 1420 000e BD46     		mov	sp, r7
 1421              		@ sp needed
 1422 0010 80BD     		pop	{r7, pc}
 1423              	.L92:
 1424 0012 C046     		.align	2
 1425              	.L91:
 1426 0014 10010540 		.word	1074069776
 1427              		.cfi_endproc
 1428              	.LFE27:
 1429              		.size	SENT_TX_1_PWM_ReadCaptureBuf, .-SENT_TX_1_PWM_ReadCaptureBuf
 1430              		.section	.text.SENT_TX_1_PWM_SetCaptureMode,"ax",%progbits
 1431              		.align	2
 1432              		.global	SENT_TX_1_PWM_SetCaptureMode
 1433              		.code	16
 1434              		.thumb_func
 1435              		.type	SENT_TX_1_PWM_SetCaptureMode, %function
 1436              	SENT_TX_1_PWM_SetCaptureMode:
 1437              	.LFB28:
1071:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 45


1072:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1073:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetCaptureMode
1075:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1076:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1077:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1078:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1082:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1083:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1085:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1090:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1091:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
1092:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1093:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1438              		.loc 1 1095 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 16
 1441              		@ frame_needed = 1, uses_anonymous_args = 0
 1442 0000 90B5     		push	{r4, r7, lr}
 1443              		.cfi_def_cfa_offset 12
 1444              		.cfi_offset 4, -12
 1445              		.cfi_offset 7, -8
 1446              		.cfi_offset 14, -4
 1447 0002 85B0     		sub	sp, sp, #20
 1448              		.cfi_def_cfa_offset 32
 1449 0004 00AF     		add	r7, sp, #0
 1450              		.cfi_def_cfa_register 7
 1451 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1098:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1452              		.loc 1 1098 0
 1453 0008 0F23     		movs	r3, #15
 1454 000a FC18     		adds	r4, r7, r3
 1455 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1456 0010 0300     		movs	r3, r0
 1457 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1100:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_TRIG_CONTROL1_REG &= (uint32)~SENT_TX_1_PWM_CAPTURE_MASK;
 1458              		.loc 1 1100 0
 1459 0014 0A4B     		ldr	r3, .L94
 1460 0016 0A4A     		ldr	r2, .L94
 1461 0018 1268     		ldr	r2, [r2]
 1462 001a 0321     		movs	r1, #3
 1463 001c 8A43     		bics	r2, r1
 1464 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_TRIG_CONTROL1_REG |= triggerMode;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 46


 1465              		.loc 1 1101 0
 1466 0020 074B     		ldr	r3, .L94
 1467 0022 074A     		ldr	r2, .L94
 1468 0024 1168     		ldr	r1, [r2]
 1469 0026 7A68     		ldr	r2, [r7, #4]
 1470 0028 0A43     		orrs	r2, r1
 1471 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1103:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1472              		.loc 1 1103 0
 1473 002c 0F23     		movs	r3, #15
 1474 002e FB18     		adds	r3, r7, r3
 1475 0030 1B78     		ldrb	r3, [r3]
 1476 0032 1800     		movs	r0, r3
 1477 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1478              		.loc 1 1104 0
 1479 0038 C046     		nop
 1480 003a BD46     		mov	sp, r7
 1481 003c 05B0     		add	sp, sp, #20
 1482              		@ sp needed
 1483 003e 90BD     		pop	{r4, r7, pc}
 1484              	.L95:
 1485              		.align	2
 1486              	.L94:
 1487 0040 24010540 		.word	1074069796
 1488              		.cfi_endproc
 1489              	.LFE28:
 1490              		.size	SENT_TX_1_PWM_SetCaptureMode, .-SENT_TX_1_PWM_SetCaptureMode
 1491              		.section	.text.SENT_TX_1_PWM_SetReloadMode,"ax",%progbits
 1492              		.align	2
 1493              		.global	SENT_TX_1_PWM_SetReloadMode
 1494              		.code	16
 1495              		.thumb_func
 1496              		.type	SENT_TX_1_PWM_SetReloadMode, %function
 1497              	SENT_TX_1_PWM_SetReloadMode:
 1498              	.LFB29:
1105:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1106:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1107:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetReloadMode
1109:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1110:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1111:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1112:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  input.
1114:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1115:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1116:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1118:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1123:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1124:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 47


1125:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1126:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1499              		.loc 1 1128 0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 16
 1502              		@ frame_needed = 1, uses_anonymous_args = 0
 1503 0000 90B5     		push	{r4, r7, lr}
 1504              		.cfi_def_cfa_offset 12
 1505              		.cfi_offset 4, -12
 1506              		.cfi_offset 7, -8
 1507              		.cfi_offset 14, -4
 1508 0002 85B0     		sub	sp, sp, #20
 1509              		.cfi_def_cfa_offset 32
 1510 0004 00AF     		add	r7, sp, #0
 1511              		.cfi_def_cfa_register 7
 1512 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1131:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1513              		.loc 1 1131 0
 1514 0008 0F23     		movs	r3, #15
 1515 000a FC18     		adds	r4, r7, r3
 1516 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1517 0010 0300     		movs	r3, r0
 1518 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1133:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_TRIG_CONTROL1_REG &= (uint32)~SENT_TX_1_PWM_RELOAD_MASK;
 1519              		.loc 1 1133 0
 1520 0014 0B4B     		ldr	r3, .L97
 1521 0016 0B4A     		ldr	r2, .L97
 1522 0018 1268     		ldr	r2, [r2]
 1523 001a 3021     		movs	r1, #48
 1524 001c 8A43     		bics	r2, r1
 1525 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << SENT_TX_1_PWM_RELOAD_SHIFT));
 1526              		.loc 1 1134 0
 1527 0020 084B     		ldr	r3, .L97
 1528 0022 084A     		ldr	r2, .L97
 1529 0024 1168     		ldr	r1, [r2]
 1530 0026 7A68     		ldr	r2, [r7, #4]
 1531 0028 1201     		lsls	r2, r2, #4
 1532 002a 0A43     		orrs	r2, r1
 1533 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1136:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1534              		.loc 1 1136 0
 1535 002e 0F23     		movs	r3, #15
 1536 0030 FB18     		adds	r3, r7, r3
 1537 0032 1B78     		ldrb	r3, [r3]
 1538 0034 1800     		movs	r0, r3
 1539 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1540              		.loc 1 1137 0
 1541 003a C046     		nop
 1542 003c BD46     		mov	sp, r7
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 48


 1543 003e 05B0     		add	sp, sp, #20
 1544              		@ sp needed
 1545 0040 90BD     		pop	{r4, r7, pc}
 1546              	.L98:
 1547 0042 C046     		.align	2
 1548              	.L97:
 1549 0044 24010540 		.word	1074069796
 1550              		.cfi_endproc
 1551              	.LFE29:
 1552              		.size	SENT_TX_1_PWM_SetReloadMode, .-SENT_TX_1_PWM_SetReloadMode
 1553              		.section	.text.SENT_TX_1_PWM_SetStartMode,"ax",%progbits
 1554              		.align	2
 1555              		.global	SENT_TX_1_PWM_SetStartMode
 1556              		.code	16
 1557              		.thumb_func
 1558              		.type	SENT_TX_1_PWM_SetStartMode, %function
 1559              	SENT_TX_1_PWM_SetStartMode:
 1560              	.LFB30:
1138:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1139:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1140:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetStartMode
1142:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1143:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1144:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1145:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  phiB input.
1147:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1148:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1149:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1151:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1156:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1157:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
1158:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1159:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1561              		.loc 1 1161 0
 1562              		.cfi_startproc
 1563              		@ args = 0, pretend = 0, frame = 16
 1564              		@ frame_needed = 1, uses_anonymous_args = 0
 1565 0000 90B5     		push	{r4, r7, lr}
 1566              		.cfi_def_cfa_offset 12
 1567              		.cfi_offset 4, -12
 1568              		.cfi_offset 7, -8
 1569              		.cfi_offset 14, -4
 1570 0002 85B0     		sub	sp, sp, #20
 1571              		.cfi_def_cfa_offset 32
 1572 0004 00AF     		add	r7, sp, #0
 1573              		.cfi_def_cfa_register 7
 1574 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 49


1163:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1164:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1575              		.loc 1 1164 0
 1576 0008 0F23     		movs	r3, #15
 1577 000a FC18     		adds	r4, r7, r3
 1578 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1579 0010 0300     		movs	r3, r0
 1580 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1166:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_TRIG_CONTROL1_REG &= (uint32)~SENT_TX_1_PWM_START_MASK;
 1581              		.loc 1 1166 0
 1582 0014 0B4B     		ldr	r3, .L100
 1583 0016 0B4A     		ldr	r2, .L100
 1584 0018 1268     		ldr	r2, [r2]
 1585 001a 0B49     		ldr	r1, .L100+4
 1586 001c 0A40     		ands	r2, r1
 1587 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << SENT_TX_1_PWM_START_SHIFT));
 1588              		.loc 1 1167 0
 1589 0020 084B     		ldr	r3, .L100
 1590 0022 084A     		ldr	r2, .L100
 1591 0024 1168     		ldr	r1, [r2]
 1592 0026 7A68     		ldr	r2, [r7, #4]
 1593 0028 1202     		lsls	r2, r2, #8
 1594 002a 0A43     		orrs	r2, r1
 1595 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1169:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1596              		.loc 1 1169 0
 1597 002e 0F23     		movs	r3, #15
 1598 0030 FB18     		adds	r3, r7, r3
 1599 0032 1B78     		ldrb	r3, [r3]
 1600 0034 1800     		movs	r0, r3
 1601 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1602              		.loc 1 1170 0
 1603 003a C046     		nop
 1604 003c BD46     		mov	sp, r7
 1605 003e 05B0     		add	sp, sp, #20
 1606              		@ sp needed
 1607 0040 90BD     		pop	{r4, r7, pc}
 1608              	.L101:
 1609 0042 C046     		.align	2
 1610              	.L100:
 1611 0044 24010540 		.word	1074069796
 1612 0048 FFFCFFFF 		.word	-769
 1613              		.cfi_endproc
 1614              	.LFE30:
 1615              		.size	SENT_TX_1_PWM_SetStartMode, .-SENT_TX_1_PWM_SetStartMode
 1616              		.section	.text.SENT_TX_1_PWM_SetStopMode,"ax",%progbits
 1617              		.align	2
 1618              		.global	SENT_TX_1_PWM_SetStopMode
 1619              		.code	16
 1620              		.thumb_func
 1621              		.type	SENT_TX_1_PWM_SetStopMode, %function
 1622              	SENT_TX_1_PWM_SetStopMode:
 1623              	.LFB31:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 50


1171:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1172:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1173:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetStopMode
1175:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1176:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1177:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1178:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1180:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1181:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1183:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1188:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1189:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
1190:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1191:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1624              		.loc 1 1193 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 16
 1627              		@ frame_needed = 1, uses_anonymous_args = 0
 1628 0000 90B5     		push	{r4, r7, lr}
 1629              		.cfi_def_cfa_offset 12
 1630              		.cfi_offset 4, -12
 1631              		.cfi_offset 7, -8
 1632              		.cfi_offset 14, -4
 1633 0002 85B0     		sub	sp, sp, #20
 1634              		.cfi_def_cfa_offset 32
 1635 0004 00AF     		add	r7, sp, #0
 1636              		.cfi_def_cfa_register 7
 1637 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1196:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1638              		.loc 1 1196 0
 1639 0008 0F23     		movs	r3, #15
 1640 000a FC18     		adds	r4, r7, r3
 1641 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1642 0010 0300     		movs	r3, r0
 1643 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1198:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_TRIG_CONTROL1_REG &= (uint32)~SENT_TX_1_PWM_STOP_MASK;
 1644              		.loc 1 1198 0
 1645 0014 0B4B     		ldr	r3, .L103
 1646 0016 0B4A     		ldr	r2, .L103
 1647 0018 1268     		ldr	r2, [r2]
 1648 001a C021     		movs	r1, #192
 1649 001c 8A43     		bics	r2, r1
 1650 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << SENT_TX_1_PWM_STOP_SHIFT));
 1651              		.loc 1 1199 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 51


 1652 0020 084B     		ldr	r3, .L103
 1653 0022 084A     		ldr	r2, .L103
 1654 0024 1168     		ldr	r1, [r2]
 1655 0026 7A68     		ldr	r2, [r7, #4]
 1656 0028 9201     		lsls	r2, r2, #6
 1657 002a 0A43     		orrs	r2, r1
 1658 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1201:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1659              		.loc 1 1201 0
 1660 002e 0F23     		movs	r3, #15
 1661 0030 FB18     		adds	r3, r7, r3
 1662 0032 1B78     		ldrb	r3, [r3]
 1663 0034 1800     		movs	r0, r3
 1664 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1665              		.loc 1 1202 0
 1666 003a C046     		nop
 1667 003c BD46     		mov	sp, r7
 1668 003e 05B0     		add	sp, sp, #20
 1669              		@ sp needed
 1670 0040 90BD     		pop	{r4, r7, pc}
 1671              	.L104:
 1672 0042 C046     		.align	2
 1673              	.L103:
 1674 0044 24010540 		.word	1074069796
 1675              		.cfi_endproc
 1676              	.LFE31:
 1677              		.size	SENT_TX_1_PWM_SetStopMode, .-SENT_TX_1_PWM_SetStopMode
 1678              		.section	.text.SENT_TX_1_PWM_SetCountMode,"ax",%progbits
 1679              		.align	2
 1680              		.global	SENT_TX_1_PWM_SetCountMode
 1681              		.code	16
 1682              		.thumb_func
 1683              		.type	SENT_TX_1_PWM_SetCountMode, %function
 1684              	SENT_TX_1_PWM_SetCountMode:
 1685              	.LFB32:
1203:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1204:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1205:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetCountMode
1207:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1208:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1209:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1210:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  input.
1212:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1213:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1214:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1216:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1221:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1222:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 52


1223:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1224:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1686              		.loc 1 1226 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 16
 1689              		@ frame_needed = 1, uses_anonymous_args = 0
 1690 0000 90B5     		push	{r4, r7, lr}
 1691              		.cfi_def_cfa_offset 12
 1692              		.cfi_offset 4, -12
 1693              		.cfi_offset 7, -8
 1694              		.cfi_offset 14, -4
 1695 0002 85B0     		sub	sp, sp, #20
 1696              		.cfi_def_cfa_offset 32
 1697 0004 00AF     		add	r7, sp, #0
 1698              		.cfi_def_cfa_register 7
 1699 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1229:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1700              		.loc 1 1229 0
 1701 0008 0F23     		movs	r3, #15
 1702 000a FC18     		adds	r4, r7, r3
 1703 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1704 0010 0300     		movs	r3, r0
 1705 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1231:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_TRIG_CONTROL1_REG &= (uint32)~SENT_TX_1_PWM_COUNT_MASK;
 1706              		.loc 1 1231 0
 1707 0014 0B4B     		ldr	r3, .L106
 1708 0016 0B4A     		ldr	r2, .L106
 1709 0018 1268     		ldr	r2, [r2]
 1710 001a 0C21     		movs	r1, #12
 1711 001c 8A43     		bics	r2, r1
 1712 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << SENT_TX_1_PWM_COUNT_SHIFT));
 1713              		.loc 1 1232 0
 1714 0020 084B     		ldr	r3, .L106
 1715 0022 084A     		ldr	r2, .L106
 1716 0024 1168     		ldr	r1, [r2]
 1717 0026 7A68     		ldr	r2, [r7, #4]
 1718 0028 9200     		lsls	r2, r2, #2
 1719 002a 0A43     		orrs	r2, r1
 1720 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1234:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1721              		.loc 1 1234 0
 1722 002e 0F23     		movs	r3, #15
 1723 0030 FB18     		adds	r3, r7, r3
 1724 0032 1B78     		ldrb	r3, [r3]
 1725 0034 1800     		movs	r0, r3
 1726 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1727              		.loc 1 1235 0
 1728 003a C046     		nop
 1729 003c BD46     		mov	sp, r7
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 53


 1730 003e 05B0     		add	sp, sp, #20
 1731              		@ sp needed
 1732 0040 90BD     		pop	{r4, r7, pc}
 1733              	.L107:
 1734 0042 C046     		.align	2
 1735              	.L106:
 1736 0044 24010540 		.word	1074069796
 1737              		.cfi_endproc
 1738              	.LFE32:
 1739              		.size	SENT_TX_1_PWM_SetCountMode, .-SENT_TX_1_PWM_SetCountMode
 1740              		.section	.text.SENT_TX_1_PWM_TriggerCommand,"ax",%progbits
 1741              		.align	2
 1742              		.global	SENT_TX_1_PWM_TriggerCommand
 1743              		.code	16
 1744              		.thumb_func
 1745              		.type	SENT_TX_1_PWM_TriggerCommand, %function
 1746              	SENT_TX_1_PWM_TriggerCommand:
 1747              	.LFB33:
1236:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1237:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1238:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_TriggerCommand
1240:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1241:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1242:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1243:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1247:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1248:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *        define.
1253:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1256:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1261:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1262:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
1263:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1264:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1748              		.loc 1 1266 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 16
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752 0000 90B5     		push	{r4, r7, lr}
 1753              		.cfi_def_cfa_offset 12
 1754              		.cfi_offset 4, -12
 1755              		.cfi_offset 7, -8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 54


 1756              		.cfi_offset 14, -4
 1757 0002 85B0     		sub	sp, sp, #20
 1758              		.cfi_def_cfa_offset 32
 1759 0004 00AF     		add	r7, sp, #0
 1760              		.cfi_def_cfa_register 7
 1761 0006 7860     		str	r0, [r7, #4]
 1762 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1269:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1763              		.loc 1 1269 0
 1764 000a 0F23     		movs	r3, #15
 1765 000c FC18     		adds	r4, r7, r3
 1766 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1767 0012 0300     		movs	r3, r0
 1768 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1271:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_COMMAND_REG = ((uint32)(mask << command));
 1769              		.loc 1 1271 0
 1770 0016 084B     		ldr	r3, .L109
 1771 0018 7968     		ldr	r1, [r7, #4]
 1772 001a 3A68     		ldr	r2, [r7]
 1773 001c 9140     		lsls	r1, r1, r2
 1774 001e 0A00     		movs	r2, r1
 1775 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1273:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1776              		.loc 1 1273 0
 1777 0022 0F23     		movs	r3, #15
 1778 0024 FB18     		adds	r3, r7, r3
 1779 0026 1B78     		ldrb	r3, [r3]
 1780 0028 1800     		movs	r0, r3
 1781 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1782              		.loc 1 1274 0
 1783 002e C046     		nop
 1784 0030 BD46     		mov	sp, r7
 1785 0032 05B0     		add	sp, sp, #20
 1786              		@ sp needed
 1787 0034 90BD     		pop	{r4, r7, pc}
 1788              	.L110:
 1789 0036 C046     		.align	2
 1790              	.L109:
 1791 0038 08000540 		.word	1074069512
 1792              		.cfi_endproc
 1793              	.LFE33:
 1794              		.size	SENT_TX_1_PWM_TriggerCommand, .-SENT_TX_1_PWM_TriggerCommand
 1795              		.section	.text.SENT_TX_1_PWM_ReadStatus,"ax",%progbits
 1796              		.align	2
 1797              		.global	SENT_TX_1_PWM_ReadStatus
 1798              		.code	16
 1799              		.thumb_func
 1800              		.type	SENT_TX_1_PWM_ReadStatus, %function
 1801              	SENT_TX_1_PWM_ReadStatus:
 1802              	.LFB34:
1275:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1276:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 55


1277:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_ReadStatus
1279:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1280:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1281:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1282:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Reads the status of the SENT_TX_1_PWM.
1283:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1284:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1285:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
1286:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1287:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1288:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Status
1289:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1290:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1293:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** uint32 SENT_TX_1_PWM_ReadStatus(void)
1295:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1803              		.loc 1 1295 0
 1804              		.cfi_startproc
 1805              		@ args = 0, pretend = 0, frame = 0
 1806              		@ frame_needed = 1, uses_anonymous_args = 0
 1807 0000 80B5     		push	{r7, lr}
 1808              		.cfi_def_cfa_offset 8
 1809              		.cfi_offset 7, -8
 1810              		.cfi_offset 14, -4
 1811 0002 00AF     		add	r7, sp, #0
 1812              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     return ((SENT_TX_1_PWM_STATUS_REG >> SENT_TX_1_PWM_RUNNING_STATUS_SHIFT) |
 1813              		.loc 1 1296 0
 1814 0004 054B     		ldr	r3, .L113
 1815 0006 1B68     		ldr	r3, [r3]
 1816 0008 9A0F     		lsrs	r2, r3, #30
1297:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****             (SENT_TX_1_PWM_STATUS_REG & SENT_TX_1_PWM_STATUS_DOWN));
 1817              		.loc 1 1297 0
 1818 000a 044B     		ldr	r3, .L113
 1819 000c 1B68     		ldr	r3, [r3]
 1820 000e 0121     		movs	r1, #1
 1821 0010 0B40     		ands	r3, r1
1296:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     return ((SENT_TX_1_PWM_STATUS_REG >> SENT_TX_1_PWM_RUNNING_STATUS_SHIFT) |
 1822              		.loc 1 1296 0
 1823 0012 1343     		orrs	r3, r2
1298:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1824              		.loc 1 1298 0
 1825 0014 1800     		movs	r0, r3
 1826 0016 BD46     		mov	sp, r7
 1827              		@ sp needed
 1828 0018 80BD     		pop	{r7, pc}
 1829              	.L114:
 1830 001a C046     		.align	2
 1831              	.L113:
 1832 001c 04010540 		.word	1074069764
 1833              		.cfi_endproc
 1834              	.LFE34:
 1835              		.size	SENT_TX_1_PWM_ReadStatus, .-SENT_TX_1_PWM_ReadStatus
 1836              		.section	.text.SENT_TX_1_PWM_SetInterruptMode,"ax",%progbits
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 56


 1837              		.align	2
 1838              		.global	SENT_TX_1_PWM_SetInterruptMode
 1839              		.code	16
 1840              		.thumb_func
 1841              		.type	SENT_TX_1_PWM_SetInterruptMode, %function
 1842              	SENT_TX_1_PWM_SetInterruptMode:
 1843              	.LFB35:
1299:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1300:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1301:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetInterruptMode
1303:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1304:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1305:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1306:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1309:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1310:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1312:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1315:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1316:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
1317:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1318:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1844              		.loc 1 1320 0
 1845              		.cfi_startproc
 1846              		@ args = 0, pretend = 0, frame = 8
 1847              		@ frame_needed = 1, uses_anonymous_args = 0
 1848 0000 80B5     		push	{r7, lr}
 1849              		.cfi_def_cfa_offset 8
 1850              		.cfi_offset 7, -8
 1851              		.cfi_offset 14, -4
 1852 0002 82B0     		sub	sp, sp, #8
 1853              		.cfi_def_cfa_offset 16
 1854 0004 00AF     		add	r7, sp, #0
 1855              		.cfi_def_cfa_register 7
 1856 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_INTERRUPT_MASK_REG =  interruptMask;
 1857              		.loc 1 1321 0
 1858 0008 034B     		ldr	r3, .L116
 1859 000a 7A68     		ldr	r2, [r7, #4]
 1860 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1861              		.loc 1 1322 0
 1862 000e C046     		nop
 1863 0010 BD46     		mov	sp, r7
 1864 0012 02B0     		add	sp, sp, #8
 1865              		@ sp needed
 1866 0014 80BD     		pop	{r7, pc}
 1867              	.L117:
 1868 0016 C046     		.align	2
 1869              	.L116:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 57


 1870 0018 38010540 		.word	1074069816
 1871              		.cfi_endproc
 1872              	.LFE35:
 1873              		.size	SENT_TX_1_PWM_SetInterruptMode, .-SENT_TX_1_PWM_SetInterruptMode
 1874              		.section	.text.SENT_TX_1_PWM_GetInterruptSourceMasked,"ax",%progbits
 1875              		.align	2
 1876              		.global	SENT_TX_1_PWM_GetInterruptSourceMasked
 1877              		.code	16
 1878              		.thumb_func
 1879              		.type	SENT_TX_1_PWM_GetInterruptSourceMasked, %function
 1880              	SENT_TX_1_PWM_GetInterruptSourceMasked:
 1881              	.LFB36:
1323:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1324:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1325:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1328:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1329:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1330:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1332:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1333:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   None
1334:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1335:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1336:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1338:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1341:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** uint32 SENT_TX_1_PWM_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1882              		.loc 1 1343 0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 0
 1885              		@ frame_needed = 1, uses_anonymous_args = 0
 1886 0000 80B5     		push	{r7, lr}
 1887              		.cfi_def_cfa_offset 8
 1888              		.cfi_offset 7, -8
 1889              		.cfi_offset 14, -4
 1890 0002 00AF     		add	r7, sp, #0
 1891              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     return (SENT_TX_1_PWM_INTERRUPT_MASKED_REG);
 1892              		.loc 1 1344 0
 1893 0004 024B     		ldr	r3, .L120
 1894 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1895              		.loc 1 1345 0
 1896 0008 1800     		movs	r0, r3
 1897 000a BD46     		mov	sp, r7
 1898              		@ sp needed
 1899 000c 80BD     		pop	{r7, pc}
 1900              	.L121:
 1901 000e C046     		.align	2
 1902              	.L120:
 1903 0010 3C010540 		.word	1074069820
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 58


 1904              		.cfi_endproc
 1905              	.LFE36:
 1906              		.size	SENT_TX_1_PWM_GetInterruptSourceMasked, .-SENT_TX_1_PWM_GetInterruptSourceMasked
 1907              		.section	.text.SENT_TX_1_PWM_GetInterruptSource,"ax",%progbits
 1908              		.align	2
 1909              		.global	SENT_TX_1_PWM_GetInterruptSource
 1910              		.code	16
 1911              		.thumb_func
 1912              		.type	SENT_TX_1_PWM_GetInterruptSource, %function
 1913              	SENT_TX_1_PWM_GetInterruptSource:
 1914              	.LFB37:
1346:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1347:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1348:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_GetInterruptSource
1350:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1351:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1352:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1353:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1355:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1356:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
1357:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1358:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1359:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1361:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1364:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** uint32 SENT_TX_1_PWM_GetInterruptSource(void)
1366:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1915              		.loc 1 1366 0
 1916              		.cfi_startproc
 1917              		@ args = 0, pretend = 0, frame = 0
 1918              		@ frame_needed = 1, uses_anonymous_args = 0
 1919 0000 80B5     		push	{r7, lr}
 1920              		.cfi_def_cfa_offset 8
 1921              		.cfi_offset 7, -8
 1922              		.cfi_offset 14, -4
 1923 0002 00AF     		add	r7, sp, #0
 1924              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     return (SENT_TX_1_PWM_INTERRUPT_REQ_REG);
 1925              		.loc 1 1367 0
 1926 0004 024B     		ldr	r3, .L124
 1927 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1928              		.loc 1 1368 0
 1929 0008 1800     		movs	r0, r3
 1930 000a BD46     		mov	sp, r7
 1931              		@ sp needed
 1932 000c 80BD     		pop	{r7, pc}
 1933              	.L125:
 1934 000e C046     		.align	2
 1935              	.L124:
 1936 0010 30010540 		.word	1074069808
 1937              		.cfi_endproc
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 59


 1938              	.LFE37:
 1939              		.size	SENT_TX_1_PWM_GetInterruptSource, .-SENT_TX_1_PWM_GetInterruptSource
 1940              		.section	.text.SENT_TX_1_PWM_ClearInterrupt,"ax",%progbits
 1941              		.align	2
 1942              		.global	SENT_TX_1_PWM_ClearInterrupt
 1943              		.code	16
 1944              		.thumb_func
 1945              		.type	SENT_TX_1_PWM_ClearInterrupt, %function
 1946              	SENT_TX_1_PWM_ClearInterrupt:
 1947              	.LFB38:
1369:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1370:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1371:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_ClearInterrupt
1373:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1374:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1375:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1376:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1378:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1379:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1381:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1384:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1385:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
1386:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1387:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1948              		.loc 1 1389 0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 8
 1951              		@ frame_needed = 1, uses_anonymous_args = 0
 1952 0000 80B5     		push	{r7, lr}
 1953              		.cfi_def_cfa_offset 8
 1954              		.cfi_offset 7, -8
 1955              		.cfi_offset 14, -4
 1956 0002 82B0     		sub	sp, sp, #8
 1957              		.cfi_def_cfa_offset 16
 1958 0004 00AF     		add	r7, sp, #0
 1959              		.cfi_def_cfa_register 7
 1960 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_INTERRUPT_REQ_REG = interruptMask;
 1961              		.loc 1 1390 0
 1962 0008 034B     		ldr	r3, .L127
 1963 000a 7A68     		ldr	r2, [r7, #4]
 1964 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 1965              		.loc 1 1391 0
 1966 000e C046     		nop
 1967 0010 BD46     		mov	sp, r7
 1968 0012 02B0     		add	sp, sp, #8
 1969              		@ sp needed
 1970 0014 80BD     		pop	{r7, pc}
 1971              	.L128:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 60


 1972 0016 C046     		.align	2
 1973              	.L127:
 1974 0018 30010540 		.word	1074069808
 1975              		.cfi_endproc
 1976              	.LFE38:
 1977              		.size	SENT_TX_1_PWM_ClearInterrupt, .-SENT_TX_1_PWM_ClearInterrupt
 1978              		.section	.text.SENT_TX_1_PWM_SetInterrupt,"ax",%progbits
 1979              		.align	2
 1980              		.global	SENT_TX_1_PWM_SetInterrupt
 1981              		.code	16
 1982              		.thumb_func
 1983              		.type	SENT_TX_1_PWM_SetInterrupt, %function
 1984              	SENT_TX_1_PWM_SetInterrupt:
 1985              	.LFB39:
1392:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1393:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** 
1394:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Function Name: SENT_TX_1_PWM_SetInterrupt
1396:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** ********************************************************************************
1397:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1398:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Summary:
1399:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1401:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Parameters:
1402:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *   Values:
1404:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *     - SENT_TX_1_PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1407:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** * Return:
1408:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *  None
1409:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *
1410:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** void SENT_TX_1_PWM_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** {
 1986              		.loc 1 1412 0
 1987              		.cfi_startproc
 1988              		@ args = 0, pretend = 0, frame = 8
 1989              		@ frame_needed = 1, uses_anonymous_args = 0
 1990 0000 80B5     		push	{r7, lr}
 1991              		.cfi_def_cfa_offset 8
 1992              		.cfi_offset 7, -8
 1993              		.cfi_offset 14, -4
 1994 0002 82B0     		sub	sp, sp, #8
 1995              		.cfi_def_cfa_offset 16
 1996 0004 00AF     		add	r7, sp, #0
 1997              		.cfi_def_cfa_register 7
 1998 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/SENT_TX_1_PWM.c ****     SENT_TX_1_PWM_INTERRUPT_SET_REG = interruptMask;
 1999              		.loc 1 1413 0
 2000 0008 034B     		ldr	r3, .L130
 2001 000a 7A68     		ldr	r2, [r7, #4]
 2002 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/SENT_TX_1_PWM.c **** }
 2003              		.loc 1 1414 0
 2004 000e C046     		nop
 2005 0010 BD46     		mov	sp, r7
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 61


 2006 0012 02B0     		add	sp, sp, #8
 2007              		@ sp needed
 2008 0014 80BD     		pop	{r7, pc}
 2009              	.L131:
 2010 0016 C046     		.align	2
 2011              	.L130:
 2012 0018 34010540 		.word	1074069812
 2013              		.cfi_endproc
 2014              	.LFE39:
 2015              		.size	SENT_TX_1_PWM_SetInterrupt, .-SENT_TX_1_PWM_SetInterrupt
 2016              		.text
 2017              	.Letext0:
 2018              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2019              		.section	.debug_info,"",%progbits
 2020              	.Ldebug_info0:
 2021 0000 F7060000 		.4byte	0x6f7
 2022 0004 0400     		.2byte	0x4
 2023 0006 00000000 		.4byte	.Ldebug_abbrev0
 2024 000a 04       		.byte	0x4
 2025 000b 01       		.uleb128 0x1
 2026 000c 1E020000 		.4byte	.LASF77
 2027 0010 0C       		.byte	0xc
 2028 0011 A3050000 		.4byte	.LASF78
 2029 0015 76050000 		.4byte	.LASF79
 2030 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2031 001d 00000000 		.4byte	0
 2032 0021 00000000 		.4byte	.Ldebug_line0
 2033 0025 02       		.uleb128 0x2
 2034 0026 01       		.byte	0x1
 2035 0027 06       		.byte	0x6
 2036 0028 92000000 		.4byte	.LASF0
 2037 002c 02       		.uleb128 0x2
 2038 002d 01       		.byte	0x1
 2039 002e 08       		.byte	0x8
 2040 002f 03040000 		.4byte	.LASF1
 2041 0033 02       		.uleb128 0x2
 2042 0034 02       		.byte	0x2
 2043 0035 05       		.byte	0x5
 2044 0036 3E040000 		.4byte	.LASF2
 2045 003a 02       		.uleb128 0x2
 2046 003b 02       		.byte	0x2
 2047 003c 07       		.byte	0x7
 2048 003d 92010000 		.4byte	.LASF3
 2049 0041 02       		.uleb128 0x2
 2050 0042 04       		.byte	0x4
 2051 0043 05       		.byte	0x5
 2052 0044 B9000000 		.4byte	.LASF4
 2053 0048 02       		.uleb128 0x2
 2054 0049 04       		.byte	0x4
 2055 004a 07       		.byte	0x7
 2056 004b 77010000 		.4byte	.LASF5
 2057 004f 02       		.uleb128 0x2
 2058 0050 08       		.byte	0x8
 2059 0051 05       		.byte	0x5
 2060 0052 84000000 		.4byte	.LASF6
 2061 0056 02       		.uleb128 0x2
 2062 0057 08       		.byte	0x8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 62


 2063 0058 07       		.byte	0x7
 2064 0059 2E000000 		.4byte	.LASF7
 2065 005d 03       		.uleb128 0x3
 2066 005e 04       		.byte	0x4
 2067 005f 05       		.byte	0x5
 2068 0060 696E7400 		.ascii	"int\000"
 2069 0064 02       		.uleb128 0x2
 2070 0065 04       		.byte	0x4
 2071 0066 07       		.byte	0x7
 2072 0067 62010000 		.4byte	.LASF8
 2073 006b 04       		.uleb128 0x4
 2074 006c C2000000 		.4byte	.LASF9
 2075 0070 02       		.byte	0x2
 2076 0071 F701     		.2byte	0x1f7
 2077 0073 2C000000 		.4byte	0x2c
 2078 0077 04       		.uleb128 0x4
 2079 0078 EC000000 		.4byte	.LASF10
 2080 007c 02       		.byte	0x2
 2081 007d F901     		.2byte	0x1f9
 2082 007f 48000000 		.4byte	0x48
 2083 0083 02       		.uleb128 0x2
 2084 0084 04       		.byte	0x4
 2085 0085 04       		.byte	0x4
 2086 0086 9D030000 		.4byte	.LASF11
 2087 008a 02       		.uleb128 0x2
 2088 008b 08       		.byte	0x8
 2089 008c 04       		.byte	0x4
 2090 008d E5000000 		.4byte	.LASF12
 2091 0091 02       		.uleb128 0x2
 2092 0092 01       		.byte	0x1
 2093 0093 08       		.byte	0x8
 2094 0094 A5040000 		.4byte	.LASF13
 2095 0098 04       		.uleb128 0x4
 2096 0099 E2020000 		.4byte	.LASF14
 2097 009d 02       		.byte	0x2
 2098 009e A302     		.2byte	0x2a3
 2099 00a0 A4000000 		.4byte	0xa4
 2100 00a4 05       		.uleb128 0x5
 2101 00a5 77000000 		.4byte	0x77
 2102 00a9 02       		.uleb128 0x2
 2103 00aa 08       		.byte	0x8
 2104 00ab 04       		.byte	0x4
 2105 00ac F1020000 		.4byte	.LASF15
 2106 00b0 02       		.uleb128 0x2
 2107 00b1 04       		.byte	0x4
 2108 00b2 07       		.byte	0x7
 2109 00b3 E8020000 		.4byte	.LASF16
 2110 00b7 06       		.uleb128 0x6
 2111 00b8 10060000 		.4byte	.LASF17
 2112 00bc 01       		.byte	0x1
 2113 00bd 26       		.byte	0x26
 2114 00be 00000000 		.4byte	.LFB0
 2115 00c2 60000000 		.4byte	.LFE0-.LFB0
 2116 00c6 01       		.uleb128 0x1
 2117 00c7 9C       		.byte	0x9c
 2118 00c8 07       		.uleb128 0x7
 2119 00c9 09020000 		.4byte	.LASF19
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 63


 2120 00cd 01       		.byte	0x1
 2121 00ce B1       		.byte	0xb1
 2122 00cf 00000000 		.4byte	.LFB1
 2123 00d3 3C000000 		.4byte	.LFE1-.LFB1
 2124 00d7 01       		.uleb128 0x1
 2125 00d8 9C       		.byte	0x9c
 2126 00d9 EC000000 		.4byte	0xec
 2127 00dd 08       		.uleb128 0x8
 2128 00de 48050000 		.4byte	.LASF21
 2129 00e2 01       		.byte	0x1
 2130 00e3 B3       		.byte	0xb3
 2131 00e4 6B000000 		.4byte	0x6b
 2132 00e8 02       		.uleb128 0x2
 2133 00e9 91       		.byte	0x91
 2134 00ea 6F       		.sleb128 -17
 2135 00eb 00       		.byte	0
 2136 00ec 06       		.uleb128 0x6
 2137 00ed D4030000 		.4byte	.LASF18
 2138 00f1 01       		.byte	0x1
 2139 00f2 E6       		.byte	0xe6
 2140 00f3 00000000 		.4byte	.LFB2
 2141 00f7 24000000 		.4byte	.LFE2-.LFB2
 2142 00fb 01       		.uleb128 0x1
 2143 00fc 9C       		.byte	0x9c
 2144 00fd 09       		.uleb128 0x9
 2145 00fe 1A030000 		.4byte	.LASF20
 2146 0102 01       		.byte	0x1
 2147 0103 0001     		.2byte	0x100
 2148 0105 00000000 		.4byte	.LFB3
 2149 0109 34000000 		.4byte	.LFE3-.LFB3
 2150 010d 01       		.uleb128 0x1
 2151 010e 9C       		.byte	0x9c
 2152 010f 23010000 		.4byte	0x123
 2153 0113 0A       		.uleb128 0xa
 2154 0114 48050000 		.4byte	.LASF21
 2155 0118 01       		.byte	0x1
 2156 0119 0201     		.2byte	0x102
 2157 011b 6B000000 		.4byte	0x6b
 2158 011f 02       		.uleb128 0x2
 2159 0120 91       		.byte	0x91
 2160 0121 6F       		.sleb128 -17
 2161 0122 00       		.byte	0
 2162 0123 09       		.uleb128 0x9
 2163 0124 81060000 		.4byte	.LASF22
 2164 0128 01       		.byte	0x1
 2165 0129 2501     		.2byte	0x125
 2166 012b 00000000 		.4byte	.LFB4
 2167 012f 48000000 		.4byte	.LFE4-.LFB4
 2168 0133 01       		.uleb128 0x1
 2169 0134 9C       		.byte	0x9c
 2170 0135 58010000 		.4byte	0x158
 2171 0139 0B       		.uleb128 0xb
 2172 013a AA040000 		.4byte	.LASF24
 2173 013e 01       		.byte	0x1
 2174 013f 2501     		.2byte	0x125
 2175 0141 77000000 		.4byte	0x77
 2176 0145 02       		.uleb128 0x2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 64


 2177 0146 91       		.byte	0x91
 2178 0147 64       		.sleb128 -28
 2179 0148 0A       		.uleb128 0xa
 2180 0149 48050000 		.4byte	.LASF21
 2181 014d 01       		.byte	0x1
 2182 014e 2701     		.2byte	0x127
 2183 0150 6B000000 		.4byte	0x6b
 2184 0154 02       		.uleb128 0x2
 2185 0155 91       		.byte	0x91
 2186 0156 6F       		.sleb128 -17
 2187 0157 00       		.byte	0
 2188 0158 09       		.uleb128 0x9
 2189 0159 70040000 		.4byte	.LASF23
 2190 015d 01       		.byte	0x1
 2191 015e 4601     		.2byte	0x146
 2192 0160 00000000 		.4byte	.LFB5
 2193 0164 48000000 		.4byte	.LFE5-.LFB5
 2194 0168 01       		.uleb128 0x1
 2195 0169 9C       		.byte	0x9c
 2196 016a 8D010000 		.4byte	0x18d
 2197 016e 0B       		.uleb128 0xb
 2198 016f 7D000000 		.4byte	.LASF25
 2199 0173 01       		.byte	0x1
 2200 0174 4601     		.2byte	0x146
 2201 0176 77000000 		.4byte	0x77
 2202 017a 02       		.uleb128 0x2
 2203 017b 91       		.byte	0x91
 2204 017c 64       		.sleb128 -28
 2205 017d 0A       		.uleb128 0xa
 2206 017e 48050000 		.4byte	.LASF21
 2207 0182 01       		.byte	0x1
 2208 0183 4801     		.2byte	0x148
 2209 0185 6B000000 		.4byte	0x6b
 2210 0189 02       		.uleb128 0x2
 2211 018a 91       		.byte	0x91
 2212 018b 6F       		.sleb128 -17
 2213 018c 00       		.byte	0
 2214 018d 09       		.uleb128 0x9
 2215 018e E8030000 		.4byte	.LASF26
 2216 0192 01       		.byte	0x1
 2217 0193 6B01     		.2byte	0x16b
 2218 0195 00000000 		.4byte	.LFB6
 2219 0199 48000000 		.4byte	.LFE6-.LFB6
 2220 019d 01       		.uleb128 0x1
 2221 019e 9C       		.byte	0x9c
 2222 019f C2010000 		.4byte	0x1c2
 2223 01a3 0B       		.uleb128 0xb
 2224 01a4 A3030000 		.4byte	.LASF27
 2225 01a8 01       		.byte	0x1
 2226 01a9 6B01     		.2byte	0x16b
 2227 01ab 77000000 		.4byte	0x77
 2228 01af 02       		.uleb128 0x2
 2229 01b0 91       		.byte	0x91
 2230 01b1 64       		.sleb128 -28
 2231 01b2 0A       		.uleb128 0xa
 2232 01b3 48050000 		.4byte	.LASF21
 2233 01b7 01       		.byte	0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 65


 2234 01b8 6D01     		.2byte	0x16d
 2235 01ba 6B000000 		.4byte	0x6b
 2236 01be 02       		.uleb128 0x2
 2237 01bf 91       		.byte	0x91
 2238 01c0 6F       		.sleb128 -17
 2239 01c1 00       		.byte	0
 2240 01c2 09       		.uleb128 0x9
 2241 01c3 2D030000 		.4byte	.LASF28
 2242 01c7 01       		.byte	0x1
 2243 01c8 8B01     		.2byte	0x18b
 2244 01ca 00000000 		.4byte	.LFB7
 2245 01ce 50000000 		.4byte	.LFE7-.LFB7
 2246 01d2 01       		.uleb128 0x1
 2247 01d3 9C       		.byte	0x9c
 2248 01d4 F7010000 		.4byte	0x1f7
 2249 01d8 0B       		.uleb128 0xb
 2250 01d9 DC010000 		.4byte	.LASF29
 2251 01dd 01       		.byte	0x1
 2252 01de 8B01     		.2byte	0x18b
 2253 01e0 77000000 		.4byte	0x77
 2254 01e4 02       		.uleb128 0x2
 2255 01e5 91       		.byte	0x91
 2256 01e6 64       		.sleb128 -28
 2257 01e7 0A       		.uleb128 0xa
 2258 01e8 48050000 		.4byte	.LASF21
 2259 01ec 01       		.byte	0x1
 2260 01ed 8D01     		.2byte	0x18d
 2261 01ef 6B000000 		.4byte	0x6b
 2262 01f3 02       		.uleb128 0x2
 2263 01f4 91       		.byte	0x91
 2264 01f5 6F       		.sleb128 -17
 2265 01f6 00       		.byte	0
 2266 01f7 0C       		.uleb128 0xc
 2267 01f8 2E060000 		.4byte	.LASF30
 2268 01fc 01       		.byte	0x1
 2269 01fd C101     		.2byte	0x1c1
 2270 01ff 00000000 		.4byte	.LFB8
 2271 0203 20000000 		.4byte	.LFE8-.LFB8
 2272 0207 01       		.uleb128 0x1
 2273 0208 9C       		.byte	0x9c
 2274 0209 1D020000 		.4byte	0x21d
 2275 020d 0B       		.uleb128 0xb
 2276 020e 89010000 		.4byte	.LASF31
 2277 0212 01       		.byte	0x1
 2278 0213 C101     		.2byte	0x1c1
 2279 0215 77000000 		.4byte	0x77
 2280 0219 02       		.uleb128 0x2
 2281 021a 91       		.byte	0x91
 2282 021b 74       		.sleb128 -12
 2283 021c 00       		.byte	0
 2284 021d 09       		.uleb128 0x9
 2285 021e 60000000 		.4byte	.LASF32
 2286 0222 01       		.byte	0x1
 2287 0223 E501     		.2byte	0x1e5
 2288 0225 00000000 		.4byte	.LFB9
 2289 0229 4C000000 		.4byte	.LFE9-.LFB9
 2290 022d 01       		.uleb128 0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 66


 2291 022e 9C       		.byte	0x9c
 2292 022f 52020000 		.4byte	0x252
 2293 0233 0B       		.uleb128 0xb
 2294 0234 01060000 		.4byte	.LASF33
 2295 0238 01       		.byte	0x1
 2296 0239 E501     		.2byte	0x1e5
 2297 023b 77000000 		.4byte	0x77
 2298 023f 02       		.uleb128 0x2
 2299 0240 91       		.byte	0x91
 2300 0241 64       		.sleb128 -28
 2301 0242 0A       		.uleb128 0xa
 2302 0243 48050000 		.4byte	.LASF21
 2303 0247 01       		.byte	0x1
 2304 0248 E701     		.2byte	0x1e7
 2305 024a 6B000000 		.4byte	0x6b
 2306 024e 02       		.uleb128 0x2
 2307 024f 91       		.byte	0x91
 2308 0250 6F       		.sleb128 -17
 2309 0251 00       		.byte	0
 2310 0252 09       		.uleb128 0x9
 2311 0253 EA010000 		.4byte	.LASF34
 2312 0257 01       		.byte	0x1
 2313 0258 0702     		.2byte	0x207
 2314 025a 00000000 		.4byte	.LFB10
 2315 025e 4C000000 		.4byte	.LFE10-.LFB10
 2316 0262 01       		.uleb128 0x1
 2317 0263 9C       		.byte	0x9c
 2318 0264 87020000 		.4byte	0x287
 2319 0268 0B       		.uleb128 0xb
 2320 0269 2D040000 		.4byte	.LASF35
 2321 026d 01       		.byte	0x1
 2322 026e 0702     		.2byte	0x207
 2323 0270 77000000 		.4byte	0x77
 2324 0274 02       		.uleb128 0x2
 2325 0275 91       		.byte	0x91
 2326 0276 64       		.sleb128 -28
 2327 0277 0A       		.uleb128 0xa
 2328 0278 48050000 		.4byte	.LASF21
 2329 027c 01       		.byte	0x1
 2330 027d 0902     		.2byte	0x209
 2331 027f 6B000000 		.4byte	0x6b
 2332 0283 02       		.uleb128 0x2
 2333 0284 91       		.byte	0x91
 2334 0285 6F       		.sleb128 -17
 2335 0286 00       		.byte	0
 2336 0287 09       		.uleb128 0x9
 2337 0288 A5010000 		.4byte	.LASF36
 2338 028c 01       		.byte	0x1
 2339 028d 2802     		.2byte	0x228
 2340 028f 00000000 		.4byte	.LFB11
 2341 0293 50000000 		.4byte	.LFE11-.LFB11
 2342 0297 01       		.uleb128 0x1
 2343 0298 9C       		.byte	0x9c
 2344 0299 BC020000 		.4byte	0x2bc
 2345 029d 0B       		.uleb128 0xb
 2346 029e 04010000 		.4byte	.LASF37
 2347 02a2 01       		.byte	0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 67


 2348 02a3 2802     		.2byte	0x228
 2349 02a5 77000000 		.4byte	0x77
 2350 02a9 02       		.uleb128 0x2
 2351 02aa 91       		.byte	0x91
 2352 02ab 64       		.sleb128 -28
 2353 02ac 0A       		.uleb128 0xa
 2354 02ad 48050000 		.4byte	.LASF21
 2355 02b1 01       		.byte	0x1
 2356 02b2 2A02     		.2byte	0x22a
 2357 02b4 6B000000 		.4byte	0x6b
 2358 02b8 02       		.uleb128 0x2
 2359 02b9 91       		.byte	0x91
 2360 02ba 6F       		.sleb128 -17
 2361 02bb 00       		.byte	0
 2362 02bc 09       		.uleb128 0x9
 2363 02bd AC020000 		.4byte	.LASF38
 2364 02c1 01       		.byte	0x1
 2365 02c2 4902     		.2byte	0x249
 2366 02c4 00000000 		.4byte	.LFB12
 2367 02c8 48000000 		.4byte	.LFE12-.LFB12
 2368 02cc 01       		.uleb128 0x1
 2369 02cd 9C       		.byte	0x9c
 2370 02ce F1020000 		.4byte	0x2f1
 2371 02d2 0B       		.uleb128 0xb
 2372 02d3 FF000000 		.4byte	.LASF39
 2373 02d7 01       		.byte	0x1
 2374 02d8 4902     		.2byte	0x249
 2375 02da 77000000 		.4byte	0x77
 2376 02de 02       		.uleb128 0x2
 2377 02df 91       		.byte	0x91
 2378 02e0 64       		.sleb128 -28
 2379 02e1 0A       		.uleb128 0xa
 2380 02e2 48050000 		.4byte	.LASF21
 2381 02e6 01       		.byte	0x1
 2382 02e7 4B02     		.2byte	0x24b
 2383 02e9 6B000000 		.4byte	0x6b
 2384 02ed 02       		.uleb128 0x2
 2385 02ee 91       		.byte	0x91
 2386 02ef 6F       		.sleb128 -17
 2387 02f0 00       		.byte	0
 2388 02f1 0C       		.uleb128 0xc
 2389 02f2 47010000 		.4byte	.LASF40
 2390 02f6 01       		.byte	0x1
 2391 02f7 6702     		.2byte	0x267
 2392 02f9 00000000 		.4byte	.LFB13
 2393 02fd 20000000 		.4byte	.LFE13-.LFB13
 2394 0301 01       		.uleb128 0x1
 2395 0302 9C       		.byte	0x9c
 2396 0303 17030000 		.4byte	0x317
 2397 0307 0B       		.uleb128 0xb
 2398 0308 00000000 		.4byte	.LASF41
 2399 030c 01       		.byte	0x1
 2400 030d 6702     		.2byte	0x267
 2401 030f 77000000 		.4byte	0x77
 2402 0313 02       		.uleb128 0x2
 2403 0314 91       		.byte	0x91
 2404 0315 74       		.sleb128 -12
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 68


 2405 0316 00       		.byte	0
 2406 0317 0D       		.uleb128 0xd
 2407 0318 CA050000 		.4byte	.LASF46
 2408 031c 01       		.byte	0x1
 2409 031d 7B02     		.2byte	0x27b
 2410 031f 77000000 		.4byte	0x77
 2411 0323 00000000 		.4byte	.LFB14
 2412 0327 18000000 		.4byte	.LFE14-.LFB14
 2413 032b 01       		.uleb128 0x1
 2414 032c 9C       		.byte	0x9c
 2415 032d 09       		.uleb128 0x9
 2416 032e 88040000 		.4byte	.LASF42
 2417 0332 01       		.byte	0x1
 2418 0333 9802     		.2byte	0x298
 2419 0335 00000000 		.4byte	.LFB15
 2420 0339 48000000 		.4byte	.LFE15-.LFB15
 2421 033d 01       		.uleb128 0x1
 2422 033e 9C       		.byte	0x9c
 2423 033f 62030000 		.4byte	0x362
 2424 0343 0B       		.uleb128 0xb
 2425 0344 E2040000 		.4byte	.LASF43
 2426 0348 01       		.byte	0x1
 2427 0349 9802     		.2byte	0x298
 2428 034b 77000000 		.4byte	0x77
 2429 034f 02       		.uleb128 0x2
 2430 0350 91       		.byte	0x91
 2431 0351 64       		.sleb128 -28
 2432 0352 0A       		.uleb128 0xa
 2433 0353 48050000 		.4byte	.LASF21
 2434 0357 01       		.byte	0x1
 2435 0358 9A02     		.2byte	0x29a
 2436 035a 6B000000 		.4byte	0x6b
 2437 035e 02       		.uleb128 0x2
 2438 035f 91       		.byte	0x91
 2439 0360 6F       		.sleb128 -17
 2440 0361 00       		.byte	0
 2441 0362 0C       		.uleb128 0xc
 2442 0363 4E030000 		.4byte	.LASF44
 2443 0367 01       		.byte	0x1
 2444 0368 B502     		.2byte	0x2b5
 2445 036a 00000000 		.4byte	.LFB16
 2446 036e 20000000 		.4byte	.LFE16-.LFB16
 2447 0372 01       		.uleb128 0x1
 2448 0373 9C       		.byte	0x9c
 2449 0374 88030000 		.4byte	0x388
 2450 0378 0B       		.uleb128 0xb
 2451 0379 27000000 		.4byte	.LASF45
 2452 037d 01       		.byte	0x1
 2453 037e B502     		.2byte	0x2b5
 2454 0380 77000000 		.4byte	0x77
 2455 0384 02       		.uleb128 0x2
 2456 0385 91       		.byte	0x91
 2457 0386 74       		.sleb128 -12
 2458 0387 00       		.byte	0
 2459 0388 0D       		.uleb128 0xd
 2460 0389 AF040000 		.4byte	.LASF47
 2461 038d 01       		.byte	0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 69


 2462 038e C902     		.2byte	0x2c9
 2463 0390 77000000 		.4byte	0x77
 2464 0394 00000000 		.4byte	.LFB17
 2465 0398 18000000 		.4byte	.LFE17-.LFB17
 2466 039c 01       		.uleb128 0x1
 2467 039d 9C       		.byte	0x9c
 2468 039e 09       		.uleb128 0x9
 2469 039f 2A010000 		.4byte	.LASF48
 2470 03a3 01       		.byte	0x1
 2471 03a4 E302     		.2byte	0x2e3
 2472 03a6 00000000 		.4byte	.LFB18
 2473 03aa 48000000 		.4byte	.LFE18-.LFB18
 2474 03ae 01       		.uleb128 0x1
 2475 03af 9C       		.byte	0x9c
 2476 03b0 D3030000 		.4byte	0x3d3
 2477 03b4 0B       		.uleb128 0xb
 2478 03b5 23060000 		.4byte	.LASF49
 2479 03b9 01       		.byte	0x1
 2480 03ba E302     		.2byte	0x2e3
 2481 03bc 77000000 		.4byte	0x77
 2482 03c0 02       		.uleb128 0x2
 2483 03c1 91       		.byte	0x91
 2484 03c2 64       		.sleb128 -28
 2485 03c3 0A       		.uleb128 0xa
 2486 03c4 48050000 		.4byte	.LASF21
 2487 03c8 01       		.byte	0x1
 2488 03c9 E502     		.2byte	0x2e5
 2489 03cb 6B000000 		.4byte	0x6b
 2490 03cf 02       		.uleb128 0x2
 2491 03d0 91       		.byte	0x91
 2492 03d1 6F       		.sleb128 -17
 2493 03d2 00       		.byte	0
 2494 03d3 0C       		.uleb128 0xc
 2495 03d4 EE040000 		.4byte	.LASF50
 2496 03d8 01       		.byte	0x1
 2497 03d9 FE02     		.2byte	0x2fe
 2498 03db 00000000 		.4byte	.LFB19
 2499 03df 20000000 		.4byte	.LFE19-.LFB19
 2500 03e3 01       		.uleb128 0x1
 2501 03e4 9C       		.byte	0x9c
 2502 03e5 F9030000 		.4byte	0x3f9
 2503 03e9 0B       		.uleb128 0xb
 2504 03ea B5060000 		.4byte	.LASF51
 2505 03ee 01       		.byte	0x1
 2506 03ef FE02     		.2byte	0x2fe
 2507 03f1 77000000 		.4byte	0x77
 2508 03f5 02       		.uleb128 0x2
 2509 03f6 91       		.byte	0x91
 2510 03f7 74       		.sleb128 -12
 2511 03f8 00       		.byte	0
 2512 03f9 0D       		.uleb128 0xd
 2513 03fa 81030000 		.4byte	.LASF52
 2514 03fe 01       		.byte	0x1
 2515 03ff 1203     		.2byte	0x312
 2516 0401 77000000 		.4byte	0x77
 2517 0405 00000000 		.4byte	.LFB20
 2518 0409 18000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 70


 2519 040d 01       		.uleb128 0x1
 2520 040e 9C       		.byte	0x9c
 2521 040f 09       		.uleb128 0x9
 2522 0410 11040000 		.4byte	.LASF53
 2523 0414 01       		.byte	0x1
 2524 0415 2C03     		.2byte	0x32c
 2525 0417 00000000 		.4byte	.LFB21
 2526 041b 4C000000 		.4byte	.LFE21-.LFB21
 2527 041f 01       		.uleb128 0x1
 2528 0420 9C       		.byte	0x9c
 2529 0421 44040000 		.4byte	0x444
 2530 0425 0B       		.uleb128 0xb
 2531 0426 23060000 		.4byte	.LASF49
 2532 042a 01       		.byte	0x1
 2533 042b 2C03     		.2byte	0x32c
 2534 042d 77000000 		.4byte	0x77
 2535 0431 02       		.uleb128 0x2
 2536 0432 91       		.byte	0x91
 2537 0433 64       		.sleb128 -28
 2538 0434 0A       		.uleb128 0xa
 2539 0435 48050000 		.4byte	.LASF21
 2540 0439 01       		.byte	0x1
 2541 043a 2E03     		.2byte	0x32e
 2542 043c 6B000000 		.4byte	0x6b
 2543 0440 02       		.uleb128 0x2
 2544 0441 91       		.byte	0x91
 2545 0442 6F       		.sleb128 -17
 2546 0443 00       		.byte	0
 2547 0444 0C       		.uleb128 0xc
 2548 0445 9E000000 		.4byte	.LASF54
 2549 0449 01       		.byte	0x1
 2550 044a 5103     		.2byte	0x351
 2551 044c 00000000 		.4byte	.LFB22
 2552 0450 20000000 		.4byte	.LFE22-.LFB22
 2553 0454 01       		.uleb128 0x1
 2554 0455 9C       		.byte	0x9c
 2555 0456 6A040000 		.4byte	0x46a
 2556 045a 0B       		.uleb128 0xb
 2557 045b 46030000 		.4byte	.LASF55
 2558 045f 01       		.byte	0x1
 2559 0460 5103     		.2byte	0x351
 2560 0462 77000000 		.4byte	0x77
 2561 0466 02       		.uleb128 0x2
 2562 0467 91       		.byte	0x91
 2563 0468 74       		.sleb128 -12
 2564 0469 00       		.byte	0
 2565 046a 0D       		.uleb128 0xd
 2566 046b C8040000 		.4byte	.LASF56
 2567 046f 01       		.byte	0x1
 2568 0470 8403     		.2byte	0x384
 2569 0472 77000000 		.4byte	0x77
 2570 0476 00000000 		.4byte	.LFB23
 2571 047a 18000000 		.4byte	.LFE23-.LFB23
 2572 047e 01       		.uleb128 0x1
 2573 047f 9C       		.byte	0x9c
 2574 0480 0C       		.uleb128 0xc
 2575 0481 97060000 		.4byte	.LASF57
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 71


 2576 0485 01       		.byte	0x1
 2577 0486 BA03     		.2byte	0x3ba
 2578 0488 00000000 		.4byte	.LFB24
 2579 048c 20000000 		.4byte	.LFE24-.LFB24
 2580 0490 01       		.uleb128 0x1
 2581 0491 9C       		.byte	0x9c
 2582 0492 A6040000 		.4byte	0x4a6
 2583 0496 0B       		.uleb128 0xb
 2584 0497 27050000 		.4byte	.LASF58
 2585 049b 01       		.byte	0x1
 2586 049c BA03     		.2byte	0x3ba
 2587 049e 77000000 		.4byte	0x77
 2588 04a2 02       		.uleb128 0x2
 2589 04a3 91       		.byte	0x91
 2590 04a4 74       		.sleb128 -12
 2591 04a5 00       		.byte	0
 2592 04a6 0D       		.uleb128 0xd
 2593 04a7 0D010000 		.4byte	.LASF59
 2594 04ab 01       		.byte	0x1
 2595 04ac E803     		.2byte	0x3e8
 2596 04ae 77000000 		.4byte	0x77
 2597 04b2 00000000 		.4byte	.LFB25
 2598 04b6 18000000 		.4byte	.LFE25-.LFB25
 2599 04ba 01       		.uleb128 0x1
 2600 04bb 9C       		.byte	0x9c
 2601 04bc 0D       		.uleb128 0xd
 2602 04bd 56040000 		.4byte	.LASF60
 2603 04c1 01       		.byte	0x1
 2604 04c2 1604     		.2byte	0x416
 2605 04c4 77000000 		.4byte	0x77
 2606 04c8 00000000 		.4byte	.LFB26
 2607 04cc 18000000 		.4byte	.LFE26-.LFB26
 2608 04d0 01       		.uleb128 0x1
 2609 04d1 9C       		.byte	0x9c
 2610 04d2 0D       		.uleb128 0xd
 2611 04d3 E4050000 		.4byte	.LASF61
 2612 04d7 01       		.byte	0x1
 2613 04d8 2B04     		.2byte	0x42b
 2614 04da 77000000 		.4byte	0x77
 2615 04de 00000000 		.4byte	.LFB27
 2616 04e2 18000000 		.4byte	.LFE27-.LFB27
 2617 04e6 01       		.uleb128 0x1
 2618 04e7 9C       		.byte	0x9c
 2619 04e8 09       		.uleb128 0x9
 2620 04e9 59050000 		.4byte	.LASF62
 2621 04ed 01       		.byte	0x1
 2622 04ee 4604     		.2byte	0x446
 2623 04f0 00000000 		.4byte	.LFB28
 2624 04f4 44000000 		.4byte	.LFE28-.LFB28
 2625 04f8 01       		.uleb128 0x1
 2626 04f9 9C       		.byte	0x9c
 2627 04fa 1D050000 		.4byte	0x51d
 2628 04fe 0B       		.uleb128 0xb
 2629 04ff F3000000 		.4byte	.LASF63
 2630 0503 01       		.byte	0x1
 2631 0504 4604     		.2byte	0x446
 2632 0506 77000000 		.4byte	0x77
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 72


 2633 050a 02       		.uleb128 0x2
 2634 050b 91       		.byte	0x91
 2635 050c 64       		.sleb128 -28
 2636 050d 0A       		.uleb128 0xa
 2637 050e 48050000 		.4byte	.LASF21
 2638 0512 01       		.byte	0x1
 2639 0513 4804     		.2byte	0x448
 2640 0515 6B000000 		.4byte	0x6b
 2641 0519 02       		.uleb128 0x2
 2642 051a 91       		.byte	0x91
 2643 051b 6F       		.sleb128 -17
 2644 051c 00       		.byte	0
 2645 051d 09       		.uleb128 0x9
 2646 051e 0B050000 		.4byte	.LASF64
 2647 0522 01       		.byte	0x1
 2648 0523 6704     		.2byte	0x467
 2649 0525 00000000 		.4byte	.LFB29
 2650 0529 48000000 		.4byte	.LFE29-.LFB29
 2651 052d 01       		.uleb128 0x1
 2652 052e 9C       		.byte	0x9c
 2653 052f 52050000 		.4byte	0x552
 2654 0533 0B       		.uleb128 0xb
 2655 0534 F3000000 		.4byte	.LASF63
 2656 0538 01       		.byte	0x1
 2657 0539 6704     		.2byte	0x467
 2658 053b 77000000 		.4byte	0x77
 2659 053f 02       		.uleb128 0x2
 2660 0540 91       		.byte	0x91
 2661 0541 64       		.sleb128 -28
 2662 0542 0A       		.uleb128 0xa
 2663 0543 48050000 		.4byte	.LASF21
 2664 0547 01       		.byte	0x1
 2665 0548 6904     		.2byte	0x469
 2666 054a 6B000000 		.4byte	0x6b
 2667 054e 02       		.uleb128 0x2
 2668 054f 91       		.byte	0x91
 2669 0550 6F       		.sleb128 -17
 2670 0551 00       		.byte	0
 2671 0552 09       		.uleb128 0x9
 2672 0553 C7020000 		.4byte	.LASF65
 2673 0557 01       		.byte	0x1
 2674 0558 8804     		.2byte	0x488
 2675 055a 00000000 		.4byte	.LFB30
 2676 055e 4C000000 		.4byte	.LFE30-.LFB30
 2677 0562 01       		.uleb128 0x1
 2678 0563 9C       		.byte	0x9c
 2679 0564 87050000 		.4byte	0x587
 2680 0568 0B       		.uleb128 0xb
 2681 0569 F3000000 		.4byte	.LASF63
 2682 056d 01       		.byte	0x1
 2683 056e 8804     		.2byte	0x488
 2684 0570 77000000 		.4byte	0x77
 2685 0574 02       		.uleb128 0x2
 2686 0575 91       		.byte	0x91
 2687 0576 64       		.sleb128 -28
 2688 0577 0A       		.uleb128 0xa
 2689 0578 48050000 		.4byte	.LASF21
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 73


 2690 057c 01       		.byte	0x1
 2691 057d 8A04     		.2byte	0x48a
 2692 057f 6B000000 		.4byte	0x6b
 2693 0583 02       		.uleb128 0x2
 2694 0584 91       		.byte	0x91
 2695 0585 6F       		.sleb128 -17
 2696 0586 00       		.byte	0
 2697 0587 09       		.uleb128 0x9
 2698 0588 C2010000 		.4byte	.LASF66
 2699 058c 01       		.byte	0x1
 2700 058d A804     		.2byte	0x4a8
 2701 058f 00000000 		.4byte	.LFB31
 2702 0593 48000000 		.4byte	.LFE31-.LFB31
 2703 0597 01       		.uleb128 0x1
 2704 0598 9C       		.byte	0x9c
 2705 0599 BC050000 		.4byte	0x5bc
 2706 059d 0B       		.uleb128 0xb
 2707 059e F3000000 		.4byte	.LASF63
 2708 05a2 01       		.byte	0x1
 2709 05a3 A804     		.2byte	0x4a8
 2710 05a5 77000000 		.4byte	0x77
 2711 05a9 02       		.uleb128 0x2
 2712 05aa 91       		.byte	0x91
 2713 05ab 64       		.sleb128 -28
 2714 05ac 0A       		.uleb128 0xa
 2715 05ad 48050000 		.4byte	.LASF21
 2716 05b1 01       		.byte	0x1
 2717 05b2 AA04     		.2byte	0x4aa
 2718 05b4 6B000000 		.4byte	0x6b
 2719 05b8 02       		.uleb128 0x2
 2720 05b9 91       		.byte	0x91
 2721 05ba 6F       		.sleb128 -17
 2722 05bb 00       		.byte	0
 2723 05bc 09       		.uleb128 0x9
 2724 05bd 45000000 		.4byte	.LASF67
 2725 05c1 01       		.byte	0x1
 2726 05c2 C904     		.2byte	0x4c9
 2727 05c4 00000000 		.4byte	.LFB32
 2728 05c8 48000000 		.4byte	.LFE32-.LFB32
 2729 05cc 01       		.uleb128 0x1
 2730 05cd 9C       		.byte	0x9c
 2731 05ce F1050000 		.4byte	0x5f1
 2732 05d2 0B       		.uleb128 0xb
 2733 05d3 F3000000 		.4byte	.LASF63
 2734 05d7 01       		.byte	0x1
 2735 05d8 C904     		.2byte	0x4c9
 2736 05da 77000000 		.4byte	0x77
 2737 05de 02       		.uleb128 0x2
 2738 05df 91       		.byte	0x91
 2739 05e0 64       		.sleb128 -28
 2740 05e1 0A       		.uleb128 0xa
 2741 05e2 48050000 		.4byte	.LASF21
 2742 05e6 01       		.byte	0x1
 2743 05e7 CB04     		.2byte	0x4cb
 2744 05e9 6B000000 		.4byte	0x6b
 2745 05ed 02       		.uleb128 0x2
 2746 05ee 91       		.byte	0x91
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 74


 2747 05ef 6F       		.sleb128 -17
 2748 05f0 00       		.byte	0
 2749 05f1 09       		.uleb128 0x9
 2750 05f2 FD020000 		.4byte	.LASF68
 2751 05f6 01       		.byte	0x1
 2752 05f7 F104     		.2byte	0x4f1
 2753 05f9 00000000 		.4byte	.LFB33
 2754 05fd 3C000000 		.4byte	.LFE33-.LFB33
 2755 0601 01       		.uleb128 0x1
 2756 0602 9C       		.byte	0x9c
 2757 0603 35060000 		.4byte	0x635
 2758 0607 0B       		.uleb128 0xb
 2759 0608 FF000000 		.4byte	.LASF39
 2760 060c 01       		.byte	0x1
 2761 060d F104     		.2byte	0x4f1
 2762 060f 77000000 		.4byte	0x77
 2763 0613 02       		.uleb128 0x2
 2764 0614 91       		.byte	0x91
 2765 0615 64       		.sleb128 -28
 2766 0616 0B       		.uleb128 0xb
 2767 0617 6F010000 		.4byte	.LASF69
 2768 061b 01       		.byte	0x1
 2769 061c F104     		.2byte	0x4f1
 2770 061e 77000000 		.4byte	0x77
 2771 0622 02       		.uleb128 0x2
 2772 0623 91       		.byte	0x91
 2773 0624 60       		.sleb128 -32
 2774 0625 0A       		.uleb128 0xa
 2775 0626 48050000 		.4byte	.LASF21
 2776 062a 01       		.byte	0x1
 2777 062b F304     		.2byte	0x4f3
 2778 062d 6B000000 		.4byte	0x6b
 2779 0631 02       		.uleb128 0x2
 2780 0632 91       		.byte	0x91
 2781 0633 6F       		.sleb128 -17
 2782 0634 00       		.byte	0
 2783 0635 0D       		.uleb128 0xd
 2784 0636 68030000 		.4byte	.LASF70
 2785 063a 01       		.byte	0x1
 2786 063b 0E05     		.2byte	0x50e
 2787 063d 77000000 		.4byte	0x77
 2788 0641 00000000 		.4byte	.LFB34
 2789 0645 20000000 		.4byte	.LFE34-.LFB34
 2790 0649 01       		.uleb128 0x1
 2791 064a 9C       		.byte	0x9c
 2792 064b 0C       		.uleb128 0xc
 2793 064c 47060000 		.4byte	.LASF71
 2794 0650 01       		.byte	0x1
 2795 0651 2705     		.2byte	0x527
 2796 0653 00000000 		.4byte	.LFB35
 2797 0657 1C000000 		.4byte	.LFE35-.LFB35
 2798 065b 01       		.uleb128 0x1
 2799 065c 9C       		.byte	0x9c
 2800 065d 71060000 		.4byte	0x671
 2801 0661 0B       		.uleb128 0xb
 2802 0662 48040000 		.4byte	.LASF72
 2803 0666 01       		.byte	0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 75


 2804 0667 2705     		.2byte	0x527
 2805 0669 77000000 		.4byte	0x77
 2806 066d 02       		.uleb128 0x2
 2807 066e 91       		.byte	0x91
 2808 066f 74       		.sleb128 -12
 2809 0670 00       		.byte	0
 2810 0671 0D       		.uleb128 0xd
 2811 0672 AD030000 		.4byte	.LASF73
 2812 0676 01       		.byte	0x1
 2813 0677 3E05     		.2byte	0x53e
 2814 0679 77000000 		.4byte	0x77
 2815 067d 00000000 		.4byte	.LFB36
 2816 0681 14000000 		.4byte	.LFE36-.LFB36
 2817 0685 01       		.uleb128 0x1
 2818 0686 9C       		.byte	0x9c
 2819 0687 0D       		.uleb128 0xd
 2820 0688 06000000 		.4byte	.LASF74
 2821 068c 01       		.byte	0x1
 2822 068d 5505     		.2byte	0x555
 2823 068f 77000000 		.4byte	0x77
 2824 0693 00000000 		.4byte	.LFB37
 2825 0697 14000000 		.4byte	.LFE37-.LFB37
 2826 069b 01       		.uleb128 0x1
 2827 069c 9C       		.byte	0x9c
 2828 069d 0C       		.uleb128 0xc
 2829 069e C8000000 		.4byte	.LASF75
 2830 06a2 01       		.byte	0x1
 2831 06a3 6C05     		.2byte	0x56c
 2832 06a5 00000000 		.4byte	.LFB38
 2833 06a9 1C000000 		.4byte	.LFE38-.LFB38
 2834 06ad 01       		.uleb128 0x1
 2835 06ae 9C       		.byte	0x9c
 2836 06af C3060000 		.4byte	0x6c3
 2837 06b3 0B       		.uleb128 0xb
 2838 06b4 48040000 		.4byte	.LASF72
 2839 06b8 01       		.byte	0x1
 2840 06b9 6C05     		.2byte	0x56c
 2841 06bb 77000000 		.4byte	0x77
 2842 06bf 02       		.uleb128 0x2
 2843 06c0 91       		.byte	0x91
 2844 06c1 74       		.sleb128 -12
 2845 06c2 00       		.byte	0
 2846 06c3 0C       		.uleb128 0xc
 2847 06c4 66060000 		.4byte	.LASF76
 2848 06c8 01       		.byte	0x1
 2849 06c9 8305     		.2byte	0x583
 2850 06cb 00000000 		.4byte	.LFB39
 2851 06cf 1C000000 		.4byte	.LFE39-.LFB39
 2852 06d3 01       		.uleb128 0x1
 2853 06d4 9C       		.byte	0x9c
 2854 06d5 E9060000 		.4byte	0x6e9
 2855 06d9 0B       		.uleb128 0xb
 2856 06da 48040000 		.4byte	.LASF72
 2857 06de 01       		.byte	0x1
 2858 06df 8305     		.2byte	0x583
 2859 06e1 77000000 		.4byte	0x77
 2860 06e5 02       		.uleb128 0x2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 76


 2861 06e6 91       		.byte	0x91
 2862 06e7 74       		.sleb128 -12
 2863 06e8 00       		.byte	0
 2864 06e9 0E       		.uleb128 0xe
 2865 06ea 32050000 		.4byte	.LASF80
 2866 06ee 01       		.byte	0x1
 2867 06ef 15       		.byte	0x15
 2868 06f0 6B000000 		.4byte	0x6b
 2869 06f4 05       		.uleb128 0x5
 2870 06f5 03       		.byte	0x3
 2871 06f6 00000000 		.4byte	SENT_TX_1_PWM_initVar
 2872 06fa 00       		.byte	0
 2873              		.section	.debug_abbrev,"",%progbits
 2874              	.Ldebug_abbrev0:
 2875 0000 01       		.uleb128 0x1
 2876 0001 11       		.uleb128 0x11
 2877 0002 01       		.byte	0x1
 2878 0003 25       		.uleb128 0x25
 2879 0004 0E       		.uleb128 0xe
 2880 0005 13       		.uleb128 0x13
 2881 0006 0B       		.uleb128 0xb
 2882 0007 03       		.uleb128 0x3
 2883 0008 0E       		.uleb128 0xe
 2884 0009 1B       		.uleb128 0x1b
 2885 000a 0E       		.uleb128 0xe
 2886 000b 55       		.uleb128 0x55
 2887 000c 17       		.uleb128 0x17
 2888 000d 11       		.uleb128 0x11
 2889 000e 01       		.uleb128 0x1
 2890 000f 10       		.uleb128 0x10
 2891 0010 17       		.uleb128 0x17
 2892 0011 00       		.byte	0
 2893 0012 00       		.byte	0
 2894 0013 02       		.uleb128 0x2
 2895 0014 24       		.uleb128 0x24
 2896 0015 00       		.byte	0
 2897 0016 0B       		.uleb128 0xb
 2898 0017 0B       		.uleb128 0xb
 2899 0018 3E       		.uleb128 0x3e
 2900 0019 0B       		.uleb128 0xb
 2901 001a 03       		.uleb128 0x3
 2902 001b 0E       		.uleb128 0xe
 2903 001c 00       		.byte	0
 2904 001d 00       		.byte	0
 2905 001e 03       		.uleb128 0x3
 2906 001f 24       		.uleb128 0x24
 2907 0020 00       		.byte	0
 2908 0021 0B       		.uleb128 0xb
 2909 0022 0B       		.uleb128 0xb
 2910 0023 3E       		.uleb128 0x3e
 2911 0024 0B       		.uleb128 0xb
 2912 0025 03       		.uleb128 0x3
 2913 0026 08       		.uleb128 0x8
 2914 0027 00       		.byte	0
 2915 0028 00       		.byte	0
 2916 0029 04       		.uleb128 0x4
 2917 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 77


 2918 002b 00       		.byte	0
 2919 002c 03       		.uleb128 0x3
 2920 002d 0E       		.uleb128 0xe
 2921 002e 3A       		.uleb128 0x3a
 2922 002f 0B       		.uleb128 0xb
 2923 0030 3B       		.uleb128 0x3b
 2924 0031 05       		.uleb128 0x5
 2925 0032 49       		.uleb128 0x49
 2926 0033 13       		.uleb128 0x13
 2927 0034 00       		.byte	0
 2928 0035 00       		.byte	0
 2929 0036 05       		.uleb128 0x5
 2930 0037 35       		.uleb128 0x35
 2931 0038 00       		.byte	0
 2932 0039 49       		.uleb128 0x49
 2933 003a 13       		.uleb128 0x13
 2934 003b 00       		.byte	0
 2935 003c 00       		.byte	0
 2936 003d 06       		.uleb128 0x6
 2937 003e 2E       		.uleb128 0x2e
 2938 003f 00       		.byte	0
 2939 0040 3F       		.uleb128 0x3f
 2940 0041 19       		.uleb128 0x19
 2941 0042 03       		.uleb128 0x3
 2942 0043 0E       		.uleb128 0xe
 2943 0044 3A       		.uleb128 0x3a
 2944 0045 0B       		.uleb128 0xb
 2945 0046 3B       		.uleb128 0x3b
 2946 0047 0B       		.uleb128 0xb
 2947 0048 27       		.uleb128 0x27
 2948 0049 19       		.uleb128 0x19
 2949 004a 11       		.uleb128 0x11
 2950 004b 01       		.uleb128 0x1
 2951 004c 12       		.uleb128 0x12
 2952 004d 06       		.uleb128 0x6
 2953 004e 40       		.uleb128 0x40
 2954 004f 18       		.uleb128 0x18
 2955 0050 9642     		.uleb128 0x2116
 2956 0052 19       		.uleb128 0x19
 2957 0053 00       		.byte	0
 2958 0054 00       		.byte	0
 2959 0055 07       		.uleb128 0x7
 2960 0056 2E       		.uleb128 0x2e
 2961 0057 01       		.byte	0x1
 2962 0058 3F       		.uleb128 0x3f
 2963 0059 19       		.uleb128 0x19
 2964 005a 03       		.uleb128 0x3
 2965 005b 0E       		.uleb128 0xe
 2966 005c 3A       		.uleb128 0x3a
 2967 005d 0B       		.uleb128 0xb
 2968 005e 3B       		.uleb128 0x3b
 2969 005f 0B       		.uleb128 0xb
 2970 0060 27       		.uleb128 0x27
 2971 0061 19       		.uleb128 0x19
 2972 0062 11       		.uleb128 0x11
 2973 0063 01       		.uleb128 0x1
 2974 0064 12       		.uleb128 0x12
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 78


 2975 0065 06       		.uleb128 0x6
 2976 0066 40       		.uleb128 0x40
 2977 0067 18       		.uleb128 0x18
 2978 0068 9642     		.uleb128 0x2116
 2979 006a 19       		.uleb128 0x19
 2980 006b 01       		.uleb128 0x1
 2981 006c 13       		.uleb128 0x13
 2982 006d 00       		.byte	0
 2983 006e 00       		.byte	0
 2984 006f 08       		.uleb128 0x8
 2985 0070 34       		.uleb128 0x34
 2986 0071 00       		.byte	0
 2987 0072 03       		.uleb128 0x3
 2988 0073 0E       		.uleb128 0xe
 2989 0074 3A       		.uleb128 0x3a
 2990 0075 0B       		.uleb128 0xb
 2991 0076 3B       		.uleb128 0x3b
 2992 0077 0B       		.uleb128 0xb
 2993 0078 49       		.uleb128 0x49
 2994 0079 13       		.uleb128 0x13
 2995 007a 02       		.uleb128 0x2
 2996 007b 18       		.uleb128 0x18
 2997 007c 00       		.byte	0
 2998 007d 00       		.byte	0
 2999 007e 09       		.uleb128 0x9
 3000 007f 2E       		.uleb128 0x2e
 3001 0080 01       		.byte	0x1
 3002 0081 3F       		.uleb128 0x3f
 3003 0082 19       		.uleb128 0x19
 3004 0083 03       		.uleb128 0x3
 3005 0084 0E       		.uleb128 0xe
 3006 0085 3A       		.uleb128 0x3a
 3007 0086 0B       		.uleb128 0xb
 3008 0087 3B       		.uleb128 0x3b
 3009 0088 05       		.uleb128 0x5
 3010 0089 27       		.uleb128 0x27
 3011 008a 19       		.uleb128 0x19
 3012 008b 11       		.uleb128 0x11
 3013 008c 01       		.uleb128 0x1
 3014 008d 12       		.uleb128 0x12
 3015 008e 06       		.uleb128 0x6
 3016 008f 40       		.uleb128 0x40
 3017 0090 18       		.uleb128 0x18
 3018 0091 9642     		.uleb128 0x2116
 3019 0093 19       		.uleb128 0x19
 3020 0094 01       		.uleb128 0x1
 3021 0095 13       		.uleb128 0x13
 3022 0096 00       		.byte	0
 3023 0097 00       		.byte	0
 3024 0098 0A       		.uleb128 0xa
 3025 0099 34       		.uleb128 0x34
 3026 009a 00       		.byte	0
 3027 009b 03       		.uleb128 0x3
 3028 009c 0E       		.uleb128 0xe
 3029 009d 3A       		.uleb128 0x3a
 3030 009e 0B       		.uleb128 0xb
 3031 009f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 79


 3032 00a0 05       		.uleb128 0x5
 3033 00a1 49       		.uleb128 0x49
 3034 00a2 13       		.uleb128 0x13
 3035 00a3 02       		.uleb128 0x2
 3036 00a4 18       		.uleb128 0x18
 3037 00a5 00       		.byte	0
 3038 00a6 00       		.byte	0
 3039 00a7 0B       		.uleb128 0xb
 3040 00a8 05       		.uleb128 0x5
 3041 00a9 00       		.byte	0
 3042 00aa 03       		.uleb128 0x3
 3043 00ab 0E       		.uleb128 0xe
 3044 00ac 3A       		.uleb128 0x3a
 3045 00ad 0B       		.uleb128 0xb
 3046 00ae 3B       		.uleb128 0x3b
 3047 00af 05       		.uleb128 0x5
 3048 00b0 49       		.uleb128 0x49
 3049 00b1 13       		.uleb128 0x13
 3050 00b2 02       		.uleb128 0x2
 3051 00b3 18       		.uleb128 0x18
 3052 00b4 00       		.byte	0
 3053 00b5 00       		.byte	0
 3054 00b6 0C       		.uleb128 0xc
 3055 00b7 2E       		.uleb128 0x2e
 3056 00b8 01       		.byte	0x1
 3057 00b9 3F       		.uleb128 0x3f
 3058 00ba 19       		.uleb128 0x19
 3059 00bb 03       		.uleb128 0x3
 3060 00bc 0E       		.uleb128 0xe
 3061 00bd 3A       		.uleb128 0x3a
 3062 00be 0B       		.uleb128 0xb
 3063 00bf 3B       		.uleb128 0x3b
 3064 00c0 05       		.uleb128 0x5
 3065 00c1 27       		.uleb128 0x27
 3066 00c2 19       		.uleb128 0x19
 3067 00c3 11       		.uleb128 0x11
 3068 00c4 01       		.uleb128 0x1
 3069 00c5 12       		.uleb128 0x12
 3070 00c6 06       		.uleb128 0x6
 3071 00c7 40       		.uleb128 0x40
 3072 00c8 18       		.uleb128 0x18
 3073 00c9 9742     		.uleb128 0x2117
 3074 00cb 19       		.uleb128 0x19
 3075 00cc 01       		.uleb128 0x1
 3076 00cd 13       		.uleb128 0x13
 3077 00ce 00       		.byte	0
 3078 00cf 00       		.byte	0
 3079 00d0 0D       		.uleb128 0xd
 3080 00d1 2E       		.uleb128 0x2e
 3081 00d2 00       		.byte	0
 3082 00d3 3F       		.uleb128 0x3f
 3083 00d4 19       		.uleb128 0x19
 3084 00d5 03       		.uleb128 0x3
 3085 00d6 0E       		.uleb128 0xe
 3086 00d7 3A       		.uleb128 0x3a
 3087 00d8 0B       		.uleb128 0xb
 3088 00d9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 80


 3089 00da 05       		.uleb128 0x5
 3090 00db 27       		.uleb128 0x27
 3091 00dc 19       		.uleb128 0x19
 3092 00dd 49       		.uleb128 0x49
 3093 00de 13       		.uleb128 0x13
 3094 00df 11       		.uleb128 0x11
 3095 00e0 01       		.uleb128 0x1
 3096 00e1 12       		.uleb128 0x12
 3097 00e2 06       		.uleb128 0x6
 3098 00e3 40       		.uleb128 0x40
 3099 00e4 18       		.uleb128 0x18
 3100 00e5 9742     		.uleb128 0x2117
 3101 00e7 19       		.uleb128 0x19
 3102 00e8 00       		.byte	0
 3103 00e9 00       		.byte	0
 3104 00ea 0E       		.uleb128 0xe
 3105 00eb 34       		.uleb128 0x34
 3106 00ec 00       		.byte	0
 3107 00ed 03       		.uleb128 0x3
 3108 00ee 0E       		.uleb128 0xe
 3109 00ef 3A       		.uleb128 0x3a
 3110 00f0 0B       		.uleb128 0xb
 3111 00f1 3B       		.uleb128 0x3b
 3112 00f2 0B       		.uleb128 0xb
 3113 00f3 49       		.uleb128 0x49
 3114 00f4 13       		.uleb128 0x13
 3115 00f5 3F       		.uleb128 0x3f
 3116 00f6 19       		.uleb128 0x19
 3117 00f7 02       		.uleb128 0x2
 3118 00f8 18       		.uleb128 0x18
 3119 00f9 00       		.byte	0
 3120 00fa 00       		.byte	0
 3121 00fb 00       		.byte	0
 3122              		.section	.debug_aranges,"",%progbits
 3123 0000 54010000 		.4byte	0x154
 3124 0004 0200     		.2byte	0x2
 3125 0006 00000000 		.4byte	.Ldebug_info0
 3126 000a 04       		.byte	0x4
 3127 000b 00       		.byte	0
 3128 000c 0000     		.2byte	0
 3129 000e 0000     		.2byte	0
 3130 0010 00000000 		.4byte	.LFB0
 3131 0014 60000000 		.4byte	.LFE0-.LFB0
 3132 0018 00000000 		.4byte	.LFB1
 3133 001c 3C000000 		.4byte	.LFE1-.LFB1
 3134 0020 00000000 		.4byte	.LFB2
 3135 0024 24000000 		.4byte	.LFE2-.LFB2
 3136 0028 00000000 		.4byte	.LFB3
 3137 002c 34000000 		.4byte	.LFE3-.LFB3
 3138 0030 00000000 		.4byte	.LFB4
 3139 0034 48000000 		.4byte	.LFE4-.LFB4
 3140 0038 00000000 		.4byte	.LFB5
 3141 003c 48000000 		.4byte	.LFE5-.LFB5
 3142 0040 00000000 		.4byte	.LFB6
 3143 0044 48000000 		.4byte	.LFE6-.LFB6
 3144 0048 00000000 		.4byte	.LFB7
 3145 004c 50000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 81


 3146 0050 00000000 		.4byte	.LFB8
 3147 0054 20000000 		.4byte	.LFE8-.LFB8
 3148 0058 00000000 		.4byte	.LFB9
 3149 005c 4C000000 		.4byte	.LFE9-.LFB9
 3150 0060 00000000 		.4byte	.LFB10
 3151 0064 4C000000 		.4byte	.LFE10-.LFB10
 3152 0068 00000000 		.4byte	.LFB11
 3153 006c 50000000 		.4byte	.LFE11-.LFB11
 3154 0070 00000000 		.4byte	.LFB12
 3155 0074 48000000 		.4byte	.LFE12-.LFB12
 3156 0078 00000000 		.4byte	.LFB13
 3157 007c 20000000 		.4byte	.LFE13-.LFB13
 3158 0080 00000000 		.4byte	.LFB14
 3159 0084 18000000 		.4byte	.LFE14-.LFB14
 3160 0088 00000000 		.4byte	.LFB15
 3161 008c 48000000 		.4byte	.LFE15-.LFB15
 3162 0090 00000000 		.4byte	.LFB16
 3163 0094 20000000 		.4byte	.LFE16-.LFB16
 3164 0098 00000000 		.4byte	.LFB17
 3165 009c 18000000 		.4byte	.LFE17-.LFB17
 3166 00a0 00000000 		.4byte	.LFB18
 3167 00a4 48000000 		.4byte	.LFE18-.LFB18
 3168 00a8 00000000 		.4byte	.LFB19
 3169 00ac 20000000 		.4byte	.LFE19-.LFB19
 3170 00b0 00000000 		.4byte	.LFB20
 3171 00b4 18000000 		.4byte	.LFE20-.LFB20
 3172 00b8 00000000 		.4byte	.LFB21
 3173 00bc 4C000000 		.4byte	.LFE21-.LFB21
 3174 00c0 00000000 		.4byte	.LFB22
 3175 00c4 20000000 		.4byte	.LFE22-.LFB22
 3176 00c8 00000000 		.4byte	.LFB23
 3177 00cc 18000000 		.4byte	.LFE23-.LFB23
 3178 00d0 00000000 		.4byte	.LFB24
 3179 00d4 20000000 		.4byte	.LFE24-.LFB24
 3180 00d8 00000000 		.4byte	.LFB25
 3181 00dc 18000000 		.4byte	.LFE25-.LFB25
 3182 00e0 00000000 		.4byte	.LFB26
 3183 00e4 18000000 		.4byte	.LFE26-.LFB26
 3184 00e8 00000000 		.4byte	.LFB27
 3185 00ec 18000000 		.4byte	.LFE27-.LFB27
 3186 00f0 00000000 		.4byte	.LFB28
 3187 00f4 44000000 		.4byte	.LFE28-.LFB28
 3188 00f8 00000000 		.4byte	.LFB29
 3189 00fc 48000000 		.4byte	.LFE29-.LFB29
 3190 0100 00000000 		.4byte	.LFB30
 3191 0104 4C000000 		.4byte	.LFE30-.LFB30
 3192 0108 00000000 		.4byte	.LFB31
 3193 010c 48000000 		.4byte	.LFE31-.LFB31
 3194 0110 00000000 		.4byte	.LFB32
 3195 0114 48000000 		.4byte	.LFE32-.LFB32
 3196 0118 00000000 		.4byte	.LFB33
 3197 011c 3C000000 		.4byte	.LFE33-.LFB33
 3198 0120 00000000 		.4byte	.LFB34
 3199 0124 20000000 		.4byte	.LFE34-.LFB34
 3200 0128 00000000 		.4byte	.LFB35
 3201 012c 1C000000 		.4byte	.LFE35-.LFB35
 3202 0130 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 82


 3203 0134 14000000 		.4byte	.LFE36-.LFB36
 3204 0138 00000000 		.4byte	.LFB37
 3205 013c 14000000 		.4byte	.LFE37-.LFB37
 3206 0140 00000000 		.4byte	.LFB38
 3207 0144 1C000000 		.4byte	.LFE38-.LFB38
 3208 0148 00000000 		.4byte	.LFB39
 3209 014c 1C000000 		.4byte	.LFE39-.LFB39
 3210 0150 00000000 		.4byte	0
 3211 0154 00000000 		.4byte	0
 3212              		.section	.debug_ranges,"",%progbits
 3213              	.Ldebug_ranges0:
 3214 0000 00000000 		.4byte	.LFB0
 3215 0004 60000000 		.4byte	.LFE0
 3216 0008 00000000 		.4byte	.LFB1
 3217 000c 3C000000 		.4byte	.LFE1
 3218 0010 00000000 		.4byte	.LFB2
 3219 0014 24000000 		.4byte	.LFE2
 3220 0018 00000000 		.4byte	.LFB3
 3221 001c 34000000 		.4byte	.LFE3
 3222 0020 00000000 		.4byte	.LFB4
 3223 0024 48000000 		.4byte	.LFE4
 3224 0028 00000000 		.4byte	.LFB5
 3225 002c 48000000 		.4byte	.LFE5
 3226 0030 00000000 		.4byte	.LFB6
 3227 0034 48000000 		.4byte	.LFE6
 3228 0038 00000000 		.4byte	.LFB7
 3229 003c 50000000 		.4byte	.LFE7
 3230 0040 00000000 		.4byte	.LFB8
 3231 0044 20000000 		.4byte	.LFE8
 3232 0048 00000000 		.4byte	.LFB9
 3233 004c 4C000000 		.4byte	.LFE9
 3234 0050 00000000 		.4byte	.LFB10
 3235 0054 4C000000 		.4byte	.LFE10
 3236 0058 00000000 		.4byte	.LFB11
 3237 005c 50000000 		.4byte	.LFE11
 3238 0060 00000000 		.4byte	.LFB12
 3239 0064 48000000 		.4byte	.LFE12
 3240 0068 00000000 		.4byte	.LFB13
 3241 006c 20000000 		.4byte	.LFE13
 3242 0070 00000000 		.4byte	.LFB14
 3243 0074 18000000 		.4byte	.LFE14
 3244 0078 00000000 		.4byte	.LFB15
 3245 007c 48000000 		.4byte	.LFE15
 3246 0080 00000000 		.4byte	.LFB16
 3247 0084 20000000 		.4byte	.LFE16
 3248 0088 00000000 		.4byte	.LFB17
 3249 008c 18000000 		.4byte	.LFE17
 3250 0090 00000000 		.4byte	.LFB18
 3251 0094 48000000 		.4byte	.LFE18
 3252 0098 00000000 		.4byte	.LFB19
 3253 009c 20000000 		.4byte	.LFE19
 3254 00a0 00000000 		.4byte	.LFB20
 3255 00a4 18000000 		.4byte	.LFE20
 3256 00a8 00000000 		.4byte	.LFB21
 3257 00ac 4C000000 		.4byte	.LFE21
 3258 00b0 00000000 		.4byte	.LFB22
 3259 00b4 20000000 		.4byte	.LFE22
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 83


 3260 00b8 00000000 		.4byte	.LFB23
 3261 00bc 18000000 		.4byte	.LFE23
 3262 00c0 00000000 		.4byte	.LFB24
 3263 00c4 20000000 		.4byte	.LFE24
 3264 00c8 00000000 		.4byte	.LFB25
 3265 00cc 18000000 		.4byte	.LFE25
 3266 00d0 00000000 		.4byte	.LFB26
 3267 00d4 18000000 		.4byte	.LFE26
 3268 00d8 00000000 		.4byte	.LFB27
 3269 00dc 18000000 		.4byte	.LFE27
 3270 00e0 00000000 		.4byte	.LFB28
 3271 00e4 44000000 		.4byte	.LFE28
 3272 00e8 00000000 		.4byte	.LFB29
 3273 00ec 48000000 		.4byte	.LFE29
 3274 00f0 00000000 		.4byte	.LFB30
 3275 00f4 4C000000 		.4byte	.LFE30
 3276 00f8 00000000 		.4byte	.LFB31
 3277 00fc 48000000 		.4byte	.LFE31
 3278 0100 00000000 		.4byte	.LFB32
 3279 0104 48000000 		.4byte	.LFE32
 3280 0108 00000000 		.4byte	.LFB33
 3281 010c 3C000000 		.4byte	.LFE33
 3282 0110 00000000 		.4byte	.LFB34
 3283 0114 20000000 		.4byte	.LFE34
 3284 0118 00000000 		.4byte	.LFB35
 3285 011c 1C000000 		.4byte	.LFE35
 3286 0120 00000000 		.4byte	.LFB36
 3287 0124 14000000 		.4byte	.LFE36
 3288 0128 00000000 		.4byte	.LFB37
 3289 012c 14000000 		.4byte	.LFE37
 3290 0130 00000000 		.4byte	.LFB38
 3291 0134 1C000000 		.4byte	.LFE38
 3292 0138 00000000 		.4byte	.LFB39
 3293 013c 1C000000 		.4byte	.LFE39
 3294 0140 00000000 		.4byte	0
 3295 0144 00000000 		.4byte	0
 3296              		.section	.debug_line,"",%progbits
 3297              	.Ldebug_line0:
 3298 0000 77030000 		.section	.debug_str,"MS",%progbits,1
 3298      02004A00 
 3298      00000201 
 3298      FB0E0D00 
 3298      01010101 
 3299              	.LASF41:
 3300 0000 636F756E 		.ascii	"count\000"
 3300      7400
 3301              	.LASF74:
 3302 0006 53454E54 		.ascii	"SENT_TX_1_PWM_GetInterruptSource\000"
 3302      5F54585F 
 3302      315F5057 
 3302      4D5F4765 
 3302      74496E74 
 3303              	.LASF45:
 3304 0027 70657269 		.ascii	"period\000"
 3304      6F6400
 3305              	.LASF7:
 3306 002e 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 84


 3306      206C6F6E 
 3306      6720756E 
 3306      7369676E 
 3306      65642069 
 3307              	.LASF67:
 3308 0045 53454E54 		.ascii	"SENT_TX_1_PWM_SetCountMode\000"
 3308      5F54585F 
 3308      315F5057 
 3308      4D5F5365 
 3308      74436F75 
 3309              	.LASF32:
 3310 0060 53454E54 		.ascii	"SENT_TX_1_PWM_SetPWMSyncKill\000"
 3310      5F54585F 
 3310      315F5057 
 3310      4D5F5365 
 3310      7450574D 
 3311              	.LASF25:
 3312 007d 71644D6F 		.ascii	"qdMode\000"
 3312      646500
 3313              	.LASF6:
 3314 0084 6C6F6E67 		.ascii	"long long int\000"
 3314      206C6F6E 
 3314      6720696E 
 3314      7400
 3315              	.LASF0:
 3316 0092 7369676E 		.ascii	"signed char\000"
 3316      65642063 
 3316      68617200 
 3317              	.LASF54:
 3318 009e 53454E54 		.ascii	"SENT_TX_1_PWM_WriteCompare\000"
 3318      5F54585F 
 3318      315F5057 
 3318      4D5F5772 
 3318      69746543 
 3319              	.LASF4:
 3320 00b9 6C6F6E67 		.ascii	"long int\000"
 3320      20696E74 
 3320      00
 3321              	.LASF9:
 3322 00c2 75696E74 		.ascii	"uint8\000"
 3322      3800
 3323              	.LASF75:
 3324 00c8 53454E54 		.ascii	"SENT_TX_1_PWM_ClearInterrupt\000"
 3324      5F54585F 
 3324      315F5057 
 3324      4D5F436C 
 3324      65617249 
 3325              	.LASF12:
 3326 00e5 646F7562 		.ascii	"double\000"
 3326      6C6500
 3327              	.LASF10:
 3328 00ec 75696E74 		.ascii	"uint32\000"
 3328      333200
 3329              	.LASF63:
 3330 00f3 74726967 		.ascii	"triggerMode\000"
 3330      6765724D 
 3330      6F646500 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 85


 3331              	.LASF39:
 3332 00ff 6D61736B 		.ascii	"mask\000"
 3332      00
 3333              	.LASF37:
 3334 0104 64656164 		.ascii	"deadTime\000"
 3334      54696D65 
 3334      00
 3335              	.LASF59:
 3336 010d 53454E54 		.ascii	"SENT_TX_1_PWM_ReadCompareBuf\000"
 3336      5F54585F 
 3336      315F5057 
 3336      4D5F5265 
 3336      6164436F 
 3337              	.LASF48:
 3338 012a 53454E54 		.ascii	"SENT_TX_1_PWM_SetCompareSwap\000"
 3338      5F54585F 
 3338      315F5057 
 3338      4D5F5365 
 3338      74436F6D 
 3339              	.LASF40:
 3340 0147 53454E54 		.ascii	"SENT_TX_1_PWM_WriteCounter\000"
 3340      5F54585F 
 3340      315F5057 
 3340      4D5F5772 
 3340      69746543 
 3341              	.LASF8:
 3342 0162 756E7369 		.ascii	"unsigned int\000"
 3342      676E6564 
 3342      20696E74 
 3342      00
 3343              	.LASF69:
 3344 016f 636F6D6D 		.ascii	"command\000"
 3344      616E6400 
 3345              	.LASF5:
 3346 0177 6C6F6E67 		.ascii	"long unsigned int\000"
 3346      20756E73 
 3346      69676E65 
 3346      6420696E 
 3346      7400
 3347              	.LASF31:
 3348 0189 6D6F6465 		.ascii	"modeMask\000"
 3348      4D61736B 
 3348      00
 3349              	.LASF3:
 3350 0192 73686F72 		.ascii	"short unsigned int\000"
 3350      7420756E 
 3350      7369676E 
 3350      65642069 
 3350      6E7400
 3351              	.LASF36:
 3352 01a5 53454E54 		.ascii	"SENT_TX_1_PWM_SetPWMDeadTime\000"
 3352      5F54585F 
 3352      315F5057 
 3352      4D5F5365 
 3352      7450574D 
 3353              	.LASF66:
 3354 01c2 53454E54 		.ascii	"SENT_TX_1_PWM_SetStopMode\000"
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 86


 3354      5F54585F 
 3354      315F5057 
 3354      4D5F5365 
 3354      7453746F 
 3355              	.LASF29:
 3356 01dc 6F6E6553 		.ascii	"oneShotEnable\000"
 3356      686F7445 
 3356      6E61626C 
 3356      6500
 3357              	.LASF34:
 3358 01ea 53454E54 		.ascii	"SENT_TX_1_PWM_SetPWMStopOnKill\000"
 3358      5F54585F 
 3358      315F5057 
 3358      4D5F5365 
 3358      7450574D 
 3359              	.LASF19:
 3360 0209 53454E54 		.ascii	"SENT_TX_1_PWM_Enable\000"
 3360      5F54585F 
 3360      315F5057 
 3360      4D5F456E 
 3360      61626C65 
 3361              	.LASF77:
 3362 021e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3362      43313120 
 3362      352E342E 
 3362      31203230 
 3362      31363036 
 3363 0251 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3363      20726576 
 3363      6973696F 
 3363      6E203233 
 3363      37373135 
 3364 0284 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3364      66756E63 
 3364      74696F6E 
 3364      2D736563 
 3364      74696F6E 
 3365              	.LASF38:
 3366 02ac 53454E54 		.ascii	"SENT_TX_1_PWM_SetPWMInvert\000"
 3366      5F54585F 
 3366      315F5057 
 3366      4D5F5365 
 3366      7450574D 
 3367              	.LASF65:
 3368 02c7 53454E54 		.ascii	"SENT_TX_1_PWM_SetStartMode\000"
 3368      5F54585F 
 3368      315F5057 
 3368      4D5F5365 
 3368      74537461 
 3369              	.LASF14:
 3370 02e2 72656733 		.ascii	"reg32\000"
 3370      3200
 3371              	.LASF16:
 3372 02e8 73697A65 		.ascii	"sizetype\000"
 3372      74797065 
 3372      00
 3373              	.LASF15:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 87


 3374 02f1 6C6F6E67 		.ascii	"long double\000"
 3374      20646F75 
 3374      626C6500 
 3375              	.LASF68:
 3376 02fd 53454E54 		.ascii	"SENT_TX_1_PWM_TriggerCommand\000"
 3376      5F54585F 
 3376      315F5057 
 3376      4D5F5472 
 3376      69676765 
 3377              	.LASF20:
 3378 031a 53454E54 		.ascii	"SENT_TX_1_PWM_Stop\000"
 3378      5F54585F 
 3378      315F5057 
 3378      4D5F5374 
 3378      6F7000
 3379              	.LASF28:
 3380 032d 53454E54 		.ascii	"SENT_TX_1_PWM_SetOneShot\000"
 3380      5F54585F 
 3380      315F5057 
 3380      4D5F5365 
 3380      744F6E65 
 3381              	.LASF55:
 3382 0346 636F6D70 		.ascii	"compare\000"
 3382      61726500 
 3383              	.LASF44:
 3384 034e 53454E54 		.ascii	"SENT_TX_1_PWM_WritePeriod\000"
 3384      5F54585F 
 3384      315F5057 
 3384      4D5F5772 
 3384      69746550 
 3385              	.LASF70:
 3386 0368 53454E54 		.ascii	"SENT_TX_1_PWM_ReadStatus\000"
 3386      5F54585F 
 3386      315F5057 
 3386      4D5F5265 
 3386      61645374 
 3387              	.LASF52:
 3388 0381 53454E54 		.ascii	"SENT_TX_1_PWM_ReadPeriodBuf\000"
 3388      5F54585F 
 3388      315F5057 
 3388      4D5F5265 
 3388      61645065 
 3389              	.LASF11:
 3390 039d 666C6F61 		.ascii	"float\000"
 3390      7400
 3391              	.LASF27:
 3392 03a3 70726573 		.ascii	"prescaler\000"
 3392      63616C65 
 3392      7200
 3393              	.LASF73:
 3394 03ad 53454E54 		.ascii	"SENT_TX_1_PWM_GetInterruptSourceMasked\000"
 3394      5F54585F 
 3394      315F5057 
 3394      4D5F4765 
 3394      74496E74 
 3395              	.LASF18:
 3396 03d4 53454E54 		.ascii	"SENT_TX_1_PWM_Start\000"
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 88


 3396      5F54585F 
 3396      315F5057 
 3396      4D5F5374 
 3396      61727400 
 3397              	.LASF26:
 3398 03e8 53454E54 		.ascii	"SENT_TX_1_PWM_SetPrescaler\000"
 3398      5F54585F 
 3398      315F5057 
 3398      4D5F5365 
 3398      74507265 
 3399              	.LASF1:
 3400 0403 756E7369 		.ascii	"unsigned char\000"
 3400      676E6564 
 3400      20636861 
 3400      7200
 3401              	.LASF53:
 3402 0411 53454E54 		.ascii	"SENT_TX_1_PWM_SetPeriodSwap\000"
 3402      5F54585F 
 3402      315F5057 
 3402      4D5F5365 
 3402      74506572 
 3403              	.LASF35:
 3404 042d 73746F70 		.ascii	"stopOnKillEnable\000"
 3404      4F6E4B69 
 3404      6C6C456E 
 3404      61626C65 
 3404      00
 3405              	.LASF2:
 3406 043e 73686F72 		.ascii	"short int\000"
 3406      7420696E 
 3406      7400
 3407              	.LASF72:
 3408 0448 696E7465 		.ascii	"interruptMask\000"
 3408      72727570 
 3408      744D6173 
 3408      6B00
 3409              	.LASF60:
 3410 0456 53454E54 		.ascii	"SENT_TX_1_PWM_ReadCapture\000"
 3410      5F54585F 
 3410      315F5057 
 3410      4D5F5265 
 3410      61644361 
 3411              	.LASF23:
 3412 0470 53454E54 		.ascii	"SENT_TX_1_PWM_SetQDMode\000"
 3412      5F54585F 
 3412      315F5057 
 3412      4D5F5365 
 3412      7451444D 
 3413              	.LASF42:
 3414 0488 53454E54 		.ascii	"SENT_TX_1_PWM_SetCounterMode\000"
 3414      5F54585F 
 3414      315F5057 
 3414      4D5F5365 
 3414      74436F75 
 3415              	.LASF13:
 3416 04a5 63686172 		.ascii	"char\000"
 3416      00
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 89


 3417              	.LASF24:
 3418 04aa 6D6F6465 		.ascii	"mode\000"
 3418      00
 3419              	.LASF47:
 3420 04af 53454E54 		.ascii	"SENT_TX_1_PWM_ReadPeriod\000"
 3420      5F54585F 
 3420      315F5057 
 3420      4D5F5265 
 3420      61645065 
 3421              	.LASF56:
 3422 04c8 53454E54 		.ascii	"SENT_TX_1_PWM_ReadCompare\000"
 3422      5F54585F 
 3422      315F5057 
 3422      4D5F5265 
 3422      6164436F 
 3423              	.LASF43:
 3424 04e2 636F756E 		.ascii	"counterMode\000"
 3424      7465724D 
 3424      6F646500 
 3425              	.LASF50:
 3426 04ee 53454E54 		.ascii	"SENT_TX_1_PWM_WritePeriodBuf\000"
 3426      5F54585F 
 3426      315F5057 
 3426      4D5F5772 
 3426      69746550 
 3427              	.LASF64:
 3428 050b 53454E54 		.ascii	"SENT_TX_1_PWM_SetReloadMode\000"
 3428      5F54585F 
 3428      315F5057 
 3428      4D5F5365 
 3428      7452656C 
 3429              	.LASF58:
 3430 0527 636F6D70 		.ascii	"compareBuf\000"
 3430      61726542 
 3430      756600
 3431              	.LASF80:
 3432 0532 53454E54 		.ascii	"SENT_TX_1_PWM_initVar\000"
 3432      5F54585F 
 3432      315F5057 
 3432      4D5F696E 
 3432      69745661 
 3433              	.LASF21:
 3434 0548 656E6162 		.ascii	"enableInterrupts\000"
 3434      6C65496E 
 3434      74657272 
 3434      75707473 
 3434      00
 3435              	.LASF62:
 3436 0559 53454E54 		.ascii	"SENT_TX_1_PWM_SetCaptureMode\000"
 3436      5F54585F 
 3436      315F5057 
 3436      4D5F5365 
 3436      74436170 
 3437              	.LASF79:
 3438 0576 433A5C55 		.ascii	"C:\\Users\\Ala\\Desktop\\Cypress\\BeoM_main.cydsn\000"
 3438      73657273 
 3438      5C416C61 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 90


 3438      5C446573 
 3438      6B746F70 
 3439              	.LASF78:
 3440 05a3 47656E65 		.ascii	"Generated_Source\\PSoC4\\SENT_TX_1_PWM.c\000"
 3440      72617465 
 3440      645F536F 
 3440      75726365 
 3440      5C50536F 
 3441              	.LASF46:
 3442 05ca 53454E54 		.ascii	"SENT_TX_1_PWM_ReadCounter\000"
 3442      5F54585F 
 3442      315F5057 
 3442      4D5F5265 
 3442      6164436F 
 3443              	.LASF61:
 3444 05e4 53454E54 		.ascii	"SENT_TX_1_PWM_ReadCaptureBuf\000"
 3444      5F54585F 
 3444      315F5057 
 3444      4D5F5265 
 3444      61644361 
 3445              	.LASF33:
 3446 0601 73796E63 		.ascii	"syncKillEnable\000"
 3446      4B696C6C 
 3446      456E6162 
 3446      6C6500
 3447              	.LASF17:
 3448 0610 53454E54 		.ascii	"SENT_TX_1_PWM_Init\000"
 3448      5F54585F 
 3448      315F5057 
 3448      4D5F496E 
 3448      697400
 3449              	.LASF49:
 3450 0623 73776170 		.ascii	"swapEnable\000"
 3450      456E6162 
 3450      6C6500
 3451              	.LASF30:
 3452 062e 53454E54 		.ascii	"SENT_TX_1_PWM_SetPWMMode\000"
 3452      5F54585F 
 3452      315F5057 
 3452      4D5F5365 
 3452      7450574D 
 3453              	.LASF71:
 3454 0647 53454E54 		.ascii	"SENT_TX_1_PWM_SetInterruptMode\000"
 3454      5F54585F 
 3454      315F5057 
 3454      4D5F5365 
 3454      74496E74 
 3455              	.LASF76:
 3456 0666 53454E54 		.ascii	"SENT_TX_1_PWM_SetInterrupt\000"
 3456      5F54585F 
 3456      315F5057 
 3456      4D5F5365 
 3456      74496E74 
 3457              	.LASF22:
 3458 0681 53454E54 		.ascii	"SENT_TX_1_PWM_SetMode\000"
 3458      5F54585F 
 3458      315F5057 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cczUht7Y.s 			page 91


 3458      4D5F5365 
 3458      744D6F64 
 3459              	.LASF57:
 3460 0697 53454E54 		.ascii	"SENT_TX_1_PWM_WriteCompareBuf\000"
 3460      5F54585F 
 3460      315F5057 
 3460      4D5F5772 
 3460      69746543 
 3461              	.LASF51:
 3462 06b5 70657269 		.ascii	"periodBuf\000"
 3462      6F644275 
 3462      6600
 3463              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
