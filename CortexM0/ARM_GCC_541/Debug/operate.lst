ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"operate.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidiv
  20              		.global	__aeabi_uidivmod
  21              		.section	.text.BeoM_PSU_state,"ax",%progbits
  22              		.align	1
  23              		.global	BeoM_PSU_state
  24              		.code	16
  25              		.thumb_func
  26              		.type	BeoM_PSU_state, %function
  27              	BeoM_PSU_state:
  28              	.LFB32:
  29              		.file 1 "operate.c"
   1:operate.c     **** /* ========================================
   2:operate.c     ****  *
   3:operate.c     ****  * Copyright YOUR COMPANY, THE YEAR
   4:operate.c     ****  * All Rights Reserved
   5:operate.c     ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:operate.c     ****  *
   7:operate.c     ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:operate.c     ****  * WHICH IS THE PROPERTY OF your company.
   9:operate.c     ****  *
  10:operate.c     ****  * ========================================
  11:operate.c     **** */
  12:operate.c     **** 
  13:operate.c     **** #include <project.h>
  14:operate.c     **** #include <operate.h>
  15:operate.c     **** #include <modes.h>
  16:operate.c     **** #include <inputs.h>
  17:operate.c     **** #include <spi_int.h>
  18:operate.c     **** 
  19:operate.c     **** uint8 FM_RADIO_STATION = 1;// variable used to store intercepted FM radio station number
  20:operate.c     **** 
  21:operate.c     **** // counter used when reading data over UART    
  22:operate.c     ****     uint8 counter = 0;
  23:operate.c     **** 
  24:operate.c     **** 
  25:operate.c     **** /*******************************************************************************
  26:operate.c     **** * Function Name: BeoM_PSU_state()
  27:operate.c     **** ********************************************************************************
  28:operate.c     **** * Summary:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 2


  29:operate.c     **** *  Function monitors SYSTEM and BlueToot state global variables and 
  30:operate.c     **** *  enables/disab;es power supply domains accordingly. 
  31:operate.c     **** *  SYSTEM_STATE = 0 - power down
  32:operate.c     **** *  SYSTEM_STATE = 1 - Player
  33:operate.c     **** *  SYSTEM_STATE = 2 - iRadio
  34:operate.c     **** *  SYSTEM_STATE = 3 - DAB Radio
  35:operate.c     **** *  SYSTEM_STATE = 4 - Aux IN
  36:operate.c     **** *  SYSTEM_STATE = 5 - Clock
  37:operate.c     **** *  SYSTEM_STATE = 6 - RDS/FM display
  38:operate.c     **** *  SYSTEM_STATE = 7 - BlueTooth Rx
  39:operate.c     **** *  SYSTEM_STATE = 8 - BlueTooth Tx
  40:operate.c     **** *  BT_Tx_STATE = 0  - BT Tx OFF
  41:operate.c     **** *  BT_Tx_STATE = 1  - BT Tx ON
  42:operate.c     **** *   
  43:operate.c     **** * Parameters:
  44:operate.c     **** *  Function operates on global variables:
  45:operate.c     **** *  SYSTEM_STATE and BT_Tx_STATE
  46:operate.c     **** *
  47:operate.c     **** * Return:
  48:operate.c     **** *  Funciton returns current SYSTEM_STATE nubmer
  49:operate.c     **** *
  50:operate.c     **** *******************************************************************************/  
  51:operate.c     **** uint8 BeoM_PSU_state()  
  52:operate.c     **** {
  30              		.loc 1 52 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 0, -32
  37              		.cfi_offset 1, -28
  38              		.cfi_offset 2, -24
  39              		.cfi_offset 4, -20
  40              		.cfi_offset 5, -16
  41              		.cfi_offset 6, -12
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  53:operate.c     **** 
  54:operate.c     **** // read back current PSU state    
  55:operate.c     ****     current_PSUstate = psu_config(2, next_PSUstate);
  44              		.loc 1 55 0
  45 0002 CE4D     		ldr	r5, .L142
  46 0004 CE4C     		ldr	r4, .L142+4
  47 0006 6B78     		ldrb	r3, [r5, #1]
  48 0008 2878     		ldrb	r0, [r5]
  49 000a AA78     		ldrb	r2, [r5, #2]
  50 000c 1B02     		lsls	r3, r3, #8
  51 000e 0343     		orrs	r3, r0
  52 0010 1204     		lsls	r2, r2, #16
  53 0012 1900     		movs	r1, r3
  54 0014 1300     		movs	r3, r2
  55 0016 EA78     		ldrb	r2, [r5, #3]
  56 0018 0B43     		orrs	r3, r1
  57 001a 1206     		lsls	r2, r2, #24
  58 001c 1A43     		orrs	r2, r3
  59 001e 0221     		movs	r1, #2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 3


  60 0020 2B79     		ldrb	r3, [r5, #4]
  61 0022 6846     		mov	r0, sp
  62 0024 FFF7FEFF 		bl	psu_config
  63              	.LVL0:
  64 0028 0522     		movs	r2, #5
  65 002a 6946     		mov	r1, sp
  66 002c 2000     		movs	r0, r4
  67 002e FFF7FEFF 		bl	memcpy
  68              	.LVL1:
  56:operate.c     **** // copy existing state of PSU to new settings    
  57:operate.c     ****     next_PSUstate = current_PSUstate;
  69              		.loc 1 57 0
  70 0032 0522     		movs	r2, #5
  71 0034 2100     		movs	r1, r4
  72 0036 2800     		movs	r0, r5
  73 0038 FFF7FEFF 		bl	memcpy
  74              	.LVL2:
  58:operate.c     **** // display counter
  59:operate.c     ****     uint8 display_counter = 0;
  60:operate.c     ****         
  61:operate.c     **** // SYSTEM_STATE = 0 - system in power down mode
  62:operate.c     ****     switch (SYSTEM_STATE)
  75              		.loc 1 62 0
  76 003c C14B     		ldr	r3, .L142+8
  77 003e 1878     		ldrb	r0, [r3]
  78 0040 0828     		cmp	r0, #8
  79 0042 01D9     		bls	.LCB50
  80 0044 00F0BEFC 		bl	.L2	@far jump
  81              	.LCB50:
  82 0048 FFF7FEFF 		bl	__gnu_thumb1_case_uhi
  83              	.L4:
  84 004c 0900     		.2byte	(.L3-.L4)/2
  85 004e 6E00     		.2byte	(.L5-.L4)/2
  86 0050 2E01     		.2byte	(.L6-.L4)/2
  87 0052 0702     		.2byte	(.L7-.L4)/2
  88 0054 CB02     		.2byte	(.L8-.L4)/2
  89 0056 3C03     		.2byte	(.L9-.L4)/2
  90 0058 9D03     		.2byte	(.L10-.L4)/2
  91 005a 4104     		.2byte	(.L11-.L4)/2
  92 005c 8304     		.2byte	(.L12-.L4)/2
  93              		.p2align 1
  94              	.L3:
  63:operate.c     ****     {    
  64:operate.c     ****     case (0):
  65:operate.c     ****     
  66:operate.c     **** // turn ON standby LED       
  67:operate.c     ****         LED_Write(1);  
  95              		.loc 1 67 0
  96 005e 0120     		movs	r0, #1
  97 0060 FFF7FEFF 		bl	LED_Write
  98              	.LVL3:
  68:operate.c     **** 
  69:operate.c     ****         if (current_PSUstate.BlueTooth_PWR == 1)
  99              		.loc 1 69 0
 100 0064 E078     		ldrb	r0, [r4, #3]
 101 0066 0128     		cmp	r0, #1
 102 0068 04D1     		bne	.L13
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 4


  70:operate.c     ****         {
  71:operate.c     **** // Send to BlueTooth pause/mute command
  72:operate.c     ****             BT_control(1, 4); 
 103              		.loc 1 72 0
 104 006a 0421     		movs	r1, #4
 105 006c FFF7FEFF 		bl	BT_control
 106              	.LVL4:
  73:operate.c     **** // set BT power variable to 0 -> powering down BT module
  74:operate.c     ****             next_PSUstate.BlueTooth_PWR = 0;    
 107              		.loc 1 74 0
 108 0070 0023     		movs	r3, #0
 109 0072 EB70     		strb	r3, [r5, #3]
 110              	.L13:
  75:operate.c     ****         }        
  76:operate.c     ****         
  77:operate.c     **** // sent info to display about powering down        
  78:operate.c     ****         strcpy((char*)new_display_data_buffer, "Powering down... Bye Bye");
 111              		.loc 1 78 0
 112 0074 B44E     		ldr	r6, .L142+12
 113 0076 B549     		ldr	r1, .L142+16
 114 0078 3000     		movs	r0, r6
 115 007a FFF7FEFF 		bl	strcpy
 116              	.LVL5:
  79:operate.c     ****         SPIM_display_write(new_display_data_buffer, 0x00, 0x00);
 117              		.loc 1 79 0
 118 007e 0022     		movs	r2, #0
 119 0080 3000     		movs	r0, r6
 120 0082 1100     		movs	r1, r2
 121 0084 FFF7FEFF 		bl	SPIM_display_write
 122              	.LVL6:
  80:operate.c     ****         
  81:operate.c     ****         if (current_PSUstate.SigmaDSP_PWR == 1)
 123              		.loc 1 81 0
 124 0088 A378     		ldrb	r3, [r4, #2]
 125 008a 012B     		cmp	r3, #1
 126 008c 04D1     		bne	.L14
  82:operate.c     ****         {
  83:operate.c     **** //  0 = Control = 0x052E -> 0x0000 = MUTE
  84:operate.c     ****             SPIM_SigmaDSP_write(0);        
 127              		.loc 1 84 0
 128 008e 0020     		movs	r0, #0
 129 0090 FFF7FEFF 		bl	SPIM_SigmaDSP_write
 130              	.LVL7:
  85:operate.c     **** // set SigmaDSP power variable to 0 -> powering down SigmaDSP               
  86:operate.c     ****             next_PSUstate.SigmaDSP_PWR = 0;            
 131              		.loc 1 86 0
 132 0094 0023     		movs	r3, #0
 133 0096 AB70     		strb	r3, [r5, #2]
 134              	.L14:
  87:operate.c     ****         }
  88:operate.c     ****         
  89:operate.c     ****         if (current_PSUstate.RPI_PWR == 1)
 135              		.loc 1 89 0
 136 0098 2378     		ldrb	r3, [r4]
 137 009a 012B     		cmp	r3, #1
 138 009c 23D1     		bne	.L19
  90:operate.c     ****         {
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 5


  91:operate.c     **** // WAIT untill RPI powers down
  92:operate.c     ****             if (current_PSUstate.RPi_GPIO_state == 1)
 139              		.loc 1 92 0
 140 009e 6378     		ldrb	r3, [r4, #1]
 141 00a0 012B     		cmp	r3, #1
 142 00a2 1ED1     		bne	.L16
  93:operate.c     ****             {
  94:operate.c     **** // sent command over UART command to RPI to power down
  95:operate.c     ****                 UART_UartPutString("-SHUTDOWN+");
 143              		.loc 1 95 0
 144 00a4 AA48     		ldr	r0, .L142+20
 145 00a6 FFF7FEFF 		bl	UART_UartPutString
 146              	.LVL8:
  96:operate.c     **** // Wait until current_PSUstate.RPi_GPIO_state == 1
  97:operate.c     ****                 while (current_PSUstate.RPi_GPIO_state == 1)
  98:operate.c     ****                 {
  99:operate.c     **** // read back current PSU state    
 100:operate.c     ****                     current_PSUstate = psu_config(2, next_PSUstate);
 147              		.loc 1 100 0
 148 00aa FF26     		movs	r6, #255
 149              	.L17:
  97:operate.c     ****                 {
 150              		.loc 1 97 0
 151 00ac 6378     		ldrb	r3, [r4, #1]
 152 00ae 012B     		cmp	r3, #1
 153 00b0 17D1     		bne	.L16
 154              		.loc 1 100 0
 155 00b2 6B78     		ldrb	r3, [r5, #1]
 156 00b4 2878     		ldrb	r0, [r5]
 157 00b6 AA78     		ldrb	r2, [r5, #2]
 158 00b8 1B02     		lsls	r3, r3, #8
 159 00ba 0343     		orrs	r3, r0
 160 00bc 1204     		lsls	r2, r2, #16
 161 00be 1900     		movs	r1, r3
 162 00c0 1300     		movs	r3, r2
 163 00c2 EA78     		ldrb	r2, [r5, #3]
 164 00c4 0B43     		orrs	r3, r1
 165 00c6 1206     		lsls	r2, r2, #24
 166 00c8 1A43     		orrs	r2, r3
 167 00ca 2B79     		ldrb	r3, [r5, #4]
 168 00cc 6846     		mov	r0, sp
 169 00ce 3340     		ands	r3, r6
 170 00d0 0221     		movs	r1, #2
 171 00d2 FFF7FEFF 		bl	psu_config
 172              	.LVL9:
 173 00d6 0522     		movs	r2, #5
 174 00d8 6946     		mov	r1, sp
 175 00da 2000     		movs	r0, r4
 176 00dc FFF7FEFF 		bl	memcpy
 177              	.LVL10:
 178 00e0 E4E7     		b	.L17
 179              	.L16:
 101:operate.c     ****                 }
 102:operate.c     **** // set RPi power variable to 0 -> powering down RPi
 103:operate.c     ****                 next_PSUstate.RPI_PWR = 0;
 180              		.loc 1 103 0
 181 00e2 0023     		movs	r3, #0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 6


 182 00e4 2B70     		strb	r3, [r5]
 183              	.L19:
 104:operate.c     ****             }
 105:operate.c     ****             else
 106:operate.c     ****             {
 107:operate.c     **** // set RPi power variable to 0 -> powering down RPi
 108:operate.c     ****                 next_PSUstate.RPI_PWR = 0;
 109:operate.c     ****             }
 110:operate.c     ****         }
 111:operate.c     **** // DATALINK out command = 12 -> POWER DOWN from aux devices  
 112:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 113:operate.c     ****         while (DATALINK_out(12) == 0)
 184              		.loc 1 113 0
 185 00e6 0C20     		movs	r0, #12
 186 00e8 FFF7FEFF 		bl	DATALINK_out
 187              	.LVL11:
 188 00ec 0028     		cmp	r0, #0
 189 00ee 03D1     		bne	.L130
 114:operate.c     ****         {
 115:operate.c     ****             CyDelay(10);  
 190              		.loc 1 115 0
 191 00f0 0A20     		movs	r0, #10
 192 00f2 FFF7FEFF 		bl	CyDelay
 193              	.LVL12:
 194 00f6 F6E7     		b	.L19
 195              	.L130:
 116:operate.c     ****         }
 117:operate.c     ****         
 118:operate.c     ****         if (current_PSUstate.Display_PWR == 1)
 196              		.loc 1 118 0
 197 00f8 2379     		ldrb	r3, [r4, #4]
 198 00fa 012B     		cmp	r3, #1
 199 00fc 01D1     		bne	.L21
 119:operate.c     ****         {
 120:operate.c     **** // SENT COMMAND TO DISPLAY ABOUT POWERING DOWN
 121:operate.c     **** // SENT COMMAND TO DISPLAY ABOUT POWERING DOWN
 122:operate.c     **** // SENT COMMAND TO DISPLAY ABOUT POWERING DOWN
 123:operate.c     **** // WAIT 2..3 seconds
 124:operate.c     **** // WAIT 2..3 seconds            
 125:operate.c     **** // WAIT 2..3 seconds
 126:operate.c     **** // set display power variable to 0 -> powering down display module            
 127:operate.c     ****             next_PSUstate.Display_PWR = 0;        
 200              		.loc 1 127 0
 201 00fe 0023     		movs	r3, #0
 202 0100 2B71     		strb	r3, [r5, #4]
 203              	.L21:
 128:operate.c     ****         }
 129:operate.c     ****         
 130:operate.c     **** // disable all power blocks        
 131:operate.c     ****         psu_config(1, next_PSUstate);
 204              		.loc 1 131 0
 205 0102 6B78     		ldrb	r3, [r5, #1]
 206 0104 2878     		ldrb	r0, [r5]
 207 0106 AA78     		ldrb	r2, [r5, #2]
 208 0108 1B02     		lsls	r3, r3, #8
 209 010a 0343     		orrs	r3, r0
 210 010c 1204     		lsls	r2, r2, #16
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 7


 211 010e 1900     		movs	r1, r3
 212 0110 1300     		movs	r3, r2
 213 0112 EA78     		ldrb	r2, [r5, #3]
 214 0114 0B43     		orrs	r3, r1
 215 0116 1206     		lsls	r2, r2, #24
 216 0118 1A43     		orrs	r2, r3
 217 011a 0121     		movs	r1, #1
 218 011c 2B79     		ldrb	r3, [r5, #4]
 219 011e 6846     		mov	r0, sp
 220 0120 FFF7FEFF 		bl	psu_config
 221              	.LVL13:
 132:operate.c     **** 
 133:operate.c     ****         break;
 222              		.loc 1 133 0
 223 0124 00F04EFC 		bl	.L2	@ far jump
 224              	.L5:
 134:operate.c     ****       
 135:operate.c     ****     
 136:operate.c     ****     
 137:operate.c     **** // SYSTEM_STATE = 1 - system in Player mode
 138:operate.c     ****     case (1):
 139:operate.c     ****     
 140:operate.c     **** // turn OFF stnadby LED       
 141:operate.c     ****         LED_Write(0);      
 225              		.loc 1 141 0
 226 0128 0020     		movs	r0, #0
 227 012a FFF7FEFF 		bl	LED_Write
 228              	.LVL14:
 142:operate.c     **** 
 143:operate.c     ****         if (current_PSUstate.RPi_GPIO_state == 0)
 229              		.loc 1 143 0
 230 012e 6378     		ldrb	r3, [r4, #1]
 231 0130 002B     		cmp	r3, #0
 232 0132 04D1     		bne	.L22
 144:operate.c     ****         {
 145:operate.c     **** // check if RPi is already enabled and active            
 146:operate.c     ****             if (current_PSUstate.RPI_PWR == 0)
 233              		.loc 1 146 0
 234 0134 2378     		ldrb	r3, [r4]
 235 0136 002B     		cmp	r3, #0
 236 0138 01D1     		bne	.L22
 147:operate.c     ****             {
 148:operate.c     **** // if not, enable RPi
 149:operate.c     ****                 next_PSUstate.RPI_PWR = 1;    
 237              		.loc 1 149 0
 238 013a 0133     		adds	r3, r3, #1
 239 013c 2B70     		strb	r3, [r5]
 240              	.L22:
 150:operate.c     ****             }
 151:operate.c     ****         }
 152:operate.c     **** // check if display module is already powered up
 153:operate.c     ****         if (current_PSUstate.Display_PWR == 0)
 241              		.loc 1 153 0
 242 013e 2379     		ldrb	r3, [r4, #4]
 243 0140 002B     		cmp	r3, #0
 244 0142 01D1     		bne	.L23
 154:operate.c     ****         {
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 8


 155:operate.c     **** // if not, enable Display
 156:operate.c     ****             next_PSUstate.Display_PWR = 1;        
 245              		.loc 1 156 0
 246 0144 0133     		adds	r3, r3, #1
 247 0146 2B71     		strb	r3, [r5, #4]
 248              	.L23:
 157:operate.c     ****         }
 158:operate.c     **** // check if SigmaDSP module is already powered up        
 159:operate.c     ****         if (current_PSUstate.SigmaDSP_PWR == 0)
 249              		.loc 1 159 0
 250 0148 A378     		ldrb	r3, [r4, #2]
 251 014a 002B     		cmp	r3, #0
 252 014c 01D1     		bne	.L24
 160:operate.c     ****         {
 161:operate.c     **** // if not, enable SigmaDSP            
 162:operate.c     ****             next_PSUstate.SigmaDSP_PWR = 1;            
 253              		.loc 1 162 0
 254 014e 0133     		adds	r3, r3, #1
 255 0150 AB70     		strb	r3, [r5, #2]
 256              	.L24:
 163:operate.c     ****         }
 164:operate.c     **** 
 165:operate.c     **** // check if Bluetooth Tx flag is set
 166:operate.c     ****         if (BT_Tx_STATE == 1)
 257              		.loc 1 166 0
 258 0152 804B     		ldr	r3, .L142+24
 259 0154 1B78     		ldrb	r3, [r3]
 260 0156 012B     		cmp	r3, #1
 261 0158 03D1     		bne	.L25
 167:operate.c     ****         {
 168:operate.c     **** // if it is, check if BT is powered up
 169:operate.c     ****             if (current_PSUstate.BlueTooth_PWR == 0)
 262              		.loc 1 169 0
 263 015a E278     		ldrb	r2, [r4, #3]
 264 015c 002A     		cmp	r2, #0
 265 015e 00D1     		bne	.L25
 170:operate.c     ****                 {
 171:operate.c     **** // if not power it up        
 172:operate.c     ****                     next_PSUstate.BlueTooth_PWR = 1;    
 266              		.loc 1 172 0
 267 0160 EB70     		strb	r3, [r5, #3]
 268              	.L25:
 173:operate.c     ****                 }
 174:operate.c     ****         }         
 175:operate.c     ****         
 176:operate.c     **** // enable all necessary blocks        
 177:operate.c     ****         psu_config(1, next_PSUstate);  
 269              		.loc 1 177 0
 270 0162 6B78     		ldrb	r3, [r5, #1]
 271 0164 2878     		ldrb	r0, [r5]
 272 0166 AA78     		ldrb	r2, [r5, #2]
 273 0168 1B02     		lsls	r3, r3, #8
 274 016a 0343     		orrs	r3, r0
 275 016c 1204     		lsls	r2, r2, #16
 276 016e 1900     		movs	r1, r3
 277 0170 1300     		movs	r3, r2
 278 0172 EA78     		ldrb	r2, [r5, #3]
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 9


 279 0174 0B43     		orrs	r3, r1
 280 0176 1206     		lsls	r2, r2, #24
 281 0178 1A43     		orrs	r2, r3
 282 017a 0121     		movs	r1, #1
 283 017c 2B79     		ldrb	r3, [r5, #4]
 284 017e 6846     		mov	r0, sp
 285 0180 FFF7FEFF 		bl	psu_config
 286              	.LVL15:
 287              	.L26:
 178:operate.c     **** 
 179:operate.c     **** // DATALINK out command = 11 -> LIST button pressed  
 180:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 181:operate.c     ****         while (DATALINK_out(11) == 0)
 288              		.loc 1 181 0
 289 0184 0B20     		movs	r0, #11
 290 0186 FFF7FEFF 		bl	DATALINK_out
 291              	.LVL16:
 292 018a 0028     		cmp	r0, #0
 293 018c 03D1     		bne	.L28
 182:operate.c     ****         {
 183:operate.c     ****             CyDelay(10);  
 294              		.loc 1 183 0
 295 018e 0A20     		movs	r0, #10
 296 0190 FFF7FEFF 		bl	CyDelay
 297              	.LVL17:
 298 0194 F6E7     		b	.L26
 299              	.L28:
 184:operate.c     ****         }
 185:operate.c     **** // DATALINK out command = 10 -> GO button pressed  
 186:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 187:operate.c     ****         while (DATALINK_out(10) == 0)
 300              		.loc 1 187 0
 301 0196 0A20     		movs	r0, #10
 302 0198 FFF7FEFF 		bl	DATALINK_out
 303              	.LVL18:
 304 019c 0028     		cmp	r0, #0
 305 019e 03D1     		bne	.L30
 188:operate.c     ****         {
 189:operate.c     ****             CyDelay(10);  
 306              		.loc 1 189 0
 307 01a0 0A20     		movs	r0, #10
 308 01a2 FFF7FEFF 		bl	CyDelay
 309              	.LVL19:
 310 01a6 F6E7     		b	.L28
 311              	.L30:
 190:operate.c     ****         }
 191:operate.c     **** // DATALINK out command = 1 -> 1 button pressed  
 192:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 193:operate.c     ****         while (DATALINK_out(1) == 0)
 312              		.loc 1 193 0
 313 01a8 0120     		movs	r0, #1
 314 01aa FFF7FEFF 		bl	DATALINK_out
 315              	.LVL20:
 316 01ae 0028     		cmp	r0, #0
 317 01b0 03D1     		bne	.L131
 194:operate.c     ****         {
 195:operate.c     ****             CyDelay(10);  
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 10


 318              		.loc 1 195 0
 319 01b2 0A20     		movs	r0, #10
 320 01b4 FFF7FEFF 		bl	CyDelay
 321              	.LVL21:
 322 01b8 F6E7     		b	.L30
 323              	.L131:
 196:operate.c     ****         }        
 197:operate.c     ****         
 198:operate.c     ****         
 199:operate.c     **** // read back current PSU state    
 200:operate.c     ****         current_PSUstate = psu_config(2, next_PSUstate);
 324              		.loc 1 200 0
 325 01ba 6B78     		ldrb	r3, [r5, #1]
 326 01bc 2878     		ldrb	r0, [r5]
 327 01be AA78     		ldrb	r2, [r5, #2]
 328 01c0 1B02     		lsls	r3, r3, #8
 329 01c2 0343     		orrs	r3, r0
 330 01c4 1204     		lsls	r2, r2, #16
 331 01c6 1900     		movs	r1, r3
 332 01c8 1300     		movs	r3, r2
 333 01ca EA78     		ldrb	r2, [r5, #3]
 334 01cc 0B43     		orrs	r3, r1
 335 01ce 1206     		lsls	r2, r2, #24
 336 01d0 1A43     		orrs	r2, r3
 337 01d2 0221     		movs	r1, #2
 338 01d4 2B79     		ldrb	r3, [r5, #4]
 339 01d6 6846     		mov	r0, sp
 340 01d8 FFF7FEFF 		bl	psu_config
 341              	.LVL22:
 342 01dc 0522     		movs	r2, #5
 343 01de 6946     		mov	r1, sp
 344 01e0 2000     		movs	r0, r4
 345 01e2 FFF7FEFF 		bl	memcpy
 346              	.LVL23:
 201:operate.c     **** 
 202:operate.c     ****         if (current_PSUstate.RPI_PWR == 1)
 347              		.loc 1 202 0
 348 01e6 2378     		ldrb	r3, [r4]
 349 01e8 1E25     		movs	r5, #30
 350 01ea 012B     		cmp	r3, #1
 351 01ec 11D0     		beq	.L33
 352              	.LVL24:
 353              	.L32:
 203:operate.c     ****             {
 204:operate.c     ****                 display_counter = 30;
 205:operate.c     ****                 while (current_PSUstate.RPi_GPIO_state == 0)
 206:operate.c     ****                 {
 207:operate.c     **** // WAIT untill RPI powers up
 208:operate.c     **** // read back current PSU state    
 209:operate.c     ****                 current_PSUstate = psu_config(2, next_PSUstate);
 210:operate.c     **** // SENT INFORMAITON TO DISPLAY ABOUT RPI BOOTING UP
 211:operate.c     **** // new data that needs to be sent over SPI to display module
 212:operate.c     ****                 strcpy((char*)new_display_data_buffer, "Booting up ...          ");
 213:operate.c     ****                 new_display_data_buffer[22] = '0' + (display_counter / 10);
 214:operate.c     ****                 new_display_data_buffer[23] = '0' + (display_counter % 10);
 215:operate.c     ****                 SPIM_display_write(new_display_data_buffer, 0x00, 0x00);    
 216:operate.c     ****                 CyDelay(1000);
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 11


 217:operate.c     ****                 display_counter = display_counter - 1;
 218:operate.c     ****                 }
 219:operate.c     ****             }                
 220:operate.c     ****             
 221:operate.c     **** // sent command over UART command to RPI to start Player
 222:operate.c     ****         UART_UartPutString("-Player+");
 354              		.loc 1 222 0
 355 01ee 5A48     		ldr	r0, .L142+28
 356 01f0 FFF7FEFF 		bl	UART_UartPutString
 357              	.LVL25:
 223:operate.c     ****                 
 224:operate.c     ****         if (BT_Tx_STATE == 1)
 358              		.loc 1 224 0
 359 01f4 574B     		ldr	r3, .L142+24
 360 01f6 1C78     		ldrb	r4, [r3]
 361 01f8 012C     		cmp	r4, #1
 362 01fa 43D1     		bne	.L37
 225:operate.c     ****         {
 226:operate.c     **** // Enable BlueTooth in Tx state - re-connect to latest device
 227:operate.c     ****             BT_control(1, 2); 
 363              		.loc 1 227 0
 364 01fc 0221     		movs	r1, #2
 365 01fe 2000     		movs	r0, r4
 366 0200 FFF7FEFF 		bl	BT_control
 367              	.LVL26:
 228:operate.c     **** // SENT OVER SPI information about BT Tx LED ON
 229:operate.c     **** // disp_ctrl2 
 230:operate.c     **** // CTRL1.0 - BT Tx status set to 1 indicating Tx mode ON
 231:operate.c     ****             new_disp_ctrl2 = new_disp_ctrl2 | 0x01;
 368              		.loc 1 231 0
 369 0204 554A     		ldr	r2, .L142+32
 370 0206 1378     		ldrb	r3, [r2]
 371 0208 2343     		orrs	r3, r4
 372 020a 1370     		strb	r3, [r2]
 232:operate.c     ****             new_display_data_flag = 1;                   
 373              		.loc 1 232 0
 374 020c 544B     		ldr	r3, .L142+36
 375 020e 1C70     		strb	r4, [r3]
 376 0210 38E0     		b	.L37
 377              	.L33:
 378              	.LVL27:
 205:operate.c     ****                 {
 379              		.loc 1 205 0
 380 0212 6778     		ldrb	r7, [r4, #1]
 381 0214 002F     		cmp	r7, #0
 382 0216 EAD1     		bne	.L32
 209:operate.c     **** // SENT INFORMAITON TO DISPLAY ABOUT RPI BOOTING UP
 383              		.loc 1 209 0
 384 0218 484E     		ldr	r6, .L142
 385 021a 7378     		ldrb	r3, [r6, #1]
 386 021c 3078     		ldrb	r0, [r6]
 387 021e B278     		ldrb	r2, [r6, #2]
 388 0220 1B02     		lsls	r3, r3, #8
 389 0222 0343     		orrs	r3, r0
 390 0224 1204     		lsls	r2, r2, #16
 391 0226 1900     		movs	r1, r3
 392 0228 1300     		movs	r3, r2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 12


 393 022a 0B43     		orrs	r3, r1
 394 022c FF21     		movs	r1, #255
 395 022e F278     		ldrb	r2, [r6, #3]
 396 0230 6846     		mov	r0, sp
 397 0232 1206     		lsls	r2, r2, #24
 398 0234 1A43     		orrs	r2, r3
 399 0236 3379     		ldrb	r3, [r6, #4]
 400 0238 0B40     		ands	r3, r1
 401 023a FD39     		subs	r1, r1, #253
 402 023c FFF7FEFF 		bl	psu_config
 403              	.LVL28:
 404 0240 0522     		movs	r2, #5
 405 0242 6946     		mov	r1, sp
 406 0244 2000     		movs	r0, r4
 407 0246 FFF7FEFF 		bl	memcpy
 408              	.LVL29:
 212:operate.c     ****                 new_display_data_buffer[22] = '0' + (display_counter / 10);
 409              		.loc 1 212 0
 410 024a 3F4E     		ldr	r6, .L142+12
 411 024c 4549     		ldr	r1, .L142+40
 412 024e 3000     		movs	r0, r6
 413 0250 FFF7FEFF 		bl	strcpy
 414              	.LVL30:
 213:operate.c     ****                 new_display_data_buffer[23] = '0' + (display_counter % 10);
 415              		.loc 1 213 0
 416 0254 0A21     		movs	r1, #10
 417 0256 2800     		movs	r0, r5
 418 0258 FFF7FEFF 		bl	__aeabi_uidiv
 419              	.LVL31:
 420 025c 3030     		adds	r0, r0, #48
 421 025e B075     		strb	r0, [r6, #22]
 214:operate.c     ****                 SPIM_display_write(new_display_data_buffer, 0x00, 0x00);    
 422              		.loc 1 214 0
 423 0260 0A21     		movs	r1, #10
 424 0262 2800     		movs	r0, r5
 425 0264 FFF7FEFF 		bl	__aeabi_uidivmod
 426              	.LVL32:
 427 0268 3031     		adds	r1, r1, #48
 428 026a F175     		strb	r1, [r6, #23]
 215:operate.c     ****                 CyDelay(1000);
 429              		.loc 1 215 0
 430 026c 3A00     		movs	r2, r7
 431 026e 3900     		movs	r1, r7
 432 0270 3000     		movs	r0, r6
 433 0272 FFF7FEFF 		bl	SPIM_display_write
 434              	.LVL33:
 216:operate.c     ****                 display_counter = display_counter - 1;
 435              		.loc 1 216 0
 436 0276 FA20     		movs	r0, #250
 217:operate.c     ****                 }
 437              		.loc 1 217 0
 438 0278 013D     		subs	r5, r5, #1
 439              	.LVL34:
 216:operate.c     ****                 display_counter = display_counter - 1;
 440              		.loc 1 216 0
 441 027a 8000     		lsls	r0, r0, #2
 442 027c FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 13


 443              	.LVL35:
 217:operate.c     ****                 }
 444              		.loc 1 217 0
 445 0280 EDB2     		uxtb	r5, r5
 446              	.LVL36:
 447 0282 C6E7     		b	.L33
 448              	.LVL37:
 449              	.L37:
 233:operate.c     ****         } 
 234:operate.c     ****         
 235:operate.c     **** // check if SigmaDSP is up - wait untill radback value matches signature
 236:operate.c     ****         while (SPIM_SigmaDSP_read(4) != 0xBE01BE02)
 450              		.loc 1 236 0
 451 0284 0420     		movs	r0, #4
 452 0286 FFF7FEFF 		bl	SPIM_SigmaDSP_read
 453              	.LVL38:
 454 028a 374B     		ldr	r3, .L142+44
 455 028c 9842     		cmp	r0, r3
 456 028e 02D0     		beq	.L132
 237:operate.c     ****         {
 238:operate.c     **** // initiate SigmaDSP data port in SPI mode
 239:operate.c     ****             SPIM_SigmaDSP_init_SPI();
 457              		.loc 1 239 0
 458 0290 FFF7FEFF 		bl	SPIM_SigmaDSP_init_SPI
 459              	.LVL39:
 460 0294 F6E7     		b	.L37
 461              	.L132:
 240:operate.c     ****         }
 241:operate.c     **** 
 242:operate.c     **** //  SigmaDSP in RPi mode -> Control = 0x0001
 243:operate.c     ****         SPIM_SigmaDSP_write(1);
 462              		.loc 1 243 0
 463 0296 0120     		movs	r0, #1
 464 0298 FFF7FEFF 		bl	SPIM_SigmaDSP_write
 465              	.LVL40:
 244:operate.c     ****     
 245:operate.c     **** // SENT OVER SPI information about Player LED ON
 246:operate.c     ****         new_disp_ctrl1 = 0x01;
 466              		.loc 1 246 0
 467 029c 0123     		movs	r3, #1
 468 029e 334A     		ldr	r2, .L142+48
 469 02a0 1370     		strb	r3, [r2]
 247:operate.c     ****         new_display_data_flag = 1;                   
 470              		.loc 1 247 0
 471 02a2 2F4A     		ldr	r2, .L142+36
 472 02a4 1370     		strb	r3, [r2]
 248:operate.c     ****         break;
 473              		.loc 1 248 0
 474 02a6 8DE3     		b	.L2
 475              	.LVL41:
 476              	.L6:
 249:operate.c     ****  
 250:operate.c     ****     
 251:operate.c     ****     
 252:operate.c     **** // SYSTEM_STATE = 2 - system in iRadio mode    
 253:operate.c     ****     case (2):
 254:operate.c     ****     
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 14


 255:operate.c     **** // turn OFF stnadby LED       
 256:operate.c     ****         LED_Write(0);      
 477              		.loc 1 256 0
 478 02a8 0020     		movs	r0, #0
 479 02aa FFF7FEFF 		bl	LED_Write
 480              	.LVL42:
 257:operate.c     ****     
 258:operate.c     ****         if (current_PSUstate.RPi_GPIO_state == 0)
 481              		.loc 1 258 0
 482 02ae 6378     		ldrb	r3, [r4, #1]
 483 02b0 002B     		cmp	r3, #0
 484 02b2 04D1     		bne	.L39
 259:operate.c     ****         {
 260:operate.c     **** // check if RPi is already enabled and active            
 261:operate.c     ****             if (current_PSUstate.RPI_PWR == 0)
 485              		.loc 1 261 0
 486 02b4 2378     		ldrb	r3, [r4]
 487 02b6 002B     		cmp	r3, #0
 488 02b8 01D1     		bne	.L39
 262:operate.c     ****             {
 263:operate.c     **** // enable RPi
 264:operate.c     ****                 next_PSUstate.RPI_PWR = 1;    
 489              		.loc 1 264 0
 490 02ba 0133     		adds	r3, r3, #1
 491 02bc 2B70     		strb	r3, [r5]
 492              	.L39:
 265:operate.c     ****             }
 266:operate.c     ****         }
 267:operate.c     ****         if (current_PSUstate.Display_PWR == 0)
 493              		.loc 1 267 0
 494 02be 2379     		ldrb	r3, [r4, #4]
 495 02c0 002B     		cmp	r3, #0
 496 02c2 01D1     		bne	.L40
 268:operate.c     ****         {
 269:operate.c     **** // enable Display
 270:operate.c     ****             next_PSUstate.Display_PWR = 1;        
 497              		.loc 1 270 0
 498 02c4 0133     		adds	r3, r3, #1
 499 02c6 2B71     		strb	r3, [r5, #4]
 500              	.L40:
 271:operate.c     ****         }
 272:operate.c     ****         
 273:operate.c     ****         if (current_PSUstate.SigmaDSP_PWR == 0)
 501              		.loc 1 273 0
 502 02c8 A378     		ldrb	r3, [r4, #2]
 503 02ca 002B     		cmp	r3, #0
 504 02cc 01D1     		bne	.L41
 274:operate.c     ****         {
 275:operate.c     **** // Enable SigmaDSP            
 276:operate.c     ****             next_PSUstate.SigmaDSP_PWR = 1;            
 505              		.loc 1 276 0
 506 02ce 0133     		adds	r3, r3, #1
 507 02d0 AB70     		strb	r3, [r5, #2]
 508              	.L41:
 277:operate.c     ****         }
 278:operate.c     **** 
 279:operate.c     **** // check if Bluetooth Tx flag is set
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 15


 280:operate.c     ****         if (BT_Tx_STATE == 1)
 509              		.loc 1 280 0
 510 02d2 204B     		ldr	r3, .L142+24
 511 02d4 1B78     		ldrb	r3, [r3]
 512 02d6 012B     		cmp	r3, #1
 513 02d8 03D1     		bne	.L42
 281:operate.c     ****         {
 282:operate.c     **** // if it is, check if BT is powered up
 283:operate.c     ****         if (current_PSUstate.BlueTooth_PWR == 0)
 514              		.loc 1 283 0
 515 02da E278     		ldrb	r2, [r4, #3]
 516 02dc 002A     		cmp	r2, #0
 517 02de 00D1     		bne	.L42
 284:operate.c     ****             {
 285:operate.c     **** // if not power it up        
 286:operate.c     ****                 next_PSUstate.BlueTooth_PWR = 1;    
 518              		.loc 1 286 0
 519 02e0 EB70     		strb	r3, [r5, #3]
 520              	.L42:
 287:operate.c     ****             }
 288:operate.c     ****         }         
 289:operate.c     ****         
 290:operate.c     **** // enable all necessary blocks        
 291:operate.c     ****         psu_config(1, next_PSUstate);  
 521              		.loc 1 291 0
 522 02e2 6B78     		ldrb	r3, [r5, #1]
 523 02e4 2878     		ldrb	r0, [r5]
 524 02e6 AA78     		ldrb	r2, [r5, #2]
 525 02e8 1B02     		lsls	r3, r3, #8
 526 02ea 0343     		orrs	r3, r0
 527 02ec 1204     		lsls	r2, r2, #16
 528 02ee 1900     		movs	r1, r3
 529 02f0 1300     		movs	r3, r2
 530 02f2 EA78     		ldrb	r2, [r5, #3]
 531 02f4 0B43     		orrs	r3, r1
 532 02f6 1206     		lsls	r2, r2, #24
 533 02f8 1A43     		orrs	r2, r3
 534 02fa 0121     		movs	r1, #1
 535 02fc 2B79     		ldrb	r3, [r5, #4]
 536 02fe 6846     		mov	r0, sp
 537 0300 FFF7FEFF 		bl	psu_config
 538              	.LVL43:
 539              	.L43:
 292:operate.c     **** 
 293:operate.c     **** // DATALINK out command = 11 -> LIST button pressed  
 294:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 295:operate.c     ****         while (DATALINK_out(11) == 0)
 540              		.loc 1 295 0
 541 0304 0B20     		movs	r0, #11
 542 0306 FFF7FEFF 		bl	DATALINK_out
 543              	.LVL44:
 544 030a 0028     		cmp	r0, #0
 545 030c 03D1     		bne	.L45
 296:operate.c     ****         {
 297:operate.c     ****             CyDelay(10);  
 546              		.loc 1 297 0
 547 030e 0A20     		movs	r0, #10
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 16


 548 0310 FFF7FEFF 		bl	CyDelay
 549              	.LVL45:
 550 0314 F6E7     		b	.L43
 551              	.L45:
 298:operate.c     ****         }
 299:operate.c     **** // DATALINK out command = 10 -> GO button pressed  
 300:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 301:operate.c     ****         while (DATALINK_out(10) == 0)
 552              		.loc 1 301 0
 553 0316 0A20     		movs	r0, #10
 554 0318 FFF7FEFF 		bl	DATALINK_out
 555              	.LVL46:
 556 031c 0028     		cmp	r0, #0
 557 031e 03D1     		bne	.L47
 302:operate.c     ****         {
 303:operate.c     ****             CyDelay(10);  
 558              		.loc 1 303 0
 559 0320 0A20     		movs	r0, #10
 560 0322 FFF7FEFF 		bl	CyDelay
 561              	.LVL47:
 562 0326 F6E7     		b	.L45
 563              	.L47:
 304:operate.c     ****         }
 305:operate.c     **** // DATALINK out command = 2 -> 2 button pressed  
 306:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 307:operate.c     ****         while (DATALINK_out(2) == 0)
 564              		.loc 1 307 0
 565 0328 0220     		movs	r0, #2
 566 032a FFF7FEFF 		bl	DATALINK_out
 567              	.LVL48:
 568 032e 0028     		cmp	r0, #0
 569 0330 1ED1     		bne	.L133
 308:operate.c     ****         {
 309:operate.c     ****             CyDelay(10);  
 570              		.loc 1 309 0
 571 0332 0A20     		movs	r0, #10
 572 0334 FFF7FEFF 		bl	CyDelay
 573              	.LVL49:
 574 0338 F6E7     		b	.L47
 575              	.L143:
 576 033a C046     		.align	2
 577              	.L142:
 578 033c 00000000 		.word	next_PSUstate
 579 0340 00000000 		.word	current_PSUstate
 580 0344 00000000 		.word	SYSTEM_STATE
 581 0348 00000000 		.word	new_display_data_buffer
 582 034c 00000000 		.word	.LC3
 583 0350 19000000 		.word	.LC6
 584 0354 00000000 		.word	BT_Tx_STATE
 585 0358 24000000 		.word	.LC9
 586 035c 00000000 		.word	new_disp_ctrl2
 587 0360 00000000 		.word	new_display_data_flag
 588 0364 2D000000 		.word	.LC11
 589 0368 02BE01BE 		.word	-1107182078
 590 036c 00000000 		.word	new_disp_ctrl1
 591              	.L133:
 310:operate.c     ****         } 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 17


 311:operate.c     ****         
 312:operate.c     **** // read back current PSU state    
 313:operate.c     ****         current_PSUstate = psu_config(2, next_PSUstate);
 592              		.loc 1 313 0
 593 0370 6B78     		ldrb	r3, [r5, #1]
 594 0372 2878     		ldrb	r0, [r5]
 595 0374 AA78     		ldrb	r2, [r5, #2]
 596 0376 1B02     		lsls	r3, r3, #8
 597 0378 0343     		orrs	r3, r0
 598 037a 1204     		lsls	r2, r2, #16
 599 037c 1900     		movs	r1, r3
 600 037e 1300     		movs	r3, r2
 601 0380 EA78     		ldrb	r2, [r5, #3]
 602 0382 0B43     		orrs	r3, r1
 603 0384 1206     		lsls	r2, r2, #24
 604 0386 1A43     		orrs	r2, r3
 605 0388 0221     		movs	r1, #2
 606 038a 2B79     		ldrb	r3, [r5, #4]
 607 038c 6846     		mov	r0, sp
 608 038e FFF7FEFF 		bl	psu_config
 609              	.LVL50:
 610 0392 0522     		movs	r2, #5
 611 0394 6946     		mov	r1, sp
 612 0396 2000     		movs	r0, r4
 613 0398 FFF7FEFF 		bl	memcpy
 614              	.LVL51:
 314:operate.c     **** 
 315:operate.c     ****         if (current_PSUstate.RPI_PWR == 1)
 615              		.loc 1 315 0
 616 039c 2378     		ldrb	r3, [r4]
 617 039e 1E25     		movs	r5, #30
 618 03a0 012B     		cmp	r3, #1
 619 03a2 11D0     		beq	.L50
 620              	.LVL52:
 621              	.L49:
 316:operate.c     ****             {
 317:operate.c     ****                 display_counter = 30;
 318:operate.c     ****                 while (current_PSUstate.RPi_GPIO_state == 0)
 319:operate.c     ****                 {
 320:operate.c     **** // WAIT untill RPI powers up
 321:operate.c     **** // read back current PSU state    
 322:operate.c     ****                 current_PSUstate = psu_config(2, next_PSUstate);
 323:operate.c     **** // SENT INFORMAITON TO DISPLAY ABOUT RPI BOOTING UP
 324:operate.c     **** // new data that needs to be sent over SPI to display module
 325:operate.c     ****                 strcpy((char*)new_display_data_buffer, "Booting up ...          ");
 326:operate.c     ****                 new_display_data_buffer[22] = '0' + (display_counter / 10);
 327:operate.c     ****                 new_display_data_buffer[23] = '0' + (display_counter % 10);
 328:operate.c     ****                 SPIM_display_write(new_display_data_buffer, 0x00, 0x00);          
 329:operate.c     ****                 CyDelay(1000);
 330:operate.c     ****                 display_counter = display_counter - 1;         
 331:operate.c     ****                 }
 332:operate.c     ****             }        
 333:operate.c     **** // sent command over UART command to RPI to start iRadio
 334:operate.c     ****         UART_UartPutString("-iRadio+");
 622              		.loc 1 334 0
 623 03a4 BD48     		ldr	r0, .L144
 624 03a6 FFF7FEFF 		bl	UART_UartPutString
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 18


 625              	.LVL53:
 335:operate.c     ****             
 336:operate.c     ****         if (BT_Tx_STATE == 1)
 626              		.loc 1 336 0
 627 03aa BD4B     		ldr	r3, .L144+4
 628 03ac 1C78     		ldrb	r4, [r3]
 629 03ae 012C     		cmp	r4, #1
 630 03b0 43D1     		bne	.L54
 337:operate.c     ****         {
 338:operate.c     **** // Enable BlueTooth in Tx state - re-connect to latest device
 339:operate.c     ****             BT_control(1, 2); 
 631              		.loc 1 339 0
 632 03b2 0221     		movs	r1, #2
 633 03b4 2000     		movs	r0, r4
 634 03b6 FFF7FEFF 		bl	BT_control
 635              	.LVL54:
 340:operate.c     **** // disp_ctrl2 
 341:operate.c     **** // CTRL1.0 - BT Tx status set to 1 indicating Tx mode ON
 342:operate.c     ****             new_disp_ctrl2 = new_disp_ctrl2 | 0x01;
 636              		.loc 1 342 0
 637 03ba BA4A     		ldr	r2, .L144+8
 638 03bc 1378     		ldrb	r3, [r2]
 639 03be 2343     		orrs	r3, r4
 640 03c0 1370     		strb	r3, [r2]
 343:operate.c     ****             new_display_data_flag = 1;  
 641              		.loc 1 343 0
 642 03c2 B94B     		ldr	r3, .L144+12
 643 03c4 1C70     		strb	r4, [r3]
 644 03c6 38E0     		b	.L54
 645              	.L50:
 646              	.LVL55:
 318:operate.c     ****                 {
 647              		.loc 1 318 0
 648 03c8 6778     		ldrb	r7, [r4, #1]
 649 03ca 002F     		cmp	r7, #0
 650 03cc EAD1     		bne	.L49
 322:operate.c     **** // SENT INFORMAITON TO DISPLAY ABOUT RPI BOOTING UP
 651              		.loc 1 322 0
 652 03ce B74E     		ldr	r6, .L144+16
 653 03d0 7378     		ldrb	r3, [r6, #1]
 654 03d2 3078     		ldrb	r0, [r6]
 655 03d4 B278     		ldrb	r2, [r6, #2]
 656 03d6 1B02     		lsls	r3, r3, #8
 657 03d8 0343     		orrs	r3, r0
 658 03da 1204     		lsls	r2, r2, #16
 659 03dc 1900     		movs	r1, r3
 660 03de 1300     		movs	r3, r2
 661 03e0 0B43     		orrs	r3, r1
 662 03e2 FF21     		movs	r1, #255
 663 03e4 F278     		ldrb	r2, [r6, #3]
 664 03e6 6846     		mov	r0, sp
 665 03e8 1206     		lsls	r2, r2, #24
 666 03ea 1A43     		orrs	r2, r3
 667 03ec 3379     		ldrb	r3, [r6, #4]
 668 03ee 0B40     		ands	r3, r1
 669 03f0 FD39     		subs	r1, r1, #253
 670 03f2 FFF7FEFF 		bl	psu_config
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 19


 671              	.LVL56:
 672 03f6 0522     		movs	r2, #5
 673 03f8 6946     		mov	r1, sp
 674 03fa 2000     		movs	r0, r4
 675 03fc FFF7FEFF 		bl	memcpy
 676              	.LVL57:
 325:operate.c     ****                 new_display_data_buffer[22] = '0' + (display_counter / 10);
 677              		.loc 1 325 0
 678 0400 AB4E     		ldr	r6, .L144+20
 679 0402 AC49     		ldr	r1, .L144+24
 680 0404 3000     		movs	r0, r6
 681 0406 FFF7FEFF 		bl	strcpy
 682              	.LVL58:
 326:operate.c     ****                 new_display_data_buffer[23] = '0' + (display_counter % 10);
 683              		.loc 1 326 0
 684 040a 0A21     		movs	r1, #10
 685 040c 2800     		movs	r0, r5
 686 040e FFF7FEFF 		bl	__aeabi_uidiv
 687              	.LVL59:
 688 0412 3030     		adds	r0, r0, #48
 689 0414 B075     		strb	r0, [r6, #22]
 327:operate.c     ****                 SPIM_display_write(new_display_data_buffer, 0x00, 0x00);          
 690              		.loc 1 327 0
 691 0416 0A21     		movs	r1, #10
 692 0418 2800     		movs	r0, r5
 693 041a FFF7FEFF 		bl	__aeabi_uidivmod
 694              	.LVL60:
 695 041e 3031     		adds	r1, r1, #48
 696 0420 F175     		strb	r1, [r6, #23]
 328:operate.c     ****                 CyDelay(1000);
 697              		.loc 1 328 0
 698 0422 3A00     		movs	r2, r7
 699 0424 3900     		movs	r1, r7
 700 0426 3000     		movs	r0, r6
 701 0428 FFF7FEFF 		bl	SPIM_display_write
 702              	.LVL61:
 329:operate.c     ****                 display_counter = display_counter - 1;         
 703              		.loc 1 329 0
 704 042c FA20     		movs	r0, #250
 330:operate.c     ****                 }
 705              		.loc 1 330 0
 706 042e 013D     		subs	r5, r5, #1
 707              	.LVL62:
 329:operate.c     ****                 display_counter = display_counter - 1;         
 708              		.loc 1 329 0
 709 0430 8000     		lsls	r0, r0, #2
 710 0432 FFF7FEFF 		bl	CyDelay
 711              	.LVL63:
 330:operate.c     ****                 }
 712              		.loc 1 330 0
 713 0436 EDB2     		uxtb	r5, r5
 714              	.LVL64:
 715 0438 C6E7     		b	.L50
 716              	.LVL65:
 717              	.L54:
 344:operate.c     ****         } 
 345:operate.c     ****         
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 20


 346:operate.c     **** // check if SigmaDSP is up - wait untill radback value matches signature
 347:operate.c     ****         while (SPIM_SigmaDSP_read(4) != 0xBE01BE02)
 718              		.loc 1 347 0
 719 043a 0420     		movs	r0, #4
 720 043c FFF7FEFF 		bl	SPIM_SigmaDSP_read
 721              	.LVL66:
 722 0440 9D4B     		ldr	r3, .L144+28
 723 0442 9842     		cmp	r0, r3
 724 0444 02D0     		beq	.L134
 348:operate.c     ****         {
 349:operate.c     **** // initiate SigmaDSP data port in SPI mode
 350:operate.c     ****             SPIM_SigmaDSP_init_SPI();
 725              		.loc 1 350 0
 726 0446 FFF7FEFF 		bl	SPIM_SigmaDSP_init_SPI
 727              	.LVL67:
 728 044a F6E7     		b	.L54
 729              	.L134:
 351:operate.c     ****         } 
 352:operate.c     ****         
 353:operate.c     **** //  SigmaDSP in RPi mode -> Control = 0x0001
 354:operate.c     ****         SPIM_SigmaDSP_write(1);
 730              		.loc 1 354 0
 731 044c 0120     		movs	r0, #1
 732 044e FFF7FEFF 		bl	SPIM_SigmaDSP_write
 733              	.LVL68:
 355:operate.c     ****        
 356:operate.c     **** // SENT OVER SPI informaiton about iRadio LED ON
 357:operate.c     ****         new_disp_ctrl1 = 0x02;
 734              		.loc 1 357 0
 735 0452 0222     		movs	r2, #2
 736 0454 994B     		ldr	r3, .L144+32
 737 0456 1A70     		strb	r2, [r3]
 738 0458 C1E0     		b	.L127
 739              	.LVL69:
 740              	.L7:
 358:operate.c     ****         new_display_data_flag = 1;   
 359:operate.c     ****         break;
 360:operate.c     ****         
 361:operate.c     ****     
 362:operate.c     ****     
 363:operate.c     **** // SYSTEM_STATE = 3 - system in DAB Radio mode
 364:operate.c     ****     case (3):
 365:operate.c     ****     
 366:operate.c     **** // turn OFF stnadby LED       
 367:operate.c     ****         LED_Write(0);      
 741              		.loc 1 367 0
 742 045a 0020     		movs	r0, #0
 743 045c FFF7FEFF 		bl	LED_Write
 744              	.LVL70:
 368:operate.c     ****     
 369:operate.c     ****         if (current_PSUstate.RPi_GPIO_state == 0)
 745              		.loc 1 369 0
 746 0460 6378     		ldrb	r3, [r4, #1]
 747 0462 002B     		cmp	r3, #0
 748 0464 04D1     		bne	.L56
 370:operate.c     ****         {
 371:operate.c     **** // check if RPi is already enabled and active            
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 21


 372:operate.c     ****             if (current_PSUstate.RPI_PWR == 0)
 749              		.loc 1 372 0
 750 0466 2378     		ldrb	r3, [r4]
 751 0468 002B     		cmp	r3, #0
 752 046a 01D1     		bne	.L56
 373:operate.c     ****             {
 374:operate.c     **** // enable RPi
 375:operate.c     ****                 next_PSUstate.RPI_PWR = 1;    
 753              		.loc 1 375 0
 754 046c 0133     		adds	r3, r3, #1
 755 046e 2B70     		strb	r3, [r5]
 756              	.L56:
 376:operate.c     ****             }
 377:operate.c     ****         }
 378:operate.c     ****         if (current_PSUstate.Display_PWR == 0)
 757              		.loc 1 378 0
 758 0470 2379     		ldrb	r3, [r4, #4]
 759 0472 002B     		cmp	r3, #0
 760 0474 01D1     		bne	.L57
 379:operate.c     ****         {
 380:operate.c     **** // enable Display
 381:operate.c     ****             next_PSUstate.Display_PWR = 1;        
 761              		.loc 1 381 0
 762 0476 0133     		adds	r3, r3, #1
 763 0478 2B71     		strb	r3, [r5, #4]
 764              	.L57:
 382:operate.c     ****         }
 383:operate.c     ****         
 384:operate.c     ****         if (current_PSUstate.SigmaDSP_PWR == 0)
 765              		.loc 1 384 0
 766 047a A378     		ldrb	r3, [r4, #2]
 767 047c 002B     		cmp	r3, #0
 768 047e 01D1     		bne	.L58
 385:operate.c     ****         {
 386:operate.c     **** // Enable SigmaDSP            
 387:operate.c     ****             next_PSUstate.SigmaDSP_PWR = 1;            
 769              		.loc 1 387 0
 770 0480 0133     		adds	r3, r3, #1
 771 0482 AB70     		strb	r3, [r5, #2]
 772              	.L58:
 388:operate.c     ****         }
 389:operate.c     **** 
 390:operate.c     **** // check if Bluetooth Tx flag is set
 391:operate.c     ****         if (BT_Tx_STATE == 1)
 773              		.loc 1 391 0
 774 0484 864B     		ldr	r3, .L144+4
 775 0486 1B78     		ldrb	r3, [r3]
 776 0488 012B     		cmp	r3, #1
 777 048a 03D1     		bne	.L59
 392:operate.c     ****         {
 393:operate.c     **** // if it is, check if BT is powered up
 394:operate.c     ****         if (current_PSUstate.BlueTooth_PWR == 0)
 778              		.loc 1 394 0
 779 048c E278     		ldrb	r2, [r4, #3]
 780 048e 002A     		cmp	r2, #0
 781 0490 00D1     		bne	.L59
 395:operate.c     ****             {
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 22


 396:operate.c     **** // if not power it up        
 397:operate.c     ****                 next_PSUstate.BlueTooth_PWR = 1;    
 782              		.loc 1 397 0
 783 0492 EB70     		strb	r3, [r5, #3]
 784              	.L59:
 398:operate.c     ****             }
 399:operate.c     ****         } 
 400:operate.c     ****         
 401:operate.c     **** // enable all necessary blocks        
 402:operate.c     ****         psu_config(1, next_PSUstate);  
 785              		.loc 1 402 0
 786 0494 6B78     		ldrb	r3, [r5, #1]
 787 0496 2878     		ldrb	r0, [r5]
 788 0498 AA78     		ldrb	r2, [r5, #2]
 789 049a 1B02     		lsls	r3, r3, #8
 790 049c 0343     		orrs	r3, r0
 791 049e 1204     		lsls	r2, r2, #16
 792 04a0 1900     		movs	r1, r3
 793 04a2 1300     		movs	r3, r2
 794 04a4 EA78     		ldrb	r2, [r5, #3]
 795 04a6 0B43     		orrs	r3, r1
 796 04a8 1206     		lsls	r2, r2, #24
 797 04aa 1A43     		orrs	r2, r3
 798 04ac 0121     		movs	r1, #1
 799 04ae 2B79     		ldrb	r3, [r5, #4]
 800 04b0 6846     		mov	r0, sp
 801 04b2 FFF7FEFF 		bl	psu_config
 802              	.LVL71:
 803              	.L60:
 403:operate.c     **** 
 404:operate.c     **** // DATALINK out command = 11 -> LIST button pressed  
 405:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 406:operate.c     ****         while (DATALINK_out(11) == 0)
 804              		.loc 1 406 0
 805 04b6 0B20     		movs	r0, #11
 806 04b8 FFF7FEFF 		bl	DATALINK_out
 807              	.LVL72:
 808 04bc 0028     		cmp	r0, #0
 809 04be 03D1     		bne	.L62
 407:operate.c     ****         {
 408:operate.c     ****             CyDelay(10);  
 810              		.loc 1 408 0
 811 04c0 0A20     		movs	r0, #10
 812 04c2 FFF7FEFF 		bl	CyDelay
 813              	.LVL73:
 814 04c6 F6E7     		b	.L60
 815              	.L62:
 409:operate.c     ****         }
 410:operate.c     **** // DATALINK out command = 10 -> GO button pressed  
 411:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 412:operate.c     ****         while (DATALINK_out(10) == 0)
 816              		.loc 1 412 0
 817 04c8 0A20     		movs	r0, #10
 818 04ca FFF7FEFF 		bl	DATALINK_out
 819              	.LVL74:
 820 04ce 0028     		cmp	r0, #0
 821 04d0 03D1     		bne	.L64
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 23


 413:operate.c     ****         {
 414:operate.c     ****             CyDelay(10);  
 822              		.loc 1 414 0
 823 04d2 0A20     		movs	r0, #10
 824 04d4 FFF7FEFF 		bl	CyDelay
 825              	.LVL75:
 826 04d8 F6E7     		b	.L62
 827              	.L64:
 415:operate.c     ****         }
 416:operate.c     **** // DATALINK out command = 3 -> 3 button pressed  
 417:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 418:operate.c     ****         while (DATALINK_out(3) == 0)
 828              		.loc 1 418 0
 829 04da 0320     		movs	r0, #3
 830 04dc FFF7FEFF 		bl	DATALINK_out
 831              	.LVL76:
 832 04e0 0028     		cmp	r0, #0
 833 04e2 03D1     		bne	.L135
 419:operate.c     ****         {
 420:operate.c     ****             CyDelay(10);  
 834              		.loc 1 420 0
 835 04e4 0A20     		movs	r0, #10
 836 04e6 FFF7FEFF 		bl	CyDelay
 837              	.LVL77:
 838 04ea F6E7     		b	.L64
 839              	.L135:
 421:operate.c     ****         } 
 422:operate.c     ****         
 423:operate.c     **** // read back current PSU state    
 424:operate.c     ****         current_PSUstate = psu_config(2, next_PSUstate);
 840              		.loc 1 424 0
 841 04ec 6B78     		ldrb	r3, [r5, #1]
 842 04ee 2878     		ldrb	r0, [r5]
 843 04f0 AA78     		ldrb	r2, [r5, #2]
 844 04f2 1B02     		lsls	r3, r3, #8
 845 04f4 0343     		orrs	r3, r0
 846 04f6 1204     		lsls	r2, r2, #16
 847 04f8 1900     		movs	r1, r3
 848 04fa 1300     		movs	r3, r2
 849 04fc EA78     		ldrb	r2, [r5, #3]
 850 04fe 0B43     		orrs	r3, r1
 851 0500 1206     		lsls	r2, r2, #24
 852 0502 1A43     		orrs	r2, r3
 853 0504 0221     		movs	r1, #2
 854 0506 2B79     		ldrb	r3, [r5, #4]
 855 0508 6846     		mov	r0, sp
 856 050a FFF7FEFF 		bl	psu_config
 857              	.LVL78:
 858 050e 0522     		movs	r2, #5
 859 0510 6946     		mov	r1, sp
 860 0512 2000     		movs	r0, r4
 861 0514 FFF7FEFF 		bl	memcpy
 862              	.LVL79:
 425:operate.c     **** 
 426:operate.c     ****         if (current_PSUstate.RPI_PWR == 1)
 863              		.loc 1 426 0
 864 0518 2378     		ldrb	r3, [r4]
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 24


 865 051a 1E25     		movs	r5, #30
 866 051c 012B     		cmp	r3, #1
 867 051e 11D0     		beq	.L67
 868              	.LVL80:
 869              	.L66:
 427:operate.c     ****             {
 428:operate.c     ****                 display_counter = 30;
 429:operate.c     ****                 while (current_PSUstate.RPi_GPIO_state == 0)
 430:operate.c     ****                 {
 431:operate.c     **** // WAIT untill RPI powers up
 432:operate.c     **** // read back current PSU state    
 433:operate.c     ****                 current_PSUstate = psu_config(2, next_PSUstate);
 434:operate.c     **** // SENT INFORMAITON TO DISPLAY ABOUT RPI BOOTING UP
 435:operate.c     **** // new data that needs to be sent over SPI to display module
 436:operate.c     ****                 strcpy((char*)new_display_data_buffer, "Booting up ...          ");
 437:operate.c     ****                 new_display_data_buffer[22] = '0' + (display_counter / 10);
 438:operate.c     ****                 new_display_data_buffer[23] = '0' + (display_counter % 10);
 439:operate.c     ****                 SPIM_display_write(new_display_data_buffer, 0x00, 0x00);          
 440:operate.c     ****                 CyDelay(1000);
 441:operate.c     ****                 display_counter = display_counter - 1;           
 442:operate.c     ****                 }
 443:operate.c     ****             }
 444:operate.c     ****  // sent command over UART command to RPI to start DAB
 445:operate.c     ****         UART_UartPutString("-DAB+");
 870              		.loc 1 445 0
 871 0520 6748     		ldr	r0, .L144+36
 872 0522 FFF7FEFF 		bl	UART_UartPutString
 873              	.LVL81:
 446:operate.c     ****         
 447:operate.c     ****         if (BT_Tx_STATE == 1)
 874              		.loc 1 447 0
 875 0526 5E4B     		ldr	r3, .L144+4
 876 0528 1C78     		ldrb	r4, [r3]
 877 052a 012C     		cmp	r4, #1
 878 052c 43D1     		bne	.L71
 448:operate.c     ****         {
 449:operate.c     **** // Enable BlueTooth in Tx state - re-connect to latest device
 450:operate.c     ****             BT_control(1, 2); 
 879              		.loc 1 450 0
 880 052e 0221     		movs	r1, #2
 881 0530 2000     		movs	r0, r4
 882 0532 FFF7FEFF 		bl	BT_control
 883              	.LVL82:
 451:operate.c     **** // disp_ctrl2 
 452:operate.c     **** // CTRL1.0 - BT Tx status set to 1 indicating Tx mode ON
 453:operate.c     ****             new_disp_ctrl2 = new_disp_ctrl2 | 0x01;
 884              		.loc 1 453 0
 885 0536 5B4A     		ldr	r2, .L144+8
 886 0538 1378     		ldrb	r3, [r2]
 887 053a 2343     		orrs	r3, r4
 888 053c 1370     		strb	r3, [r2]
 454:operate.c     ****             new_display_data_flag = 1;  
 889              		.loc 1 454 0
 890 053e 5A4B     		ldr	r3, .L144+12
 891 0540 1C70     		strb	r4, [r3]
 892 0542 38E0     		b	.L71
 893              	.L67:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 25


 894              	.LVL83:
 429:operate.c     ****                 {
 895              		.loc 1 429 0
 896 0544 6778     		ldrb	r7, [r4, #1]
 897 0546 002F     		cmp	r7, #0
 898 0548 EAD1     		bne	.L66
 433:operate.c     **** // SENT INFORMAITON TO DISPLAY ABOUT RPI BOOTING UP
 899              		.loc 1 433 0
 900 054a 584E     		ldr	r6, .L144+16
 901 054c 7378     		ldrb	r3, [r6, #1]
 902 054e 3078     		ldrb	r0, [r6]
 903 0550 B278     		ldrb	r2, [r6, #2]
 904 0552 1B02     		lsls	r3, r3, #8
 905 0554 0343     		orrs	r3, r0
 906 0556 1204     		lsls	r2, r2, #16
 907 0558 1900     		movs	r1, r3
 908 055a 1300     		movs	r3, r2
 909 055c 0B43     		orrs	r3, r1
 910 055e FF21     		movs	r1, #255
 911 0560 F278     		ldrb	r2, [r6, #3]
 912 0562 6846     		mov	r0, sp
 913 0564 1206     		lsls	r2, r2, #24
 914 0566 1A43     		orrs	r2, r3
 915 0568 3379     		ldrb	r3, [r6, #4]
 916 056a 0B40     		ands	r3, r1
 917 056c FD39     		subs	r1, r1, #253
 918 056e FFF7FEFF 		bl	psu_config
 919              	.LVL84:
 920 0572 0522     		movs	r2, #5
 921 0574 6946     		mov	r1, sp
 922 0576 2000     		movs	r0, r4
 923 0578 FFF7FEFF 		bl	memcpy
 924              	.LVL85:
 436:operate.c     ****                 new_display_data_buffer[22] = '0' + (display_counter / 10);
 925              		.loc 1 436 0
 926 057c 4C4E     		ldr	r6, .L144+20
 927 057e 4D49     		ldr	r1, .L144+24
 928 0580 3000     		movs	r0, r6
 929 0582 FFF7FEFF 		bl	strcpy
 930              	.LVL86:
 437:operate.c     ****                 new_display_data_buffer[23] = '0' + (display_counter % 10);
 931              		.loc 1 437 0
 932 0586 0A21     		movs	r1, #10
 933 0588 2800     		movs	r0, r5
 934 058a FFF7FEFF 		bl	__aeabi_uidiv
 935              	.LVL87:
 936 058e 3030     		adds	r0, r0, #48
 937 0590 B075     		strb	r0, [r6, #22]
 438:operate.c     ****                 SPIM_display_write(new_display_data_buffer, 0x00, 0x00);          
 938              		.loc 1 438 0
 939 0592 0A21     		movs	r1, #10
 940 0594 2800     		movs	r0, r5
 941 0596 FFF7FEFF 		bl	__aeabi_uidivmod
 942              	.LVL88:
 943 059a 3031     		adds	r1, r1, #48
 944 059c F175     		strb	r1, [r6, #23]
 439:operate.c     ****                 CyDelay(1000);
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 26


 945              		.loc 1 439 0
 946 059e 3A00     		movs	r2, r7
 947 05a0 3900     		movs	r1, r7
 948 05a2 3000     		movs	r0, r6
 949 05a4 FFF7FEFF 		bl	SPIM_display_write
 950              	.LVL89:
 440:operate.c     ****                 display_counter = display_counter - 1;           
 951              		.loc 1 440 0
 952 05a8 FA20     		movs	r0, #250
 441:operate.c     ****                 }
 953              		.loc 1 441 0
 954 05aa 013D     		subs	r5, r5, #1
 955              	.LVL90:
 440:operate.c     ****                 display_counter = display_counter - 1;           
 956              		.loc 1 440 0
 957 05ac 8000     		lsls	r0, r0, #2
 958 05ae FFF7FEFF 		bl	CyDelay
 959              	.LVL91:
 441:operate.c     ****                 }
 960              		.loc 1 441 0
 961 05b2 EDB2     		uxtb	r5, r5
 962              	.LVL92:
 963 05b4 C6E7     		b	.L67
 964              	.LVL93:
 965              	.L71:
 455:operate.c     ****         } 
 456:operate.c     **** 
 457:operate.c     **** // check if SigmaDSP is up - wait untill radback value matches signature
 458:operate.c     ****         while (SPIM_SigmaDSP_read(4) != 0xBE01BE02)
 966              		.loc 1 458 0
 967 05b6 0420     		movs	r0, #4
 968 05b8 FFF7FEFF 		bl	SPIM_SigmaDSP_read
 969              	.LVL94:
 970 05bc 3E4B     		ldr	r3, .L144+28
 971 05be 9842     		cmp	r0, r3
 972 05c0 02D0     		beq	.L136
 459:operate.c     ****         {
 460:operate.c     **** // initiate SigmaDSP data port in SPI mode
 461:operate.c     ****             SPIM_SigmaDSP_init_SPI();
 973              		.loc 1 461 0
 974 05c2 FFF7FEFF 		bl	SPIM_SigmaDSP_init_SPI
 975              	.LVL95:
 976 05c6 F6E7     		b	.L71
 977              	.L136:
 462:operate.c     ****         }
 463:operate.c     **** 
 464:operate.c     **** //  SigmaDSP in DAB mode -> Control = 0x0002
 465:operate.c     ****         SPIM_SigmaDSP_write(2);
 978              		.loc 1 465 0
 979 05c8 0220     		movs	r0, #2
 980 05ca FFF7FEFF 		bl	SPIM_SigmaDSP_write
 981              	.LVL96:
 466:operate.c     **** 
 467:operate.c     **** // SENT OVER SPI informaiton about DAB Radio LED ON
 468:operate.c     ****         new_disp_ctrl1 = 0x04;
 982              		.loc 1 468 0
 983 05ce 0422     		movs	r2, #4
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 27


 984              	.L128:
 469:operate.c     **** // CTRL1.1 - Online status set to 0 indicating offline state
 470:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 & 0xFD;        
 985              		.loc 1 470 0
 986 05d0 0221     		movs	r1, #2
 468:operate.c     **** // CTRL1.1 - Online status set to 0 indicating offline state
 987              		.loc 1 468 0
 988 05d2 3A4B     		ldr	r3, .L144+32
 989 05d4 1A70     		strb	r2, [r3]
 990              		.loc 1 470 0
 991 05d6 334A     		ldr	r2, .L144+8
 992 05d8 1378     		ldrb	r3, [r2]
 993 05da 8B43     		bics	r3, r1
 994 05dc 1370     		strb	r3, [r2]
 995              	.L127:
 471:operate.c     ****         new_display_data_flag = 1;   
 996              		.loc 1 471 0
 997 05de 0122     		movs	r2, #1
 998 05e0 EEE1     		b	.L126
 999              	.LVL97:
 1000              	.L8:
 472:operate.c     ****         break;
 473:operate.c     **** 
 474:operate.c     ****     
 475:operate.c     ****     
 476:operate.c     **** // SYSTEM_STATE = 4 - system in AuxIn mode    
 477:operate.c     ****     case (4):
 478:operate.c     ****     
 479:operate.c     **** // turn OFF stnadby LED       
 480:operate.c     ****         LED_Write(0);      
 1001              		.loc 1 480 0
 1002 05e2 0020     		movs	r0, #0
 1003 05e4 FFF7FEFF 		bl	LED_Write
 1004              	.LVL98:
 481:operate.c     ****     
 482:operate.c     ****         if (current_PSUstate.Display_PWR == 0)
 1005              		.loc 1 482 0
 1006 05e8 2379     		ldrb	r3, [r4, #4]
 1007 05ea 002B     		cmp	r3, #0
 1008 05ec 01D1     		bne	.L73
 483:operate.c     ****         {
 484:operate.c     **** // enable Display
 485:operate.c     ****             next_PSUstate.Display_PWR = 1;        
 1009              		.loc 1 485 0
 1010 05ee 0133     		adds	r3, r3, #1
 1011 05f0 2B71     		strb	r3, [r5, #4]
 1012              	.L73:
 486:operate.c     ****         }
 487:operate.c     ****         
 488:operate.c     ****         if (current_PSUstate.SigmaDSP_PWR == 0)
 1013              		.loc 1 488 0
 1014 05f2 A378     		ldrb	r3, [r4, #2]
 1015 05f4 002B     		cmp	r3, #0
 1016 05f6 01D1     		bne	.L74
 489:operate.c     ****         {
 490:operate.c     **** // Enable SigmaDSP            
 491:operate.c     ****             next_PSUstate.SigmaDSP_PWR = 1;            
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 28


 1017              		.loc 1 491 0
 1018 05f8 0133     		adds	r3, r3, #1
 1019 05fa AB70     		strb	r3, [r5, #2]
 1020              	.L74:
 492:operate.c     ****         }
 493:operate.c     **** 
 494:operate.c     **** // check if Bluetooth Tx flag is set
 495:operate.c     ****         if (BT_Tx_STATE == 1)
 1021              		.loc 1 495 0
 1022 05fc 284E     		ldr	r6, .L144+4
 1023 05fe 3378     		ldrb	r3, [r6]
 1024 0600 012B     		cmp	r3, #1
 1025 0602 03D1     		bne	.L75
 496:operate.c     ****         {
 497:operate.c     **** // if it is, check if BT is powered up
 498:operate.c     ****         if (current_PSUstate.BlueTooth_PWR == 0)
 1026              		.loc 1 498 0
 1027 0604 E278     		ldrb	r2, [r4, #3]
 1028 0606 002A     		cmp	r2, #0
 1029 0608 00D1     		bne	.L75
 499:operate.c     ****             {
 500:operate.c     **** // if not power it up        
 501:operate.c     ****                 next_PSUstate.BlueTooth_PWR = 1;    
 1030              		.loc 1 501 0
 1031 060a EB70     		strb	r3, [r5, #3]
 1032              	.L75:
 502:operate.c     ****             }
 503:operate.c     ****             
 504:operate.c     ****         } 
 505:operate.c     ****         
 506:operate.c     **** // enable all necessary blocks        
 507:operate.c     ****         psu_config(1, next_PSUstate);        
 1033              		.loc 1 507 0
 1034 060c 6B78     		ldrb	r3, [r5, #1]
 1035 060e 2878     		ldrb	r0, [r5]
 1036 0610 AA78     		ldrb	r2, [r5, #2]
 1037 0612 1B02     		lsls	r3, r3, #8
 1038 0614 0343     		orrs	r3, r0
 1039 0616 1204     		lsls	r2, r2, #16
 1040 0618 1900     		movs	r1, r3
 1041 061a 1300     		movs	r3, r2
 1042 061c EA78     		ldrb	r2, [r5, #3]
 1043 061e 0B43     		orrs	r3, r1
 1044 0620 1206     		lsls	r2, r2, #24
 1045 0622 1A43     		orrs	r2, r3
 1046 0624 0121     		movs	r1, #1
 1047 0626 2B79     		ldrb	r3, [r5, #4]
 1048 0628 6846     		mov	r0, sp
 1049 062a FFF7FEFF 		bl	psu_config
 1050              	.LVL99:
 1051              	.L76:
 508:operate.c     **** 
 509:operate.c     **** // DATALINK out command = 11 -> LIST button pressed  
 510:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 511:operate.c     ****         while (DATALINK_out(11) == 0)
 1052              		.loc 1 511 0
 1053 062e 0B20     		movs	r0, #11
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 29


 1054 0630 FFF7FEFF 		bl	DATALINK_out
 1055              	.LVL100:
 1056 0634 0028     		cmp	r0, #0
 1057 0636 03D1     		bne	.L78
 512:operate.c     ****         {
 513:operate.c     ****             CyDelay(10);  
 1058              		.loc 1 513 0
 1059 0638 0A20     		movs	r0, #10
 1060 063a FFF7FEFF 		bl	CyDelay
 1061              	.LVL101:
 1062 063e F6E7     		b	.L76
 1063              	.L78:
 514:operate.c     ****         }
 515:operate.c     **** // DATALINK out command = 10 -> GO button pressed  
 516:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 517:operate.c     ****         while (DATALINK_out(10) == 0)
 1064              		.loc 1 517 0
 1065 0640 0A20     		movs	r0, #10
 1066 0642 FFF7FEFF 		bl	DATALINK_out
 1067              	.LVL102:
 1068 0646 0028     		cmp	r0, #0
 1069 0648 03D1     		bne	.L80
 518:operate.c     ****         {
 519:operate.c     ****             CyDelay(10);  
 1070              		.loc 1 519 0
 1071 064a 0A20     		movs	r0, #10
 1072 064c FFF7FEFF 		bl	CyDelay
 1073              	.LVL103:
 1074 0650 F6E7     		b	.L78
 1075              	.L80:
 520:operate.c     ****         }
 521:operate.c     **** // DATALINK out command = 4 -> 4 button pressed  
 522:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 523:operate.c     ****         while (DATALINK_out(4) == 0)
 1076              		.loc 1 523 0
 1077 0652 0420     		movs	r0, #4
 1078 0654 FFF7FEFF 		bl	DATALINK_out
 1079              	.LVL104:
 1080 0658 0028     		cmp	r0, #0
 1081 065a 03D1     		bne	.L137
 524:operate.c     ****         {
 525:operate.c     ****             CyDelay(10);  
 1082              		.loc 1 525 0
 1083 065c 0A20     		movs	r0, #10
 1084 065e FFF7FEFF 		bl	CyDelay
 1085              	.LVL105:
 1086 0662 F6E7     		b	.L80
 1087              	.L137:
 526:operate.c     ****         } 
 527:operate.c     **** 
 528:operate.c     ****         if (BT_Tx_STATE == 1)
 1088              		.loc 1 528 0
 1089 0664 3478     		ldrb	r4, [r6]
 1090 0666 012C     		cmp	r4, #1
 1091 0668 09D1     		bne	.L83
 529:operate.c     ****         {
 530:operate.c     **** // Enable BlueTooth in Tx state - re-connect to latest device
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 30


 531:operate.c     ****             BT_control(1, 2); 
 1092              		.loc 1 531 0
 1093 066a 0221     		movs	r1, #2
 1094 066c 2000     		movs	r0, r4
 1095 066e FFF7FEFF 		bl	BT_control
 1096              	.LVL106:
 532:operate.c     **** // disp_ctrl2 
 533:operate.c     **** // CTRL1.0 - BT Tx status set to 1 indicating Tx mode ON
 534:operate.c     ****             new_disp_ctrl2 = new_disp_ctrl2 | 0x01;
 1097              		.loc 1 534 0
 1098 0672 0C4A     		ldr	r2, .L144+8
 1099 0674 1378     		ldrb	r3, [r2]
 1100 0676 2343     		orrs	r3, r4
 1101 0678 1370     		strb	r3, [r2]
 535:operate.c     ****             new_display_data_flag = 1;  
 1102              		.loc 1 535 0
 1103 067a 0B4B     		ldr	r3, .L144+12
 1104 067c 1C70     		strb	r4, [r3]
 1105              	.L83:
 536:operate.c     ****         } 
 537:operate.c     ****         
 538:operate.c     **** // check if SigmaDSP is up - wait untill radback value matches signature
 539:operate.c     ****         while (SPIM_SigmaDSP_read(4) != 0xBE01BE02)
 1106              		.loc 1 539 0
 1107 067e 0420     		movs	r0, #4
 1108 0680 FFF7FEFF 		bl	SPIM_SigmaDSP_read
 1109              	.LVL107:
 1110 0684 0C4B     		ldr	r3, .L144+28
 1111 0686 9842     		cmp	r0, r3
 1112 0688 02D0     		beq	.L138
 540:operate.c     ****         {
 541:operate.c     **** // initiate SigmaDSP data port in SPI mode
 542:operate.c     ****             SPIM_SigmaDSP_init_SPI();
 1113              		.loc 1 542 0
 1114 068a FFF7FEFF 		bl	SPIM_SigmaDSP_init_SPI
 1115              	.LVL108:
 1116 068e F6E7     		b	.L83
 1117              	.L138:
 543:operate.c     ****         }
 544:operate.c     **** 
 545:operate.c     **** //  SigmaDSP in AuxIN mode -> Control = 0x0003
 546:operate.c     ****         SPIM_SigmaDSP_write(3);
 1118              		.loc 1 546 0
 1119 0690 0320     		movs	r0, #3
 1120 0692 FFF7FEFF 		bl	SPIM_SigmaDSP_write
 1121              	.LVL109:
 547:operate.c     **** 
 548:operate.c     **** // SENT OVER SPI informaiton about AuxIN LED ON
 549:operate.c     ****         new_disp_ctrl1 = 0x08;
 1122              		.loc 1 549 0
 1123 0696 0822     		movs	r2, #8
 1124 0698 9AE7     		b	.L128
 1125              	.L145:
 1126 069a C046     		.align	2
 1127              	.L144:
 1128 069c 46000000 		.word	.LC16
 1129 06a0 00000000 		.word	BT_Tx_STATE
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 31


 1130 06a4 00000000 		.word	new_disp_ctrl2
 1131 06a8 00000000 		.word	new_display_data_flag
 1132 06ac 00000000 		.word	next_PSUstate
 1133 06b0 00000000 		.word	new_display_data_buffer
 1134 06b4 2D000000 		.word	.LC11
 1135 06b8 02BE01BE 		.word	-1107182078
 1136 06bc 00000000 		.word	new_disp_ctrl1
 1137 06c0 4F000000 		.word	.LC18
 1138              	.L9:
 550:operate.c     **** // CTRL1.1 - Online status set to 0 indicating offline state
 551:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 & 0xFD;        
 552:operate.c     ****         new_display_data_flag = 1;   
 553:operate.c     ****         break;
 554:operate.c     **** 
 555:operate.c     **** 
 556:operate.c     **** // SYSTEM_STATE = 5 - system in Clock mode
 557:operate.c     ****     case (5):
 558:operate.c     ****     
 559:operate.c     **** // turn OFF stnadby LED       
 560:operate.c     ****         LED_Write(0);      
 1139              		.loc 1 560 0
 1140 06c4 0020     		movs	r0, #0
 1141 06c6 FFF7FEFF 		bl	LED_Write
 1142              	.LVL110:
 561:operate.c     ****         
 562:operate.c     ****         if (current_PSUstate.Display_PWR == 0)
 1143              		.loc 1 562 0
 1144 06ca 2379     		ldrb	r3, [r4, #4]
 1145 06cc 002B     		cmp	r3, #0
 1146 06ce 01D1     		bne	.L85
 563:operate.c     ****         {
 564:operate.c     **** // enable Display
 565:operate.c     ****             next_PSUstate.Display_PWR = 1;        
 1147              		.loc 1 565 0
 1148 06d0 0133     		adds	r3, r3, #1
 1149 06d2 2B71     		strb	r3, [r5, #4]
 1150              	.L85:
 566:operate.c     ****         }
 567:operate.c     ****         
 568:operate.c     **** // check if Bluetooth Tx flag is set
 569:operate.c     ****         if (BT_Tx_STATE == 1)
 1151              		.loc 1 569 0
 1152 06d4 BD4E     		ldr	r6, .L146
 1153 06d6 3378     		ldrb	r3, [r6]
 1154 06d8 012B     		cmp	r3, #1
 1155 06da 08D1     		bne	.L87
 570:operate.c     ****         {
 571:operate.c     **** // if it is, check if BT is powered up
 572:operate.c     ****         if (current_PSUstate.BlueTooth_PWR == 0)
 1156              		.loc 1 572 0
 1157 06dc E278     		ldrb	r2, [r4, #3]
 1158 06de 002A     		cmp	r2, #0
 1159 06e0 00D1     		bne	.L88
 573:operate.c     ****             {
 574:operate.c     **** // if not power it up        
 575:operate.c     ****                 next_PSUstate.BlueTooth_PWR = 1;    
 1160              		.loc 1 575 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 32


 1161 06e2 EB70     		strb	r3, [r5, #3]
 1162              	.L88:
 576:operate.c     ****             }
 577:operate.c     **** // check if SigmaDSP is up            
 578:operate.c     ****         if (current_PSUstate.SigmaDSP_PWR == 0)
 1163              		.loc 1 578 0
 1164 06e4 A378     		ldrb	r3, [r4, #2]
 1165 06e6 002B     		cmp	r3, #0
 1166 06e8 01D1     		bne	.L87
 579:operate.c     ****            {
 580:operate.c     **** // if not, enable SigmaDSP            
 581:operate.c     ****                 next_PSUstate.SigmaDSP_PWR = 1;            
 1167              		.loc 1 581 0
 1168 06ea 0133     		adds	r3, r3, #1
 1169 06ec AB70     		strb	r3, [r5, #2]
 1170              	.L87:
 582:operate.c     ****            }    
 583:operate.c     ****         } 
 584:operate.c     ****         
 585:operate.c     **** // enable all necessary blocks        
 586:operate.c     ****         psu_config(1, next_PSUstate);        
 1171              		.loc 1 586 0
 1172 06ee 6B78     		ldrb	r3, [r5, #1]
 1173 06f0 2878     		ldrb	r0, [r5]
 1174 06f2 AA78     		ldrb	r2, [r5, #2]
 1175 06f4 1B02     		lsls	r3, r3, #8
 1176 06f6 0343     		orrs	r3, r0
 1177 06f8 1204     		lsls	r2, r2, #16
 1178 06fa 1900     		movs	r1, r3
 1179 06fc 1300     		movs	r3, r2
 1180 06fe EA78     		ldrb	r2, [r5, #3]
 1181 0700 0B43     		orrs	r3, r1
 1182 0702 1206     		lsls	r2, r2, #24
 1183 0704 1A43     		orrs	r2, r3
 1184 0706 0121     		movs	r1, #1
 1185 0708 2B79     		ldrb	r3, [r5, #4]
 1186 070a 6846     		mov	r0, sp
 1187 070c FFF7FEFF 		bl	psu_config
 1188              	.LVL111:
 587:operate.c     **** 
 588:operate.c     ****         if (BT_Tx_STATE == 1)
 1189              		.loc 1 588 0
 1190 0710 3578     		ldrb	r5, [r6]
 1191 0712 AF4C     		ldr	r4, .L146+4
 1192 0714 AF4E     		ldr	r6, .L146+8
 1193 0716 012D     		cmp	r5, #1
 1194 0718 09D0     		beq	.L90
 1195              	.L99:
 589:operate.c     ****         {
 590:operate.c     **** // Enable BlueTooth in Tx state - re-connect to latest device
 591:operate.c     ****             BT_control(1, 2); 
 592:operate.c     **** // SENT OVER SPI information about BT Tx LED ON
 593:operate.c     **** // disp_ctrl2 
 594:operate.c     **** // CTRL1.0 - BT Tx status set to 1 indicating Tx mode ON
 595:operate.c     ****             new_disp_ctrl2 = new_disp_ctrl2 | 0x01;
 596:operate.c     ****             new_display_data_flag = 1;  
 597:operate.c     ****             
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 33


 598:operate.c     **** // check if SigmaDSP is up - wait untill radback value matches signature
 599:operate.c     ****             while (SPIM_SigmaDSP_read(4) != 0xBE01BE02)
 600:operate.c     ****             {
 601:operate.c     **** // initiate SigmaDSP data port in SPI mode
 602:operate.c     ****                 SPIM_SigmaDSP_init_SPI();
 603:operate.c     ****             }
 604:operate.c     **** 
 605:operate.c     **** // DATALINK out command = 11 -> LIST button pressed  
 606:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 607:operate.c     ****             while (DATALINK_out(11) == 0)
 608:operate.c     ****             {
 609:operate.c     ****                 CyDelay(10);  
 610:operate.c     ****             }
 611:operate.c     **** // DATALINK out command = 10 -> GO button pressed  
 612:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 613:operate.c     ****             while (DATALINK_out(10) == 0)
 614:operate.c     ****             {
 615:operate.c     ****                 CyDelay(10);  
 616:operate.c     ****             }
 617:operate.c     **** // DATALINK out command = 5 -> 5 button pressed  
 618:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 619:operate.c     ****             while (DATALINK_out(5) == 0)
 620:operate.c     ****             {
 621:operate.c     ****                 CyDelay(10);  
 622:operate.c     ****             }  
 623:operate.c     ****             
 624:operate.c     ****         } 
 625:operate.c     **** // SENT OVER SPI informaiton about Clock LED ON
 626:operate.c     ****         new_disp_ctrl1 = 0x10;
 1196              		.loc 1 626 0
 1197 071a 1022     		movs	r2, #16
 1198 071c AE4B     		ldr	r3, .L146+12
 1199 071e 1A70     		strb	r2, [r3]
 627:operate.c     **** // CTRL1.1 - Online status set to 0 indicating offline state
 628:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 & 0xFD;        
 1200              		.loc 1 628 0
 1201 0720 2378     		ldrb	r3, [r4]
 1202 0722 0E3A     		subs	r2, r2, #14
 1203 0724 9343     		bics	r3, r2
 1204 0726 2370     		strb	r3, [r4]
 629:operate.c     ****         new_display_data_flag = 1;   
 1205              		.loc 1 629 0
 1206 0728 0123     		movs	r3, #1
 1207 072a 3370     		strb	r3, [r6]
 630:operate.c     ****         break;        
 1208              		.loc 1 630 0
 1209 072c 4AE1     		b	.L2
 1210              	.L90:
 591:operate.c     **** // SENT OVER SPI information about BT Tx LED ON
 1211              		.loc 1 591 0
 1212 072e 0221     		movs	r1, #2
 1213 0730 2800     		movs	r0, r5
 1214 0732 FFF7FEFF 		bl	BT_control
 1215              	.LVL112:
 595:operate.c     ****             new_display_data_flag = 1;  
 1216              		.loc 1 595 0
 1217 0736 2378     		ldrb	r3, [r4]
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 34


 596:operate.c     ****             
 1218              		.loc 1 596 0
 1219 0738 3570     		strb	r5, [r6]
 595:operate.c     ****             new_display_data_flag = 1;  
 1220              		.loc 1 595 0
 1221 073a 2B43     		orrs	r3, r5
 1222 073c 2370     		strb	r3, [r4]
 1223              	.L91:
 599:operate.c     ****             {
 1224              		.loc 1 599 0
 1225 073e 0420     		movs	r0, #4
 1226 0740 FFF7FEFF 		bl	SPIM_SigmaDSP_read
 1227              	.LVL113:
 1228 0744 A54B     		ldr	r3, .L146+16
 1229 0746 9842     		cmp	r0, r3
 1230 0748 02D0     		beq	.L93
 602:operate.c     ****             }
 1231              		.loc 1 602 0
 1232 074a FFF7FEFF 		bl	SPIM_SigmaDSP_init_SPI
 1233              	.LVL114:
 1234 074e F6E7     		b	.L91
 1235              	.L93:
 607:operate.c     ****             {
 1236              		.loc 1 607 0
 1237 0750 0B20     		movs	r0, #11
 1238 0752 FFF7FEFF 		bl	DATALINK_out
 1239              	.LVL115:
 1240 0756 0028     		cmp	r0, #0
 1241 0758 03D1     		bne	.L95
 609:operate.c     ****             }
 1242              		.loc 1 609 0
 1243 075a 0A20     		movs	r0, #10
 1244 075c FFF7FEFF 		bl	CyDelay
 1245              	.LVL116:
 1246 0760 F6E7     		b	.L93
 1247              	.L95:
 613:operate.c     ****             {
 1248              		.loc 1 613 0
 1249 0762 0A20     		movs	r0, #10
 1250 0764 FFF7FEFF 		bl	DATALINK_out
 1251              	.LVL117:
 1252 0768 0028     		cmp	r0, #0
 1253 076a 03D1     		bne	.L97
 615:operate.c     ****             }
 1254              		.loc 1 615 0
 1255 076c 0A20     		movs	r0, #10
 1256 076e FFF7FEFF 		bl	CyDelay
 1257              	.LVL118:
 1258 0772 F6E7     		b	.L95
 1259              	.L97:
 619:operate.c     ****             {
 1260              		.loc 1 619 0
 1261 0774 0520     		movs	r0, #5
 1262 0776 FFF7FEFF 		bl	DATALINK_out
 1263              	.LVL119:
 1264 077a 0028     		cmp	r0, #0
 1265 077c CDD1     		bne	.L99
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 35


 621:operate.c     ****             }  
 1266              		.loc 1 621 0
 1267 077e 0A20     		movs	r0, #10
 1268 0780 FFF7FEFF 		bl	CyDelay
 1269              	.LVL120:
 1270 0784 F6E7     		b	.L97
 1271              	.L10:
 631:operate.c     ****         
 632:operate.c     ****     
 633:operate.c     **** // SYSTEM_STATE = 6 - system in RDS/FM mode
 634:operate.c     ****     case (6):
 635:operate.c     ****     
 636:operate.c     **** // turn OFF stnadby LED       
 637:operate.c     ****         LED_Write(0);      
 1272              		.loc 1 637 0
 1273 0786 0020     		movs	r0, #0
 1274 0788 FFF7FEFF 		bl	LED_Write
 1275              	.LVL121:
 638:operate.c     ****     
 639:operate.c     ****         if (current_PSUstate.RPi_GPIO_state == 0)
 1276              		.loc 1 639 0
 1277 078c 6378     		ldrb	r3, [r4, #1]
 1278 078e 002B     		cmp	r3, #0
 1279 0790 04D1     		bne	.L100
 640:operate.c     ****         {
 641:operate.c     **** // check if RPi is already enabled and active            
 642:operate.c     ****             if (current_PSUstate.RPI_PWR == 0)
 1280              		.loc 1 642 0
 1281 0792 2378     		ldrb	r3, [r4]
 1282 0794 002B     		cmp	r3, #0
 1283 0796 01D1     		bne	.L100
 643:operate.c     ****             {
 644:operate.c     **** // enable RPi
 645:operate.c     ****                 next_PSUstate.RPI_PWR = 1;    
 1284              		.loc 1 645 0
 1285 0798 0133     		adds	r3, r3, #1
 1286 079a 2B70     		strb	r3, [r5]
 1287              	.L100:
 646:operate.c     ****             }
 647:operate.c     ****         }
 648:operate.c     ****         if (current_PSUstate.Display_PWR == 0)
 1288              		.loc 1 648 0
 1289 079c 2379     		ldrb	r3, [r4, #4]
 1290 079e 002B     		cmp	r3, #0
 1291 07a0 01D1     		bne	.L101
 649:operate.c     ****         {
 650:operate.c     **** // enable Display
 651:operate.c     ****             next_PSUstate.Display_PWR = 1;        
 1292              		.loc 1 651 0
 1293 07a2 0133     		adds	r3, r3, #1
 1294 07a4 2B71     		strb	r3, [r5, #4]
 1295              	.L101:
 652:operate.c     ****         }
 653:operate.c     **** // check if Bluetooth Tx flag is set
 654:operate.c     ****         if (BT_Tx_STATE == 1)
 1296              		.loc 1 654 0
 1297 07a6 894B     		ldr	r3, .L146
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 36


 1298 07a8 1B78     		ldrb	r3, [r3]
 1299 07aa 012B     		cmp	r3, #1
 1300 07ac 08D1     		bne	.L103
 655:operate.c     ****         {
 656:operate.c     **** // if it is, check if BT is powered up
 657:operate.c     ****             if (current_PSUstate.BlueTooth_PWR == 0)
 1301              		.loc 1 657 0
 1302 07ae E278     		ldrb	r2, [r4, #3]
 1303 07b0 002A     		cmp	r2, #0
 1304 07b2 00D1     		bne	.L104
 658:operate.c     ****             {
 659:operate.c     **** // if not power it up        
 660:operate.c     ****                 next_PSUstate.BlueTooth_PWR = 1;    
 1305              		.loc 1 660 0
 1306 07b4 EB70     		strb	r3, [r5, #3]
 1307              	.L104:
 661:operate.c     ****             }
 662:operate.c     **** // check if SigmaDSP is up            
 663:operate.c     ****             if (current_PSUstate.SigmaDSP_PWR == 0)
 1308              		.loc 1 663 0
 1309 07b6 A378     		ldrb	r3, [r4, #2]
 1310 07b8 002B     		cmp	r3, #0
 1311 07ba 01D1     		bne	.L103
 664:operate.c     ****            {
 665:operate.c     **** // if not, enable SigmaDSP            
 666:operate.c     ****                 next_PSUstate.SigmaDSP_PWR = 1;            
 1312              		.loc 1 666 0
 1313 07bc 0133     		adds	r3, r3, #1
 1314 07be AB70     		strb	r3, [r5, #2]
 1315              	.L103:
 667:operate.c     ****            } 
 668:operate.c     ****         } 
 669:operate.c     ****         
 670:operate.c     **** // enable all necessary blocks        
 671:operate.c     ****         psu_config(1, next_PSUstate);  
 1316              		.loc 1 671 0
 1317 07c0 6B78     		ldrb	r3, [r5, #1]
 1318 07c2 2878     		ldrb	r0, [r5]
 1319 07c4 AA78     		ldrb	r2, [r5, #2]
 1320 07c6 1B02     		lsls	r3, r3, #8
 1321 07c8 0343     		orrs	r3, r0
 1322 07ca 1204     		lsls	r2, r2, #16
 1323 07cc 1900     		movs	r1, r3
 1324 07ce 1300     		movs	r3, r2
 1325 07d0 EA78     		ldrb	r2, [r5, #3]
 1326 07d2 0B43     		orrs	r3, r1
 1327 07d4 1206     		lsls	r2, r2, #24
 1328 07d6 1A43     		orrs	r2, r3
 1329 07d8 0121     		movs	r1, #1
 1330 07da 2B79     		ldrb	r3, [r5, #4]
 1331 07dc 6846     		mov	r0, sp
 1332 07de FFF7FEFF 		bl	psu_config
 1333              	.LVL122:
 672:operate.c     **** /*
 673:operate.c     **** // DATALINK out command = 11 -> LIST button pressed  
 674:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 675:operate.c     ****         while (DATALINK_out(11) == 0)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 37


 676:operate.c     ****         {
 677:operate.c     ****             CyDelay(10);  
 678:operate.c     ****         }
 679:operate.c     **** // DATALINK out command = 10 -> GO button pressed  
 680:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 681:operate.c     ****         while (DATALINK_out(10) == 0)
 682:operate.c     ****         {
 683:operate.c     ****             CyDelay(10);  
 684:operate.c     ****         }
 685:operate.c     **** // DATALINK out command = 4 -> 4 button pressed  
 686:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 687:operate.c     ****         while (DATALINK_out(4) == 0)
 688:operate.c     ****         {
 689:operate.c     ****             CyDelay(10);  
 690:operate.c     ****         }   
 691:operate.c     **** // delay 100mS to wait for BeoMaster        
 692:operate.c     ****         CyDelay(100);  
 693:operate.c     **** // DATALINK out command = 6 -> 6 button pressed  
 694:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 695:operate.c     ****         while (DATALINK_out(6) == 0)
 696:operate.c     ****         {
 697:operate.c     ****             CyDelay(10);  
 698:operate.c     ****         }  
 699:operate.c     **** */
 700:operate.c     **** // read back current PSU state    
 701:operate.c     ****         current_PSUstate = psu_config(2, next_PSUstate);
 1334              		.loc 1 701 0
 1335 07e2 6B78     		ldrb	r3, [r5, #1]
 1336 07e4 2878     		ldrb	r0, [r5]
 1337 07e6 AA78     		ldrb	r2, [r5, #2]
 1338 07e8 1B02     		lsls	r3, r3, #8
 1339 07ea 0343     		orrs	r3, r0
 1340 07ec 1204     		lsls	r2, r2, #16
 1341 07ee 1900     		movs	r1, r3
 1342 07f0 1300     		movs	r3, r2
 1343 07f2 EA78     		ldrb	r2, [r5, #3]
 1344 07f4 0B43     		orrs	r3, r1
 1345 07f6 1206     		lsls	r2, r2, #24
 1346 07f8 1A43     		orrs	r2, r3
 1347 07fa 0221     		movs	r1, #2
 1348 07fc 2B79     		ldrb	r3, [r5, #4]
 1349 07fe 6846     		mov	r0, sp
 1350 0800 FFF7FEFF 		bl	psu_config
 1351              	.LVL123:
 1352 0804 0522     		movs	r2, #5
 1353 0806 6946     		mov	r1, sp
 1354 0808 2000     		movs	r0, r4
 1355 080a FFF7FEFF 		bl	memcpy
 1356              	.LVL124:
 702:operate.c     **** 
 703:operate.c     ****         if (current_PSUstate.RPI_PWR == 1)
 1357              		.loc 1 703 0
 1358 080e 2378     		ldrb	r3, [r4]
 1359 0810 1E25     		movs	r5, #30
 1360 0812 012B     		cmp	r3, #1
 1361 0814 11D0     		beq	.L107
 1362              	.LVL125:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 38


 1363              	.L106:
 704:operate.c     ****             {
 705:operate.c     ****                 display_counter = 30;
 706:operate.c     ****                 while (current_PSUstate.RPi_GPIO_state == 0)
 707:operate.c     ****                 {
 708:operate.c     **** // WAIT untill RPI powers up
 709:operate.c     **** // read back current PSU state    
 710:operate.c     ****                 current_PSUstate = psu_config(2, next_PSUstate);
 711:operate.c     **** // SENT INFORMAITON TO DISPLAY ABOUT RPI BOOTING UP
 712:operate.c     **** // new data that needs to be sent over SPI to display module
 713:operate.c     ****                 strcpy((char*)new_display_data_buffer, "Booting up ...          ");
 714:operate.c     ****                 new_display_data_buffer[22] = '0' + (display_counter / 10);
 715:operate.c     ****                 new_display_data_buffer[23] = '0' + (display_counter % 10);
 716:operate.c     ****                 SPIM_display_write(new_display_data_buffer, 0x00, 0x00);          
 717:operate.c     ****                 CyDelay(1000);
 718:operate.c     ****                 display_counter = display_counter - 1;            
 719:operate.c     ****                 }
 720:operate.c     ****             }      
 721:operate.c     **** // sent command over UART command to RPI to start FM/RDS 
 722:operate.c     ****         UART_UartPutString("-RDS+");
 1364              		.loc 1 722 0
 1365 0816 7248     		ldr	r0, .L146+20
 1366 0818 FFF7FEFF 		bl	UART_UartPutString
 1367              	.LVL126:
 723:operate.c     ****         
 724:operate.c     ****         if (BT_Tx_STATE == 1)
 1368              		.loc 1 724 0
 1369 081c 6B4B     		ldr	r3, .L146
 1370 081e 1D78     		ldrb	r5, [r3]
 1371 0820 012D     		cmp	r5, #1
 1372 0822 43D1     		bne	.L109
 725:operate.c     ****         {
 726:operate.c     **** // Enable BlueTooth in Tx state - re-connect to latest device
 727:operate.c     ****             BT_control(1, 2); 
 1373              		.loc 1 727 0
 1374 0824 0221     		movs	r1, #2
 1375 0826 2800     		movs	r0, r5
 1376 0828 FFF7FEFF 		bl	BT_control
 1377              	.LVL127:
 728:operate.c     **** // SENT OVER SPI information about BT Tx LED ON
 729:operate.c     **** // disp_ctrl2 
 730:operate.c     **** // CTRL1.0 - BT Tx status set to 1 indicating Tx mode ON
 731:operate.c     ****             new_disp_ctrl2 = new_disp_ctrl2 | 0x01;
 1378              		.loc 1 731 0
 1379 082c 684A     		ldr	r2, .L146+4
 1380 082e 1378     		ldrb	r3, [r2]
 1381 0830 2B43     		orrs	r3, r5
 1382 0832 1370     		strb	r3, [r2]
 732:operate.c     ****             new_display_data_flag = 1; 
 1383              		.loc 1 732 0
 1384 0834 674B     		ldr	r3, .L146+8
 1385 0836 1D70     		strb	r5, [r3]
 1386 0838 38E0     		b	.L109
 1387              	.L107:
 1388              	.LVL128:
 706:operate.c     ****                 {
 1389              		.loc 1 706 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 39


 1390 083a 6778     		ldrb	r7, [r4, #1]
 1391 083c 002F     		cmp	r7, #0
 1392 083e EAD1     		bne	.L106
 710:operate.c     **** // SENT INFORMAITON TO DISPLAY ABOUT RPI BOOTING UP
 1393              		.loc 1 710 0
 1394 0840 684E     		ldr	r6, .L146+24
 1395 0842 7378     		ldrb	r3, [r6, #1]
 1396 0844 3078     		ldrb	r0, [r6]
 1397 0846 B278     		ldrb	r2, [r6, #2]
 1398 0848 1B02     		lsls	r3, r3, #8
 1399 084a 0343     		orrs	r3, r0
 1400 084c 1204     		lsls	r2, r2, #16
 1401 084e 1900     		movs	r1, r3
 1402 0850 1300     		movs	r3, r2
 1403 0852 0B43     		orrs	r3, r1
 1404 0854 FF21     		movs	r1, #255
 1405 0856 F278     		ldrb	r2, [r6, #3]
 1406 0858 6846     		mov	r0, sp
 1407 085a 1206     		lsls	r2, r2, #24
 1408 085c 1A43     		orrs	r2, r3
 1409 085e 3379     		ldrb	r3, [r6, #4]
 1410 0860 0B40     		ands	r3, r1
 1411 0862 FD39     		subs	r1, r1, #253
 1412 0864 FFF7FEFF 		bl	psu_config
 1413              	.LVL129:
 1414 0868 0522     		movs	r2, #5
 1415 086a 6946     		mov	r1, sp
 1416 086c 2000     		movs	r0, r4
 1417 086e FFF7FEFF 		bl	memcpy
 1418              	.LVL130:
 713:operate.c     ****                 new_display_data_buffer[22] = '0' + (display_counter / 10);
 1419              		.loc 1 713 0
 1420 0872 5D4E     		ldr	r6, .L146+28
 1421 0874 5D49     		ldr	r1, .L146+32
 1422 0876 3000     		movs	r0, r6
 1423 0878 FFF7FEFF 		bl	strcpy
 1424              	.LVL131:
 714:operate.c     ****                 new_display_data_buffer[23] = '0' + (display_counter % 10);
 1425              		.loc 1 714 0
 1426 087c 0A21     		movs	r1, #10
 1427 087e 2800     		movs	r0, r5
 1428 0880 FFF7FEFF 		bl	__aeabi_uidiv
 1429              	.LVL132:
 1430 0884 3030     		adds	r0, r0, #48
 1431 0886 B075     		strb	r0, [r6, #22]
 715:operate.c     ****                 SPIM_display_write(new_display_data_buffer, 0x00, 0x00);          
 1432              		.loc 1 715 0
 1433 0888 0A21     		movs	r1, #10
 1434 088a 2800     		movs	r0, r5
 1435 088c FFF7FEFF 		bl	__aeabi_uidivmod
 1436              	.LVL133:
 1437 0890 3031     		adds	r1, r1, #48
 1438 0892 F175     		strb	r1, [r6, #23]
 716:operate.c     ****                 CyDelay(1000);
 1439              		.loc 1 716 0
 1440 0894 3A00     		movs	r2, r7
 1441 0896 3900     		movs	r1, r7
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 40


 1442 0898 3000     		movs	r0, r6
 1443 089a FFF7FEFF 		bl	SPIM_display_write
 1444              	.LVL134:
 717:operate.c     ****                 display_counter = display_counter - 1;            
 1445              		.loc 1 717 0
 1446 089e FA20     		movs	r0, #250
 718:operate.c     ****                 }
 1447              		.loc 1 718 0
 1448 08a0 013D     		subs	r5, r5, #1
 1449              	.LVL135:
 717:operate.c     ****                 display_counter = display_counter - 1;            
 1450              		.loc 1 717 0
 1451 08a2 8000     		lsls	r0, r0, #2
 1452 08a4 FFF7FEFF 		bl	CyDelay
 1453              	.LVL136:
 718:operate.c     ****                 }
 1454              		.loc 1 718 0
 1455 08a8 EDB2     		uxtb	r5, r5
 1456              	.LVL137:
 1457 08aa C6E7     		b	.L107
 1458              	.LVL138:
 1459              	.L109:
 733:operate.c     **** 
 734:operate.c     ****         } 
 735:operate.c     ****         
 736:operate.c     **** // check if SigmaDSP is up            
 737:operate.c     ****         if (current_PSUstate.SigmaDSP_PWR == 1)
 1460              		.loc 1 737 0
 1461 08ac A378     		ldrb	r3, [r4, #2]
 1462 08ae 012B     		cmp	r3, #1
 1463 08b0 0BD1     		bne	.L112
 1464              	.L111:
 738:operate.c     ****         {
 739:operate.c     **** // if it is check if you can talk to
 740:operate.c     **** // check if SigmaDSP is up - wait untill radback value matches signature
 741:operate.c     ****             while (SPIM_SigmaDSP_read(4) != 0xBE01BE02)
 1465              		.loc 1 741 0
 1466 08b2 0420     		movs	r0, #4
 1467 08b4 FFF7FEFF 		bl	SPIM_SigmaDSP_read
 1468              	.LVL139:
 1469 08b8 484B     		ldr	r3, .L146+16
 1470 08ba 9842     		cmp	r0, r3
 1471 08bc 02D0     		beq	.L139
 742:operate.c     ****             {
 743:operate.c     **** // initiate SigmaDSP data port in SPI mode
 744:operate.c     ****                 SPIM_SigmaDSP_init_SPI();
 1472              		.loc 1 744 0
 1473 08be FFF7FEFF 		bl	SPIM_SigmaDSP_init_SPI
 1474              	.LVL140:
 1475 08c2 F6E7     		b	.L111
 1476              	.L139:
 745:operate.c     ****             }
 746:operate.c     **** //  SigmaDSP in mute mode -> Control = 0x0000
 747:operate.c     ****             SPIM_SigmaDSP_write(0);          
 1477              		.loc 1 747 0
 1478 08c4 0020     		movs	r0, #0
 1479 08c6 FFF7FEFF 		bl	SPIM_SigmaDSP_write
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 41


 1480              	.LVL141:
 1481              	.L112:
 748:operate.c     ****         } 
 749:operate.c     ****         
 750:operate.c     **** // SENT OVER SPI informaiton about RDS/FM display LED ON
 751:operate.c     ****         new_disp_ctrl1 = 0x20;
 1482              		.loc 1 751 0
 1483 08ca 2022     		movs	r2, #32
 1484 08cc 80E6     		b	.L128
 1485              	.LVL142:
 1486              	.L11:
 752:operate.c     **** // CTRL1.1 - Online status set to 0 indicating offline state
 753:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 & 0xFD; 
 754:operate.c     ****         new_display_data_flag = 1;   
 755:operate.c     ****         break;
 756:operate.c     **** 
 757:operate.c     ****     
 758:operate.c     ****     
 759:operate.c     **** // SYSTEM_STATE = 7 - system in BlueTooth Rx mode
 760:operate.c     ****     case (7):
 761:operate.c     **** 
 762:operate.c     **** // turn OFF stnadby LED       
 763:operate.c     ****         LED_Write(0);      
 1487              		.loc 1 763 0
 1488 08ce 0020     		movs	r0, #0
 1489 08d0 FFF7FEFF 		bl	LED_Write
 1490              	.LVL143:
 764:operate.c     ****     
 765:operate.c     ****         if (current_PSUstate.BlueTooth_PWR == 0)
 1491              		.loc 1 765 0
 1492 08d4 E378     		ldrb	r3, [r4, #3]
 1493 08d6 002B     		cmp	r3, #0
 1494 08d8 01D1     		bne	.L114
 766:operate.c     ****         {
 767:operate.c     **** // enable BlueTooth
 768:operate.c     ****             next_PSUstate.BlueTooth_PWR = 1;    
 1495              		.loc 1 768 0
 1496 08da 0133     		adds	r3, r3, #1
 1497 08dc EB70     		strb	r3, [r5, #3]
 1498              	.L114:
 769:operate.c     ****         }
 770:operate.c     ****         
 771:operate.c     ****         if (current_PSUstate.Display_PWR == 0)
 1499              		.loc 1 771 0
 1500 08de 2379     		ldrb	r3, [r4, #4]
 1501 08e0 002B     		cmp	r3, #0
 1502 08e2 01D1     		bne	.L115
 772:operate.c     ****         {
 773:operate.c     **** // enable Display
 774:operate.c     ****             next_PSUstate.Display_PWR = 1;        
 1503              		.loc 1 774 0
 1504 08e4 0133     		adds	r3, r3, #1
 1505 08e6 2B71     		strb	r3, [r5, #4]
 1506              	.L115:
 775:operate.c     ****         }
 776:operate.c     ****         
 777:operate.c     ****         if (current_PSUstate.SigmaDSP_PWR == 0)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 42


 1507              		.loc 1 777 0
 1508 08e8 A378     		ldrb	r3, [r4, #2]
 1509 08ea 002B     		cmp	r3, #0
 1510 08ec 01D1     		bne	.L116
 778:operate.c     ****         {
 779:operate.c     **** // Enable SigmaDSP            
 780:operate.c     ****             next_PSUstate.SigmaDSP_PWR = 1;            
 1511              		.loc 1 780 0
 1512 08ee 0133     		adds	r3, r3, #1
 1513 08f0 AB70     		strb	r3, [r5, #2]
 1514              	.L116:
 781:operate.c     ****         }
 782:operate.c     **** 
 783:operate.c     **** // enable all necessary blocks        
 784:operate.c     ****         psu_config(1, next_PSUstate);        
 1515              		.loc 1 784 0
 1516 08f2 6B78     		ldrb	r3, [r5, #1]
 1517 08f4 2878     		ldrb	r0, [r5]
 1518 08f6 AA78     		ldrb	r2, [r5, #2]
 1519 08f8 1B02     		lsls	r3, r3, #8
 1520 08fa 0343     		orrs	r3, r0
 1521 08fc 1204     		lsls	r2, r2, #16
 1522 08fe 1900     		movs	r1, r3
 1523 0900 1300     		movs	r3, r2
 1524 0902 EA78     		ldrb	r2, [r5, #3]
 1525 0904 0B43     		orrs	r3, r1
 1526 0906 1206     		lsls	r2, r2, #24
 1527 0908 1A43     		orrs	r2, r3
 1528 090a 0121     		movs	r1, #1
 1529 090c 2B79     		ldrb	r3, [r5, #4]
 1530 090e 6846     		mov	r0, sp
 1531 0910 FFF7FEFF 		bl	psu_config
 1532              	.LVL144:
 785:operate.c     **** /*
 786:operate.c     **** // DATALINK out command = 11 -> LIST button pressed  
 787:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 788:operate.c     ****         while (DATALINK_out(11) == 0)
 789:operate.c     ****         {
 790:operate.c     ****             CyDelay(10);  
 791:operate.c     ****         }
 792:operate.c     **** // DATALINK out command = 10 -> GO button pressed  
 793:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 794:operate.c     ****         while (DATALINK_out(10) == 0)
 795:operate.c     ****         {
 796:operate.c     ****             CyDelay(10);  
 797:operate.c     ****         }
 798:operate.c     **** // DATALINK out command = 4 -> 4 button pressed  
 799:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 800:operate.c     ****         while (DATALINK_out(4) == 0)
 801:operate.c     ****         {
 802:operate.c     ****             CyDelay(10);  
 803:operate.c     ****         } 
 804:operate.c     **** // delay 100mS to wait for BeoMaster        
 805:operate.c     ****         CyDelay(100);         
 806:operate.c     **** // DATALINK out command = 7 -> 7 button pressed  
 807:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 808:operate.c     ****         while (DATALINK_out(7) == 0)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 43


 809:operate.c     ****         {
 810:operate.c     ****             CyDelay(10);  
 811:operate.c     ****         }  
 812:operate.c     **** */       
 813:operate.c     **** // clear BT_TX variable indicating that bleutooth is in use as Rx
 814:operate.c     ****         BT_Tx_STATE = 0; 
 1533              		.loc 1 814 0
 1534 0914 0022     		movs	r2, #0
 1535 0916 2D4B     		ldr	r3, .L146
 1536 0918 1A70     		strb	r2, [r3]
 1537              	.L117:
 815:operate.c     ****         
 816:operate.c     **** // check if SigmaDSP is up - wait untill radback value matches signature
 817:operate.c     ****         while (SPIM_SigmaDSP_read(4) != 0xBE01BE02)
 1538              		.loc 1 817 0
 1539 091a 0420     		movs	r0, #4
 1540 091c FFF7FEFF 		bl	SPIM_SigmaDSP_read
 1541              	.LVL145:
 1542 0920 2E4B     		ldr	r3, .L146+16
 1543 0922 9842     		cmp	r0, r3
 1544 0924 02D0     		beq	.L140
 818:operate.c     ****         {
 819:operate.c     **** // initiate SigmaDSP data port in SPI mode
 820:operate.c     ****             SPIM_SigmaDSP_init_SPI();
 1545              		.loc 1 820 0
 1546 0926 FFF7FEFF 		bl	SPIM_SigmaDSP_init_SPI
 1547              	.LVL146:
 1548 092a F6E7     		b	.L117
 1549              	.L140:
 821:operate.c     ****         }
 822:operate.c     ****         
 823:operate.c     **** //  SigmaDSP in BT Rx mode -> Control = 0x0004
 824:operate.c     ****         SPIM_SigmaDSP_write(4);
 1550              		.loc 1 824 0
 1551 092c 0420     		movs	r0, #4
 1552 092e FFF7FEFF 		bl	SPIM_SigmaDSP_write
 1553              	.LVL147:
 825:operate.c     **** 
 826:operate.c     **** // disp_ctrl2 
 827:operate.c     **** // CTRL1.0 and CTRP1.1 - BT Tx status and ONLINE status set to 0 indicating Rx mode ON
 828:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 & 0xFC;
 1554              		.loc 1 828 0
 1555 0932 0321     		movs	r1, #3
 1556 0934 264A     		ldr	r2, .L146+4
 1557 0936 1378     		ldrb	r3, [r2]
 1558 0938 8B43     		bics	r3, r1
 1559 093a 1370     		strb	r3, [r2]
 829:operate.c     **** // SENT OVER SPI informaiton about BlueTooth Rx LED ON
 830:operate.c     ****         new_disp_ctrl1 = 0x40;
 1560              		.loc 1 830 0
 1561 093c 4022     		movs	r2, #64
 1562 093e 264B     		ldr	r3, .L146+12
 831:operate.c     ****         new_display_data_flag = 1;   
 832:operate.c     **** // Enable BlueTooth in Rx mode - re-connect to last device        
 833:operate.c     ****         BT_control(2, 2); 
 1563              		.loc 1 833 0
 1564 0940 0139     		subs	r1, r1, #1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 44


 830:operate.c     ****         new_display_data_flag = 1;   
 1565              		.loc 1 830 0
 1566 0942 1A70     		strb	r2, [r3]
 831:operate.c     ****         new_display_data_flag = 1;   
 1567              		.loc 1 831 0
 1568 0944 234B     		ldr	r3, .L146+8
 1569 0946 3F3A     		subs	r2, r2, #63
 1570              		.loc 1 833 0
 1571 0948 0800     		movs	r0, r1
 831:operate.c     ****         new_display_data_flag = 1;   
 1572              		.loc 1 831 0
 1573 094a 1A70     		strb	r2, [r3]
 1574              		.loc 1 833 0
 1575 094c FFF7FEFF 		bl	BT_control
 1576              	.LVL148:
 834:operate.c     ****         break;
 1577              		.loc 1 834 0
 1578 0950 38E0     		b	.L2
 1579              	.L12:
 835:operate.c     ****     
 836:operate.c     ****     
 837:operate.c     ****     
 838:operate.c     **** // SYSTEM_STATE = 8 - system in BlueTooth Tx mode
 839:operate.c     ****    case (8):
 840:operate.c     **** 
 841:operate.c     **** // turn OFF stnadby LED       
 842:operate.c     ****         LED_Write(0);      
 1580              		.loc 1 842 0
 1581 0952 0020     		movs	r0, #0
 1582 0954 FFF7FEFF 		bl	LED_Write
 1583              	.LVL149:
 843:operate.c     **** 
 844:operate.c     ****         if (current_PSUstate.BlueTooth_PWR == 0)
 1584              		.loc 1 844 0
 1585 0958 E378     		ldrb	r3, [r4, #3]
 1586 095a 002B     		cmp	r3, #0
 1587 095c 01D1     		bne	.L119
 845:operate.c     ****         {
 846:operate.c     **** // enable BlueTooth
 847:operate.c     ****             next_PSUstate.BlueTooth_PWR = 1;    
 1588              		.loc 1 847 0
 1589 095e 0133     		adds	r3, r3, #1
 1590 0960 EB70     		strb	r3, [r5, #3]
 1591              	.L119:
 848:operate.c     ****         }
 849:operate.c     ****         
 850:operate.c     ****         if (current_PSUstate.Display_PWR == 0)
 1592              		.loc 1 850 0
 1593 0962 2379     		ldrb	r3, [r4, #4]
 1594 0964 002B     		cmp	r3, #0
 1595 0966 01D1     		bne	.L120
 851:operate.c     ****         {
 852:operate.c     **** // enable Display
 853:operate.c     ****             next_PSUstate.Display_PWR = 1;        
 1596              		.loc 1 853 0
 1597 0968 0133     		adds	r3, r3, #1
 1598 096a 2B71     		strb	r3, [r5, #4]
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 45


 1599              	.L120:
 854:operate.c     ****         }
 855:operate.c     ****         
 856:operate.c     ****         if (current_PSUstate.SigmaDSP_PWR == 0)
 1600              		.loc 1 856 0
 1601 096c A378     		ldrb	r3, [r4, #2]
 1602 096e 002B     		cmp	r3, #0
 1603 0970 01D1     		bne	.L121
 857:operate.c     ****         {
 858:operate.c     **** // Enable SigmaDSP            
 859:operate.c     ****             next_PSUstate.SigmaDSP_PWR = 1;            
 1604              		.loc 1 859 0
 1605 0972 0133     		adds	r3, r3, #1
 1606 0974 AB70     		strb	r3, [r5, #2]
 1607              	.L121:
 860:operate.c     ****         }
 861:operate.c     **** 
 862:operate.c     **** // enable all necessary blocks        
 863:operate.c     ****         psu_config(1, next_PSUstate);        
 1608              		.loc 1 863 0
 1609 0976 6B78     		ldrb	r3, [r5, #1]
 1610 0978 2878     		ldrb	r0, [r5]
 1611 097a AA78     		ldrb	r2, [r5, #2]
 1612 097c 1B02     		lsls	r3, r3, #8
 1613 097e 0343     		orrs	r3, r0
 1614 0980 1204     		lsls	r2, r2, #16
 1615 0982 1900     		movs	r1, r3
 1616 0984 1300     		movs	r3, r2
 1617 0986 EA78     		ldrb	r2, [r5, #3]
 1618 0988 0B43     		orrs	r3, r1
 1619 098a 1206     		lsls	r2, r2, #24
 1620 098c 1A43     		orrs	r2, r3
 1621 098e 0121     		movs	r1, #1
 1622 0990 2B79     		ldrb	r3, [r5, #4]
 1623 0992 6846     		mov	r0, sp
 1624 0994 FFF7FEFF 		bl	psu_config
 1625              	.LVL150:
 864:operate.c     **** /*
 865:operate.c     **** // DATALINK out command = 11 -> LIST button pressed  
 866:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 867:operate.c     ****         while (DATALINK_out(11) == 0)
 868:operate.c     ****         {
 869:operate.c     ****             CyDelay(10);  
 870:operate.c     ****         }
 871:operate.c     **** // DATALINK out command = 10 -> GO button pressed  
 872:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 873:operate.c     ****         while (DATALINK_out(10) == 0)
 874:operate.c     ****         {
 875:operate.c     ****             CyDelay(10);  
 876:operate.c     ****         }
 877:operate.c     **** // DATALINK out command = 4 -> 4 button pressed  
 878:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 879:operate.c     ****         while (DATALINK_out(4) == 0)
 880:operate.c     ****         {
 881:operate.c     ****             CyDelay(10);  
 882:operate.c     ****         } 
 883:operate.c     **** // delay 100mS to wait for BeoMaster        
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 46


 884:operate.c     ****         CyDelay(100);         
 885:operate.c     **** // DATALINK out command = 8 -> 8 button pressed  
 886:operate.c     **** // if there is a collision on DATALINK bus, wait 10mS and try again
 887:operate.c     ****         while (DATALINK_out(8) == 0)
 888:operate.c     ****         {
 889:operate.c     ****             CyDelay(10);  
 890:operate.c     ****         } 
 891:operate.c     **** */        
 892:operate.c     **** // set BT_TX variable to 1 indicating that bleutooth is in ues 
 893:operate.c     ****         BT_Tx_STATE = 1;  
 1626              		.loc 1 893 0
 1627 0998 0120     		movs	r0, #1
 1628 099a 0C4B     		ldr	r3, .L146
 894:operate.c     **** // Enable BlueTooth in Tx state - re-connect to latest device
 895:operate.c     ****         BT_control(1, 2);  
 1629              		.loc 1 895 0
 1630 099c 0221     		movs	r1, #2
 893:operate.c     **** // Enable BlueTooth in Tx state - re-connect to latest device
 1631              		.loc 1 893 0
 1632 099e 1870     		strb	r0, [r3]
 1633              		.loc 1 895 0
 1634 09a0 FFF7FEFF 		bl	BT_control
 1635              	.LVL151:
 1636              	.L122:
 896:operate.c     **** 
 897:operate.c     **** // check if SigmaDSP is up - wait untill radback value matches signature
 898:operate.c     ****         while (SPIM_SigmaDSP_read(4) != 0xBE01BE02)
 1637              		.loc 1 898 0
 1638 09a4 0420     		movs	r0, #4
 1639 09a6 FFF7FEFF 		bl	SPIM_SigmaDSP_read
 1640              	.LVL152:
 1641 09aa 0C4B     		ldr	r3, .L146+16
 1642 09ac 9842     		cmp	r0, r3
 1643 09ae 02D0     		beq	.L141
 899:operate.c     ****         {
 900:operate.c     **** // initiate SigmaDSP data port in SPI mode
 901:operate.c     ****             SPIM_SigmaDSP_init_SPI();
 1644              		.loc 1 901 0
 1645 09b0 FFF7FEFF 		bl	SPIM_SigmaDSP_init_SPI
 1646              	.LVL153:
 1647 09b4 F6E7     		b	.L122
 1648              	.L141:
 902:operate.c     ****         }
 903:operate.c     ****             
 904:operate.c     **** // SENT OVER SPI informaiton about BlueTooth Tx LED ON
 905:operate.c     **** // disp_ctrl2 
 906:operate.c     **** // CTRL1.0 - BT Tx status set to 1 indicating Tx mode ON
 907:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 | 0x01;
 1649              		.loc 1 907 0
 1650 09b6 0122     		movs	r2, #1
 1651 09b8 0549     		ldr	r1, .L146+4
 1652 09ba 0B78     		ldrb	r3, [r1]
 1653 09bc 1343     		orrs	r3, r2
 1654 09be 0B70     		strb	r3, [r1]
 1655              	.LVL154:
 1656              	.L126:
 908:operate.c     ****         new_display_data_flag = 1; 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 47


 1657              		.loc 1 908 0
 1658 09c0 044B     		ldr	r3, .L146+8
 1659 09c2 1A70     		strb	r2, [r3]
 1660              	.L2:
 909:operate.c     ****         break;
 910:operate.c     ****     }
 911:operate.c     ****     
 912:operate.c     ****     return SYSTEM_STATE;
 1661              		.loc 1 912 0
 1662 09c4 0A4B     		ldr	r3, .L146+36
 913:operate.c     **** }
 1663              		.loc 1 913 0
 1664              		@ sp needed
 912:operate.c     **** }
 1665              		.loc 1 912 0
 1666 09c6 1878     		ldrb	r0, [r3]
 1667              		.loc 1 913 0
 1668 09c8 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 1669              	.L147:
 1670 09ca C046     		.align	2
 1671              	.L146:
 1672 09cc 00000000 		.word	BT_Tx_STATE
 1673 09d0 00000000 		.word	new_disp_ctrl2
 1674 09d4 00000000 		.word	new_display_data_flag
 1675 09d8 00000000 		.word	new_disp_ctrl1
 1676 09dc 02BE01BE 		.word	-1107182078
 1677 09e0 55000000 		.word	.LC20
 1678 09e4 00000000 		.word	next_PSUstate
 1679 09e8 00000000 		.word	new_display_data_buffer
 1680 09ec 2D000000 		.word	.LC11
 1681 09f0 00000000 		.word	SYSTEM_STATE
 1682              		.cfi_endproc
 1683              	.LFE32:
 1684              		.size	BeoM_PSU_state, .-BeoM_PSU_state
 1685              		.section	.text.display_update,"ax",%progbits
 1686              		.align	1
 1687              		.global	display_update
 1688              		.code	16
 1689              		.thumb_func
 1690              		.type	display_update, %function
 1691              	display_update:
 1692              	.LFB33:
 914:operate.c     **** 
 915:operate.c     **** 
 916:operate.c     **** 
 917:operate.c     **** 
 918:operate.c     **** /*******************************************************************************
 919:operate.c     **** * Function Name: display_update()
 920:operate.c     **** ********************************************************************************
 921:operate.c     **** * Summary:
 922:operate.c     **** *  Function monitors SYSTEM STATE variable and listen to incoming UART messages
 923:operate.c     **** *  from RPi. When they arrive, push them to the display module over SPI. 
 924:operate.c     **** *  SYSTEM_STATE = 0 - power down    -   NO COMMANDS from RPi
 925:operate.c     **** *  SYSTEM_STATE = 1 - Player        -   COMMANDS
 926:operate.c     **** *  SYSTEM_STATE = 2 - iRadio        -   COMMANDS
 927:operate.c     **** *  SYSTEM_STATE = 3 - DAB Radio     -   COMMANDS
 928:operate.c     **** *  SYSTEM_STATE = 4 - Aux IN        -   NO COMMANDS from RPi -> static message
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 48


 929:operate.c     **** *  SYSTEM_STATE = 5 - Clock         -   NO COMMANDS from RPi -> static message
 930:operate.c     **** *  SYSTEM_STATE = 6 - RDS/FM display-   COMMANDS
 931:operate.c     **** *  SYSTEM_STATE = 7 - BlueTooth Rx  -   NO COMMANDS from RPi -> BT sents notes
 932:operate.c     **** *  SYSTEM_STATE = 8 - BlueTooth Tx  -   NO COMMANDS from RPi -> BT sents notes
 933:operate.c     **** *
 934:operate.c     **** *  DISPLAY_STATE = 1 - Data         -   sent to display commands from RPi, BT or static
 935:operate.c     **** *  DISPLAY_STATE = 2 - signal level -   sent signal level info from SigmaDSP
 936:operate.c     **** *  DISPLAY_STATE = 3 - spectrm analyzer -  sent spectrum analyzer info from SigmaDSP
 937:operate.c     **** *  DISPLAY_STATE = 4 - Clock 1      -   sent note to display Clock 1
 938:operate.c     **** *  DISPLAY_STATE = 5 - Clock 2      -   sent note to display Clock 2
 939:operate.c     **** *  DISPLAY_STATE = 6 - blank      -   No data on display (sent spaces)
 940:operate.c     **** *   
 941:operate.c     **** * Parameters:
 942:operate.c     **** *  Function operates on global variable: 
 943:operate.c     **** *  SYSTEM_STATE and DISPLAY_STATE
 944:operate.c     **** *
 945:operate.c     **** * Return:
 946:operate.c     **** *  Funciton returns current ????
 947:operate.c     **** *
 948:operate.c     **** *******************************************************************************/  
 949:operate.c     **** uint8 display_update(void)  
 950:operate.c     **** {
 1693              		.loc 1 950 0
 1694              		.cfi_startproc
 1695              		@ args = 0, pretend = 0, frame = 0
 1696              		@ frame_needed = 0, uses_anonymous_args = 0
 1697 0000 10B5     		push	{r4, lr}
 1698              		.cfi_def_cfa_offset 8
 1699              		.cfi_offset 4, -8
 1700              		.cfi_offset 14, -4
 951:operate.c     ****  // variable used to store read back character over UART
 952:operate.c     ****     uint32 ch;         
 953:operate.c     **** 
 954:operate.c     **** // System reacts listents to UART commands and pushes them to display when 
 955:operate.c     **** // new one arrives. This happens only in DISPLAY_STATE == 1
 956:operate.c     ****     if (DISPLAY_STATE == 1)
 1701              		.loc 1 956 0
 1702 0002 774B     		ldr	r3, .L274
 1703 0004 1C78     		ldrb	r4, [r3]
 1704 0006 012C     		cmp	r4, #1
 1705 0008 00D0     		beq	.LCB1554
 1706 000a 9CE0     		b	.L149	@long jump
 1707              	.LCB1554:
 957:operate.c     ****     {
 958:operate.c     **** // disp_ctrl2 
 959:operate.c     **** // CTRL1.0 and CTRL1.1 - clear all LED status except BT Tx and ONLINE
 960:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 & 0x03;
 1708              		.loc 1 960 0
 1709 000c 0323     		movs	r3, #3
 1710 000e 754C     		ldr	r4, .L274+4
 1711 0010 2278     		ldrb	r2, [r4]
 1712 0012 1340     		ands	r3, r2
 1713 0014 2370     		strb	r3, [r4]
 961:operate.c     **** // operate function based on current state of the system    
 962:operate.c     ****         switch (SYSTEM_STATE)
 1714              		.loc 1 962 0
 1715 0016 744B     		ldr	r3, .L274+8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 49


 1716 0018 1878     		ldrb	r0, [r3]
 1717 001a 0138     		subs	r0, r0, #1
 1718 001c 0728     		cmp	r0, #7
 1719 001e 00D9     		bls	.LCB1564
 1720 0020 DBE0     		b	.L225	@long jump
 1721              	.LCB1564:
 1722 0022 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 1723              	.L152:
 1724 0026 04       		.byte	(.L151-.L152)/2
 1725 0027 1D       		.byte	(.L153-.L152)/2
 1726 0028 4B       		.byte	(.L154-.L152)/2
 1727 0029 5D       		.byte	(.L155-.L152)/2
 1728 002a 6B       		.byte	(.L156-.L152)/2
 1729 002b 6D       		.byte	(.L157-.L152)/2
 1730 002c 83       		.byte	(.L158-.L152)/2
 1731 002d 83       		.byte	(.L158-.L152)/2
 1732              		.p2align 1
 1733              	.L151:
 963:operate.c     ****         {
 964:operate.c     **** // SYSTEM_STATE = 0 - system in power down mode
 965:operate.c     **** // no UART messages from RPi  
 966:operate.c     ****         case (0):
 967:operate.c     ****             break;
 968:operate.c     **** 
 969:operate.c     **** // SYSTEM_STATE = 1 - system in Player mode
 970:operate.c     ****         case (1):
 971:operate.c     ****             ch = UART_UartGetChar();
 1734              		.loc 1 971 0
 1735 002e FFF7FEFF 		bl	UART_UartGetChar
 1736              	.LVL155:
 972:operate.c     ****             if (0 != ch)
 1737              		.loc 1 972 0
 1738 0032 0028     		cmp	r0, #0
 1739 0034 00D1     		bne	.LCB1575
 1740 0036 D0E0     		b	.L225	@long jump
 1741              	.LCB1575:
 973:operate.c     ****             {
 974:operate.c     ****                 if (counter < 24)
 1742              		.loc 1 974 0
 1743 0038 6C4B     		ldr	r3, .L274+12
 1744 003a 1A78     		ldrb	r2, [r3]
 1745 003c 172A     		cmp	r2, #23
 1746 003e 03D8     		bhi	.L161
 975:operate.c     ****                 {
 976:operate.c     ****                     new_display_data_buffer[counter] = (uint8)ch;
 1747              		.loc 1 976 0
 1748 0040 6B49     		ldr	r1, .L274+16
 1749 0042 8854     		strb	r0, [r1, r2]
 977:operate.c     ****                     counter = counter + 1;
 1750              		.loc 1 977 0
 1751 0044 0132     		adds	r2, r2, #1
 1752 0046 1A70     		strb	r2, [r3]
 1753              	.L161:
 978:operate.c     ****                 }
 979:operate.c     ****                 if ((';' == ch) && (counter == 24))
 1754              		.loc 1 979 0
 1755 0048 3B28     		cmp	r0, #59
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 50


 1756 004a 67D0     		beq	.L266
 980:operate.c     ****                 {
 981:operate.c     ****                     counter = counter + 1;
 982:operate.c     ****                 }
 983:operate.c     ****                 if (('P' == ch) && (counter == 25))
 1757              		.loc 1 983 0
 1758 004c 5028     		cmp	r0, #80
 1759 004e 1AD1     		bne	.L164
 1760              	.L241:
 1761              		.loc 1 983 0 is_stmt 0 discriminator 1
 1762 0050 1B78     		ldrb	r3, [r3]
 1763 0052 192B     		cmp	r3, #25
 1764 0054 00D0     		beq	.LCB1594
 1765 0056 C0E0     		b	.L225	@long jump
 1766              	.LCB1594:
 984:operate.c     ****                 {
 985:operate.c     ****                     counter = counter + 1;
 1767              		.loc 1 985 0 is_stmt 1
 1768 0058 1A22     		movs	r2, #26
 1769              	.L255:
 1770 005a 644B     		ldr	r3, .L274+12
 1771              	.LVL156:
 1772              	.L254:
 1773 005c 1A70     		strb	r2, [r3]
 1774 005e BCE0     		b	.L225
 1775              	.L153:
 986:operate.c     ****                 }
 987:operate.c     ****                 if (('\r' == ch) && (counter == 26))
 988:operate.c     ****                 {
 989:operate.c     ****                     counter = counter + 1;
 990:operate.c     ****                 }
 991:operate.c     ****                 if (('\n' == ch) && (counter == 27))
 992:operate.c     ****                 {
 993:operate.c     ****                     counter = 0;
 994:operate.c     ****                     new_display_data_flag = 1;
 995:operate.c     ****                 }
 996:operate.c     ****             }   
 997:operate.c     ****         break;
 998:operate.c     ****         
 999:operate.c     ****     
1000:operate.c     **** // SYSTEM_STATE = 2 - system in iRadio mode    
1001:operate.c     **** // System reacts listents to UART commands and pushes them to display when 
1002:operate.c     **** // new one arrives. This happens only in DISPLAY_STATE == ????
1003:operate.c     ****         case (2):
1004:operate.c     ****             ch = UART_UartGetChar();
 1776              		.loc 1 1004 0
 1777 0060 FFF7FEFF 		bl	UART_UartGetChar
 1778              	.LVL157:
1005:operate.c     ****             if (0 != ch)
 1779              		.loc 1 1005 0
 1780 0064 0028     		cmp	r0, #0
 1781 0066 00D1     		bne	.LCB1612
 1782 0068 B7E0     		b	.L225	@long jump
 1783              	.LCB1612:
1006:operate.c     ****             {
1007:operate.c     ****                 if (counter < 24)
 1784              		.loc 1 1007 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 51


 1785 006a 604B     		ldr	r3, .L274+12
 1786 006c 1A78     		ldrb	r2, [r3]
 1787 006e 172A     		cmp	r2, #23
 1788 0070 03D8     		bhi	.L167
1008:operate.c     ****                 {
1009:operate.c     ****                     new_display_data_buffer[counter] = (uint8)ch;
 1789              		.loc 1 1009 0
 1790 0072 5F49     		ldr	r1, .L274+16
 1791 0074 8854     		strb	r0, [r1, r2]
1010:operate.c     ****                     counter = counter + 1;
 1792              		.loc 1 1010 0
 1793 0076 0132     		adds	r2, r2, #1
 1794 0078 1A70     		strb	r2, [r3]
 1795              	.L167:
1011:operate.c     ****                 }
1012:operate.c     ****                 if ((';' == ch) && (counter == 24))
 1796              		.loc 1 1012 0
 1797 007a 3B28     		cmp	r0, #59
 1798 007c 4ED0     		beq	.L266
1013:operate.c     ****                 {
1014:operate.c     ****                     counter = counter + 1;
1015:operate.c     ****                 }
1016:operate.c     ****                 if ( ('O' == ch) && (counter == 25) )
 1799              		.loc 1 1016 0
 1800 007e 4F28     		cmp	r0, #79
 1801 0080 0AD0     		beq	.L272
1017:operate.c     ****                 {
1018:operate.c     **** // disp_ctrl2 
1019:operate.c     **** // CTRL1.1 - Online status set to 1 indicating online state
1020:operate.c     ****                     new_disp_ctrl2 = new_disp_ctrl2 | 0x02;
1021:operate.c     ****                     counter = counter + 1;
1022:operate.c     ****                 }
1023:operate.c     ****                 if ( ('F' == ch) && (counter == 25) )
 1802              		.loc 1 1023 0
 1803 0082 4628     		cmp	r0, #70
 1804 0084 10D0     		beq	.L273
 1805              	.L164:
 987:operate.c     ****                 {
 1806              		.loc 1 987 0
 1807 0086 0D28     		cmp	r0, #13
 1808 0088 00D0     		beq	.LCB1632
 1809 008a 9DE0     		b	.L186	@long jump
 1810              	.LCB1632:
 987:operate.c     ****                 {
 1811              		.loc 1 987 0 is_stmt 0 discriminator 1
 1812 008c 1B78     		ldrb	r3, [r3]
 989:operate.c     ****                 }
 1813              		.loc 1 989 0 is_stmt 1 discriminator 1
 1814 008e 1B22     		movs	r2, #27
 987:operate.c     ****                 {
 1815              		.loc 1 987 0 discriminator 1
 1816 0090 1A2B     		cmp	r3, #26
 1817 0092 00D0     		beq	.LCB1636
 1818 0094 A1E0     		b	.L225	@long jump
 1819              	.LCB1636:
 1820 0096 E0E7     		b	.L255
 1821              	.L272:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 52


1016:operate.c     ****                 {
 1822              		.loc 1 1016 0 discriminator 1
 1823 0098 1A78     		ldrb	r2, [r3]
 1824 009a 192A     		cmp	r2, #25
 1825 009c 00D0     		beq	.LCB1644
 1826 009e 9CE0     		b	.L225	@long jump
 1827              	.LCB1644:
1020:operate.c     ****                     counter = counter + 1;
 1828              		.loc 1 1020 0
 1829 00a0 0221     		movs	r1, #2
 1830 00a2 2278     		ldrb	r2, [r4]
 1831 00a4 0A43     		orrs	r2, r1
 1832 00a6 06E0     		b	.L261
 1833              	.L273:
 1834              		.loc 1 1023 0 discriminator 1
 1835 00a8 1A78     		ldrb	r2, [r3]
 1836 00aa 192A     		cmp	r2, #25
 1837 00ac 00D0     		beq	.LCB1654
 1838 00ae 94E0     		b	.L225	@long jump
 1839              	.LCB1654:
1024:operate.c     ****                 {
1025:operate.c     **** // disp_ctrl2 
1026:operate.c     **** // CTRL1.1 - Online status set to 0 indicating offline state
1027:operate.c     ****                     new_disp_ctrl2 = new_disp_ctrl2 & 0xFD;
 1840              		.loc 1 1027 0
 1841 00b0 0221     		movs	r1, #2
 1842 00b2 2278     		ldrb	r2, [r4]
 1843 00b4 8A43     		bics	r2, r1
 1844              	.L261:
 1845 00b6 2270     		strb	r2, [r4]
1028:operate.c     ****                     counter = counter + 1;
 1846              		.loc 1 1028 0
 1847 00b8 1A22     		movs	r2, #26
 1848 00ba CFE7     		b	.L254
 1849              	.LVL158:
 1850              	.L154:
1029:operate.c     ****                 }
1030:operate.c     ****                 if (('\r' == ch) && (counter == 26))
1031:operate.c     ****                 {
1032:operate.c     ****                     counter = counter + 1;
1033:operate.c     ****                 }
1034:operate.c     ****                 if (('\n' == ch) && (counter == 27))
1035:operate.c     ****                 {
1036:operate.c     ****                     counter = 0;
1037:operate.c     ****                     new_display_data_flag = 1;
1038:operate.c     ****                 }
1039:operate.c     ****             }  
1040:operate.c     ****         break;
1041:operate.c     ****         
1042:operate.c     ****             
1043:operate.c     **** // SYSTEM_STATE = 3 - system in DAB Radio mode
1044:operate.c     **** // System reacts listents to UART commands and pushes them to display when 
1045:operate.c     **** // new one arrives. This happens only in DISPLAY_STATE == ????
1046:operate.c     ****         case (3):
1047:operate.c     ****             ch = UART_UartGetChar();
 1851              		.loc 1 1047 0
 1852 00bc FFF7FEFF 		bl	UART_UartGetChar
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 53


 1853              	.LVL159:
1048:operate.c     ****             if (0 != ch)
 1854              		.loc 1 1048 0
 1855 00c0 0028     		cmp	r0, #0
 1856 00c2 00D1     		bne	.LCB1671
 1857 00c4 89E0     		b	.L225	@long jump
 1858              	.LCB1671:
1049:operate.c     ****             {
1050:operate.c     ****                 if (counter < 24)
 1859              		.loc 1 1050 0
 1860 00c6 494B     		ldr	r3, .L274+12
 1861 00c8 1A78     		ldrb	r2, [r3]
 1862 00ca 172A     		cmp	r2, #23
 1863 00cc 03D8     		bhi	.L175
1051:operate.c     ****                 {
1052:operate.c     ****                     new_display_data_buffer[counter] = (uint8)ch;
 1864              		.loc 1 1052 0
 1865 00ce 4849     		ldr	r1, .L274+16
 1866 00d0 8854     		strb	r0, [r1, r2]
1053:operate.c     ****                     counter = counter + 1;
 1867              		.loc 1 1053 0
 1868 00d2 0132     		adds	r2, r2, #1
 1869 00d4 1A70     		strb	r2, [r3]
 1870              	.L175:
1054:operate.c     ****                 }
1055:operate.c     ****                 if ((';' == ch) && (counter == 24))
 1871              		.loc 1 1055 0
 1872 00d6 3B28     		cmp	r0, #59
 1873 00d8 20D0     		beq	.L266
1056:operate.c     ****                 {
1057:operate.c     ****                     counter = counter + 1;
1058:operate.c     ****                 }
1059:operate.c     ****                 if (('D' == ch) && (counter == 25))
 1874              		.loc 1 1059 0
 1875 00da 4428     		cmp	r0, #68
 1876 00dc D3D1     		bne	.L164
 1877 00de B7E7     		b	.L241
 1878              	.LVL160:
 1879              	.L155:
1060:operate.c     ****                 {
1061:operate.c     ****                     counter = counter + 1;
1062:operate.c     ****                 }
1063:operate.c     ****                 if (('\r' == ch) && (counter == 26))
1064:operate.c     ****                 {
1065:operate.c     ****                     counter = counter + 1;
1066:operate.c     ****                 }
1067:operate.c     ****                 if (('\n' == ch) && (counter == 27))
1068:operate.c     ****                 {
1069:operate.c     ****                     counter = 0;
1070:operate.c     ****                     new_display_data_flag = 1;
1071:operate.c     ****                 }
1072:operate.c     ****             }  
1073:operate.c     **** //                        if ( strcmp((char*)current_display_data_buffer,(char*)new_display_data_bu
1074:operate.c     ****         break;
1075:operate.c     ****                 
1076:operate.c     **** 
1077:operate.c     **** // SYSTEM_STATE = 4 - system in AuxIn mode    
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 54


1078:operate.c     **** // no UART messages from RPi  
1079:operate.c     ****         case (4):
1080:operate.c     **** // display Note about Aux IN mode
1081:operate.c     ****             strcpy((char*)new_display_data_buffer, "Aux IN mode             ");
 1880              		.loc 1 1081 0
 1881 00e0 4449     		ldr	r1, .L274+20
 1882              	.L250:
 1883 00e2 4348     		ldr	r0, .L274+16
 1884 00e4 FFF7FEFF 		bl	strcpy
 1885              	.LVL161:
 1886              	.L251:
1082:operate.c     **** // start display timer to periodically sent informaiton to display module
1083:operate.c     **** // without blocking delay  
1084:operate.c     ****             DISPLAY_Timer_Start();
 1887              		.loc 1 1084 0
 1888 00e8 FFF7FEFF 		bl	DISPLAY_Timer_Start
 1889              	.LVL162:
1085:operate.c     **** // check if 2 seconds timer expired             
1086:operate.c     ****             if (DISPLAY_UPDATE > 0)
 1890              		.loc 1 1086 0
 1891 00ec 424B     		ldr	r3, .L274+24
 1892 00ee 1B78     		ldrb	r3, [r3]
 1893 00f0 002B     		cmp	r3, #0
 1894 00f2 72D0     		beq	.L225
1087:operate.c     ****             { 
1088:operate.c     **** // set flag and sent info to display module
1089:operate.c     ****                 new_display_data_flag = 1;
 1895              		.loc 1 1089 0
 1896 00f4 0122     		movs	r2, #1
 1897 00f6 414B     		ldr	r3, .L274+28
 1898 00f8 1A70     		strb	r2, [r3]
 1899 00fa 21E0     		b	.L262
 1900              	.L156:
1090:operate.c     ****                 DISPLAY_UPDATE = 0;
1091:operate.c     ****             } 
1092:operate.c     ****         break;
1093:operate.c     **** 
1094:operate.c     ****     
1095:operate.c     **** // SYSTEM_STATE = 5 - Clock   
1096:operate.c     **** // no UART messages from RPi  
1097:operate.c     ****         case (5):
1098:operate.c     **** // display clock 1            
1099:operate.c     ****             strcpy((char*)new_display_data_buffer, "CLOCK ONE               ");
 1901              		.loc 1 1099 0
 1902 00fc 4049     		ldr	r1, .L274+32
 1903 00fe F0E7     		b	.L250
 1904              	.L157:
1100:operate.c     **** // start display timer to periodically sent informaiton to display module
1101:operate.c     **** // without blocking delay  
1102:operate.c     ****             DISPLAY_Timer_Start();
1103:operate.c     **** // check if 2 seconds timer expired             
1104:operate.c     ****             if (DISPLAY_UPDATE > 0)
1105:operate.c     ****             { 
1106:operate.c     **** // set flag and sent info to display module
1107:operate.c     ****                 new_display_data_flag = 1;
1108:operate.c     ****                 DISPLAY_UPDATE = 0;
1109:operate.c     ****             } 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 55


1110:operate.c     ****          break;
1111:operate.c     ****     
1112:operate.c     ****     
1113:operate.c     **** // SYSTEM_STATE = 6 - system in RDS/FM mode
1114:operate.c     **** // System reacts listents to UART commands and pushes them to display when 
1115:operate.c     **** // new one arrives. This happens only in DISPLAY_STATE == ????
1116:operate.c     ****         case (6):
1117:operate.c     ****             ch = UART_UartGetChar();
 1905              		.loc 1 1117 0
 1906 0100 FFF7FEFF 		bl	UART_UartGetChar
 1907              	.LVL163:
1118:operate.c     ****             if (0 != ch)
 1908              		.loc 1 1118 0
 1909 0104 0028     		cmp	r0, #0
 1910 0106 68D0     		beq	.L225
1119:operate.c     ****             {
1120:operate.c     ****                 if (counter < 24)
 1911              		.loc 1 1120 0
 1912 0108 384B     		ldr	r3, .L274+12
 1913 010a 1A78     		ldrb	r2, [r3]
 1914 010c 172A     		cmp	r2, #23
 1915 010e 03D8     		bhi	.L182
1121:operate.c     ****                 {
1122:operate.c     ****                     new_display_data_buffer[counter] = (uint8)ch;
 1916              		.loc 1 1122 0
 1917 0110 3749     		ldr	r1, .L274+16
 1918 0112 8854     		strb	r0, [r1, r2]
1123:operate.c     ****                     counter = counter + 1;
 1919              		.loc 1 1123 0
 1920 0114 0132     		adds	r2, r2, #1
 1921 0116 1A70     		strb	r2, [r3]
 1922              	.L182:
1124:operate.c     ****                 }
1125:operate.c     ****                 if ((';' == ch) && (counter == 24))
 1923              		.loc 1 1125 0
 1924 0118 3B28     		cmp	r0, #59
 1925 011a 04D1     		bne	.L183
 1926              	.L266:
 1927              		.loc 1 1125 0 is_stmt 0 discriminator 1
 1928 011c 1A78     		ldrb	r2, [r3]
 1929 011e 182A     		cmp	r2, #24
 1930 0120 5BD1     		bne	.L225
1126:operate.c     ****                 {
1127:operate.c     ****                     counter = counter + 1;
 1931              		.loc 1 1127 0 is_stmt 1
 1932 0122 0132     		adds	r2, r2, #1
 1933 0124 9AE7     		b	.L254
 1934              	.L183:
1128:operate.c     ****                 }
1129:operate.c     ****                 if (('N' == ch) && (counter == 25))
 1935              		.loc 1 1129 0
 1936 0126 4E28     		cmp	r0, #78
 1937 0128 ADD1     		bne	.L164
 1938 012a 91E7     		b	.L241
 1939              	.LVL164:
 1940              	.L158:
1130:operate.c     ****                 {
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 56


1131:operate.c     ****                     counter = counter + 1;
1132:operate.c     ****                 }
1133:operate.c     ****                 if (('\r' == ch) && (counter == 26))
1134:operate.c     ****                 {
1135:operate.c     ****                     counter = counter + 1;
1136:operate.c     ****                 }
1137:operate.c     ****                 if (('\n' == ch) && (counter == 27))
1138:operate.c     ****                 {
1139:operate.c     ****                     counter = 0;
1140:operate.c     ****                     new_display_data_flag = 1;
1141:operate.c     ****                 }
1142:operate.c     ****             }  
1143:operate.c     ****         break;
1144:operate.c     **** 
1145:operate.c     ****         
1146:operate.c     **** // SYSTEM_STATE = 7 - system in BlueTooth Rx mode
1147:operate.c     ****         case (7):
1148:operate.c     **** // no UART messages from RPi
1149:operate.c     **** // start display timer to delay Bluetooth status information             
1150:operate.c     ****             DISPLAY_Timer_Start();
 1941              		.loc 1 1150 0
 1942 012c FFF7FEFF 		bl	DISPLAY_Timer_Start
 1943              	.LVL165:
1151:operate.c     **** // when in BT mode only, update display to link status after timer expire
1152:operate.c     ****             if (DISPLAY_UPDATE > 0)
 1944              		.loc 1 1152 0
 1945 0130 314B     		ldr	r3, .L274+24
 1946 0132 1B78     		ldrb	r3, [r3]
 1947 0134 002B     		cmp	r3, #0
 1948 0136 50D0     		beq	.L225
1153:operate.c     ****             { 
1154:operate.c     **** // sent to BT module command to display its current status
1155:operate.c     ****                 BT_control(0, 0); 
 1949              		.loc 1 1155 0
 1950 0138 0021     		movs	r1, #0
 1951 013a 0800     		movs	r0, r1
 1952 013c FFF7FEFF 		bl	BT_control
 1953              	.LVL166:
 1954              	.L262:
1156:operate.c     ****                 DISPLAY_UPDATE = 0;
 1955              		.loc 1 1156 0
 1956 0140 0022     		movs	r2, #0
 1957 0142 2D4B     		ldr	r3, .L274+24
 1958 0144 8AE7     		b	.L254
 1959              	.L149:
1157:operate.c     ****             } 
1158:operate.c     ****         break;
1159:operate.c     ****     
1160:operate.c     **** // SYSTEM_STATE = 8 - system in BlueTooth Tx mode
1161:operate.c     ****         case (8):
1162:operate.c     **** // no UART messages from RPi
1163:operate.c     **** // start display timer to delay Bluetooth status information             
1164:operate.c     ****             DISPLAY_Timer_Start();
1165:operate.c     **** // when in BT mode only, update display to link status after timer expire
1166:operate.c     ****             if (DISPLAY_UPDATE > 0)
1167:operate.c     ****             { 
1168:operate.c     **** // sent to BT module command to display its current status
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 57


1169:operate.c     ****                 BT_control(0, 0); 
1170:operate.c     ****                 DISPLAY_UPDATE = 0;
1171:operate.c     ****             } 
1172:operate.c     ****         break;      
1173:operate.c     **** 
1174:operate.c     ****         default:
1175:operate.c     **** // DEFAULT STATEMENT        
1176:operate.c     ****         break;
1177:operate.c     ****         }
1178:operate.c     ****     }
1179:operate.c     ****         
1180:operate.c     **** 
1181:operate.c     **** // display signal level info
1182:operate.c     ****     else if (DISPLAY_STATE == 2)
 1960              		.loc 1 1182 0
 1961 0146 022C     		cmp	r4, #2
 1962 0148 0BD1     		bne	.L188
1183:operate.c     ****     {
1184:operate.c     **** //  0 - read back signal level values and encode them into information sent to 
1185:operate.c     **** //      display module
1186:operate.c     ****         SigmaDSP_to_display(0);
 1963              		.loc 1 1186 0
 1964 014a 0020     		movs	r0, #0
 1965 014c FFF7FEFF 		bl	SigmaDSP_to_display
 1966              	.LVL167:
1187:operate.c     **** // disp_ctrl2 
1188:operate.c     **** // CTRL1.0 and CTRL1.1 - clear all LED status except BT Tx and ONLINE
1189:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 & 0x03;
1190:operate.c     **** // CTRL1.2 - set Signal Level Indicator
1191:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 | 0x04;
 1967              		.loc 1 1191 0
 1968 0150 0323     		movs	r3, #3
 1969 0152 244A     		ldr	r2, .L274+4
 1970 0154 1178     		ldrb	r1, [r2]
 1971 0156 0B40     		ands	r3, r1
 1972 0158 0421     		movs	r1, #4
 1973 015a 0B43     		orrs	r3, r1
 1974 015c 1370     		strb	r3, [r2]
 1975              	.L267:
1192:operate.c     **** // start display timer to periodically sent informaiton to display module
1193:operate.c     **** // without blocking delay  
1194:operate.c     **** //        DISPLAY_Timer_Start();
1195:operate.c     **** // check if 2 seconds timer expired             
1196:operate.c     **** //        if (DISPLAY_UPDATE > 0)
1197:operate.c     **** //        { 
1198:operate.c     **** // set flag and sent info to display module
1199:operate.c     ****         new_display_data_flag = 1;
 1976              		.loc 1 1199 0
 1977 015e 0122     		movs	r2, #1
 1978 0160 0BE0     		b	.L259
 1979              	.L188:
1200:operate.c     **** //            DISPLAY_UPDATE = 0;
1201:operate.c     **** //        } 
1202:operate.c     ****     }
1203:operate.c     ****         
1204:operate.c     **** // display spectrum analyzer info
1205:operate.c     ****     else if (DISPLAY_STATE == 3)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 58


 1980              		.loc 1 1205 0
 1981 0162 032C     		cmp	r4, #3
 1982 0164 0BD1     		bne	.L189
1206:operate.c     ****     {
1207:operate.c     **** //  1 - read back spectrum analyser info and encode it into informaiton sent to
1208:operate.c     **** //      display module
1209:operate.c     ****         SigmaDSP_to_display(1);
 1983              		.loc 1 1209 0
 1984 0166 0120     		movs	r0, #1
 1985 0168 FFF7FEFF 		bl	SigmaDSP_to_display
 1986              	.LVL168:
1210:operate.c     **** // disp_ctrl2 
1211:operate.c     **** // CTRL1.0 and CTRL1.1 - clear all LED status except BT Tx and ONLINE
1212:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 & 0x03;
1213:operate.c     **** // CTRL1.3 - set Spectrum Analyser indicator 
1214:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 | 0x08;
 1987              		.loc 1 1214 0
 1988 016c 1D4B     		ldr	r3, .L274+4
 1989 016e 1A78     		ldrb	r2, [r3]
 1990 0170 1440     		ands	r4, r2
 1991 0172 0822     		movs	r2, #8
 1992 0174 1443     		orrs	r4, r2
 1993 0176 1C70     		strb	r4, [r3]
1215:operate.c     **** // start display timer to periodically sent informaiton to display module
1216:operate.c     **** // without blocking delay  
1217:operate.c     **** //        DISPLAY_Timer_Start();
1218:operate.c     **** // check if 2 seconds timer expired             
1219:operate.c     **** //        if (DISPLAY_UPDATE > 0)
1220:operate.c     **** //        { 
1221:operate.c     **** // set flag and sent info to display module
1222:operate.c     ****         new_display_data_flag = 1;
 1994              		.loc 1 1222 0
 1995 0178 073A     		subs	r2, r2, #7
 1996              	.L259:
 1997 017a 204B     		ldr	r3, .L274+28
 1998 017c 6EE7     		b	.L254
 1999              	.L189:
1223:operate.c     **** //            DISPLAY_UPDATE = 0;
1224:operate.c     **** //        } 
1225:operate.c     **** // set SPI slave select line to display module
1226:operate.c     **** //    SPIM_SpiSetActiveSlaveSelect(SPIM_SPI_SLAVE_SELECT1);  
1227:operate.c     ****     }
1228:operate.c     ****         
1229:operate.c     **** // display clock 1
1230:operate.c     ****     else if (DISPLAY_STATE == 4)
 2000              		.loc 1 1230 0
 2001 017e 042C     		cmp	r4, #4
 2002 0180 09D1     		bne	.L190
1231:operate.c     ****     {
1232:operate.c     **** // display clock 1                              
1233:operate.c     ****         strcpy((char*)new_display_data_buffer, "CLOCK ONE               ");
 2003              		.loc 1 1233 0
 2004 0182 1F49     		ldr	r1, .L274+32
 2005 0184 1A48     		ldr	r0, .L274+16
 2006 0186 FFF7FEFF 		bl	strcpy
 2007              	.LVL169:
1234:operate.c     **** // disp_ctrl2 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 59


1235:operate.c     **** // CTRL1.0 and CTRL1.1 - clear all LED status except BT Tx and ONLINE
1236:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 & 0x03;
1237:operate.c     **** // CTRL1.4 - set Clock 1 indicator 
1238:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 | 0x10;
 2008              		.loc 1 1238 0
 2009 018a 0323     		movs	r3, #3
 2010 018c 154A     		ldr	r2, .L274+4
 2011 018e 1178     		ldrb	r1, [r2]
 2012 0190 0B40     		ands	r3, r1
 2013 0192 1021     		movs	r1, #16
 2014 0194 0AE0     		b	.L268
 2015              	.L190:
1239:operate.c     **** // start display timer to periodically sent informaiton to display module
1240:operate.c     **** // without blocking delay  
1241:operate.c     ****         DISPLAY_Timer_Start();
1242:operate.c     **** // check if 2 seconds timer expired             
1243:operate.c     ****         if (DISPLAY_UPDATE > 0)
1244:operate.c     ****         { 
1245:operate.c     **** // set flag and sent info to display module
1246:operate.c     ****             new_display_data_flag = 1;
1247:operate.c     ****             DISPLAY_UPDATE = 0;
1248:operate.c     ****         } 
1249:operate.c     ****     }
1250:operate.c     ****         
1251:operate.c     **** // display clock 2
1252:operate.c     ****     else if (DISPLAY_STATE == 5)
 2016              		.loc 1 1252 0
 2017 0196 052C     		cmp	r4, #5
 2018 0198 0AD1     		bne	.L191
1253:operate.c     ****     {
1254:operate.c     **** // display clock 2                                
1255:operate.c     ****         strcpy((char*)new_display_data_buffer, "CLOCK TWO               ");
 2019              		.loc 1 1255 0
 2020 019a 1A49     		ldr	r1, .L274+36
 2021 019c 1448     		ldr	r0, .L274+16
 2022 019e FFF7FEFF 		bl	strcpy
 2023              	.LVL170:
1256:operate.c     **** // disp_ctrl2 
1257:operate.c     **** // CTRL1.0 and CTRL1.1 - clear all LED status except BT Tx and ONLINE
1258:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 & 0x03;
1259:operate.c     **** // CTRL1.5 - set Clock 2 indicator 
1260:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 | 0x20;
 2024              		.loc 1 1260 0
 2025 01a2 0323     		movs	r3, #3
 2026 01a4 0F4A     		ldr	r2, .L274+4
 2027 01a6 1178     		ldrb	r1, [r2]
 2028 01a8 0B40     		ands	r3, r1
 2029 01aa 2021     		movs	r1, #32
 2030              	.L268:
 2031 01ac 0B43     		orrs	r3, r1
 2032 01ae 09E0     		b	.L264
 2033              	.L191:
1261:operate.c     **** // start display timer to periodically sent informaiton to display module
1262:operate.c     **** // without blocking delay  
1263:operate.c     ****         DISPLAY_Timer_Start();
1264:operate.c     **** // check if 2 seconds timer expired             
1265:operate.c     ****         if (DISPLAY_UPDATE > 0)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 60


1266:operate.c     ****         { 
1267:operate.c     **** // set flag and sent info to display module
1268:operate.c     ****             new_display_data_flag = 1;
1269:operate.c     ****             DISPLAY_UPDATE = 0;
1270:operate.c     ****         } 
1271:operate.c     ****     }
1272:operate.c     ****         
1273:operate.c     **** // display blank data
1274:operate.c     ****     else if (DISPLAY_STATE == 6)
 2034              		.loc 1 1274 0
 2035 01b0 062C     		cmp	r4, #6
 2036 01b2 12D1     		bne	.L225
1275:operate.c     ****     {
1276:operate.c     **** // blank out display data            
1277:operate.c     ****         strcpy((char*)new_display_data_buffer, "                        ");
 2037              		.loc 1 1277 0
 2038 01b4 1449     		ldr	r1, .L274+40
 2039 01b6 0E48     		ldr	r0, .L274+16
 2040 01b8 FFF7FEFF 		bl	strcpy
 2041              	.LVL171:
1278:operate.c     **** // CTRL1.0 and CTRL1.1 - clear all LED status except BT Tx and ONLINE
1279:operate.c     ****         new_disp_ctrl2 = new_disp_ctrl2 & 0x03;
 2042              		.loc 1 1279 0
 2043 01bc 0323     		movs	r3, #3
 2044 01be 094A     		ldr	r2, .L274+4
 2045 01c0 1178     		ldrb	r1, [r2]
 2046 01c2 0B40     		ands	r3, r1
 2047              	.L264:
 2048 01c4 1370     		strb	r3, [r2]
 2049 01c6 8FE7     		b	.L251
 2050              	.LVL172:
 2051              	.L186:
1137:operate.c     ****                 {
 2052              		.loc 1 1137 0
 2053 01c8 0A28     		cmp	r0, #10
 2054 01ca 06D1     		bne	.L225
 991:operate.c     ****                 {
 2055              		.loc 1 991 0 discriminator 1
 2056 01cc 1B78     		ldrb	r3, [r3]
 2057 01ce 1B2B     		cmp	r3, #27
 2058 01d0 03D1     		bne	.L225
 993:operate.c     ****                     new_display_data_flag = 1;
 2059              		.loc 1 993 0
 2060 01d2 0022     		movs	r2, #0
 2061 01d4 054B     		ldr	r3, .L274+12
 2062 01d6 1A70     		strb	r2, [r3]
 2063 01d8 C1E7     		b	.L267
 2064              	.LVL173:
 2065              	.L225:
1280:operate.c     **** // start display timer to periodically sent informaiton to display module
1281:operate.c     **** // without blocking delay  
1282:operate.c     ****         DISPLAY_Timer_Start();
1283:operate.c     **** // check if 2 seconds timer expired             
1284:operate.c     ****         if (DISPLAY_UPDATE > 0)
1285:operate.c     ****         { 
1286:operate.c     **** // set flag and sent info to display module
1287:operate.c     ****             new_display_data_flag = 1;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 61


1288:operate.c     ****             DISPLAY_UPDATE = 0;
1289:operate.c     ****         } 
1290:operate.c     ****     }        
1291:operate.c     ****        
1292:operate.c     ****     return 0;
1293:operate.c     **** }
 2066              		.loc 1 1293 0
 2067 01da 0020     		movs	r0, #0
 2068              		@ sp needed
 2069 01dc 10BD     		pop	{r4, pc}
 2070              	.L275:
 2071 01de C046     		.align	2
 2072              	.L274:
 2073 01e0 00000000 		.word	DISPLAY_STATE
 2074 01e4 00000000 		.word	new_disp_ctrl2
 2075 01e8 00000000 		.word	SYSTEM_STATE
 2076 01ec 00000000 		.word	.LANCHOR0
 2077 01f0 00000000 		.word	new_display_data_buffer
 2078 01f4 5B000000 		.word	.LC31
 2079 01f8 00000000 		.word	DISPLAY_UPDATE
 2080 01fc 00000000 		.word	new_display_data_flag
 2081 0200 74000000 		.word	.LC34
 2082 0204 8D000000 		.word	.LC36
 2083 0208 A6000000 		.word	.LC38
 2084              		.cfi_endproc
 2085              	.LFE33:
 2086              		.size	display_update, .-display_update
 2087              		.section	.text.datalink_check,"ax",%progbits
 2088              		.align	1
 2089              		.global	datalink_check
 2090              		.code	16
 2091              		.thumb_func
 2092              		.type	datalink_check, %function
 2093              	datalink_check:
 2094              	.LFB34:
1294:operate.c     **** 
1295:operate.c     **** 
1296:operate.c     **** 
1297:operate.c     **** /*******************************************************************************
1298:operate.c     **** * Function Name: datalink_check()
1299:operate.c     **** ********************************************************************************
1300:operate.c     **** * Summary:
1301:operate.c     **** *  Functon responsible for interpetting remote control commands and moving system
1302:operate.c     **** *  state based on datalink input
1303:operate.c     **** *   
1304:operate.c     **** * Parameters:
1305:operate.c     **** *  command - number reported back by datalink_decoder function. List as follow:
1306:operate.c     **** *   0 - no new command
1307:operate.c     **** *   1 - incorrect start and/or stop value
1308:operate.c     **** *   2 - if t = 0 and t+1 = t1 -> error or t = 1 and t+1 = t3 -> error
1309:operate.c     **** *  10 - only Aux button pressed - power up to last state
1310:operate.c     **** *  11 - Aux button pressed plus one digit number 1 or nubmer one to any of five aux devices
1311:operate.c     **** *  12 - Aux button pressed plus one digit number 2 or nubmer two  to any of five aux devices
1312:operate.c     **** *  13 - Aux button pressed plus one digit number 3 or nubmer three to any of five aux devices
1313:operate.c     **** *  14 - Aux button pressed plus one digit number 4 or nubmer four to any of five aux devices
1314:operate.c     **** *  15 - Aux button pressed plus one digit number 5 or nubmer five to any of five aux devices
1315:operate.c     **** *  16 - Digit number 6 to any of five aux devices
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 62


1316:operate.c     **** *  17 - Digit number 7 to any of five aux devices
1317:operate.c     **** *  18 - Digit number 8 to any of five aux devices
1318:operate.c     **** *  20 - OK/GO/PLAY to any of five aux devices
1319:operate.c     **** *  21 - UP/STEP > to any of five aux devices
1320:operate.c     **** *  22 - DOWN/< STEP to any of five aux devices
1321:operate.c     **** *  23 - LEFT/<< to any of five aux devices
1322:operate.c     **** *  24 - RIGHT/>> to any of five aux devices
1323:operate.c     **** *  25 - STOP to any of five aux devices
1324:operate.c     **** *  26 - POWER OFF to any of five aux devices
1325:operate.c     **** *  31 - DISPLAY or yellow to any of five aux devices
1326:operate.c     **** *  32 - green to any of five aux devices
1327:operate.c     **** *  41 - FM Radio station 1
1328:operate.c     **** *  42 - FM Radio station 2
1329:operate.c     **** *  43 - FM Radio station 3
1330:operate.c     **** *  44 - FM Radio station 4
1331:operate.c     **** *  45 - FM Radio station 5
1332:operate.c     **** *  46 - FM Radio station 6
1333:operate.c     **** *  47 - FM Radio station 7
1334:operate.c     **** *  48 - FM Radio station 8
1335:operate.c     **** *  49 - FM Radio station 9
1336:operate.c     **** *  50 - FM Radio station 10
1337:operate.c     **** *  51 - FM Radio station 11
1338:operate.c     **** *  52 - FM Radio station 12
1339:operate.c     **** *  53 - FM Radio station 13
1340:operate.c     **** *  54 - FM Radio station 14
1341:operate.c     **** *  55 - FM Radio station 15
1342:operate.c     **** *  56 - FM Radio station 16
1343:operate.c     **** *  57 - FM Radio station 17
1344:operate.c     **** *  58 - FM Radio station 18
1345:operate.c     **** *  59 - FM Radio station 19
1346:operate.c     **** *  60 - FM Radio station 20
1347:operate.c     **** *
1348:operate.c     **** * Return:
1349:operate.c     **** *  zero
1350:operate.c     **** *
1351:operate.c     **** *******************************************************************************/  
1352:operate.c     **** uint8 datalink_check(uint8 command)
1353:operate.c     **** {
 2095              		.loc 1 1353 0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 8
 2098              		@ frame_needed = 0, uses_anonymous_args = 0
 2099              	.LVL174:
 2100 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2101              		.cfi_def_cfa_offset 32
 2102              		.cfi_offset 0, -32
 2103              		.cfi_offset 1, -28
 2104              		.cfi_offset 2, -24
 2105              		.cfi_offset 4, -20
 2106              		.cfi_offset 5, -16
 2107              		.cfi_offset 6, -12
 2108              		.cfi_offset 7, -8
 2109              		.cfi_offset 14, -4
1354:operate.c     ****     
1355:operate.c     **** // system state array stored in EEPROM
1356:operate.c     **** // [0] = SYSTEM_STATE 
1357:operate.c     **** // [1] = DISPLAY_STATE
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 63


1358:operate.c     **** // [2] = BT_Tx_STATE
1359:operate.c     **** uint8 array[]= { 0x00, 0x00, 0x00 };
 2110              		.loc 1 1359 0
 2111 0002 0022     		movs	r2, #0
1360:operate.c     **** 
1361:operate.c     **** // check if system is in power down state
1362:operate.c     ****     if (SYSTEM_STATE == 0)
 2112              		.loc 1 1362 0
 2113 0004 9D4B     		ldr	r3, .L362
1359:operate.c     **** 
 2114              		.loc 1 1359 0
 2115 0006 01AE     		add	r6, sp, #4
 2116              		.loc 1 1362 0
 2117 0008 1F78     		ldrb	r7, [r3]
1353:operate.c     ****     
 2118              		.loc 1 1353 0
 2119 000a 0400     		movs	r4, r0
1359:operate.c     **** 
 2120              		.loc 1 1359 0
 2121 000c 3270     		strb	r2, [r6]
 2122 000e 7270     		strb	r2, [r6, #1]
 2123 0010 B270     		strb	r2, [r6, #2]
 2124 0012 1D00     		movs	r5, r3
 2125              		.loc 1 1362 0
 2126 0014 9742     		cmp	r7, r2
 2127 0016 39D1     		bne	.L277
1363:operate.c     ****     {
1364:operate.c     **** // if in power down state - restore system to last saved state
1365:operate.c     **** // Read data from emulated EEPROM
1366:operate.c     ****         Em_EEPROM_Read(LOGICAL_EEPROM_START, eepromArray, LOGICAL_EEPROM_SIZE);         
 2128              		.loc 1 1366 0
 2129 0018 994B     		ldr	r3, .L362+4
 2130 001a 0332     		adds	r2, r2, #3
 2131 001c 9949     		ldr	r1, .L362+8
 2132 001e 3800     		movs	r0, r7
 2133              	.LVL175:
 2134 0020 FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 2135              	.LVL176:
 2136 0024 974B     		ldr	r3, .L362+8
1367:operate.c     **** // check if Aux only button was pressed     
1368:operate.c     ****         if (command == 10)
 2137              		.loc 1 1368 0
 2138 0026 0A2C     		cmp	r4, #10
 2139 0028 09D1     		bne	.L278
1369:operate.c     ****         {
1370:operate.c     **** // set SYSTEM STATE variables based on EEPROM read back data
1371:operate.c     ****             SYSTEM_STATE = eepromArray[0];
 2140              		.loc 1 1371 0
 2141 002a 1A78     		ldrb	r2, [r3]
1372:operate.c     **** // set BT variables based on EEPROM read back data
1373:operate.c     ****             BT_Tx_STATE = eepromArray[2];            
 2142              		.loc 1 1373 0
 2143 002c 9649     		ldr	r1, .L362+12
1371:operate.c     **** // set BT variables based on EEPROM read back data
 2144              		.loc 1 1371 0
 2145 002e 2A70     		strb	r2, [r5]
 2146              		.loc 1 1373 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 64


 2147 0030 9878     		ldrb	r0, [r3, #2]
 2148 0032 0870     		strb	r0, [r1]
1374:operate.c     **** // if system state is 0 force to start with system state in 1 
1375:operate.c     **** // to avoid infinite loop in system state 0
1376:operate.c     ****             if (SYSTEM_STATE == 0)
 2149              		.loc 1 1376 0
 2150 0034 002A     		cmp	r2, #0
 2151 0036 25D1     		bne	.L280
1377:operate.c     ****             {
1378:operate.c     ****                 SYSTEM_STATE = 1;
 2152              		.loc 1 1378 0
 2153 0038 0132     		adds	r2, r2, #1
 2154 003a 2A70     		strb	r2, [r5]
 2155 003c 22E0     		b	.L280
 2156              	.L278:
1379:operate.c     ****             }
1380:operate.c     ****         }
1381:operate.c     **** // check if Aux + 1 or only 1 button was pressed
1382:operate.c     **** // start Player state
1383:operate.c     ****         else if (command == 11)
1384:operate.c     ****         {
1385:operate.c     **** // set SYSTEM STATE variables to Player
1386:operate.c     ****             SYSTEM_STATE = 1;
 2157              		.loc 1 1386 0
 2158 003e 0122     		movs	r2, #1
1383:operate.c     ****         {
 2159              		.loc 1 1383 0
 2160 0040 0B2C     		cmp	r4, #11
 2161 0042 02D0     		beq	.L359
1387:operate.c     **** // set BT variables based on EEPROM read back data
1388:operate.c     ****             BT_Tx_STATE = eepromArray[2];            
1389:operate.c     ****         }
1390:operate.c     **** // check if Aux + 2 or only 2 button was pressed
1391:operate.c     **** // start iRadio state
1392:operate.c     ****         else if (command == 12)
 2162              		.loc 1 1392 0
 2163 0044 0C2C     		cmp	r4, #12
 2164 0046 03D1     		bne	.L282
1393:operate.c     ****         {
1394:operate.c     **** // set SYSTEM STATE variables to iRadio
1395:operate.c     ****             SYSTEM_STATE = 2;
 2165              		.loc 1 1395 0
 2166 0048 0222     		movs	r2, #2
 2167              	.L359:
 2168 004a 2A70     		strb	r2, [r5]
1396:operate.c     **** // set BT variables based on EEPROM read back data
1397:operate.c     ****             BT_Tx_STATE = eepromArray[2];            
 2169              		.loc 1 1397 0
 2170 004c 9978     		ldrb	r1, [r3, #2]
 2171 004e 17E0     		b	.L348
 2172              	.L282:
1398:operate.c     ****         }
1399:operate.c     **** // check if Aux + 3 or only 3 button was pressed
1400:operate.c     **** // start DAB Radio state
1401:operate.c     ****         else if (command == 13)
1402:operate.c     ****         {
1403:operate.c     **** // set SYSTEM STATE variables to DAB Radio
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 65


1404:operate.c     ****             SYSTEM_STATE = 3;
 2173              		.loc 1 1404 0
 2174 0050 0322     		movs	r2, #3
1401:operate.c     ****         {
 2175              		.loc 1 1401 0
 2176 0052 0D2C     		cmp	r4, #13
 2177 0054 F9D0     		beq	.L359
1405:operate.c     **** // set BT variables based on EEPROM read back data
1406:operate.c     ****             BT_Tx_STATE = eepromArray[2];            
1407:operate.c     ****         }
1408:operate.c     **** // check if Aux + 4 or only 4 button was pressed
1409:operate.c     **** // start Aux IN state
1410:operate.c     ****         else if (command == 14)
1411:operate.c     ****         {
1412:operate.c     **** // set SYSTEM STATE variables to Aux IN
1413:operate.c     ****             SYSTEM_STATE = 4;
 2178              		.loc 1 1413 0
 2179 0056 0422     		movs	r2, #4
1410:operate.c     ****         {
 2180              		.loc 1 1410 0
 2181 0058 0E2C     		cmp	r4, #14
 2182 005a F6D0     		beq	.L359
1414:operate.c     **** // set BT variables based on EEPROM read back data
1415:operate.c     ****             BT_Tx_STATE = eepromArray[2];            
1416:operate.c     ****         }
1417:operate.c     **** // check if Aux + 5 or only 5 button was pressed
1418:operate.c     **** // start Clock state
1419:operate.c     ****         else if (command == 15)
1420:operate.c     ****         {
1421:operate.c     **** // set SYSTEM STATE variables to RDS/FM Radio
1422:operate.c     ****             SYSTEM_STATE = 5;
 2183              		.loc 1 1422 0
 2184 005c 0522     		movs	r2, #5
1419:operate.c     ****         {
 2185              		.loc 1 1419 0
 2186 005e 0F2C     		cmp	r4, #15
 2187 0060 F3D0     		beq	.L359
1423:operate.c     **** // set BT variables based on EEPROM read back data
1424:operate.c     ****             BT_Tx_STATE = eepromArray[2];            
1425:operate.c     ****         }
1426:operate.c     **** // check if 6 button was pressed
1427:operate.c     **** // start RDS/FM Radio state
1428:operate.c     ****         else if (command == 16)
1429:operate.c     ****         {
1430:operate.c     **** // set SYSTEM STATE variables to RDS/FM Radio
1431:operate.c     ****             SYSTEM_STATE = 6;
 2188              		.loc 1 1431 0
 2189 0062 0622     		movs	r2, #6
1428:operate.c     ****         {
 2190              		.loc 1 1428 0
 2191 0064 102C     		cmp	r4, #16
 2192 0066 F0D0     		beq	.L359
1432:operate.c     **** // set BT variables based on EEPROM read back data
1433:operate.c     ****             BT_Tx_STATE = eepromArray[2];            
1434:operate.c     ****         }
1435:operate.c     **** // check if 7 button was pressed
1436:operate.c     **** // start Bluetooth Rx state
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 66


1437:operate.c     ****         else if (command == 17)
 2193              		.loc 1 1437 0
 2194 0068 112C     		cmp	r4, #17
 2195 006a 04D1     		bne	.L287
1438:operate.c     ****         {
1439:operate.c     **** // set SYSTEM STATE variables to Bluetooth Rx
1440:operate.c     ****             SYSTEM_STATE = 7;
 2196              		.loc 1 1440 0
 2197 006c 0722     		movs	r2, #7
 2198 006e 2A70     		strb	r2, [r5]
1441:operate.c     **** // clear BT_TX variable indicating that bleutooth is in use as Rx
1442:operate.c     ****             BT_Tx_STATE = 0;
 2199              		.loc 1 1442 0
 2200 0070 854A     		ldr	r2, .L362+12
 2201 0072 1770     		strb	r7, [r2]
 2202 0074 06E0     		b	.L280
 2203              	.L287:
1443:operate.c     ****         }
1444:operate.c     **** // check if 8 button was pressed
1445:operate.c     **** // start Bluetooth Tx state
1446:operate.c     ****         else if (command == 18)
 2204              		.loc 1 1446 0
 2205 0076 122C     		cmp	r4, #18
 2206 0078 04D1     		bne	.L280
1447:operate.c     ****         {
1448:operate.c     **** // set SYSTEM STATE variables to Bluetooth Tx
1449:operate.c     ****             SYSTEM_STATE = 8;
 2207              		.loc 1 1449 0
 2208 007a 0822     		movs	r2, #8
1450:operate.c     **** // set BT_TX variable indicating that bleutooth is in use as Rx
1451:operate.c     ****             BT_Tx_STATE = 1;            
 2209              		.loc 1 1451 0
 2210 007c 0121     		movs	r1, #1
1449:operate.c     **** // set BT_TX variable indicating that bleutooth is in use as Rx
 2211              		.loc 1 1449 0
 2212 007e 2A70     		strb	r2, [r5]
 2213              	.L348:
 2214              		.loc 1 1451 0
 2215 0080 814A     		ldr	r2, .L362+12
 2216 0082 1170     		strb	r1, [r2]
 2217              	.L280:
1452:operate.c     ****         }
1453:operate.c     **** // set DISPLAY variables based on EEPROM read back data
1454:operate.c     ****         DISPLAY_STATE = eepromArray[1];
 2218              		.loc 1 1454 0
 2219 0084 5A78     		ldrb	r2, [r3, #1]
 2220 0086 814B     		ldr	r3, .L362+16
 2221 0088 1A70     		strb	r2, [r3]
 2222 008a 24E0     		b	.L289
 2223              	.LVL177:
 2224              	.L277:
1455:operate.c     ****     }
1456:operate.c     ****     else
1457:operate.c     ****         {
1458:operate.c     **** // check if Aux + 1 or only 1 button was pressed
1459:operate.c     **** // start Player state
1460:operate.c     ****             if (command == 11)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 67


 2225              		.loc 1 1460 0
 2226 008c 0B28     		cmp	r0, #11
 2227 008e 01D1     		bne	.L290
1461:operate.c     ****             {
1462:operate.c     **** // set SYSTEM STATE variables to Player
1463:operate.c     ****                 SYSTEM_STATE = 1;
 2228              		.loc 1 1463 0
 2229 0090 0122     		movs	r2, #1
 2230 0092 1EE0     		b	.L350
 2231              	.L290:
1464:operate.c     ****             }
1465:operate.c     **** // check if Aux + 2 or only 2 button was pressed
1466:operate.c     **** // start iRadio state
1467:operate.c     ****             else if (command == 12)
 2232              		.loc 1 1467 0
 2233 0094 0C28     		cmp	r0, #12
 2234 0096 01D1     		bne	.L292
1468:operate.c     ****             {
1469:operate.c     **** // set SYSTEM STATE variables to iRadio
1470:operate.c     ****                 SYSTEM_STATE = 2;
 2235              		.loc 1 1470 0
 2236 0098 0222     		movs	r2, #2
 2237 009a 1AE0     		b	.L350
 2238              	.L292:
1471:operate.c     ****             }
1472:operate.c     **** // check if Aux + 3 or only 3 button was pressed
1473:operate.c     **** // start DAB Radio state
1474:operate.c     ****             else if (command == 13)
 2239              		.loc 1 1474 0
 2240 009c 0D28     		cmp	r0, #13
 2241 009e 01D1     		bne	.L294
1475:operate.c     ****             {
1476:operate.c     **** // set SYSTEM STATE variables to DAB Radio
1477:operate.c     ****                 SYSTEM_STATE = 3;
 2242              		.loc 1 1477 0
 2243 00a0 0322     		movs	r2, #3
 2244 00a2 16E0     		b	.L350
 2245              	.L294:
1478:operate.c     ****             }
1479:operate.c     **** // check if Aux + 4 or only 4 button was pressed
1480:operate.c     **** // start Aux IN state
1481:operate.c     ****             else if (command == 14)
 2246              		.loc 1 1481 0
 2247 00a4 0E28     		cmp	r0, #14
 2248 00a6 01D1     		bne	.L295
1482:operate.c     ****             {
1483:operate.c     **** // set SYSTEM STATE variables to Aux IN
1484:operate.c     ****                 SYSTEM_STATE = 4;
 2249              		.loc 1 1484 0
 2250 00a8 0422     		movs	r2, #4
 2251 00aa 12E0     		b	.L350
 2252              	.L295:
1485:operate.c     ****             }
1486:operate.c     **** // check if Aux + 5 or only 5 button was pressed
1487:operate.c     **** // start Clock state
1488:operate.c     ****             else if (command == 15)
 2253              		.loc 1 1488 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 68


 2254 00ac 0F28     		cmp	r0, #15
 2255 00ae 01D1     		bne	.L296
1489:operate.c     ****             {
1490:operate.c     **** // set SYSTEM STATE variables to RDS/FM Radio
1491:operate.c     ****                 SYSTEM_STATE = 5;
 2256              		.loc 1 1491 0
 2257 00b0 0522     		movs	r2, #5
 2258 00b2 0EE0     		b	.L350
 2259              	.L296:
1492:operate.c     ****             }
1493:operate.c     **** // check if 6 button was pressed
1494:operate.c     **** // start RDS/FM Radio state
1495:operate.c     ****             else if (command == 16)
 2260              		.loc 1 1495 0
 2261 00b4 1028     		cmp	r0, #16
 2262 00b6 01D1     		bne	.L297
1496:operate.c     ****             {
1497:operate.c     **** // set SYSTEM STATE variables to RDS/FM Radio
1498:operate.c     ****                 SYSTEM_STATE = 6;
 2263              		.loc 1 1498 0
 2264 00b8 0622     		movs	r2, #6
 2265 00ba 0AE0     		b	.L350
 2266              	.L297:
1499:operate.c     ****             }// check if 6 button was pressed
1500:operate.c     **** // check if 7 button was pressed
1501:operate.c     **** // start Bluetooth Rx state
1502:operate.c     ****             else if (command == 17)
 2267              		.loc 1 1502 0
 2268 00bc 1128     		cmp	r0, #17
 2269 00be 02D1     		bne	.L298
1503:operate.c     ****             {
1504:operate.c     **** // set SYSTEM STATE variables to Bluetooth Rx
1505:operate.c     ****                 SYSTEM_STATE = 7;
 2270              		.loc 1 1505 0
 2271 00c0 0721     		movs	r1, #7
 2272 00c2 1970     		strb	r1, [r3]
 2273 00c4 04E0     		b	.L351
 2274              	.L298:
1506:operate.c     **** // clear BT_TX variable indicating that bleutooth is in use as Rx
1507:operate.c     ****                 BT_Tx_STATE = 0;
1508:operate.c     ****             }
1509:operate.c     **** // check if 8 button was pressed
1510:operate.c     **** // start Bluetooth Tx state
1511:operate.c     ****             else if (command == 18)
 2275              		.loc 1 1511 0
 2276 00c6 1228     		cmp	r0, #18
 2277 00c8 05D1     		bne	.L289
1512:operate.c     ****             {
1513:operate.c     **** // set SYSTEM STATE variables to Bluetooth Tx
1514:operate.c     ****                 SYSTEM_STATE = 8;
 2278              		.loc 1 1514 0
 2279 00ca 0822     		movs	r2, #8
 2280 00cc 1A70     		strb	r2, [r3]
1515:operate.c     **** // set BT_TX variable indicating that bleutooth is in use as Rx
1516:operate.c     ****                 BT_Tx_STATE = 1;            
 2281              		.loc 1 1516 0
 2282 00ce 073A     		subs	r2, r2, #7
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 69


 2283              	.L351:
 2284 00d0 6D4B     		ldr	r3, .L362+12
 2285              	.L350:
 2286 00d2 1A70     		strb	r2, [r3]
 2287 00d4 1AE0     		b	.L300
 2288              	.LVL178:
 2289              	.L289:
1517:operate.c     ****             }
1518:operate.c     ****         }
1519:operate.c     ****         
1520:operate.c     **** // check if POWER OFF command was received     
1521:operate.c     ****     if (command == 26)
 2290              		.loc 1 1521 0
 2291 00d6 1A2C     		cmp	r4, #26
 2292 00d8 11D1     		bne	.L299
1522:operate.c     ****     {
1523:operate.c     **** // if it was, prepare array to write it to the EEPROM location
1524:operate.c     ****         array[0] =  SYSTEM_STATE;
 2293              		.loc 1 1524 0
 2294 00da 2B78     		ldrb	r3, [r5]
1525:operate.c     ****         array[1] =  DISPLAY_STATE;
 2295              		.loc 1 1525 0
 2296 00dc 6B4F     		ldr	r7, .L362+16
1524:operate.c     ****         array[1] =  DISPLAY_STATE;
 2297              		.loc 1 1524 0
 2298 00de 3370     		strb	r3, [r6]
 2299              		.loc 1 1525 0
 2300 00e0 3B78     		ldrb	r3, [r7]
1526:operate.c     ****         array[2] =  BT_Tx_STATE;
1527:operate.c     ****  // Write data to emulated EEPROM
1528:operate.c     ****         Em_EEPROM_Write(LOGICAL_EEPROM_START, array, LOGICAL_EEPROM_SIZE);         
 2301              		.loc 1 1528 0
 2302 00e2 0322     		movs	r2, #3
1525:operate.c     ****         array[2] =  BT_Tx_STATE;
 2303              		.loc 1 1525 0
 2304 00e4 7370     		strb	r3, [r6, #1]
1526:operate.c     ****         array[2] =  BT_Tx_STATE;
 2305              		.loc 1 1526 0
 2306 00e6 684B     		ldr	r3, .L362+12
 2307              		.loc 1 1528 0
 2308 00e8 3100     		movs	r1, r6
1526:operate.c     ****         array[2] =  BT_Tx_STATE;
 2309              		.loc 1 1526 0
 2310 00ea 1B78     		ldrb	r3, [r3]
 2311              		.loc 1 1528 0
 2312 00ec 0020     		movs	r0, #0
1526:operate.c     ****         array[2] =  BT_Tx_STATE;
 2313              		.loc 1 1526 0
 2314 00ee B370     		strb	r3, [r6, #2]
 2315              		.loc 1 1528 0
 2316 00f0 634B     		ldr	r3, .L362+4
 2317 00f2 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 2318              	.LVL179:
1529:operate.c     **** // set system state to power down mode
1530:operate.c     ****         SYSTEM_STATE = 0;
 2319              		.loc 1 1530 0
 2320 00f6 0023     		movs	r3, #0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 70


 2321 00f8 2B70     		strb	r3, [r5]
1531:operate.c     **** // set display state to power down
1532:operate.c     ****         DISPLAY_STATE = 0;
 2322              		.loc 1 1532 0
 2323 00fa 3B70     		strb	r3, [r7]
 2324 00fc 06E0     		b	.L300
 2325              	.L299:
 2326 00fe 5F4B     		ldr	r3, .L362
1533:operate.c     ****     }
1534:operate.c     ****     
1535:operate.c     **** // check if DISPLAY or yellow_button command was received     
1536:operate.c     ****     if (command == 31)
 2327              		.loc 1 1536 0
 2328 0100 1F2C     		cmp	r4, #31
 2329 0102 00D1     		bne	.LCB2092
 2330 0104 A0E0     		b	.L338	@long jump
 2331              	.LCB2092:
1537:operate.c     ****     {
1538:operate.c     **** // check if system is not in power down state
1539:operate.c     ****         if (SYSTEM_STATE != 0)
1540:operate.c     ****         {
1541:operate.c     **** // if it is not then move to next display state
1542:operate.c     ****             DISPLAY_STATE = DISPLAY_STATE + 1;
1543:operate.c     ****             if (DISPLAY_STATE >= 7)
1544:operate.c     ****             {
1545:operate.c     ****                 DISPLAY_STATE = 1;
1546:operate.c     ****             }
1547:operate.c     ****         }
1548:operate.c     ****     }
1549:operate.c     **** 
1550:operate.c     **** // check if green_button command was received     
1551:operate.c     ****     if (command == 32)
 2332              		.loc 1 1551 0
 2333 0106 202C     		cmp	r4, #32
 2334 0108 00D1     		bne	.LCB2094
 2335 010a A8E0     		b	.L361	@long jump
 2336              	.LCB2094:
 2337              	.L300:
1552:operate.c     ****     {
1553:operate.c     **** // check if system is not in power down state
1554:operate.c     ****         if (SYSTEM_STATE != 0)
1555:operate.c     ****         {
1556:operate.c     **** // if it is not then move to previus display state
1557:operate.c     ****             DISPLAY_STATE = DISPLAY_STATE - 1;
1558:operate.c     ****             if (DISPLAY_STATE <= 0)
1559:operate.c     ****             {
1560:operate.c     ****                 DISPLAY_STATE = 6;
1561:operate.c     ****             }
1562:operate.c     ****         }
1563:operate.c     ****     }
1564:operate.c     ****     
1565:operate.c     **** // check if system is in Player state
1566:operate.c     ****     if (SYSTEM_STATE == 1)
 2338              		.loc 1 1566 0
 2339 010c 5B4B     		ldr	r3, .L362
 2340 010e 1B78     		ldrb	r3, [r3]
 2341 0110 012B     		cmp	r3, #1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 71


 2342 0112 13D1     		bne	.L303
1567:operate.c     ****     {
1568:operate.c     **** // if in player state and command that arrives are relevant to player react to them
1569:operate.c     **** // check OK/GO/PLAY button was pressed     
1570:operate.c     ****         if (command == 20)
1571:operate.c     ****         {
1572:operate.c     **** // sent GO command to RPi ofer UART            
1573:operate.c     ****             UART_UartPutString("-GO+");  
 2343              		.loc 1 1573 0
 2344 0114 5E48     		ldr	r0, .L362+20
1570:operate.c     ****         {
 2345              		.loc 1 1570 0
 2346 0116 142C     		cmp	r4, #20
 2347 0118 0ED0     		beq	.L352
1574:operate.c     ****         }
1575:operate.c     **** // check UP/ STEP > button was pressed     
1576:operate.c     ****         else if (command == 21)
1577:operate.c     ****         {
1578:operate.c     **** // sent UP command to RPi ofer UART            
1579:operate.c     ****             UART_UartPutString("-DOWN+");  
 2348              		.loc 1 1579 0
 2349 011a 5E48     		ldr	r0, .L362+24
1576:operate.c     ****         {
 2350              		.loc 1 1576 0
 2351 011c 152C     		cmp	r4, #21
 2352 011e 0BD0     		beq	.L352
1580:operate.c     ****         }
1581:operate.c     **** // check DOWN/< STEP button was pressed     
1582:operate.c     ****         else if (command == 22)
1583:operate.c     ****         {
1584:operate.c     **** // sent DOWN command to RPi ofer UART            
1585:operate.c     ****             UART_UartPutString("-UP+");  
 2353              		.loc 1 1585 0
 2354 0120 5D48     		ldr	r0, .L362+28
1582:operate.c     ****         {
 2355              		.loc 1 1582 0
 2356 0122 162C     		cmp	r4, #22
 2357 0124 08D0     		beq	.L352
1586:operate.c     ****         }
1587:operate.c     **** // check LEFT/<< button was pressed     
1588:operate.c     ****         else if (command == 23)
1589:operate.c     ****         {
1590:operate.c     **** // sent BACK command to RPi ofer UART            
1591:operate.c     ****             UART_UartPutString("-BACK+");  
 2358              		.loc 1 1591 0
 2359 0126 5D48     		ldr	r0, .L362+32
1588:operate.c     ****         {
 2360              		.loc 1 1588 0
 2361 0128 172C     		cmp	r4, #23
 2362 012a 05D0     		beq	.L352
1592:operate.c     ****         }
1593:operate.c     **** // check RIGHT/>> button was pressed     
1594:operate.c     ****         else if (command == 24)
1595:operate.c     ****         {
1596:operate.c     **** // sent NEXT command to RPi ofer UART            
1597:operate.c     ****             UART_UartPutString("-NEXT+");  
 2363              		.loc 1 1597 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 72


 2364 012c 5C48     		ldr	r0, .L362+36
1594:operate.c     ****         {
 2365              		.loc 1 1594 0
 2366 012e 182C     		cmp	r4, #24
 2367 0130 02D0     		beq	.L352
1598:operate.c     ****         }
1599:operate.c     **** // check STOP button was pressed     
1600:operate.c     ****         else if (command == 25)
 2368              		.loc 1 1600 0
 2369 0132 192C     		cmp	r4, #25
 2370 0134 16D1     		bne	.L312
1601:operate.c     ****         {
1602:operate.c     **** // sent STOP command to RPi ofer UART            
1603:operate.c     ****             UART_UartPutString("-STOP+");  
 2371              		.loc 1 1603 0
 2372 0136 5B48     		ldr	r0, .L362+40
 2373              	.L352:
 2374 0138 FFF7FEFF 		bl	UART_UartPutString
 2375              	.LVL180:
 2376              	.L303:
1604:operate.c     ****         }
1605:operate.c     ****     }
1606:operate.c     ****     
1607:operate.c     **** // check if system is in iRadio state
1608:operate.c     ****     if (SYSTEM_STATE == 2)
 2377              		.loc 1 1608 0
 2378 013c 4F4B     		ldr	r3, .L362
 2379 013e 1B78     		ldrb	r3, [r3]
 2380 0140 022B     		cmp	r3, #2
 2381 0142 0FD1     		bne	.L312
1609:operate.c     ****     {
1610:operate.c     **** // if in iRadio state and command that arrives are relevant to iRadio react to them
1611:operate.c     **** // check OK/GO/PLAY button was pressed     
1612:operate.c     ****         if (command == 20)
1613:operate.c     ****         {
1614:operate.c     **** // sent GO command to RPi ofer UART            
1615:operate.c     ****             UART_UartPutString("-GO+");  
 2382              		.loc 1 1615 0
 2383 0144 5248     		ldr	r0, .L362+20
1612:operate.c     ****         {
 2384              		.loc 1 1612 0
 2385 0146 142C     		cmp	r4, #20
 2386 0148 0AD0     		beq	.L353
1616:operate.c     ****         }
1617:operate.c     **** // check UP/STEP > or RIGHT/>> button or was pressed     
1618:operate.c     ****         else if ((command == 21) | (command == 24))
 2387              		.loc 1 1618 0
 2388 014a 152C     		cmp	r4, #21
 2389 014c 01D0     		beq	.L340
 2390 014e 182C     		cmp	r4, #24
 2391 0150 01D1     		bne	.L314
 2392              	.L340:
1619:operate.c     ****         {
1620:operate.c     **** // sent UP command to RPi ofer UART            
1621:operate.c     ****             UART_UartPutString("-DOWN+");  
 2393              		.loc 1 1621 0
 2394 0152 5048     		ldr	r0, .L362+24
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 73


 2395 0154 04E0     		b	.L353
 2396              	.L314:
1622:operate.c     ****         }
1623:operate.c     **** // check DOWN/< STEP or LEFT/<< button or was pressed     
1624:operate.c     ****         else if ((command == 22) | (command == 23))
 2397              		.loc 1 1624 0
 2398 0156 2300     		movs	r3, r4
 2399 0158 163B     		subs	r3, r3, #22
 2400 015a 012B     		cmp	r3, #1
 2401 015c 02D8     		bhi	.L312
1625:operate.c     ****         {
1626:operate.c     **** // sent DOWN command to RPi ofer UART            
1627:operate.c     ****             UART_UartPutString("-UP+");  
 2402              		.loc 1 1627 0
 2403 015e 4E48     		ldr	r0, .L362+28
 2404              	.L353:
 2405 0160 FFF7FEFF 		bl	UART_UartPutString
 2406              	.LVL181:
 2407              	.L312:
1628:operate.c     ****         }
1629:operate.c     ****     }    
1630:operate.c     **** 
1631:operate.c     **** // check if system is in DAB Radio state
1632:operate.c     ****     if (SYSTEM_STATE == 3)
 2408              		.loc 1 1632 0
 2409 0164 454D     		ldr	r5, .L362
 2410 0166 2B78     		ldrb	r3, [r5]
 2411 0168 032B     		cmp	r3, #3
 2412 016a 0FD1     		bne	.L316
1633:operate.c     ****     {
1634:operate.c     **** // if in DAB Radio state and command that arrives are relevant to DAB Radio react to them
1635:operate.c     **** // check OK/GO/PLAY button was pressed     
1636:operate.c     ****         if (command == 20)
1637:operate.c     ****         {
1638:operate.c     **** // sent GO command to RPi ofer UART            
1639:operate.c     ****             UART_UartPutString("-GO+");  
 2413              		.loc 1 1639 0
 2414 016c 4848     		ldr	r0, .L362+20
1636:operate.c     ****         {
 2415              		.loc 1 1636 0
 2416 016e 142C     		cmp	r4, #20
 2417 0170 0AD0     		beq	.L354
1640:operate.c     ****         }
1641:operate.c     **** // check UP/STEP > or RIGHT/>> button or was pressed     
1642:operate.c     ****         else if ((command == 21) | (command == 24))
 2418              		.loc 1 1642 0
 2419 0172 152C     		cmp	r4, #21
 2420 0174 01D0     		beq	.L341
 2421 0176 182C     		cmp	r4, #24
 2422 0178 01D1     		bne	.L318
 2423              	.L341:
1643:operate.c     ****         {
1644:operate.c     **** // sent UP command to RPi ofer UART            
1645:operate.c     ****             UART_UartPutString("-DOWN+");  
 2424              		.loc 1 1645 0
 2425 017a 4648     		ldr	r0, .L362+24
 2426 017c 04E0     		b	.L354
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 74


 2427              	.L318:
1646:operate.c     ****         }
1647:operate.c     **** // check DOWN/< STEP or LEFT/<< button or was pressed     
1648:operate.c     ****         else if ((command == 22) | (command == 23))
 2428              		.loc 1 1648 0
 2429 017e 2300     		movs	r3, r4
 2430 0180 163B     		subs	r3, r3, #22
 2431 0182 012B     		cmp	r3, #1
 2432 0184 02D8     		bhi	.L316
1649:operate.c     ****         {
1650:operate.c     **** // sent DOWN command to RPi ofer UART            
1651:operate.c     ****             UART_UartPutString("-UP+");  
 2433              		.loc 1 1651 0
 2434 0186 4448     		ldr	r0, .L362+28
 2435              	.L354:
 2436 0188 FFF7FEFF 		bl	UART_UartPutString
 2437              	.LVL182:
 2438              	.L316:
1652:operate.c     ****         }
1653:operate.c     ****     }     
1654:operate.c     ****     
1655:operate.c     **** // check if FM radio station number command was intercepted     
1656:operate.c     ****     if ((command >= 41) & (command <= 60))
 2439              		.loc 1 1656 0
 2440 018c 2300     		movs	r3, r4
 2441 018e 293B     		subs	r3, r3, #41
 2442 0190 132B     		cmp	r3, #19
 2443 0192 1BD8     		bhi	.L321
1657:operate.c     ****     {
1658:operate.c     **** // if so, store radio station nubmer in globaal variable
1659:operate.c     ****         FM_RADIO_STATION = command - 40;
 2444              		.loc 1 1659 0
 2445 0194 444E     		ldr	r6, .L362+44
 2446 0196 0133     		adds	r3, r3, #1
 2447 0198 3370     		strb	r3, [r6]
1660:operate.c     **** // if in RM/RDS Radio state and command that user changes RF radio stations, react to them
1661:operate.c     ****     if (SYSTEM_STATE == 6)
 2448              		.loc 1 1661 0
 2449 019a 2B78     		ldrb	r3, [r5]
 2450 019c 062B     		cmp	r3, #6
 2451 019e 15D1     		bne	.L321
1662:operate.c     ****         {
1663:operate.c     ****             UART_UartPutString("-FM_");    
 2452              		.loc 1 1663 0
 2453 01a0 4248     		ldr	r0, .L362+48
 2454 01a2 FFF7FEFF 		bl	UART_UartPutString
 2455              	.LVL183:
1664:operate.c     ****             UART_UartPutChar('0' + (FM_RADIO_STATION / 10));               
 2456              		.loc 1 1664 0
 2457 01a6 0A21     		movs	r1, #10
 2458 01a8 3078     		ldrb	r0, [r6]
 2459 01aa FFF7FEFF 		bl	__aeabi_uidiv
 2460              	.LVL184:
 2461 01ae C0B2     		uxtb	r0, r0
 2462 01b0 3030     		adds	r0, r0, #48
 2463 01b2 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 2464              	.LVL185:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 75


1665:operate.c     ****             UART_UartPutChar('0' + (FM_RADIO_STATION % 10));
 2465              		.loc 1 1665 0
 2466 01b6 3078     		ldrb	r0, [r6]
 2467 01b8 0A21     		movs	r1, #10
 2468 01ba FFF7FEFF 		bl	__aeabi_uidivmod
 2469              	.LVL186:
 2470 01be C8B2     		uxtb	r0, r1
 2471 01c0 3030     		adds	r0, r0, #48
 2472 01c2 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 2473              	.LVL187:
1666:operate.c     ****             UART_UartPutString("+");  
 2474              		.loc 1 1666 0
 2475 01c6 3A48     		ldr	r0, .L362+52
 2476 01c8 FFF7FEFF 		bl	UART_UartPutString
 2477              	.LVL188:
 2478              	.L321:
1667:operate.c     ****         }
1668:operate.c     ****     }    
1669:operate.c     **** 
1670:operate.c     **** // check if system is in Bluetooth Rx state
1671:operate.c     ****     if (SYSTEM_STATE == 7)
 2479              		.loc 1 1671 0
 2480 01cc 2B78     		ldrb	r3, [r5]
 2481 01ce 072B     		cmp	r3, #7
 2482 01d0 23D1     		bne	.L324
1672:operate.c     ****     {
1673:operate.c     **** // if in Bluetooth Rx state and command that arrives are relevant to BT Rx react to them
1674:operate.c     **** // check OK/GO/PLAY button was pressed     
1675:operate.c     ****         if (command == 20)
1676:operate.c     ****         {
1677:operate.c     **** // sent to BT module command to pause currently played song
1678:operate.c     ****             BT_control(2, 4); 
 2483              		.loc 1 1678 0
 2484 01d2 0421     		movs	r1, #4
1675:operate.c     ****         {
 2485              		.loc 1 1675 0
 2486 01d4 142C     		cmp	r4, #20
 2487 01d6 02D0     		beq	.L355
1679:operate.c     **** // start display timer to delay Bluetooth status information             
1680:operate.c     ****             DISPLAY_Timer_Start();
1681:operate.c     ****         }
1682:operate.c     **** // check MENU(onBeo4)/TURN(on MCP) button was pressed     
1683:operate.c     ****         if (command == 27)
 2488              		.loc 1 1683 0
 2489 01d8 1B2C     		cmp	r4, #27
 2490 01da 06D1     		bne	.L327
1684:operate.c     ****         {
1685:operate.c     **** // sent to BT module command to start pairing            
1686:operate.c     ****             BT_control(2, 1);
 2491              		.loc 1 1686 0
 2492 01dc 0121     		movs	r1, #1
 2493              	.L355:
 2494 01de 0220     		movs	r0, #2
 2495 01e0 FFF7FEFF 		bl	BT_control
 2496              	.LVL189:
1687:operate.c     **** // start display timer to delay Bluetooth status information             
1688:operate.c     ****             DISPLAY_Timer_Start();
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 76


 2497              		.loc 1 1688 0
 2498 01e4 FFF7FEFF 		bl	DISPLAY_Timer_Start
 2499              	.LVL190:
 2500 01e8 02E0     		b	.L326
 2501              	.L327:
1689:operate.c     ****         }
1690:operate.c     **** // check EXIT(on Beo4)/RESET(on MCP) button was pressed     
1691:operate.c     ****         if (command == 28)
1692:operate.c     ****         {
1693:operate.c     **** // sent to BT module command to clear all recorded devices            
1694:operate.c     ****             BT_control(2, 3);
 2502              		.loc 1 1694 0
 2503 01ea 0321     		movs	r1, #3
1691:operate.c     ****         {
 2504              		.loc 1 1691 0
 2505 01ec 1C2C     		cmp	r4, #28
 2506 01ee 0AD0     		beq	.L360
 2507              	.L326:
1695:operate.c     **** // start display timer to delay Bluetooth status information             
1696:operate.c     ****             DISPLAY_Timer_Start();
1697:operate.c     ****         }
1698:operate.c     **** // check UP/STEP > or RIGHT/>> button or was pressed     
1699:operate.c     ****         else if ((command == 21) | (command == 24))
 2508              		.loc 1 1699 0
 2509 01f0 152C     		cmp	r4, #21
 2510 01f2 01D0     		beq	.L342
 2511 01f4 182C     		cmp	r4, #24
 2512 01f6 01D1     		bne	.L328
 2513              	.L342:
1700:operate.c     ****         {
1701:operate.c     **** // sent to BT module command to move to previus song            
1702:operate.c     ****             BT_control(2, 6); 
 2514              		.loc 1 1702 0
 2515 01f8 0621     		movs	r1, #6
 2516 01fa 04E0     		b	.L360
 2517              	.L328:
1703:operate.c     **** // start display timer to delay Bluetooth status information             
1704:operate.c     ****             DISPLAY_Timer_Start();
1705:operate.c     ****         }
1706:operate.c     **** // check DOWN/< STEP or LEFT/<< button or was pressed     
1707:operate.c     ****         else if ((command == 22) | (command == 23))
 2518              		.loc 1 1707 0
 2519 01fc 2300     		movs	r3, r4
 2520 01fe 163B     		subs	r3, r3, #22
 2521 0200 012B     		cmp	r3, #1
 2522 0202 02D8     		bhi	.L330
1708:operate.c     ****         {
1709:operate.c     **** // sent to BT module comand to move to next song            
1710:operate.c     ****             BT_control(2, 5); 
 2523              		.loc 1 1710 0
 2524 0204 0521     		movs	r1, #5
 2525              	.L360:
 2526 0206 0220     		movs	r0, #2
 2527 0208 03E0     		b	.L356
 2528              	.L330:
1711:operate.c     **** // start display timer to delay Bluetooth status information             
1712:operate.c     ****             DISPLAY_Timer_Start();
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 77


1713:operate.c     ****         }
1714:operate.c     **** // check STOP button was pressed     
1715:operate.c     ****         else if (command == 25)
 2529              		.loc 1 1715 0
 2530 020a 192C     		cmp	r4, #25
 2531 020c 05D1     		bne	.L324
1716:operate.c     ****         {
1717:operate.c     **** // sent to BT module command to re-connect            
1718:operate.c     ****             BT_control(2, 2);
 2532              		.loc 1 1718 0
 2533 020e 0221     		movs	r1, #2
 2534 0210 0800     		movs	r0, r1
 2535              	.L356:
 2536 0212 FFF7FEFF 		bl	BT_control
 2537              	.LVL191:
1719:operate.c     **** // start display timer to delay Bluetooth status information             
1720:operate.c     ****             DISPLAY_Timer_Start();
 2538              		.loc 1 1720 0
 2539 0216 FFF7FEFF 		bl	DISPLAY_Timer_Start
 2540              	.LVL192:
 2541              	.L324:
1721:operate.c     ****         }
1722:operate.c     ****     }      
1723:operate.c     ****     
1724:operate.c     **** // check if system is in Bluetooth Tx state
1725:operate.c     ****     if (SYSTEM_STATE == 8)
 2542              		.loc 1 1725 0
 2543 021a 2B78     		ldrb	r3, [r5]
 2544 021c 082B     		cmp	r3, #8
 2545 021e 2BD1     		bne	.L345
1726:operate.c     ****     {
1727:operate.c     **** // if in Bluetooth Tx state and command that arrives are relevant to BT Tx react to them
1728:operate.c     **** // check OK/GO/PLAY button was pressed     
1729:operate.c     ****         if (command == 20)
1730:operate.c     ****         {
1731:operate.c     **** // sent to BT module command to mute currently played audio
1732:operate.c     ****             BT_control(1, 4);  
 2546              		.loc 1 1732 0
 2547 0220 0421     		movs	r1, #4
1729:operate.c     ****         {
 2548              		.loc 1 1729 0
 2549 0222 142C     		cmp	r4, #20
 2550 0224 0AD0     		beq	.L357
1733:operate.c     **** // start display timer to delay Bluetooth status information             
1734:operate.c     ****             DISPLAY_Timer_Start();
1735:operate.c     ****         }
1736:operate.c     **** // check MENU(onBeo4)/TURN(on MCP) button was pressed     
1737:operate.c     ****         if (command == 27)
 2551              		.loc 1 1737 0
 2552 0226 1B2C     		cmp	r4, #27
 2553 0228 02D1     		bne	.L336
1738:operate.c     ****         {
1739:operate.c     **** // sent to BT module command to start pairing            
1740:operate.c     ****             BT_control(1, 1);
 2554              		.loc 1 1740 0
 2555 022a 0121     		movs	r1, #1
 2556 022c 0800     		movs	r0, r1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 78


 2557 022e 06E0     		b	.L358
 2558              	.L336:
1741:operate.c     **** // start display timer to delay Bluetooth status information             
1742:operate.c     ****             DISPLAY_Timer_Start();
1743:operate.c     ****         }
1744:operate.c     **** // check EXIT(on Beo4)/RESET(on MCP) button was pressed     
1745:operate.c     ****         if (command == 28)
1746:operate.c     ****         {
1747:operate.c     **** // sent to BT module command to clear all recorded devices            
1748:operate.c     ****             BT_control(1, 3);
 2559              		.loc 1 1748 0
 2560 0230 0321     		movs	r1, #3
1745:operate.c     ****         {
 2561              		.loc 1 1745 0
 2562 0232 1C2C     		cmp	r4, #28
 2563 0234 02D0     		beq	.L357
1749:operate.c     **** // start display timer to delay Bluetooth status information             
1750:operate.c     ****             DISPLAY_Timer_Start();
1751:operate.c     ****         }
1752:operate.c     **** // check STOP button was pressed     
1753:operate.c     ****         else if (command == 25)
 2564              		.loc 1 1753 0
 2565 0236 192C     		cmp	r4, #25
 2566 0238 1ED1     		bne	.L345
1754:operate.c     ****         {
1755:operate.c     **** // sent to BT module command to re-connect            
1756:operate.c     ****             BT_control(1, 2);
 2567              		.loc 1 1756 0
 2568 023a 0221     		movs	r1, #2
 2569              	.L357:
 2570 023c 0120     		movs	r0, #1
 2571              	.L358:
 2572 023e FFF7FEFF 		bl	BT_control
 2573              	.LVL193:
1757:operate.c     **** // start display timer to delay Bluetooth status information             
1758:operate.c     ****             DISPLAY_Timer_Start();
 2574              		.loc 1 1758 0
 2575 0242 FFF7FEFF 		bl	DISPLAY_Timer_Start
 2576              	.LVL194:
1759:operate.c     ****         }
1760:operate.c     ****     }      
1761:operate.c     ****     
1762:operate.c     **** // clear command number after that
1763:operate.c     ****     command = 0;
1764:operate.c     ****     
1765:operate.c     **** // return 0 indicating no button press action
1766:operate.c     ****     return 0;
 2577              		.loc 1 1766 0
 2578 0246 17E0     		b	.L345
 2579              	.LVL195:
 2580              	.L338:
1539:operate.c     ****         {
 2581              		.loc 1 1539 0
 2582 0248 1B78     		ldrb	r3, [r3]
 2583 024a 002B     		cmp	r3, #0
 2584 024c 8AD0     		beq	.L312
1542:operate.c     ****             if (DISPLAY_STATE >= 7)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 79


 2585              		.loc 1 1542 0
 2586 024e 0F4A     		ldr	r2, .L362+16
 2587 0250 1378     		ldrb	r3, [r2]
 2588 0252 0133     		adds	r3, r3, #1
 2589 0254 DBB2     		uxtb	r3, r3
1543:operate.c     ****             {
 2590              		.loc 1 1543 0
 2591 0256 062B     		cmp	r3, #6
 2592 0258 0CD9     		bls	.L349
1545:operate.c     ****             }
 2593              		.loc 1 1545 0
 2594 025a 0123     		movs	r3, #1
 2595 025c 0AE0     		b	.L349
 2596              	.L361:
1554:operate.c     ****         {
 2597              		.loc 1 1554 0
 2598 025e 1B78     		ldrb	r3, [r3]
 2599 0260 002B     		cmp	r3, #0
 2600 0262 00D1     		bne	.LCB2345
 2601 0264 6AE7     		b	.L303	@long jump
 2602              	.LCB2345:
1557:operate.c     ****             if (DISPLAY_STATE <= 0)
 2603              		.loc 1 1557 0
 2604 0266 094A     		ldr	r2, .L362+16
 2605 0268 1378     		ldrb	r3, [r2]
 2606 026a 013B     		subs	r3, r3, #1
 2607 026c DBB2     		uxtb	r3, r3
1558:operate.c     ****             {
 2608              		.loc 1 1558 0
 2609 026e 002B     		cmp	r3, #0
 2610 0270 00D1     		bne	.L349
1560:operate.c     ****             }
 2611              		.loc 1 1560 0
 2612 0272 0623     		movs	r3, #6
 2613              	.L349:
 2614 0274 1370     		strb	r3, [r2]
 2615 0276 49E7     		b	.L300
 2616              	.LVL196:
 2617              	.L345:
1767:operate.c     **** }
 2618              		.loc 1 1767 0
 2619 0278 0020     		movs	r0, #0
 2620              		@ sp needed
 2621 027a FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2622              	.L363:
 2623              		.align	2
 2624              	.L362:
 2625 027c 00000000 		.word	SYSTEM_STATE
 2626 0280 00000000 		.word	Em_EEPROM_context
 2627 0284 00000000 		.word	eepromArray
 2628 0288 00000000 		.word	BT_Tx_STATE
 2629 028c 00000000 		.word	DISPLAY_STATE
 2630 0290 BF000000 		.word	.LC45
 2631 0294 C4000000 		.word	.LC47
 2632 0298 CB000000 		.word	.LC49
 2633 029c D0000000 		.word	.LC51
 2634 02a0 D7000000 		.word	.LC53
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 80


 2635 02a4 DE000000 		.word	.LC55
 2636 02a8 00000000 		.word	.LANCHOR1
 2637 02ac E5000000 		.word	.LC58
 2638 02b0 EA000000 		.word	.LC60
 2639              		.cfi_endproc
 2640              	.LFE34:
 2641              		.size	datalink_check, .-datalink_check
 2642              		.global	counter
 2643              		.comm	dummyBuffer,28,1
 2644              		.comm	DISPLAY_UPDATE,1,1
 2645              		.comm	DATALINK_TABLE_COUNTER_MAX,1,1
 2646              		.comm	DATALINK_TABLE_COUNTER,1,1
 2647              		.comm	DATALINK_TABLE,64,1
 2648              		.comm	PWR_OK_LONG_V,1,1
 2649              		.comm	MODE_LONG_V,1,1
 2650              		.comm	PWR_OK_SHORT_V,1,1
 2651              		.comm	MODE_SHORT_V,1,1
 2652              		.comm	current_PSUstate,5,1
 2653              		.comm	next_PSUstate,5,1
 2654              		.comm	new_disp_ctrl2,1,1
 2655              		.comm	new_disp_ctrl1,1,1
 2656              		.comm	new_display_data_buffer,24,1
 2657              		.comm	new_display_data_flag,1,1
 2658              		.comm	BT_Tx_STATE,1,1
 2659              		.comm	DISPLAY_STATE,1,1
 2660              		.comm	SYSTEM_STATE,1,1
 2661              		.comm	eepromArray,3,1
 2662              		.comm	array,3,1
 2663              		.global	FM_RADIO_STATION
 2664              		.section	.rodata.str1.1,"aMS",%progbits,1
 2665              	.LC3:
 2666 0000 506F7765 		.ascii	"Powering down... Bye Bye\000"
 2666      72696E67 
 2666      20646F77 
 2666      6E2E2E2E 
 2666      20427965 
 2667              	.LC6:
 2668 0019 2D534855 		.ascii	"-SHUTDOWN+\000"
 2668      54444F57 
 2668      4E2B00
 2669              	.LC9:
 2670 0024 2D506C61 		.ascii	"-Player+\000"
 2670      7965722B 
 2670      00
 2671              	.LC11:
 2672 002d 426F6F74 		.ascii	"Booting up ...          \000"
 2672      696E6720 
 2672      7570202E 
 2672      2E2E2020 
 2672      20202020 
 2673              	.LC16:
 2674 0046 2D695261 		.ascii	"-iRadio+\000"
 2674      64696F2B 
 2674      00
 2675              	.LC18:
 2676 004f 2D444142 		.ascii	"-DAB+\000"
 2676      2B00
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 81


 2677              	.LC20:
 2678 0055 2D524453 		.ascii	"-RDS+\000"
 2678      2B00
 2679              	.LC31:
 2680 005b 41757820 		.ascii	"Aux IN mode             \000"
 2680      494E206D 
 2680      6F646520 
 2680      20202020 
 2680      20202020 
 2681              	.LC34:
 2682 0074 434C4F43 		.ascii	"CLOCK ONE               \000"
 2682      4B204F4E 
 2682      45202020 
 2682      20202020 
 2682      20202020 
 2683              	.LC36:
 2684 008d 434C4F43 		.ascii	"CLOCK TWO               \000"
 2684      4B205457 
 2684      4F202020 
 2684      20202020 
 2684      20202020 
 2685              	.LC38:
 2686 00a6 20202020 		.ascii	"                        \000"
 2686      20202020 
 2686      20202020 
 2686      20202020 
 2686      20202020 
 2687              	.LC45:
 2688 00bf 2D474F2B 		.ascii	"-GO+\000"
 2688      00
 2689              	.LC47:
 2690 00c4 2D444F57 		.ascii	"-DOWN+\000"
 2690      4E2B00
 2691              	.LC49:
 2692 00cb 2D55502B 		.ascii	"-UP+\000"
 2692      00
 2693              	.LC51:
 2694 00d0 2D424143 		.ascii	"-BACK+\000"
 2694      4B2B00
 2695              	.LC53:
 2696 00d7 2D4E4558 		.ascii	"-NEXT+\000"
 2696      542B00
 2697              	.LC55:
 2698 00de 2D53544F 		.ascii	"-STOP+\000"
 2698      502B00
 2699              	.LC58:
 2700 00e5 2D464D5F 		.ascii	"-FM_\000"
 2700      00
 2701              	.LC60:
 2702 00ea 2B00     		.ascii	"+\000"
 2703              		.data
 2704              		.set	.LANCHOR1,. + 0
 2705              		.type	FM_RADIO_STATION, %object
 2706              		.size	FM_RADIO_STATION, 1
 2707              	FM_RADIO_STATION:
 2708 0000 01       		.byte	1
 2709              		.bss
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 82


 2710              		.set	.LANCHOR0,. + 0
 2711              		.type	counter, %object
 2712              		.size	counter, 1
 2713              	counter:
 2714 0000 00       		.space	1
 2715              		.text
 2716              	.Letext0:
 2717              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 2718              		.file 3 "Generated_Source\\PSoC4/cy_em_eeprom.h"
 2719              		.file 4 "./modes.h"
 2720              		.file 5 "Generated_Source\\PSoC4/Em_EEPROM.h"
 2721              		.file 6 "./inputs.h"
 2722              		.file 7 "./spi_int.h"
 2723              		.file 8 "Generated_Source\\PSoC4/LED.h"
 2724              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2725              		.file 10 "Generated_Source\\PSoC4/UART_SPI_UART.h"
 2726              		.file 11 "Generated_Source\\PSoC4/CyLib.h"
 2727              		.file 12 "Generated_Source\\PSoC4/DISPLAY_Timer.h"
 2728              		.section	.debug_info,"",%progbits
 2729              	.Ldebug_info0:
 2730 0000 C8100000 		.4byte	0x10c8
 2731 0004 0400     		.2byte	0x4
 2732 0006 00000000 		.4byte	.Ldebug_abbrev0
 2733 000a 04       		.byte	0x4
 2734 000b 01       		.uleb128 0x1
 2735 000c F0030000 		.4byte	.LASF74
 2736 0010 0C       		.byte	0xc
 2737 0011 3B030000 		.4byte	.LASF75
 2738 0015 4A020000 		.4byte	.LASF76
 2739 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2740 001d 00000000 		.4byte	0
 2741 0021 00000000 		.4byte	.Ldebug_line0
 2742 0025 02       		.uleb128 0x2
 2743 0026 01       		.byte	0x1
 2744 0027 06       		.byte	0x6
 2745 0028 09020000 		.4byte	.LASF0
 2746 002c 02       		.uleb128 0x2
 2747 002d 01       		.byte	0x1
 2748 002e 08       		.byte	0x8
 2749 002f BC010000 		.4byte	.LASF1
 2750 0033 02       		.uleb128 0x2
 2751 0034 02       		.byte	0x2
 2752 0035 05       		.byte	0x5
 2753 0036 2A000000 		.4byte	.LASF2
 2754 003a 02       		.uleb128 0x2
 2755 003b 02       		.byte	0x2
 2756 003c 07       		.byte	0x7
 2757 003d 01030000 		.4byte	.LASF3
 2758 0041 02       		.uleb128 0x2
 2759 0042 04       		.byte	0x4
 2760 0043 05       		.byte	0x5
 2761 0044 33010000 		.4byte	.LASF4
 2762 0048 02       		.uleb128 0x2
 2763 0049 04       		.byte	0x4
 2764 004a 07       		.byte	0x7
 2765 004b 99030000 		.4byte	.LASF5
 2766 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 83


 2767 0050 08       		.byte	0x8
 2768 0051 05       		.byte	0x5
 2769 0052 02010000 		.4byte	.LASF6
 2770 0056 02       		.uleb128 0x2
 2771 0057 08       		.byte	0x8
 2772 0058 07       		.byte	0x7
 2773 0059 15020000 		.4byte	.LASF7
 2774 005d 03       		.uleb128 0x3
 2775 005e 04       		.byte	0x4
 2776 005f 05       		.byte	0x5
 2777 0060 696E7400 		.ascii	"int\000"
 2778 0064 02       		.uleb128 0x2
 2779 0065 04       		.byte	0x4
 2780 0066 07       		.byte	0x7
 2781 0067 77020000 		.4byte	.LASF8
 2782 006b 04       		.uleb128 0x4
 2783 006c D1000000 		.4byte	.LASF9
 2784 0070 02       		.byte	0x2
 2785 0071 F701     		.2byte	0x1f7
 2786 0073 2C000000 		.4byte	0x2c
 2787 0077 04       		.uleb128 0x4
 2788 0078 84030000 		.4byte	.LASF10
 2789 007c 02       		.byte	0x2
 2790 007d F901     		.2byte	0x1f9
 2791 007f 48000000 		.4byte	0x48
 2792 0083 02       		.uleb128 0x2
 2793 0084 04       		.byte	0x4
 2794 0085 04       		.byte	0x4
 2795 0086 EE000000 		.4byte	.LASF11
 2796 008a 02       		.uleb128 0x2
 2797 008b 08       		.byte	0x8
 2798 008c 04       		.byte	0x4
 2799 008d AB030000 		.4byte	.LASF12
 2800 0091 02       		.uleb128 0x2
 2801 0092 01       		.byte	0x1
 2802 0093 08       		.byte	0x8
 2803 0094 23030000 		.4byte	.LASF13
 2804 0098 02       		.uleb128 0x2
 2805 0099 08       		.byte	0x8
 2806 009a 04       		.byte	0x4
 2807 009b 00000000 		.4byte	.LASF14
 2808 009f 02       		.uleb128 0x2
 2809 00a0 04       		.byte	0x4
 2810 00a1 07       		.byte	0x7
 2811 00a2 34000000 		.4byte	.LASF15
 2812 00a6 05       		.uleb128 0x5
 2813 00a7 1C       		.byte	0x1c
 2814 00a8 03       		.byte	0x3
 2815 00a9 1601     		.2byte	0x116
 2816 00ab 18010000 		.4byte	0x118
 2817 00af 06       		.uleb128 0x6
 2818 00b0 45030000 		.4byte	.LASF16
 2819 00b4 03       		.byte	0x3
 2820 00b5 1B01     		.2byte	0x11b
 2821 00b7 77000000 		.4byte	0x77
 2822 00bb 00       		.byte	0
 2823 00bc 06       		.uleb128 0x6
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 84


 2824 00bd 06050000 		.4byte	.LASF17
 2825 00c1 03       		.byte	0x3
 2826 00c2 2001     		.2byte	0x120
 2827 00c4 77000000 		.4byte	0x77
 2828 00c8 04       		.byte	0x4
 2829 00c9 06       		.uleb128 0x6
 2830 00ca E0040000 		.4byte	.LASF18
 2831 00ce 03       		.byte	0x3
 2832 00cf 2301     		.2byte	0x123
 2833 00d1 77000000 		.4byte	0x77
 2834 00d5 08       		.byte	0x8
 2835 00d6 06       		.uleb128 0x6
 2836 00d7 0C000000 		.4byte	.LASF19
 2837 00db 03       		.byte	0x3
 2838 00dc 2601     		.2byte	0x126
 2839 00de 77000000 		.4byte	0x77
 2840 00e2 0C       		.byte	0xc
 2841 00e3 06       		.uleb128 0x6
 2842 00e4 99040000 		.4byte	.LASF20
 2843 00e8 03       		.byte	0x3
 2844 00e9 2B01     		.2byte	0x12b
 2845 00eb 77000000 		.4byte	0x77
 2846 00ef 10       		.byte	0x10
 2847 00f0 06       		.uleb128 0x6
 2848 00f1 5E030000 		.4byte	.LASF21
 2849 00f5 03       		.byte	0x3
 2850 00f6 2E01     		.2byte	0x12e
 2851 00f8 6B000000 		.4byte	0x6b
 2852 00fc 14       		.byte	0x14
 2853 00fd 06       		.uleb128 0x6
 2854 00fe 8F000000 		.4byte	.LASF22
 2855 0102 03       		.byte	0x3
 2856 0103 3301     		.2byte	0x133
 2857 0105 6B000000 		.4byte	0x6b
 2858 0109 15       		.byte	0x15
 2859 010a 06       		.uleb128 0x6
 2860 010b 84020000 		.4byte	.LASF23
 2861 010f 03       		.byte	0x3
 2862 0110 3601     		.2byte	0x136
 2863 0112 77000000 		.4byte	0x77
 2864 0116 18       		.byte	0x18
 2865 0117 00       		.byte	0
 2866 0118 04       		.uleb128 0x4
 2867 0119 6C030000 		.4byte	.LASF24
 2868 011d 03       		.byte	0x3
 2869 011e 3701     		.2byte	0x137
 2870 0120 A6000000 		.4byte	0xa6
 2871 0124 07       		.uleb128 0x7
 2872 0125 7E040000 		.4byte	.LASF77
 2873 0129 05       		.byte	0x5
 2874 012a 04       		.byte	0x4
 2875 012b 2E       		.byte	0x2e
 2876 012c 6D010000 		.4byte	0x16d
 2877 0130 08       		.uleb128 0x8
 2878 0131 9D010000 		.4byte	.LASF25
 2879 0135 04       		.byte	0x4
 2880 0136 2F       		.byte	0x2f
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 85


 2881 0137 6B000000 		.4byte	0x6b
 2882 013b 00       		.byte	0
 2883 013c 08       		.uleb128 0x8
 2884 013d 14030000 		.4byte	.LASF26
 2885 0141 04       		.byte	0x4
 2886 0142 30       		.byte	0x30
 2887 0143 6B000000 		.4byte	0x6b
 2888 0147 01       		.byte	0x1
 2889 0148 08       		.uleb128 0x8
 2890 0149 6D010000 		.4byte	.LASF27
 2891 014d 04       		.byte	0x4
 2892 014e 31       		.byte	0x31
 2893 014f 6B000000 		.4byte	0x6b
 2894 0153 02       		.byte	0x2
 2895 0154 08       		.uleb128 0x8
 2896 0155 9D000000 		.4byte	.LASF28
 2897 0159 04       		.byte	0x4
 2898 015a 32       		.byte	0x32
 2899 015b 6B000000 		.4byte	0x6b
 2900 015f 03       		.byte	0x3
 2901 0160 08       		.uleb128 0x8
 2902 0161 28030000 		.4byte	.LASF29
 2903 0165 04       		.byte	0x4
 2904 0166 33       		.byte	0x33
 2905 0167 6B000000 		.4byte	0x6b
 2906 016b 04       		.byte	0x4
 2907 016c 00       		.byte	0
 2908 016d 09       		.uleb128 0x9
 2909 016e 17000000 		.4byte	.LASF30
 2910 0172 04       		.byte	0x4
 2911 0173 36       		.byte	0x36
 2912 0174 24010000 		.4byte	0x124
 2913 0178 0A       		.uleb128 0xa
 2914 0179 C5030000 		.4byte	.LASF78
 2915 017d 01       		.byte	0x1
 2916 017e 33       		.byte	0x33
 2917 017f 6B000000 		.4byte	0x6b
 2918 0183 00000000 		.4byte	.LFB32
 2919 0187 F4090000 		.4byte	.LFE32-.LFB32
 2920 018b 01       		.uleb128 0x1
 2921 018c 9C       		.byte	0x9c
 2922 018d 100C0000 		.4byte	0xc10
 2923 0191 0B       		.uleb128 0xb
 2924 0192 D2010000 		.4byte	.LASF31
 2925 0196 01       		.byte	0x1
 2926 0197 3B       		.byte	0x3b
 2927 0198 6B000000 		.4byte	0x6b
 2928 019c 00000000 		.4byte	.LLST0
 2929 01a0 0C       		.uleb128 0xc
 2930 01a1 28000000 		.4byte	.LVL0
 2931 01a5 01100000 		.4byte	0x1001
 2932 01a9 B9010000 		.4byte	0x1b9
 2933 01ad 0D       		.uleb128 0xd
 2934 01ae 01       		.uleb128 0x1
 2935 01af 50       		.byte	0x50
 2936 01b0 02       		.uleb128 0x2
 2937 01b1 7D       		.byte	0x7d
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 86


 2938 01b2 00       		.sleb128 0
 2939 01b3 0D       		.uleb128 0xd
 2940 01b4 01       		.uleb128 0x1
 2941 01b5 51       		.byte	0x51
 2942 01b6 01       		.uleb128 0x1
 2943 01b7 32       		.byte	0x32
 2944 01b8 00       		.byte	0
 2945 01b9 0C       		.uleb128 0xc
 2946 01ba 32000000 		.4byte	.LVL1
 2947 01be 0C100000 		.4byte	0x100c
 2948 01c2 D8010000 		.4byte	0x1d8
 2949 01c6 0D       		.uleb128 0xd
 2950 01c7 01       		.uleb128 0x1
 2951 01c8 50       		.byte	0x50
 2952 01c9 02       		.uleb128 0x2
 2953 01ca 74       		.byte	0x74
 2954 01cb 00       		.sleb128 0
 2955 01cc 0D       		.uleb128 0xd
 2956 01cd 01       		.uleb128 0x1
 2957 01ce 51       		.byte	0x51
 2958 01cf 02       		.uleb128 0x2
 2959 01d0 7D       		.byte	0x7d
 2960 01d1 00       		.sleb128 0
 2961 01d2 0D       		.uleb128 0xd
 2962 01d3 01       		.uleb128 0x1
 2963 01d4 52       		.byte	0x52
 2964 01d5 01       		.uleb128 0x1
 2965 01d6 35       		.byte	0x35
 2966 01d7 00       		.byte	0
 2967 01d8 0C       		.uleb128 0xc
 2968 01d9 3C000000 		.4byte	.LVL2
 2969 01dd 0C100000 		.4byte	0x100c
 2970 01e1 F7010000 		.4byte	0x1f7
 2971 01e5 0D       		.uleb128 0xd
 2972 01e6 01       		.uleb128 0x1
 2973 01e7 50       		.byte	0x50
 2974 01e8 02       		.uleb128 0x2
 2975 01e9 75       		.byte	0x75
 2976 01ea 00       		.sleb128 0
 2977 01eb 0D       		.uleb128 0xd
 2978 01ec 01       		.uleb128 0x1
 2979 01ed 51       		.byte	0x51
 2980 01ee 02       		.uleb128 0x2
 2981 01ef 74       		.byte	0x74
 2982 01f0 00       		.sleb128 0
 2983 01f1 0D       		.uleb128 0xd
 2984 01f2 01       		.uleb128 0x1
 2985 01f3 52       		.byte	0x52
 2986 01f4 01       		.uleb128 0x1
 2987 01f5 35       		.byte	0x35
 2988 01f6 00       		.byte	0
 2989 01f7 0C       		.uleb128 0xc
 2990 01f8 64000000 		.4byte	.LVL3
 2991 01fc 15100000 		.4byte	0x1015
 2992 0200 0A020000 		.4byte	0x20a
 2993 0204 0D       		.uleb128 0xd
 2994 0205 01       		.uleb128 0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 87


 2995 0206 50       		.byte	0x50
 2996 0207 01       		.uleb128 0x1
 2997 0208 31       		.byte	0x31
 2998 0209 00       		.byte	0
 2999 020a 0C       		.uleb128 0xc
 3000 020b 70000000 		.4byte	.LVL4
 3001 020f 20100000 		.4byte	0x1020
 3002 0213 1D020000 		.4byte	0x21d
 3003 0217 0D       		.uleb128 0xd
 3004 0218 01       		.uleb128 0x1
 3005 0219 51       		.byte	0x51
 3006 021a 01       		.uleb128 0x1
 3007 021b 34       		.byte	0x34
 3008 021c 00       		.byte	0
 3009 021d 0C       		.uleb128 0xc
 3010 021e 7E000000 		.4byte	.LVL5
 3011 0222 2B100000 		.4byte	0x102b
 3012 0226 3A020000 		.4byte	0x23a
 3013 022a 0D       		.uleb128 0xd
 3014 022b 01       		.uleb128 0x1
 3015 022c 50       		.byte	0x50
 3016 022d 02       		.uleb128 0x2
 3017 022e 76       		.byte	0x76
 3018 022f 00       		.sleb128 0
 3019 0230 0D       		.uleb128 0xd
 3020 0231 01       		.uleb128 0x1
 3021 0232 51       		.byte	0x51
 3022 0233 05       		.uleb128 0x5
 3023 0234 03       		.byte	0x3
 3024 0235 00000000 		.4byte	.LC3
 3025 0239 00       		.byte	0
 3026 023a 0C       		.uleb128 0xc
 3027 023b 88000000 		.4byte	.LVL6
 3028 023f 36100000 		.4byte	0x1036
 3029 0243 58020000 		.4byte	0x258
 3030 0247 0D       		.uleb128 0xd
 3031 0248 01       		.uleb128 0x1
 3032 0249 50       		.byte	0x50
 3033 024a 02       		.uleb128 0x2
 3034 024b 76       		.byte	0x76
 3035 024c 00       		.sleb128 0
 3036 024d 0D       		.uleb128 0xd
 3037 024e 01       		.uleb128 0x1
 3038 024f 51       		.byte	0x51
 3039 0250 01       		.uleb128 0x1
 3040 0251 30       		.byte	0x30
 3041 0252 0D       		.uleb128 0xd
 3042 0253 01       		.uleb128 0x1
 3043 0254 52       		.byte	0x52
 3044 0255 01       		.uleb128 0x1
 3045 0256 30       		.byte	0x30
 3046 0257 00       		.byte	0
 3047 0258 0C       		.uleb128 0xc
 3048 0259 94000000 		.4byte	.LVL7
 3049 025d 41100000 		.4byte	0x1041
 3050 0261 6B020000 		.4byte	0x26b
 3051 0265 0D       		.uleb128 0xd
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 88


 3052 0266 01       		.uleb128 0x1
 3053 0267 50       		.byte	0x50
 3054 0268 01       		.uleb128 0x1
 3055 0269 30       		.byte	0x30
 3056 026a 00       		.byte	0
 3057 026b 0C       		.uleb128 0xc
 3058 026c AA000000 		.4byte	.LVL8
 3059 0270 4C100000 		.4byte	0x104c
 3060 0274 82020000 		.4byte	0x282
 3061 0278 0D       		.uleb128 0xd
 3062 0279 01       		.uleb128 0x1
 3063 027a 50       		.byte	0x50
 3064 027b 05       		.uleb128 0x5
 3065 027c 03       		.byte	0x3
 3066 027d 19000000 		.4byte	.LC6
 3067 0281 00       		.byte	0
 3068 0282 0C       		.uleb128 0xc
 3069 0283 D6000000 		.4byte	.LVL9
 3070 0287 01100000 		.4byte	0x1001
 3071 028b 9B020000 		.4byte	0x29b
 3072 028f 0D       		.uleb128 0xd
 3073 0290 01       		.uleb128 0x1
 3074 0291 50       		.byte	0x50
 3075 0292 02       		.uleb128 0x2
 3076 0293 7D       		.byte	0x7d
 3077 0294 00       		.sleb128 0
 3078 0295 0D       		.uleb128 0xd
 3079 0296 01       		.uleb128 0x1
 3080 0297 51       		.byte	0x51
 3081 0298 01       		.uleb128 0x1
 3082 0299 32       		.byte	0x32
 3083 029a 00       		.byte	0
 3084 029b 0C       		.uleb128 0xc
 3085 029c E0000000 		.4byte	.LVL10
 3086 02a0 0C100000 		.4byte	0x100c
 3087 02a4 BA020000 		.4byte	0x2ba
 3088 02a8 0D       		.uleb128 0xd
 3089 02a9 01       		.uleb128 0x1
 3090 02aa 50       		.byte	0x50
 3091 02ab 02       		.uleb128 0x2
 3092 02ac 74       		.byte	0x74
 3093 02ad 00       		.sleb128 0
 3094 02ae 0D       		.uleb128 0xd
 3095 02af 01       		.uleb128 0x1
 3096 02b0 51       		.byte	0x51
 3097 02b1 02       		.uleb128 0x2
 3098 02b2 7D       		.byte	0x7d
 3099 02b3 00       		.sleb128 0
 3100 02b4 0D       		.uleb128 0xd
 3101 02b5 01       		.uleb128 0x1
 3102 02b6 52       		.byte	0x52
 3103 02b7 01       		.uleb128 0x1
 3104 02b8 35       		.byte	0x35
 3105 02b9 00       		.byte	0
 3106 02ba 0C       		.uleb128 0xc
 3107 02bb EC000000 		.4byte	.LVL11
 3108 02bf 58100000 		.4byte	0x1058
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 89


 3109 02c3 CD020000 		.4byte	0x2cd
 3110 02c7 0D       		.uleb128 0xd
 3111 02c8 01       		.uleb128 0x1
 3112 02c9 50       		.byte	0x50
 3113 02ca 01       		.uleb128 0x1
 3114 02cb 3C       		.byte	0x3c
 3115 02cc 00       		.byte	0
 3116 02cd 0C       		.uleb128 0xc
 3117 02ce F6000000 		.4byte	.LVL12
 3118 02d2 64100000 		.4byte	0x1064
 3119 02d6 E0020000 		.4byte	0x2e0
 3120 02da 0D       		.uleb128 0xd
 3121 02db 01       		.uleb128 0x1
 3122 02dc 50       		.byte	0x50
 3123 02dd 01       		.uleb128 0x1
 3124 02de 3A       		.byte	0x3a
 3125 02df 00       		.byte	0
 3126 02e0 0C       		.uleb128 0xc
 3127 02e1 24010000 		.4byte	.LVL13
 3128 02e5 01100000 		.4byte	0x1001
 3129 02e9 F9020000 		.4byte	0x2f9
 3130 02ed 0D       		.uleb128 0xd
 3131 02ee 01       		.uleb128 0x1
 3132 02ef 50       		.byte	0x50
 3133 02f0 02       		.uleb128 0x2
 3134 02f1 7D       		.byte	0x7d
 3135 02f2 00       		.sleb128 0
 3136 02f3 0D       		.uleb128 0xd
 3137 02f4 01       		.uleb128 0x1
 3138 02f5 51       		.byte	0x51
 3139 02f6 01       		.uleb128 0x1
 3140 02f7 31       		.byte	0x31
 3141 02f8 00       		.byte	0
 3142 02f9 0C       		.uleb128 0xc
 3143 02fa 2E010000 		.4byte	.LVL14
 3144 02fe 15100000 		.4byte	0x1015
 3145 0302 0C030000 		.4byte	0x30c
 3146 0306 0D       		.uleb128 0xd
 3147 0307 01       		.uleb128 0x1
 3148 0308 50       		.byte	0x50
 3149 0309 01       		.uleb128 0x1
 3150 030a 30       		.byte	0x30
 3151 030b 00       		.byte	0
 3152 030c 0C       		.uleb128 0xc
 3153 030d 84010000 		.4byte	.LVL15
 3154 0311 01100000 		.4byte	0x1001
 3155 0315 25030000 		.4byte	0x325
 3156 0319 0D       		.uleb128 0xd
 3157 031a 01       		.uleb128 0x1
 3158 031b 50       		.byte	0x50
 3159 031c 02       		.uleb128 0x2
 3160 031d 7D       		.byte	0x7d
 3161 031e 00       		.sleb128 0
 3162 031f 0D       		.uleb128 0xd
 3163 0320 01       		.uleb128 0x1
 3164 0321 51       		.byte	0x51
 3165 0322 01       		.uleb128 0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 90


 3166 0323 31       		.byte	0x31
 3167 0324 00       		.byte	0
 3168 0325 0C       		.uleb128 0xc
 3169 0326 8A010000 		.4byte	.LVL16
 3170 032a 58100000 		.4byte	0x1058
 3171 032e 38030000 		.4byte	0x338
 3172 0332 0D       		.uleb128 0xd
 3173 0333 01       		.uleb128 0x1
 3174 0334 50       		.byte	0x50
 3175 0335 01       		.uleb128 0x1
 3176 0336 3B       		.byte	0x3b
 3177 0337 00       		.byte	0
 3178 0338 0C       		.uleb128 0xc
 3179 0339 94010000 		.4byte	.LVL17
 3180 033d 64100000 		.4byte	0x1064
 3181 0341 4B030000 		.4byte	0x34b
 3182 0345 0D       		.uleb128 0xd
 3183 0346 01       		.uleb128 0x1
 3184 0347 50       		.byte	0x50
 3185 0348 01       		.uleb128 0x1
 3186 0349 3A       		.byte	0x3a
 3187 034a 00       		.byte	0
 3188 034b 0C       		.uleb128 0xc
 3189 034c 9C010000 		.4byte	.LVL18
 3190 0350 58100000 		.4byte	0x1058
 3191 0354 5E030000 		.4byte	0x35e
 3192 0358 0D       		.uleb128 0xd
 3193 0359 01       		.uleb128 0x1
 3194 035a 50       		.byte	0x50
 3195 035b 01       		.uleb128 0x1
 3196 035c 3A       		.byte	0x3a
 3197 035d 00       		.byte	0
 3198 035e 0C       		.uleb128 0xc
 3199 035f A6010000 		.4byte	.LVL19
 3200 0363 64100000 		.4byte	0x1064
 3201 0367 71030000 		.4byte	0x371
 3202 036b 0D       		.uleb128 0xd
 3203 036c 01       		.uleb128 0x1
 3204 036d 50       		.byte	0x50
 3205 036e 01       		.uleb128 0x1
 3206 036f 3A       		.byte	0x3a
 3207 0370 00       		.byte	0
 3208 0371 0C       		.uleb128 0xc
 3209 0372 AE010000 		.4byte	.LVL20
 3210 0376 58100000 		.4byte	0x1058
 3211 037a 84030000 		.4byte	0x384
 3212 037e 0D       		.uleb128 0xd
 3213 037f 01       		.uleb128 0x1
 3214 0380 50       		.byte	0x50
 3215 0381 01       		.uleb128 0x1
 3216 0382 31       		.byte	0x31
 3217 0383 00       		.byte	0
 3218 0384 0C       		.uleb128 0xc
 3219 0385 B8010000 		.4byte	.LVL21
 3220 0389 64100000 		.4byte	0x1064
 3221 038d 97030000 		.4byte	0x397
 3222 0391 0D       		.uleb128 0xd
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 91


 3223 0392 01       		.uleb128 0x1
 3224 0393 50       		.byte	0x50
 3225 0394 01       		.uleb128 0x1
 3226 0395 3A       		.byte	0x3a
 3227 0396 00       		.byte	0
 3228 0397 0C       		.uleb128 0xc
 3229 0398 DC010000 		.4byte	.LVL22
 3230 039c 01100000 		.4byte	0x1001
 3231 03a0 B0030000 		.4byte	0x3b0
 3232 03a4 0D       		.uleb128 0xd
 3233 03a5 01       		.uleb128 0x1
 3234 03a6 50       		.byte	0x50
 3235 03a7 02       		.uleb128 0x2
 3236 03a8 7D       		.byte	0x7d
 3237 03a9 00       		.sleb128 0
 3238 03aa 0D       		.uleb128 0xd
 3239 03ab 01       		.uleb128 0x1
 3240 03ac 51       		.byte	0x51
 3241 03ad 01       		.uleb128 0x1
 3242 03ae 32       		.byte	0x32
 3243 03af 00       		.byte	0
 3244 03b0 0C       		.uleb128 0xc
 3245 03b1 E6010000 		.4byte	.LVL23
 3246 03b5 0C100000 		.4byte	0x100c
 3247 03b9 CF030000 		.4byte	0x3cf
 3248 03bd 0D       		.uleb128 0xd
 3249 03be 01       		.uleb128 0x1
 3250 03bf 50       		.byte	0x50
 3251 03c0 02       		.uleb128 0x2
 3252 03c1 74       		.byte	0x74
 3253 03c2 00       		.sleb128 0
 3254 03c3 0D       		.uleb128 0xd
 3255 03c4 01       		.uleb128 0x1
 3256 03c5 51       		.byte	0x51
 3257 03c6 02       		.uleb128 0x2
 3258 03c7 7D       		.byte	0x7d
 3259 03c8 00       		.sleb128 0
 3260 03c9 0D       		.uleb128 0xd
 3261 03ca 01       		.uleb128 0x1
 3262 03cb 52       		.byte	0x52
 3263 03cc 01       		.uleb128 0x1
 3264 03cd 35       		.byte	0x35
 3265 03ce 00       		.byte	0
 3266 03cf 0C       		.uleb128 0xc
 3267 03d0 F4010000 		.4byte	.LVL25
 3268 03d4 4C100000 		.4byte	0x104c
 3269 03d8 E6030000 		.4byte	0x3e6
 3270 03dc 0D       		.uleb128 0xd
 3271 03dd 01       		.uleb128 0x1
 3272 03de 50       		.byte	0x50
 3273 03df 05       		.uleb128 0x5
 3274 03e0 03       		.byte	0x3
 3275 03e1 24000000 		.4byte	.LC9
 3276 03e5 00       		.byte	0
 3277 03e6 0C       		.uleb128 0xc
 3278 03e7 04020000 		.4byte	.LVL26
 3279 03eb 20100000 		.4byte	0x1020
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 92


 3280 03ef FF030000 		.4byte	0x3ff
 3281 03f3 0D       		.uleb128 0xd
 3282 03f4 01       		.uleb128 0x1
 3283 03f5 50       		.byte	0x50
 3284 03f6 02       		.uleb128 0x2
 3285 03f7 74       		.byte	0x74
 3286 03f8 00       		.sleb128 0
 3287 03f9 0D       		.uleb128 0xd
 3288 03fa 01       		.uleb128 0x1
 3289 03fb 51       		.byte	0x51
 3290 03fc 01       		.uleb128 0x1
 3291 03fd 32       		.byte	0x32
 3292 03fe 00       		.byte	0
 3293 03ff 0C       		.uleb128 0xc
 3294 0400 40020000 		.4byte	.LVL28
 3295 0404 01100000 		.4byte	0x1001
 3296 0408 18040000 		.4byte	0x418
 3297 040c 0D       		.uleb128 0xd
 3298 040d 01       		.uleb128 0x1
 3299 040e 50       		.byte	0x50
 3300 040f 02       		.uleb128 0x2
 3301 0410 7D       		.byte	0x7d
 3302 0411 00       		.sleb128 0
 3303 0412 0D       		.uleb128 0xd
 3304 0413 01       		.uleb128 0x1
 3305 0414 51       		.byte	0x51
 3306 0415 01       		.uleb128 0x1
 3307 0416 32       		.byte	0x32
 3308 0417 00       		.byte	0
 3309 0418 0C       		.uleb128 0xc
 3310 0419 4A020000 		.4byte	.LVL29
 3311 041d 0C100000 		.4byte	0x100c
 3312 0421 37040000 		.4byte	0x437
 3313 0425 0D       		.uleb128 0xd
 3314 0426 01       		.uleb128 0x1
 3315 0427 50       		.byte	0x50
 3316 0428 02       		.uleb128 0x2
 3317 0429 74       		.byte	0x74
 3318 042a 00       		.sleb128 0
 3319 042b 0D       		.uleb128 0xd
 3320 042c 01       		.uleb128 0x1
 3321 042d 51       		.byte	0x51
 3322 042e 02       		.uleb128 0x2
 3323 042f 7D       		.byte	0x7d
 3324 0430 00       		.sleb128 0
 3325 0431 0D       		.uleb128 0xd
 3326 0432 01       		.uleb128 0x1
 3327 0433 52       		.byte	0x52
 3328 0434 01       		.uleb128 0x1
 3329 0435 35       		.byte	0x35
 3330 0436 00       		.byte	0
 3331 0437 0C       		.uleb128 0xc
 3332 0438 54020000 		.4byte	.LVL30
 3333 043c 2B100000 		.4byte	0x102b
 3334 0440 54040000 		.4byte	0x454
 3335 0444 0D       		.uleb128 0xd
 3336 0445 01       		.uleb128 0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 93


 3337 0446 50       		.byte	0x50
 3338 0447 02       		.uleb128 0x2
 3339 0448 76       		.byte	0x76
 3340 0449 00       		.sleb128 0
 3341 044a 0D       		.uleb128 0xd
 3342 044b 01       		.uleb128 0x1
 3343 044c 51       		.byte	0x51
 3344 044d 05       		.uleb128 0x5
 3345 044e 03       		.byte	0x3
 3346 044f 2D000000 		.4byte	.LC11
 3347 0453 00       		.byte	0
 3348 0454 0C       		.uleb128 0xc
 3349 0455 76020000 		.4byte	.LVL33
 3350 0459 36100000 		.4byte	0x1036
 3351 045d 74040000 		.4byte	0x474
 3352 0461 0D       		.uleb128 0xd
 3353 0462 01       		.uleb128 0x1
 3354 0463 50       		.byte	0x50
 3355 0464 02       		.uleb128 0x2
 3356 0465 76       		.byte	0x76
 3357 0466 00       		.sleb128 0
 3358 0467 0D       		.uleb128 0xd
 3359 0468 01       		.uleb128 0x1
 3360 0469 51       		.byte	0x51
 3361 046a 02       		.uleb128 0x2
 3362 046b 77       		.byte	0x77
 3363 046c 00       		.sleb128 0
 3364 046d 0D       		.uleb128 0xd
 3365 046e 01       		.uleb128 0x1
 3366 046f 52       		.byte	0x52
 3367 0470 02       		.uleb128 0x2
 3368 0471 77       		.byte	0x77
 3369 0472 00       		.sleb128 0
 3370 0473 00       		.byte	0
 3371 0474 0C       		.uleb128 0xc
 3372 0475 80020000 		.4byte	.LVL35
 3373 0479 64100000 		.4byte	0x1064
 3374 047d 89040000 		.4byte	0x489
 3375 0481 0D       		.uleb128 0xd
 3376 0482 01       		.uleb128 0x1
 3377 0483 50       		.byte	0x50
 3378 0484 03       		.uleb128 0x3
 3379 0485 0A       		.byte	0xa
 3380 0486 E803     		.2byte	0x3e8
 3381 0488 00       		.byte	0
 3382 0489 0C       		.uleb128 0xc
 3383 048a 8A020000 		.4byte	.LVL38
 3384 048e 6F100000 		.4byte	0x106f
 3385 0492 9C040000 		.4byte	0x49c
 3386 0496 0D       		.uleb128 0xd
 3387 0497 01       		.uleb128 0x1
 3388 0498 50       		.byte	0x50
 3389 0499 01       		.uleb128 0x1
 3390 049a 34       		.byte	0x34
 3391 049b 00       		.byte	0
 3392 049c 0E       		.uleb128 0xe
 3393 049d 94020000 		.4byte	.LVL39
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 94


 3394 04a1 7A100000 		.4byte	0x107a
 3395 04a5 0C       		.uleb128 0xc
 3396 04a6 9C020000 		.4byte	.LVL40
 3397 04aa 41100000 		.4byte	0x1041
 3398 04ae B8040000 		.4byte	0x4b8
 3399 04b2 0D       		.uleb128 0xd
 3400 04b3 01       		.uleb128 0x1
 3401 04b4 50       		.byte	0x50
 3402 04b5 01       		.uleb128 0x1
 3403 04b6 31       		.byte	0x31
 3404 04b7 00       		.byte	0
 3405 04b8 0C       		.uleb128 0xc
 3406 04b9 AE020000 		.4byte	.LVL42
 3407 04bd 15100000 		.4byte	0x1015
 3408 04c1 CB040000 		.4byte	0x4cb
 3409 04c5 0D       		.uleb128 0xd
 3410 04c6 01       		.uleb128 0x1
 3411 04c7 50       		.byte	0x50
 3412 04c8 01       		.uleb128 0x1
 3413 04c9 30       		.byte	0x30
 3414 04ca 00       		.byte	0
 3415 04cb 0C       		.uleb128 0xc
 3416 04cc 04030000 		.4byte	.LVL43
 3417 04d0 01100000 		.4byte	0x1001
 3418 04d4 E4040000 		.4byte	0x4e4
 3419 04d8 0D       		.uleb128 0xd
 3420 04d9 01       		.uleb128 0x1
 3421 04da 50       		.byte	0x50
 3422 04db 02       		.uleb128 0x2
 3423 04dc 7D       		.byte	0x7d
 3424 04dd 00       		.sleb128 0
 3425 04de 0D       		.uleb128 0xd
 3426 04df 01       		.uleb128 0x1
 3427 04e0 51       		.byte	0x51
 3428 04e1 01       		.uleb128 0x1
 3429 04e2 31       		.byte	0x31
 3430 04e3 00       		.byte	0
 3431 04e4 0C       		.uleb128 0xc
 3432 04e5 0A030000 		.4byte	.LVL44
 3433 04e9 58100000 		.4byte	0x1058
 3434 04ed F7040000 		.4byte	0x4f7
 3435 04f1 0D       		.uleb128 0xd
 3436 04f2 01       		.uleb128 0x1
 3437 04f3 50       		.byte	0x50
 3438 04f4 01       		.uleb128 0x1
 3439 04f5 3B       		.byte	0x3b
 3440 04f6 00       		.byte	0
 3441 04f7 0C       		.uleb128 0xc
 3442 04f8 14030000 		.4byte	.LVL45
 3443 04fc 64100000 		.4byte	0x1064
 3444 0500 0A050000 		.4byte	0x50a
 3445 0504 0D       		.uleb128 0xd
 3446 0505 01       		.uleb128 0x1
 3447 0506 50       		.byte	0x50
 3448 0507 01       		.uleb128 0x1
 3449 0508 3A       		.byte	0x3a
 3450 0509 00       		.byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 95


 3451 050a 0C       		.uleb128 0xc
 3452 050b 1C030000 		.4byte	.LVL46
 3453 050f 58100000 		.4byte	0x1058
 3454 0513 1D050000 		.4byte	0x51d
 3455 0517 0D       		.uleb128 0xd
 3456 0518 01       		.uleb128 0x1
 3457 0519 50       		.byte	0x50
 3458 051a 01       		.uleb128 0x1
 3459 051b 3A       		.byte	0x3a
 3460 051c 00       		.byte	0
 3461 051d 0C       		.uleb128 0xc
 3462 051e 26030000 		.4byte	.LVL47
 3463 0522 64100000 		.4byte	0x1064
 3464 0526 30050000 		.4byte	0x530
 3465 052a 0D       		.uleb128 0xd
 3466 052b 01       		.uleb128 0x1
 3467 052c 50       		.byte	0x50
 3468 052d 01       		.uleb128 0x1
 3469 052e 3A       		.byte	0x3a
 3470 052f 00       		.byte	0
 3471 0530 0C       		.uleb128 0xc
 3472 0531 2E030000 		.4byte	.LVL48
 3473 0535 58100000 		.4byte	0x1058
 3474 0539 43050000 		.4byte	0x543
 3475 053d 0D       		.uleb128 0xd
 3476 053e 01       		.uleb128 0x1
 3477 053f 50       		.byte	0x50
 3478 0540 01       		.uleb128 0x1
 3479 0541 32       		.byte	0x32
 3480 0542 00       		.byte	0
 3481 0543 0C       		.uleb128 0xc
 3482 0544 38030000 		.4byte	.LVL49
 3483 0548 64100000 		.4byte	0x1064
 3484 054c 56050000 		.4byte	0x556
 3485 0550 0D       		.uleb128 0xd
 3486 0551 01       		.uleb128 0x1
 3487 0552 50       		.byte	0x50
 3488 0553 01       		.uleb128 0x1
 3489 0554 3A       		.byte	0x3a
 3490 0555 00       		.byte	0
 3491 0556 0C       		.uleb128 0xc
 3492 0557 92030000 		.4byte	.LVL50
 3493 055b 01100000 		.4byte	0x1001
 3494 055f 6F050000 		.4byte	0x56f
 3495 0563 0D       		.uleb128 0xd
 3496 0564 01       		.uleb128 0x1
 3497 0565 50       		.byte	0x50
 3498 0566 02       		.uleb128 0x2
 3499 0567 7D       		.byte	0x7d
 3500 0568 00       		.sleb128 0
 3501 0569 0D       		.uleb128 0xd
 3502 056a 01       		.uleb128 0x1
 3503 056b 51       		.byte	0x51
 3504 056c 01       		.uleb128 0x1
 3505 056d 32       		.byte	0x32
 3506 056e 00       		.byte	0
 3507 056f 0C       		.uleb128 0xc
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 96


 3508 0570 9C030000 		.4byte	.LVL51
 3509 0574 0C100000 		.4byte	0x100c
 3510 0578 8E050000 		.4byte	0x58e
 3511 057c 0D       		.uleb128 0xd
 3512 057d 01       		.uleb128 0x1
 3513 057e 50       		.byte	0x50
 3514 057f 02       		.uleb128 0x2
 3515 0580 74       		.byte	0x74
 3516 0581 00       		.sleb128 0
 3517 0582 0D       		.uleb128 0xd
 3518 0583 01       		.uleb128 0x1
 3519 0584 51       		.byte	0x51
 3520 0585 02       		.uleb128 0x2
 3521 0586 7D       		.byte	0x7d
 3522 0587 00       		.sleb128 0
 3523 0588 0D       		.uleb128 0xd
 3524 0589 01       		.uleb128 0x1
 3525 058a 52       		.byte	0x52
 3526 058b 01       		.uleb128 0x1
 3527 058c 35       		.byte	0x35
 3528 058d 00       		.byte	0
 3529 058e 0C       		.uleb128 0xc
 3530 058f AA030000 		.4byte	.LVL53
 3531 0593 4C100000 		.4byte	0x104c
 3532 0597 A5050000 		.4byte	0x5a5
 3533 059b 0D       		.uleb128 0xd
 3534 059c 01       		.uleb128 0x1
 3535 059d 50       		.byte	0x50
 3536 059e 05       		.uleb128 0x5
 3537 059f 03       		.byte	0x3
 3538 05a0 46000000 		.4byte	.LC16
 3539 05a4 00       		.byte	0
 3540 05a5 0C       		.uleb128 0xc
 3541 05a6 BA030000 		.4byte	.LVL54
 3542 05aa 20100000 		.4byte	0x1020
 3543 05ae BE050000 		.4byte	0x5be
 3544 05b2 0D       		.uleb128 0xd
 3545 05b3 01       		.uleb128 0x1
 3546 05b4 50       		.byte	0x50
 3547 05b5 02       		.uleb128 0x2
 3548 05b6 74       		.byte	0x74
 3549 05b7 00       		.sleb128 0
 3550 05b8 0D       		.uleb128 0xd
 3551 05b9 01       		.uleb128 0x1
 3552 05ba 51       		.byte	0x51
 3553 05bb 01       		.uleb128 0x1
 3554 05bc 32       		.byte	0x32
 3555 05bd 00       		.byte	0
 3556 05be 0C       		.uleb128 0xc
 3557 05bf F6030000 		.4byte	.LVL56
 3558 05c3 01100000 		.4byte	0x1001
 3559 05c7 D7050000 		.4byte	0x5d7
 3560 05cb 0D       		.uleb128 0xd
 3561 05cc 01       		.uleb128 0x1
 3562 05cd 50       		.byte	0x50
 3563 05ce 02       		.uleb128 0x2
 3564 05cf 7D       		.byte	0x7d
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 97


 3565 05d0 00       		.sleb128 0
 3566 05d1 0D       		.uleb128 0xd
 3567 05d2 01       		.uleb128 0x1
 3568 05d3 51       		.byte	0x51
 3569 05d4 01       		.uleb128 0x1
 3570 05d5 32       		.byte	0x32
 3571 05d6 00       		.byte	0
 3572 05d7 0C       		.uleb128 0xc
 3573 05d8 00040000 		.4byte	.LVL57
 3574 05dc 0C100000 		.4byte	0x100c
 3575 05e0 F6050000 		.4byte	0x5f6
 3576 05e4 0D       		.uleb128 0xd
 3577 05e5 01       		.uleb128 0x1
 3578 05e6 50       		.byte	0x50
 3579 05e7 02       		.uleb128 0x2
 3580 05e8 74       		.byte	0x74
 3581 05e9 00       		.sleb128 0
 3582 05ea 0D       		.uleb128 0xd
 3583 05eb 01       		.uleb128 0x1
 3584 05ec 51       		.byte	0x51
 3585 05ed 02       		.uleb128 0x2
 3586 05ee 7D       		.byte	0x7d
 3587 05ef 00       		.sleb128 0
 3588 05f0 0D       		.uleb128 0xd
 3589 05f1 01       		.uleb128 0x1
 3590 05f2 52       		.byte	0x52
 3591 05f3 01       		.uleb128 0x1
 3592 05f4 35       		.byte	0x35
 3593 05f5 00       		.byte	0
 3594 05f6 0C       		.uleb128 0xc
 3595 05f7 0A040000 		.4byte	.LVL58
 3596 05fb 2B100000 		.4byte	0x102b
 3597 05ff 13060000 		.4byte	0x613
 3598 0603 0D       		.uleb128 0xd
 3599 0604 01       		.uleb128 0x1
 3600 0605 50       		.byte	0x50
 3601 0606 02       		.uleb128 0x2
 3602 0607 76       		.byte	0x76
 3603 0608 00       		.sleb128 0
 3604 0609 0D       		.uleb128 0xd
 3605 060a 01       		.uleb128 0x1
 3606 060b 51       		.byte	0x51
 3607 060c 05       		.uleb128 0x5
 3608 060d 03       		.byte	0x3
 3609 060e 2D000000 		.4byte	.LC11
 3610 0612 00       		.byte	0
 3611 0613 0C       		.uleb128 0xc
 3612 0614 2C040000 		.4byte	.LVL61
 3613 0618 36100000 		.4byte	0x1036
 3614 061c 33060000 		.4byte	0x633
 3615 0620 0D       		.uleb128 0xd
 3616 0621 01       		.uleb128 0x1
 3617 0622 50       		.byte	0x50
 3618 0623 02       		.uleb128 0x2
 3619 0624 76       		.byte	0x76
 3620 0625 00       		.sleb128 0
 3621 0626 0D       		.uleb128 0xd
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 98


 3622 0627 01       		.uleb128 0x1
 3623 0628 51       		.byte	0x51
 3624 0629 02       		.uleb128 0x2
 3625 062a 77       		.byte	0x77
 3626 062b 00       		.sleb128 0
 3627 062c 0D       		.uleb128 0xd
 3628 062d 01       		.uleb128 0x1
 3629 062e 52       		.byte	0x52
 3630 062f 02       		.uleb128 0x2
 3631 0630 77       		.byte	0x77
 3632 0631 00       		.sleb128 0
 3633 0632 00       		.byte	0
 3634 0633 0C       		.uleb128 0xc
 3635 0634 36040000 		.4byte	.LVL63
 3636 0638 64100000 		.4byte	0x1064
 3637 063c 48060000 		.4byte	0x648
 3638 0640 0D       		.uleb128 0xd
 3639 0641 01       		.uleb128 0x1
 3640 0642 50       		.byte	0x50
 3641 0643 03       		.uleb128 0x3
 3642 0644 0A       		.byte	0xa
 3643 0645 E803     		.2byte	0x3e8
 3644 0647 00       		.byte	0
 3645 0648 0C       		.uleb128 0xc
 3646 0649 40040000 		.4byte	.LVL66
 3647 064d 6F100000 		.4byte	0x106f
 3648 0651 5B060000 		.4byte	0x65b
 3649 0655 0D       		.uleb128 0xd
 3650 0656 01       		.uleb128 0x1
 3651 0657 50       		.byte	0x50
 3652 0658 01       		.uleb128 0x1
 3653 0659 34       		.byte	0x34
 3654 065a 00       		.byte	0
 3655 065b 0E       		.uleb128 0xe
 3656 065c 4A040000 		.4byte	.LVL67
 3657 0660 7A100000 		.4byte	0x107a
 3658 0664 0C       		.uleb128 0xc
 3659 0665 52040000 		.4byte	.LVL68
 3660 0669 41100000 		.4byte	0x1041
 3661 066d 77060000 		.4byte	0x677
 3662 0671 0D       		.uleb128 0xd
 3663 0672 01       		.uleb128 0x1
 3664 0673 50       		.byte	0x50
 3665 0674 01       		.uleb128 0x1
 3666 0675 31       		.byte	0x31
 3667 0676 00       		.byte	0
 3668 0677 0C       		.uleb128 0xc
 3669 0678 60040000 		.4byte	.LVL70
 3670 067c 15100000 		.4byte	0x1015
 3671 0680 8A060000 		.4byte	0x68a
 3672 0684 0D       		.uleb128 0xd
 3673 0685 01       		.uleb128 0x1
 3674 0686 50       		.byte	0x50
 3675 0687 01       		.uleb128 0x1
 3676 0688 30       		.byte	0x30
 3677 0689 00       		.byte	0
 3678 068a 0C       		.uleb128 0xc
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 99


 3679 068b B6040000 		.4byte	.LVL71
 3680 068f 01100000 		.4byte	0x1001
 3681 0693 A3060000 		.4byte	0x6a3
 3682 0697 0D       		.uleb128 0xd
 3683 0698 01       		.uleb128 0x1
 3684 0699 50       		.byte	0x50
 3685 069a 02       		.uleb128 0x2
 3686 069b 7D       		.byte	0x7d
 3687 069c 00       		.sleb128 0
 3688 069d 0D       		.uleb128 0xd
 3689 069e 01       		.uleb128 0x1
 3690 069f 51       		.byte	0x51
 3691 06a0 01       		.uleb128 0x1
 3692 06a1 31       		.byte	0x31
 3693 06a2 00       		.byte	0
 3694 06a3 0C       		.uleb128 0xc
 3695 06a4 BC040000 		.4byte	.LVL72
 3696 06a8 58100000 		.4byte	0x1058
 3697 06ac B6060000 		.4byte	0x6b6
 3698 06b0 0D       		.uleb128 0xd
 3699 06b1 01       		.uleb128 0x1
 3700 06b2 50       		.byte	0x50
 3701 06b3 01       		.uleb128 0x1
 3702 06b4 3B       		.byte	0x3b
 3703 06b5 00       		.byte	0
 3704 06b6 0C       		.uleb128 0xc
 3705 06b7 C6040000 		.4byte	.LVL73
 3706 06bb 64100000 		.4byte	0x1064
 3707 06bf C9060000 		.4byte	0x6c9
 3708 06c3 0D       		.uleb128 0xd
 3709 06c4 01       		.uleb128 0x1
 3710 06c5 50       		.byte	0x50
 3711 06c6 01       		.uleb128 0x1
 3712 06c7 3A       		.byte	0x3a
 3713 06c8 00       		.byte	0
 3714 06c9 0C       		.uleb128 0xc
 3715 06ca CE040000 		.4byte	.LVL74
 3716 06ce 58100000 		.4byte	0x1058
 3717 06d2 DC060000 		.4byte	0x6dc
 3718 06d6 0D       		.uleb128 0xd
 3719 06d7 01       		.uleb128 0x1
 3720 06d8 50       		.byte	0x50
 3721 06d9 01       		.uleb128 0x1
 3722 06da 3A       		.byte	0x3a
 3723 06db 00       		.byte	0
 3724 06dc 0C       		.uleb128 0xc
 3725 06dd D8040000 		.4byte	.LVL75
 3726 06e1 64100000 		.4byte	0x1064
 3727 06e5 EF060000 		.4byte	0x6ef
 3728 06e9 0D       		.uleb128 0xd
 3729 06ea 01       		.uleb128 0x1
 3730 06eb 50       		.byte	0x50
 3731 06ec 01       		.uleb128 0x1
 3732 06ed 3A       		.byte	0x3a
 3733 06ee 00       		.byte	0
 3734 06ef 0C       		.uleb128 0xc
 3735 06f0 E0040000 		.4byte	.LVL76
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 100


 3736 06f4 58100000 		.4byte	0x1058
 3737 06f8 02070000 		.4byte	0x702
 3738 06fc 0D       		.uleb128 0xd
 3739 06fd 01       		.uleb128 0x1
 3740 06fe 50       		.byte	0x50
 3741 06ff 01       		.uleb128 0x1
 3742 0700 33       		.byte	0x33
 3743 0701 00       		.byte	0
 3744 0702 0C       		.uleb128 0xc
 3745 0703 EA040000 		.4byte	.LVL77
 3746 0707 64100000 		.4byte	0x1064
 3747 070b 15070000 		.4byte	0x715
 3748 070f 0D       		.uleb128 0xd
 3749 0710 01       		.uleb128 0x1
 3750 0711 50       		.byte	0x50
 3751 0712 01       		.uleb128 0x1
 3752 0713 3A       		.byte	0x3a
 3753 0714 00       		.byte	0
 3754 0715 0C       		.uleb128 0xc
 3755 0716 0E050000 		.4byte	.LVL78
 3756 071a 01100000 		.4byte	0x1001
 3757 071e 2E070000 		.4byte	0x72e
 3758 0722 0D       		.uleb128 0xd
 3759 0723 01       		.uleb128 0x1
 3760 0724 50       		.byte	0x50
 3761 0725 02       		.uleb128 0x2
 3762 0726 7D       		.byte	0x7d
 3763 0727 00       		.sleb128 0
 3764 0728 0D       		.uleb128 0xd
 3765 0729 01       		.uleb128 0x1
 3766 072a 51       		.byte	0x51
 3767 072b 01       		.uleb128 0x1
 3768 072c 32       		.byte	0x32
 3769 072d 00       		.byte	0
 3770 072e 0C       		.uleb128 0xc
 3771 072f 18050000 		.4byte	.LVL79
 3772 0733 0C100000 		.4byte	0x100c
 3773 0737 4D070000 		.4byte	0x74d
 3774 073b 0D       		.uleb128 0xd
 3775 073c 01       		.uleb128 0x1
 3776 073d 50       		.byte	0x50
 3777 073e 02       		.uleb128 0x2
 3778 073f 74       		.byte	0x74
 3779 0740 00       		.sleb128 0
 3780 0741 0D       		.uleb128 0xd
 3781 0742 01       		.uleb128 0x1
 3782 0743 51       		.byte	0x51
 3783 0744 02       		.uleb128 0x2
 3784 0745 7D       		.byte	0x7d
 3785 0746 00       		.sleb128 0
 3786 0747 0D       		.uleb128 0xd
 3787 0748 01       		.uleb128 0x1
 3788 0749 52       		.byte	0x52
 3789 074a 01       		.uleb128 0x1
 3790 074b 35       		.byte	0x35
 3791 074c 00       		.byte	0
 3792 074d 0C       		.uleb128 0xc
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 101


 3793 074e 26050000 		.4byte	.LVL81
 3794 0752 4C100000 		.4byte	0x104c
 3795 0756 64070000 		.4byte	0x764
 3796 075a 0D       		.uleb128 0xd
 3797 075b 01       		.uleb128 0x1
 3798 075c 50       		.byte	0x50
 3799 075d 05       		.uleb128 0x5
 3800 075e 03       		.byte	0x3
 3801 075f 4F000000 		.4byte	.LC18
 3802 0763 00       		.byte	0
 3803 0764 0C       		.uleb128 0xc
 3804 0765 36050000 		.4byte	.LVL82
 3805 0769 20100000 		.4byte	0x1020
 3806 076d 7D070000 		.4byte	0x77d
 3807 0771 0D       		.uleb128 0xd
 3808 0772 01       		.uleb128 0x1
 3809 0773 50       		.byte	0x50
 3810 0774 02       		.uleb128 0x2
 3811 0775 74       		.byte	0x74
 3812 0776 00       		.sleb128 0
 3813 0777 0D       		.uleb128 0xd
 3814 0778 01       		.uleb128 0x1
 3815 0779 51       		.byte	0x51
 3816 077a 01       		.uleb128 0x1
 3817 077b 32       		.byte	0x32
 3818 077c 00       		.byte	0
 3819 077d 0C       		.uleb128 0xc
 3820 077e 72050000 		.4byte	.LVL84
 3821 0782 01100000 		.4byte	0x1001
 3822 0786 96070000 		.4byte	0x796
 3823 078a 0D       		.uleb128 0xd
 3824 078b 01       		.uleb128 0x1
 3825 078c 50       		.byte	0x50
 3826 078d 02       		.uleb128 0x2
 3827 078e 7D       		.byte	0x7d
 3828 078f 00       		.sleb128 0
 3829 0790 0D       		.uleb128 0xd
 3830 0791 01       		.uleb128 0x1
 3831 0792 51       		.byte	0x51
 3832 0793 01       		.uleb128 0x1
 3833 0794 32       		.byte	0x32
 3834 0795 00       		.byte	0
 3835 0796 0C       		.uleb128 0xc
 3836 0797 7C050000 		.4byte	.LVL85
 3837 079b 0C100000 		.4byte	0x100c
 3838 079f B5070000 		.4byte	0x7b5
 3839 07a3 0D       		.uleb128 0xd
 3840 07a4 01       		.uleb128 0x1
 3841 07a5 50       		.byte	0x50
 3842 07a6 02       		.uleb128 0x2
 3843 07a7 74       		.byte	0x74
 3844 07a8 00       		.sleb128 0
 3845 07a9 0D       		.uleb128 0xd
 3846 07aa 01       		.uleb128 0x1
 3847 07ab 51       		.byte	0x51
 3848 07ac 02       		.uleb128 0x2
 3849 07ad 7D       		.byte	0x7d
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 102


 3850 07ae 00       		.sleb128 0
 3851 07af 0D       		.uleb128 0xd
 3852 07b0 01       		.uleb128 0x1
 3853 07b1 52       		.byte	0x52
 3854 07b2 01       		.uleb128 0x1
 3855 07b3 35       		.byte	0x35
 3856 07b4 00       		.byte	0
 3857 07b5 0C       		.uleb128 0xc
 3858 07b6 86050000 		.4byte	.LVL86
 3859 07ba 2B100000 		.4byte	0x102b
 3860 07be D2070000 		.4byte	0x7d2
 3861 07c2 0D       		.uleb128 0xd
 3862 07c3 01       		.uleb128 0x1
 3863 07c4 50       		.byte	0x50
 3864 07c5 02       		.uleb128 0x2
 3865 07c6 76       		.byte	0x76
 3866 07c7 00       		.sleb128 0
 3867 07c8 0D       		.uleb128 0xd
 3868 07c9 01       		.uleb128 0x1
 3869 07ca 51       		.byte	0x51
 3870 07cb 05       		.uleb128 0x5
 3871 07cc 03       		.byte	0x3
 3872 07cd 2D000000 		.4byte	.LC11
 3873 07d1 00       		.byte	0
 3874 07d2 0C       		.uleb128 0xc
 3875 07d3 A8050000 		.4byte	.LVL89
 3876 07d7 36100000 		.4byte	0x1036
 3877 07db F2070000 		.4byte	0x7f2
 3878 07df 0D       		.uleb128 0xd
 3879 07e0 01       		.uleb128 0x1
 3880 07e1 50       		.byte	0x50
 3881 07e2 02       		.uleb128 0x2
 3882 07e3 76       		.byte	0x76
 3883 07e4 00       		.sleb128 0
 3884 07e5 0D       		.uleb128 0xd
 3885 07e6 01       		.uleb128 0x1
 3886 07e7 51       		.byte	0x51
 3887 07e8 02       		.uleb128 0x2
 3888 07e9 77       		.byte	0x77
 3889 07ea 00       		.sleb128 0
 3890 07eb 0D       		.uleb128 0xd
 3891 07ec 01       		.uleb128 0x1
 3892 07ed 52       		.byte	0x52
 3893 07ee 02       		.uleb128 0x2
 3894 07ef 77       		.byte	0x77
 3895 07f0 00       		.sleb128 0
 3896 07f1 00       		.byte	0
 3897 07f2 0C       		.uleb128 0xc
 3898 07f3 B2050000 		.4byte	.LVL91
 3899 07f7 64100000 		.4byte	0x1064
 3900 07fb 07080000 		.4byte	0x807
 3901 07ff 0D       		.uleb128 0xd
 3902 0800 01       		.uleb128 0x1
 3903 0801 50       		.byte	0x50
 3904 0802 03       		.uleb128 0x3
 3905 0803 0A       		.byte	0xa
 3906 0804 E803     		.2byte	0x3e8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 103


 3907 0806 00       		.byte	0
 3908 0807 0C       		.uleb128 0xc
 3909 0808 BC050000 		.4byte	.LVL94
 3910 080c 6F100000 		.4byte	0x106f
 3911 0810 1A080000 		.4byte	0x81a
 3912 0814 0D       		.uleb128 0xd
 3913 0815 01       		.uleb128 0x1
 3914 0816 50       		.byte	0x50
 3915 0817 01       		.uleb128 0x1
 3916 0818 34       		.byte	0x34
 3917 0819 00       		.byte	0
 3918 081a 0E       		.uleb128 0xe
 3919 081b C6050000 		.4byte	.LVL95
 3920 081f 7A100000 		.4byte	0x107a
 3921 0823 0C       		.uleb128 0xc
 3922 0824 CE050000 		.4byte	.LVL96
 3923 0828 41100000 		.4byte	0x1041
 3924 082c 36080000 		.4byte	0x836
 3925 0830 0D       		.uleb128 0xd
 3926 0831 01       		.uleb128 0x1
 3927 0832 50       		.byte	0x50
 3928 0833 01       		.uleb128 0x1
 3929 0834 32       		.byte	0x32
 3930 0835 00       		.byte	0
 3931 0836 0C       		.uleb128 0xc
 3932 0837 E8050000 		.4byte	.LVL98
 3933 083b 15100000 		.4byte	0x1015
 3934 083f 49080000 		.4byte	0x849
 3935 0843 0D       		.uleb128 0xd
 3936 0844 01       		.uleb128 0x1
 3937 0845 50       		.byte	0x50
 3938 0846 01       		.uleb128 0x1
 3939 0847 30       		.byte	0x30
 3940 0848 00       		.byte	0
 3941 0849 0C       		.uleb128 0xc
 3942 084a 2E060000 		.4byte	.LVL99
 3943 084e 01100000 		.4byte	0x1001
 3944 0852 62080000 		.4byte	0x862
 3945 0856 0D       		.uleb128 0xd
 3946 0857 01       		.uleb128 0x1
 3947 0858 50       		.byte	0x50
 3948 0859 02       		.uleb128 0x2
 3949 085a 7D       		.byte	0x7d
 3950 085b 00       		.sleb128 0
 3951 085c 0D       		.uleb128 0xd
 3952 085d 01       		.uleb128 0x1
 3953 085e 51       		.byte	0x51
 3954 085f 01       		.uleb128 0x1
 3955 0860 31       		.byte	0x31
 3956 0861 00       		.byte	0
 3957 0862 0C       		.uleb128 0xc
 3958 0863 34060000 		.4byte	.LVL100
 3959 0867 58100000 		.4byte	0x1058
 3960 086b 75080000 		.4byte	0x875
 3961 086f 0D       		.uleb128 0xd
 3962 0870 01       		.uleb128 0x1
 3963 0871 50       		.byte	0x50
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 104


 3964 0872 01       		.uleb128 0x1
 3965 0873 3B       		.byte	0x3b
 3966 0874 00       		.byte	0
 3967 0875 0C       		.uleb128 0xc
 3968 0876 3E060000 		.4byte	.LVL101
 3969 087a 64100000 		.4byte	0x1064
 3970 087e 88080000 		.4byte	0x888
 3971 0882 0D       		.uleb128 0xd
 3972 0883 01       		.uleb128 0x1
 3973 0884 50       		.byte	0x50
 3974 0885 01       		.uleb128 0x1
 3975 0886 3A       		.byte	0x3a
 3976 0887 00       		.byte	0
 3977 0888 0C       		.uleb128 0xc
 3978 0889 46060000 		.4byte	.LVL102
 3979 088d 58100000 		.4byte	0x1058
 3980 0891 9B080000 		.4byte	0x89b
 3981 0895 0D       		.uleb128 0xd
 3982 0896 01       		.uleb128 0x1
 3983 0897 50       		.byte	0x50
 3984 0898 01       		.uleb128 0x1
 3985 0899 3A       		.byte	0x3a
 3986 089a 00       		.byte	0
 3987 089b 0C       		.uleb128 0xc
 3988 089c 50060000 		.4byte	.LVL103
 3989 08a0 64100000 		.4byte	0x1064
 3990 08a4 AE080000 		.4byte	0x8ae
 3991 08a8 0D       		.uleb128 0xd
 3992 08a9 01       		.uleb128 0x1
 3993 08aa 50       		.byte	0x50
 3994 08ab 01       		.uleb128 0x1
 3995 08ac 3A       		.byte	0x3a
 3996 08ad 00       		.byte	0
 3997 08ae 0C       		.uleb128 0xc
 3998 08af 58060000 		.4byte	.LVL104
 3999 08b3 58100000 		.4byte	0x1058
 4000 08b7 C1080000 		.4byte	0x8c1
 4001 08bb 0D       		.uleb128 0xd
 4002 08bc 01       		.uleb128 0x1
 4003 08bd 50       		.byte	0x50
 4004 08be 01       		.uleb128 0x1
 4005 08bf 34       		.byte	0x34
 4006 08c0 00       		.byte	0
 4007 08c1 0C       		.uleb128 0xc
 4008 08c2 62060000 		.4byte	.LVL105
 4009 08c6 64100000 		.4byte	0x1064
 4010 08ca D4080000 		.4byte	0x8d4
 4011 08ce 0D       		.uleb128 0xd
 4012 08cf 01       		.uleb128 0x1
 4013 08d0 50       		.byte	0x50
 4014 08d1 01       		.uleb128 0x1
 4015 08d2 3A       		.byte	0x3a
 4016 08d3 00       		.byte	0
 4017 08d4 0C       		.uleb128 0xc
 4018 08d5 72060000 		.4byte	.LVL106
 4019 08d9 20100000 		.4byte	0x1020
 4020 08dd ED080000 		.4byte	0x8ed
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 105


 4021 08e1 0D       		.uleb128 0xd
 4022 08e2 01       		.uleb128 0x1
 4023 08e3 50       		.byte	0x50
 4024 08e4 02       		.uleb128 0x2
 4025 08e5 74       		.byte	0x74
 4026 08e6 00       		.sleb128 0
 4027 08e7 0D       		.uleb128 0xd
 4028 08e8 01       		.uleb128 0x1
 4029 08e9 51       		.byte	0x51
 4030 08ea 01       		.uleb128 0x1
 4031 08eb 32       		.byte	0x32
 4032 08ec 00       		.byte	0
 4033 08ed 0C       		.uleb128 0xc
 4034 08ee 84060000 		.4byte	.LVL107
 4035 08f2 6F100000 		.4byte	0x106f
 4036 08f6 00090000 		.4byte	0x900
 4037 08fa 0D       		.uleb128 0xd
 4038 08fb 01       		.uleb128 0x1
 4039 08fc 50       		.byte	0x50
 4040 08fd 01       		.uleb128 0x1
 4041 08fe 34       		.byte	0x34
 4042 08ff 00       		.byte	0
 4043 0900 0E       		.uleb128 0xe
 4044 0901 8E060000 		.4byte	.LVL108
 4045 0905 7A100000 		.4byte	0x107a
 4046 0909 0C       		.uleb128 0xc
 4047 090a 96060000 		.4byte	.LVL109
 4048 090e 41100000 		.4byte	0x1041
 4049 0912 1C090000 		.4byte	0x91c
 4050 0916 0D       		.uleb128 0xd
 4051 0917 01       		.uleb128 0x1
 4052 0918 50       		.byte	0x50
 4053 0919 01       		.uleb128 0x1
 4054 091a 33       		.byte	0x33
 4055 091b 00       		.byte	0
 4056 091c 0C       		.uleb128 0xc
 4057 091d CA060000 		.4byte	.LVL110
 4058 0921 15100000 		.4byte	0x1015
 4059 0925 2F090000 		.4byte	0x92f
 4060 0929 0D       		.uleb128 0xd
 4061 092a 01       		.uleb128 0x1
 4062 092b 50       		.byte	0x50
 4063 092c 01       		.uleb128 0x1
 4064 092d 30       		.byte	0x30
 4065 092e 00       		.byte	0
 4066 092f 0C       		.uleb128 0xc
 4067 0930 10070000 		.4byte	.LVL111
 4068 0934 01100000 		.4byte	0x1001
 4069 0938 48090000 		.4byte	0x948
 4070 093c 0D       		.uleb128 0xd
 4071 093d 01       		.uleb128 0x1
 4072 093e 50       		.byte	0x50
 4073 093f 02       		.uleb128 0x2
 4074 0940 7D       		.byte	0x7d
 4075 0941 00       		.sleb128 0
 4076 0942 0D       		.uleb128 0xd
 4077 0943 01       		.uleb128 0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 106


 4078 0944 51       		.byte	0x51
 4079 0945 01       		.uleb128 0x1
 4080 0946 31       		.byte	0x31
 4081 0947 00       		.byte	0
 4082 0948 0C       		.uleb128 0xc
 4083 0949 36070000 		.4byte	.LVL112
 4084 094d 20100000 		.4byte	0x1020
 4085 0951 61090000 		.4byte	0x961
 4086 0955 0D       		.uleb128 0xd
 4087 0956 01       		.uleb128 0x1
 4088 0957 50       		.byte	0x50
 4089 0958 02       		.uleb128 0x2
 4090 0959 75       		.byte	0x75
 4091 095a 00       		.sleb128 0
 4092 095b 0D       		.uleb128 0xd
 4093 095c 01       		.uleb128 0x1
 4094 095d 51       		.byte	0x51
 4095 095e 01       		.uleb128 0x1
 4096 095f 32       		.byte	0x32
 4097 0960 00       		.byte	0
 4098 0961 0C       		.uleb128 0xc
 4099 0962 44070000 		.4byte	.LVL113
 4100 0966 6F100000 		.4byte	0x106f
 4101 096a 74090000 		.4byte	0x974
 4102 096e 0D       		.uleb128 0xd
 4103 096f 01       		.uleb128 0x1
 4104 0970 50       		.byte	0x50
 4105 0971 01       		.uleb128 0x1
 4106 0972 34       		.byte	0x34
 4107 0973 00       		.byte	0
 4108 0974 0E       		.uleb128 0xe
 4109 0975 4E070000 		.4byte	.LVL114
 4110 0979 7A100000 		.4byte	0x107a
 4111 097d 0C       		.uleb128 0xc
 4112 097e 56070000 		.4byte	.LVL115
 4113 0982 58100000 		.4byte	0x1058
 4114 0986 90090000 		.4byte	0x990
 4115 098a 0D       		.uleb128 0xd
 4116 098b 01       		.uleb128 0x1
 4117 098c 50       		.byte	0x50
 4118 098d 01       		.uleb128 0x1
 4119 098e 3B       		.byte	0x3b
 4120 098f 00       		.byte	0
 4121 0990 0C       		.uleb128 0xc
 4122 0991 60070000 		.4byte	.LVL116
 4123 0995 64100000 		.4byte	0x1064
 4124 0999 A3090000 		.4byte	0x9a3
 4125 099d 0D       		.uleb128 0xd
 4126 099e 01       		.uleb128 0x1
 4127 099f 50       		.byte	0x50
 4128 09a0 01       		.uleb128 0x1
 4129 09a1 3A       		.byte	0x3a
 4130 09a2 00       		.byte	0
 4131 09a3 0C       		.uleb128 0xc
 4132 09a4 68070000 		.4byte	.LVL117
 4133 09a8 58100000 		.4byte	0x1058
 4134 09ac B6090000 		.4byte	0x9b6
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 107


 4135 09b0 0D       		.uleb128 0xd
 4136 09b1 01       		.uleb128 0x1
 4137 09b2 50       		.byte	0x50
 4138 09b3 01       		.uleb128 0x1
 4139 09b4 3A       		.byte	0x3a
 4140 09b5 00       		.byte	0
 4141 09b6 0C       		.uleb128 0xc
 4142 09b7 72070000 		.4byte	.LVL118
 4143 09bb 64100000 		.4byte	0x1064
 4144 09bf C9090000 		.4byte	0x9c9
 4145 09c3 0D       		.uleb128 0xd
 4146 09c4 01       		.uleb128 0x1
 4147 09c5 50       		.byte	0x50
 4148 09c6 01       		.uleb128 0x1
 4149 09c7 3A       		.byte	0x3a
 4150 09c8 00       		.byte	0
 4151 09c9 0C       		.uleb128 0xc
 4152 09ca 7A070000 		.4byte	.LVL119
 4153 09ce 58100000 		.4byte	0x1058
 4154 09d2 DC090000 		.4byte	0x9dc
 4155 09d6 0D       		.uleb128 0xd
 4156 09d7 01       		.uleb128 0x1
 4157 09d8 50       		.byte	0x50
 4158 09d9 01       		.uleb128 0x1
 4159 09da 35       		.byte	0x35
 4160 09db 00       		.byte	0
 4161 09dc 0C       		.uleb128 0xc
 4162 09dd 84070000 		.4byte	.LVL120
 4163 09e1 64100000 		.4byte	0x1064
 4164 09e5 EF090000 		.4byte	0x9ef
 4165 09e9 0D       		.uleb128 0xd
 4166 09ea 01       		.uleb128 0x1
 4167 09eb 50       		.byte	0x50
 4168 09ec 01       		.uleb128 0x1
 4169 09ed 3A       		.byte	0x3a
 4170 09ee 00       		.byte	0
 4171 09ef 0C       		.uleb128 0xc
 4172 09f0 8C070000 		.4byte	.LVL121
 4173 09f4 15100000 		.4byte	0x1015
 4174 09f8 020A0000 		.4byte	0xa02
 4175 09fc 0D       		.uleb128 0xd
 4176 09fd 01       		.uleb128 0x1
 4177 09fe 50       		.byte	0x50
 4178 09ff 01       		.uleb128 0x1
 4179 0a00 30       		.byte	0x30
 4180 0a01 00       		.byte	0
 4181 0a02 0C       		.uleb128 0xc
 4182 0a03 E2070000 		.4byte	.LVL122
 4183 0a07 01100000 		.4byte	0x1001
 4184 0a0b 1B0A0000 		.4byte	0xa1b
 4185 0a0f 0D       		.uleb128 0xd
 4186 0a10 01       		.uleb128 0x1
 4187 0a11 50       		.byte	0x50
 4188 0a12 02       		.uleb128 0x2
 4189 0a13 7D       		.byte	0x7d
 4190 0a14 00       		.sleb128 0
 4191 0a15 0D       		.uleb128 0xd
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 108


 4192 0a16 01       		.uleb128 0x1
 4193 0a17 51       		.byte	0x51
 4194 0a18 01       		.uleb128 0x1
 4195 0a19 31       		.byte	0x31
 4196 0a1a 00       		.byte	0
 4197 0a1b 0C       		.uleb128 0xc
 4198 0a1c 04080000 		.4byte	.LVL123
 4199 0a20 01100000 		.4byte	0x1001
 4200 0a24 340A0000 		.4byte	0xa34
 4201 0a28 0D       		.uleb128 0xd
 4202 0a29 01       		.uleb128 0x1
 4203 0a2a 50       		.byte	0x50
 4204 0a2b 02       		.uleb128 0x2
 4205 0a2c 7D       		.byte	0x7d
 4206 0a2d 00       		.sleb128 0
 4207 0a2e 0D       		.uleb128 0xd
 4208 0a2f 01       		.uleb128 0x1
 4209 0a30 51       		.byte	0x51
 4210 0a31 01       		.uleb128 0x1
 4211 0a32 32       		.byte	0x32
 4212 0a33 00       		.byte	0
 4213 0a34 0C       		.uleb128 0xc
 4214 0a35 0E080000 		.4byte	.LVL124
 4215 0a39 0C100000 		.4byte	0x100c
 4216 0a3d 530A0000 		.4byte	0xa53
 4217 0a41 0D       		.uleb128 0xd
 4218 0a42 01       		.uleb128 0x1
 4219 0a43 50       		.byte	0x50
 4220 0a44 02       		.uleb128 0x2
 4221 0a45 74       		.byte	0x74
 4222 0a46 00       		.sleb128 0
 4223 0a47 0D       		.uleb128 0xd
 4224 0a48 01       		.uleb128 0x1
 4225 0a49 51       		.byte	0x51
 4226 0a4a 02       		.uleb128 0x2
 4227 0a4b 7D       		.byte	0x7d
 4228 0a4c 00       		.sleb128 0
 4229 0a4d 0D       		.uleb128 0xd
 4230 0a4e 01       		.uleb128 0x1
 4231 0a4f 52       		.byte	0x52
 4232 0a50 01       		.uleb128 0x1
 4233 0a51 35       		.byte	0x35
 4234 0a52 00       		.byte	0
 4235 0a53 0C       		.uleb128 0xc
 4236 0a54 1C080000 		.4byte	.LVL126
 4237 0a58 4C100000 		.4byte	0x104c
 4238 0a5c 6A0A0000 		.4byte	0xa6a
 4239 0a60 0D       		.uleb128 0xd
 4240 0a61 01       		.uleb128 0x1
 4241 0a62 50       		.byte	0x50
 4242 0a63 05       		.uleb128 0x5
 4243 0a64 03       		.byte	0x3
 4244 0a65 55000000 		.4byte	.LC20
 4245 0a69 00       		.byte	0
 4246 0a6a 0C       		.uleb128 0xc
 4247 0a6b 2C080000 		.4byte	.LVL127
 4248 0a6f 20100000 		.4byte	0x1020
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 109


 4249 0a73 830A0000 		.4byte	0xa83
 4250 0a77 0D       		.uleb128 0xd
 4251 0a78 01       		.uleb128 0x1
 4252 0a79 50       		.byte	0x50
 4253 0a7a 02       		.uleb128 0x2
 4254 0a7b 75       		.byte	0x75
 4255 0a7c 00       		.sleb128 0
 4256 0a7d 0D       		.uleb128 0xd
 4257 0a7e 01       		.uleb128 0x1
 4258 0a7f 51       		.byte	0x51
 4259 0a80 01       		.uleb128 0x1
 4260 0a81 32       		.byte	0x32
 4261 0a82 00       		.byte	0
 4262 0a83 0C       		.uleb128 0xc
 4263 0a84 68080000 		.4byte	.LVL129
 4264 0a88 01100000 		.4byte	0x1001
 4265 0a8c 9C0A0000 		.4byte	0xa9c
 4266 0a90 0D       		.uleb128 0xd
 4267 0a91 01       		.uleb128 0x1
 4268 0a92 50       		.byte	0x50
 4269 0a93 02       		.uleb128 0x2
 4270 0a94 7D       		.byte	0x7d
 4271 0a95 00       		.sleb128 0
 4272 0a96 0D       		.uleb128 0xd
 4273 0a97 01       		.uleb128 0x1
 4274 0a98 51       		.byte	0x51
 4275 0a99 01       		.uleb128 0x1
 4276 0a9a 32       		.byte	0x32
 4277 0a9b 00       		.byte	0
 4278 0a9c 0C       		.uleb128 0xc
 4279 0a9d 72080000 		.4byte	.LVL130
 4280 0aa1 0C100000 		.4byte	0x100c
 4281 0aa5 BB0A0000 		.4byte	0xabb
 4282 0aa9 0D       		.uleb128 0xd
 4283 0aaa 01       		.uleb128 0x1
 4284 0aab 50       		.byte	0x50
 4285 0aac 02       		.uleb128 0x2
 4286 0aad 74       		.byte	0x74
 4287 0aae 00       		.sleb128 0
 4288 0aaf 0D       		.uleb128 0xd
 4289 0ab0 01       		.uleb128 0x1
 4290 0ab1 51       		.byte	0x51
 4291 0ab2 02       		.uleb128 0x2
 4292 0ab3 7D       		.byte	0x7d
 4293 0ab4 00       		.sleb128 0
 4294 0ab5 0D       		.uleb128 0xd
 4295 0ab6 01       		.uleb128 0x1
 4296 0ab7 52       		.byte	0x52
 4297 0ab8 01       		.uleb128 0x1
 4298 0ab9 35       		.byte	0x35
 4299 0aba 00       		.byte	0
 4300 0abb 0C       		.uleb128 0xc
 4301 0abc 7C080000 		.4byte	.LVL131
 4302 0ac0 2B100000 		.4byte	0x102b
 4303 0ac4 D80A0000 		.4byte	0xad8
 4304 0ac8 0D       		.uleb128 0xd
 4305 0ac9 01       		.uleb128 0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 110


 4306 0aca 50       		.byte	0x50
 4307 0acb 02       		.uleb128 0x2
 4308 0acc 76       		.byte	0x76
 4309 0acd 00       		.sleb128 0
 4310 0ace 0D       		.uleb128 0xd
 4311 0acf 01       		.uleb128 0x1
 4312 0ad0 51       		.byte	0x51
 4313 0ad1 05       		.uleb128 0x5
 4314 0ad2 03       		.byte	0x3
 4315 0ad3 2D000000 		.4byte	.LC11
 4316 0ad7 00       		.byte	0
 4317 0ad8 0C       		.uleb128 0xc
 4318 0ad9 9E080000 		.4byte	.LVL134
 4319 0add 36100000 		.4byte	0x1036
 4320 0ae1 F80A0000 		.4byte	0xaf8
 4321 0ae5 0D       		.uleb128 0xd
 4322 0ae6 01       		.uleb128 0x1
 4323 0ae7 50       		.byte	0x50
 4324 0ae8 02       		.uleb128 0x2
 4325 0ae9 76       		.byte	0x76
 4326 0aea 00       		.sleb128 0
 4327 0aeb 0D       		.uleb128 0xd
 4328 0aec 01       		.uleb128 0x1
 4329 0aed 51       		.byte	0x51
 4330 0aee 02       		.uleb128 0x2
 4331 0aef 77       		.byte	0x77
 4332 0af0 00       		.sleb128 0
 4333 0af1 0D       		.uleb128 0xd
 4334 0af2 01       		.uleb128 0x1
 4335 0af3 52       		.byte	0x52
 4336 0af4 02       		.uleb128 0x2
 4337 0af5 77       		.byte	0x77
 4338 0af6 00       		.sleb128 0
 4339 0af7 00       		.byte	0
 4340 0af8 0C       		.uleb128 0xc
 4341 0af9 A8080000 		.4byte	.LVL136
 4342 0afd 64100000 		.4byte	0x1064
 4343 0b01 0D0B0000 		.4byte	0xb0d
 4344 0b05 0D       		.uleb128 0xd
 4345 0b06 01       		.uleb128 0x1
 4346 0b07 50       		.byte	0x50
 4347 0b08 03       		.uleb128 0x3
 4348 0b09 0A       		.byte	0xa
 4349 0b0a E803     		.2byte	0x3e8
 4350 0b0c 00       		.byte	0
 4351 0b0d 0C       		.uleb128 0xc
 4352 0b0e B8080000 		.4byte	.LVL139
 4353 0b12 6F100000 		.4byte	0x106f
 4354 0b16 200B0000 		.4byte	0xb20
 4355 0b1a 0D       		.uleb128 0xd
 4356 0b1b 01       		.uleb128 0x1
 4357 0b1c 50       		.byte	0x50
 4358 0b1d 01       		.uleb128 0x1
 4359 0b1e 34       		.byte	0x34
 4360 0b1f 00       		.byte	0
 4361 0b20 0E       		.uleb128 0xe
 4362 0b21 C2080000 		.4byte	.LVL140
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 111


 4363 0b25 7A100000 		.4byte	0x107a
 4364 0b29 0C       		.uleb128 0xc
 4365 0b2a CA080000 		.4byte	.LVL141
 4366 0b2e 41100000 		.4byte	0x1041
 4367 0b32 3C0B0000 		.4byte	0xb3c
 4368 0b36 0D       		.uleb128 0xd
 4369 0b37 01       		.uleb128 0x1
 4370 0b38 50       		.byte	0x50
 4371 0b39 01       		.uleb128 0x1
 4372 0b3a 30       		.byte	0x30
 4373 0b3b 00       		.byte	0
 4374 0b3c 0C       		.uleb128 0xc
 4375 0b3d D4080000 		.4byte	.LVL143
 4376 0b41 15100000 		.4byte	0x1015
 4377 0b45 4F0B0000 		.4byte	0xb4f
 4378 0b49 0D       		.uleb128 0xd
 4379 0b4a 01       		.uleb128 0x1
 4380 0b4b 50       		.byte	0x50
 4381 0b4c 01       		.uleb128 0x1
 4382 0b4d 30       		.byte	0x30
 4383 0b4e 00       		.byte	0
 4384 0b4f 0C       		.uleb128 0xc
 4385 0b50 14090000 		.4byte	.LVL144
 4386 0b54 01100000 		.4byte	0x1001
 4387 0b58 680B0000 		.4byte	0xb68
 4388 0b5c 0D       		.uleb128 0xd
 4389 0b5d 01       		.uleb128 0x1
 4390 0b5e 50       		.byte	0x50
 4391 0b5f 02       		.uleb128 0x2
 4392 0b60 7D       		.byte	0x7d
 4393 0b61 00       		.sleb128 0
 4394 0b62 0D       		.uleb128 0xd
 4395 0b63 01       		.uleb128 0x1
 4396 0b64 51       		.byte	0x51
 4397 0b65 01       		.uleb128 0x1
 4398 0b66 31       		.byte	0x31
 4399 0b67 00       		.byte	0
 4400 0b68 0C       		.uleb128 0xc
 4401 0b69 20090000 		.4byte	.LVL145
 4402 0b6d 6F100000 		.4byte	0x106f
 4403 0b71 7B0B0000 		.4byte	0xb7b
 4404 0b75 0D       		.uleb128 0xd
 4405 0b76 01       		.uleb128 0x1
 4406 0b77 50       		.byte	0x50
 4407 0b78 01       		.uleb128 0x1
 4408 0b79 34       		.byte	0x34
 4409 0b7a 00       		.byte	0
 4410 0b7b 0E       		.uleb128 0xe
 4411 0b7c 2A090000 		.4byte	.LVL146
 4412 0b80 7A100000 		.4byte	0x107a
 4413 0b84 0C       		.uleb128 0xc
 4414 0b85 32090000 		.4byte	.LVL147
 4415 0b89 41100000 		.4byte	0x1041
 4416 0b8d 970B0000 		.4byte	0xb97
 4417 0b91 0D       		.uleb128 0xd
 4418 0b92 01       		.uleb128 0x1
 4419 0b93 50       		.byte	0x50
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 112


 4420 0b94 01       		.uleb128 0x1
 4421 0b95 34       		.byte	0x34
 4422 0b96 00       		.byte	0
 4423 0b97 0C       		.uleb128 0xc
 4424 0b98 50090000 		.4byte	.LVL148
 4425 0b9c 20100000 		.4byte	0x1020
 4426 0ba0 AF0B0000 		.4byte	0xbaf
 4427 0ba4 0D       		.uleb128 0xd
 4428 0ba5 01       		.uleb128 0x1
 4429 0ba6 50       		.byte	0x50
 4430 0ba7 01       		.uleb128 0x1
 4431 0ba8 32       		.byte	0x32
 4432 0ba9 0D       		.uleb128 0xd
 4433 0baa 01       		.uleb128 0x1
 4434 0bab 51       		.byte	0x51
 4435 0bac 01       		.uleb128 0x1
 4436 0bad 32       		.byte	0x32
 4437 0bae 00       		.byte	0
 4438 0baf 0C       		.uleb128 0xc
 4439 0bb0 58090000 		.4byte	.LVL149
 4440 0bb4 15100000 		.4byte	0x1015
 4441 0bb8 C20B0000 		.4byte	0xbc2
 4442 0bbc 0D       		.uleb128 0xd
 4443 0bbd 01       		.uleb128 0x1
 4444 0bbe 50       		.byte	0x50
 4445 0bbf 01       		.uleb128 0x1
 4446 0bc0 30       		.byte	0x30
 4447 0bc1 00       		.byte	0
 4448 0bc2 0C       		.uleb128 0xc
 4449 0bc3 98090000 		.4byte	.LVL150
 4450 0bc7 01100000 		.4byte	0x1001
 4451 0bcb DB0B0000 		.4byte	0xbdb
 4452 0bcf 0D       		.uleb128 0xd
 4453 0bd0 01       		.uleb128 0x1
 4454 0bd1 50       		.byte	0x50
 4455 0bd2 02       		.uleb128 0x2
 4456 0bd3 7D       		.byte	0x7d
 4457 0bd4 00       		.sleb128 0
 4458 0bd5 0D       		.uleb128 0xd
 4459 0bd6 01       		.uleb128 0x1
 4460 0bd7 51       		.byte	0x51
 4461 0bd8 01       		.uleb128 0x1
 4462 0bd9 31       		.byte	0x31
 4463 0bda 00       		.byte	0
 4464 0bdb 0C       		.uleb128 0xc
 4465 0bdc A4090000 		.4byte	.LVL151
 4466 0be0 20100000 		.4byte	0x1020
 4467 0be4 F30B0000 		.4byte	0xbf3
 4468 0be8 0D       		.uleb128 0xd
 4469 0be9 01       		.uleb128 0x1
 4470 0bea 50       		.byte	0x50
 4471 0beb 01       		.uleb128 0x1
 4472 0bec 31       		.byte	0x31
 4473 0bed 0D       		.uleb128 0xd
 4474 0bee 01       		.uleb128 0x1
 4475 0bef 51       		.byte	0x51
 4476 0bf0 01       		.uleb128 0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 113


 4477 0bf1 32       		.byte	0x32
 4478 0bf2 00       		.byte	0
 4479 0bf3 0C       		.uleb128 0xc
 4480 0bf4 AA090000 		.4byte	.LVL152
 4481 0bf8 6F100000 		.4byte	0x106f
 4482 0bfc 060C0000 		.4byte	0xc06
 4483 0c00 0D       		.uleb128 0xd
 4484 0c01 01       		.uleb128 0x1
 4485 0c02 50       		.byte	0x50
 4486 0c03 01       		.uleb128 0x1
 4487 0c04 34       		.byte	0x34
 4488 0c05 00       		.byte	0
 4489 0c06 0E       		.uleb128 0xe
 4490 0c07 B4090000 		.4byte	.LVL153
 4491 0c0b 7A100000 		.4byte	0x107a
 4492 0c0f 00       		.byte	0
 4493 0c10 0F       		.uleb128 0xf
 4494 0c11 80000000 		.4byte	.LASF32
 4495 0c15 01       		.byte	0x1
 4496 0c16 B503     		.2byte	0x3b5
 4497 0c18 6B000000 		.4byte	0x6b
 4498 0c1c 00000000 		.4byte	.LFB33
 4499 0c20 0C020000 		.4byte	.LFE33-.LFB33
 4500 0c24 01       		.uleb128 0x1
 4501 0c25 9C       		.byte	0x9c
 4502 0c26 210D0000 		.4byte	0xd21
 4503 0c2a 10       		.uleb128 0x10
 4504 0c2b 636800   		.ascii	"ch\000"
 4505 0c2e 01       		.byte	0x1
 4506 0c2f B803     		.2byte	0x3b8
 4507 0c31 77000000 		.4byte	0x77
 4508 0c35 9C000000 		.4byte	.LLST1
 4509 0c39 0E       		.uleb128 0xe
 4510 0c3a 32000000 		.4byte	.LVL155
 4511 0c3e 85100000 		.4byte	0x1085
 4512 0c42 0E       		.uleb128 0xe
 4513 0c43 64000000 		.4byte	.LVL157
 4514 0c47 85100000 		.4byte	0x1085
 4515 0c4b 0E       		.uleb128 0xe
 4516 0c4c C0000000 		.4byte	.LVL159
 4517 0c50 85100000 		.4byte	0x1085
 4518 0c54 0C       		.uleb128 0xc
 4519 0c55 E8000000 		.4byte	.LVL161
 4520 0c59 2B100000 		.4byte	0x102b
 4521 0c5d 6B0C0000 		.4byte	0xc6b
 4522 0c61 0D       		.uleb128 0xd
 4523 0c62 01       		.uleb128 0x1
 4524 0c63 50       		.byte	0x50
 4525 0c64 05       		.uleb128 0x5
 4526 0c65 03       		.byte	0x3
 4527 0c66 00000000 		.4byte	new_display_data_buffer
 4528 0c6a 00       		.byte	0
 4529 0c6b 0E       		.uleb128 0xe
 4530 0c6c EC000000 		.4byte	.LVL162
 4531 0c70 91100000 		.4byte	0x1091
 4532 0c74 0E       		.uleb128 0xe
 4533 0c75 04010000 		.4byte	.LVL163
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 114


 4534 0c79 85100000 		.4byte	0x1085
 4535 0c7d 0E       		.uleb128 0xe
 4536 0c7e 30010000 		.4byte	.LVL165
 4537 0c82 91100000 		.4byte	0x1091
 4538 0c86 0C       		.uleb128 0xc
 4539 0c87 40010000 		.4byte	.LVL166
 4540 0c8b 20100000 		.4byte	0x1020
 4541 0c8f 9E0C0000 		.4byte	0xc9e
 4542 0c93 0D       		.uleb128 0xd
 4543 0c94 01       		.uleb128 0x1
 4544 0c95 50       		.byte	0x50
 4545 0c96 01       		.uleb128 0x1
 4546 0c97 30       		.byte	0x30
 4547 0c98 0D       		.uleb128 0xd
 4548 0c99 01       		.uleb128 0x1
 4549 0c9a 51       		.byte	0x51
 4550 0c9b 01       		.uleb128 0x1
 4551 0c9c 30       		.byte	0x30
 4552 0c9d 00       		.byte	0
 4553 0c9e 0C       		.uleb128 0xc
 4554 0c9f 50010000 		.4byte	.LVL167
 4555 0ca3 9C100000 		.4byte	0x109c
 4556 0ca7 B10C0000 		.4byte	0xcb1
 4557 0cab 0D       		.uleb128 0xd
 4558 0cac 01       		.uleb128 0x1
 4559 0cad 50       		.byte	0x50
 4560 0cae 01       		.uleb128 0x1
 4561 0caf 30       		.byte	0x30
 4562 0cb0 00       		.byte	0
 4563 0cb1 0C       		.uleb128 0xc
 4564 0cb2 6C010000 		.4byte	.LVL168
 4565 0cb6 9C100000 		.4byte	0x109c
 4566 0cba C40C0000 		.4byte	0xcc4
 4567 0cbe 0D       		.uleb128 0xd
 4568 0cbf 01       		.uleb128 0x1
 4569 0cc0 50       		.byte	0x50
 4570 0cc1 01       		.uleb128 0x1
 4571 0cc2 31       		.byte	0x31
 4572 0cc3 00       		.byte	0
 4573 0cc4 0C       		.uleb128 0xc
 4574 0cc5 8A010000 		.4byte	.LVL169
 4575 0cc9 2B100000 		.4byte	0x102b
 4576 0ccd E40C0000 		.4byte	0xce4
 4577 0cd1 0D       		.uleb128 0xd
 4578 0cd2 01       		.uleb128 0x1
 4579 0cd3 50       		.byte	0x50
 4580 0cd4 05       		.uleb128 0x5
 4581 0cd5 03       		.byte	0x3
 4582 0cd6 00000000 		.4byte	new_display_data_buffer
 4583 0cda 0D       		.uleb128 0xd
 4584 0cdb 01       		.uleb128 0x1
 4585 0cdc 51       		.byte	0x51
 4586 0cdd 05       		.uleb128 0x5
 4587 0cde 03       		.byte	0x3
 4588 0cdf 74000000 		.4byte	.LC34
 4589 0ce3 00       		.byte	0
 4590 0ce4 0C       		.uleb128 0xc
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 115


 4591 0ce5 A2010000 		.4byte	.LVL170
 4592 0ce9 2B100000 		.4byte	0x102b
 4593 0ced 040D0000 		.4byte	0xd04
 4594 0cf1 0D       		.uleb128 0xd
 4595 0cf2 01       		.uleb128 0x1
 4596 0cf3 50       		.byte	0x50
 4597 0cf4 05       		.uleb128 0x5
 4598 0cf5 03       		.byte	0x3
 4599 0cf6 00000000 		.4byte	new_display_data_buffer
 4600 0cfa 0D       		.uleb128 0xd
 4601 0cfb 01       		.uleb128 0x1
 4602 0cfc 51       		.byte	0x51
 4603 0cfd 05       		.uleb128 0x5
 4604 0cfe 03       		.byte	0x3
 4605 0cff 8D000000 		.4byte	.LC36
 4606 0d03 00       		.byte	0
 4607 0d04 11       		.uleb128 0x11
 4608 0d05 BC010000 		.4byte	.LVL171
 4609 0d09 2B100000 		.4byte	0x102b
 4610 0d0d 0D       		.uleb128 0xd
 4611 0d0e 01       		.uleb128 0x1
 4612 0d0f 50       		.byte	0x50
 4613 0d10 05       		.uleb128 0x5
 4614 0d11 03       		.byte	0x3
 4615 0d12 00000000 		.4byte	new_display_data_buffer
 4616 0d16 0D       		.uleb128 0xd
 4617 0d17 01       		.uleb128 0x1
 4618 0d18 51       		.byte	0x51
 4619 0d19 05       		.uleb128 0x5
 4620 0d1a 03       		.byte	0x3
 4621 0d1b A6000000 		.4byte	.LC38
 4622 0d1f 00       		.byte	0
 4623 0d20 00       		.byte	0
 4624 0d21 12       		.uleb128 0x12
 4625 0d22 4F030000 		.4byte	.LASF33
 4626 0d26 01       		.byte	0x1
 4627 0d27 4805     		.2byte	0x548
 4628 0d29 6B000000 		.4byte	0x6b
 4629 0d2d 00000000 		.4byte	.LFB34
 4630 0d31 B4020000 		.4byte	.LFE34-.LFB34
 4631 0d35 01       		.uleb128 0x1
 4632 0d36 9C       		.byte	0x9c
 4633 0d37 360E0000 		.4byte	0xe36
 4634 0d3b 13       		.uleb128 0x13
 4635 0d3c 91040000 		.4byte	.LASF79
 4636 0d40 01       		.byte	0x1
 4637 0d41 4805     		.2byte	0x548
 4638 0d43 6B000000 		.4byte	0x6b
 4639 0d47 DB000000 		.4byte	.LLST2
 4640 0d4b 14       		.uleb128 0x14
 4641 0d4c BF030000 		.4byte	.LASF34
 4642 0d50 01       		.byte	0x1
 4643 0d51 4F05     		.2byte	0x54f
 4644 0d53 360E0000 		.4byte	0xe36
 4645 0d57 02       		.uleb128 0x2
 4646 0d58 91       		.byte	0x91
 4647 0d59 64       		.sleb128 -28
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 116


 4648 0d5a 0C       		.uleb128 0xc
 4649 0d5b 24000000 		.4byte	.LVL176
 4650 0d5f A7100000 		.4byte	0x10a7
 4651 0d63 7C0D0000 		.4byte	0xd7c
 4652 0d67 0D       		.uleb128 0xd
 4653 0d68 01       		.uleb128 0x1
 4654 0d69 50       		.byte	0x50
 4655 0d6a 02       		.uleb128 0x2
 4656 0d6b 77       		.byte	0x77
 4657 0d6c 00       		.sleb128 0
 4658 0d6d 0D       		.uleb128 0xd
 4659 0d6e 01       		.uleb128 0x1
 4660 0d6f 51       		.byte	0x51
 4661 0d70 05       		.uleb128 0x5
 4662 0d71 03       		.byte	0x3
 4663 0d72 00000000 		.4byte	eepromArray
 4664 0d76 0D       		.uleb128 0xd
 4665 0d77 01       		.uleb128 0x1
 4666 0d78 52       		.byte	0x52
 4667 0d79 01       		.uleb128 0x1
 4668 0d7a 33       		.byte	0x33
 4669 0d7b 00       		.byte	0
 4670 0d7c 0C       		.uleb128 0xc
 4671 0d7d F6000000 		.4byte	.LVL179
 4672 0d81 B3100000 		.4byte	0x10b3
 4673 0d85 9A0D0000 		.4byte	0xd9a
 4674 0d89 0D       		.uleb128 0xd
 4675 0d8a 01       		.uleb128 0x1
 4676 0d8b 50       		.byte	0x50
 4677 0d8c 01       		.uleb128 0x1
 4678 0d8d 30       		.byte	0x30
 4679 0d8e 0D       		.uleb128 0xd
 4680 0d8f 01       		.uleb128 0x1
 4681 0d90 51       		.byte	0x51
 4682 0d91 02       		.uleb128 0x2
 4683 0d92 76       		.byte	0x76
 4684 0d93 00       		.sleb128 0
 4685 0d94 0D       		.uleb128 0xd
 4686 0d95 01       		.uleb128 0x1
 4687 0d96 52       		.byte	0x52
 4688 0d97 01       		.uleb128 0x1
 4689 0d98 33       		.byte	0x33
 4690 0d99 00       		.byte	0
 4691 0d9a 0E       		.uleb128 0xe
 4692 0d9b 3C010000 		.4byte	.LVL180
 4693 0d9f 4C100000 		.4byte	0x104c
 4694 0da3 0E       		.uleb128 0xe
 4695 0da4 64010000 		.4byte	.LVL181
 4696 0da8 4C100000 		.4byte	0x104c
 4697 0dac 0E       		.uleb128 0xe
 4698 0dad 8C010000 		.4byte	.LVL182
 4699 0db1 4C100000 		.4byte	0x104c
 4700 0db5 0C       		.uleb128 0xc
 4701 0db6 A6010000 		.4byte	.LVL183
 4702 0dba 4C100000 		.4byte	0x104c
 4703 0dbe CC0D0000 		.4byte	0xdcc
 4704 0dc2 0D       		.uleb128 0xd
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 117


 4705 0dc3 01       		.uleb128 0x1
 4706 0dc4 50       		.byte	0x50
 4707 0dc5 05       		.uleb128 0x5
 4708 0dc6 03       		.byte	0x3
 4709 0dc7 E5000000 		.4byte	.LC58
 4710 0dcb 00       		.byte	0
 4711 0dcc 0E       		.uleb128 0xe
 4712 0dcd B6010000 		.4byte	.LVL185
 4713 0dd1 BF100000 		.4byte	0x10bf
 4714 0dd5 0E       		.uleb128 0xe
 4715 0dd6 C6010000 		.4byte	.LVL187
 4716 0dda BF100000 		.4byte	0x10bf
 4717 0dde 0C       		.uleb128 0xc
 4718 0ddf CC010000 		.4byte	.LVL188
 4719 0de3 4C100000 		.4byte	0x104c
 4720 0de7 F50D0000 		.4byte	0xdf5
 4721 0deb 0D       		.uleb128 0xd
 4722 0dec 01       		.uleb128 0x1
 4723 0ded 50       		.byte	0x50
 4724 0dee 05       		.uleb128 0x5
 4725 0def 03       		.byte	0x3
 4726 0df0 EA000000 		.4byte	.LC60
 4727 0df4 00       		.byte	0
 4728 0df5 0C       		.uleb128 0xc
 4729 0df6 E4010000 		.4byte	.LVL189
 4730 0dfa 20100000 		.4byte	0x1020
 4731 0dfe 080E0000 		.4byte	0xe08
 4732 0e02 0D       		.uleb128 0xd
 4733 0e03 01       		.uleb128 0x1
 4734 0e04 50       		.byte	0x50
 4735 0e05 01       		.uleb128 0x1
 4736 0e06 32       		.byte	0x32
 4737 0e07 00       		.byte	0
 4738 0e08 0E       		.uleb128 0xe
 4739 0e09 E8010000 		.4byte	.LVL190
 4740 0e0d 91100000 		.4byte	0x1091
 4741 0e11 0E       		.uleb128 0xe
 4742 0e12 16020000 		.4byte	.LVL191
 4743 0e16 20100000 		.4byte	0x1020
 4744 0e1a 0E       		.uleb128 0xe
 4745 0e1b 1A020000 		.4byte	.LVL192
 4746 0e1f 91100000 		.4byte	0x1091
 4747 0e23 0E       		.uleb128 0xe
 4748 0e24 42020000 		.4byte	.LVL193
 4749 0e28 20100000 		.4byte	0x1020
 4750 0e2c 0E       		.uleb128 0xe
 4751 0e2d 46020000 		.4byte	.LVL194
 4752 0e31 91100000 		.4byte	0x1091
 4753 0e35 00       		.byte	0
 4754 0e36 15       		.uleb128 0x15
 4755 0e37 6B000000 		.4byte	0x6b
 4756 0e3b 460E0000 		.4byte	0xe46
 4757 0e3f 16       		.uleb128 0x16
 4758 0e40 9F000000 		.4byte	0x9f
 4759 0e44 02       		.byte	0x2
 4760 0e45 00       		.byte	0
 4761 0e46 17       		.uleb128 0x17
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 118


 4762 0e47 7A010000 		.4byte	.LASF35
 4763 0e4b 05       		.byte	0x5
 4764 0e4c 82       		.byte	0x82
 4765 0e4d 18010000 		.4byte	0x118
 4766 0e51 18       		.uleb128 0x18
 4767 0e52 2C020000 		.4byte	.LASF36
 4768 0e56 01       		.byte	0x1
 4769 0e57 13       		.byte	0x13
 4770 0e58 6B000000 		.4byte	0x6b
 4771 0e5c 05       		.uleb128 0x5
 4772 0e5d 03       		.byte	0x3
 4773 0e5e 00000000 		.4byte	FM_RADIO_STATION
 4774 0e62 18       		.uleb128 0x18
 4775 0e63 BF030000 		.4byte	.LASF34
 4776 0e67 04       		.byte	0x4
 4777 0e68 1E       		.byte	0x1e
 4778 0e69 360E0000 		.4byte	0xe36
 4779 0e6d 05       		.uleb128 0x5
 4780 0e6e 03       		.byte	0x3
 4781 0e6f 00000000 		.4byte	array
 4782 0e73 18       		.uleb128 0x18
 4783 0e74 5F000000 		.4byte	.LASF37
 4784 0e78 04       		.byte	0x4
 4785 0e79 1F       		.byte	0x1f
 4786 0e7a 360E0000 		.4byte	0xe36
 4787 0e7e 05       		.uleb128 0x5
 4788 0e7f 03       		.byte	0x3
 4789 0e80 00000000 		.4byte	eepromArray
 4790 0e84 18       		.uleb128 0x18
 4791 0e85 B2030000 		.4byte	.LASF38
 4792 0e89 04       		.byte	0x4
 4793 0e8a 22       		.byte	0x22
 4794 0e8b 6B000000 		.4byte	0x6b
 4795 0e8f 05       		.uleb128 0x5
 4796 0e90 03       		.byte	0x3
 4797 0e91 00000000 		.4byte	SYSTEM_STATE
 4798 0e95 18       		.uleb128 0x18
 4799 0e96 72000000 		.4byte	.LASF39
 4800 0e9a 04       		.byte	0x4
 4801 0e9b 23       		.byte	0x23
 4802 0e9c 6B000000 		.4byte	0x6b
 4803 0ea0 05       		.uleb128 0x5
 4804 0ea1 03       		.byte	0x3
 4805 0ea2 00000000 		.4byte	DISPLAY_STATE
 4806 0ea6 18       		.uleb128 0x18
 4807 0ea7 E2000000 		.4byte	.LASF40
 4808 0eab 04       		.byte	0x4
 4809 0eac 24       		.byte	0x24
 4810 0ead 6B000000 		.4byte	0x6b
 4811 0eb1 05       		.uleb128 0x5
 4812 0eb2 03       		.byte	0x3
 4813 0eb3 00000000 		.4byte	BT_Tx_STATE
 4814 0eb7 18       		.uleb128 0x18
 4815 0eb8 49000000 		.4byte	.LASF41
 4816 0ebc 04       		.byte	0x4
 4817 0ebd 27       		.byte	0x27
 4818 0ebe 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 119


 4819 0ec2 05       		.uleb128 0x5
 4820 0ec3 03       		.byte	0x3
 4821 0ec4 00000000 		.4byte	new_display_data_flag
 4822 0ec8 15       		.uleb128 0x15
 4823 0ec9 6B000000 		.4byte	0x6b
 4824 0ecd D80E0000 		.4byte	0xed8
 4825 0ed1 16       		.uleb128 0x16
 4826 0ed2 9F000000 		.4byte	0x9f
 4827 0ed6 17       		.byte	0x17
 4828 0ed7 00       		.byte	0
 4829 0ed8 18       		.uleb128 0x18
 4830 0ed9 C0040000 		.4byte	.LASF42
 4831 0edd 04       		.byte	0x4
 4832 0ede 29       		.byte	0x29
 4833 0edf C80E0000 		.4byte	0xec8
 4834 0ee3 05       		.uleb128 0x5
 4835 0ee4 03       		.byte	0x3
 4836 0ee5 00000000 		.4byte	new_display_data_buffer
 4837 0ee9 18       		.uleb128 0x18
 4838 0eea E3020000 		.4byte	.LASF43
 4839 0eee 04       		.byte	0x4
 4840 0eef 2A       		.byte	0x2a
 4841 0ef0 6B000000 		.4byte	0x6b
 4842 0ef4 05       		.uleb128 0x5
 4843 0ef5 03       		.byte	0x3
 4844 0ef6 00000000 		.4byte	new_disp_ctrl1
 4845 0efa 18       		.uleb128 0x18
 4846 0efb F2020000 		.4byte	.LASF44
 4847 0eff 04       		.byte	0x4
 4848 0f00 2B       		.byte	0x2b
 4849 0f01 6B000000 		.4byte	0x6b
 4850 0f05 05       		.uleb128 0x5
 4851 0f06 03       		.byte	0x3
 4852 0f07 00000000 		.4byte	new_disp_ctrl2
 4853 0f0b 18       		.uleb128 0x18
 4854 0f0c F4000000 		.4byte	.LASF45
 4855 0f10 04       		.byte	0x4
 4856 0f11 38       		.byte	0x38
 4857 0f12 6D010000 		.4byte	0x16d
 4858 0f16 05       		.uleb128 0x5
 4859 0f17 03       		.byte	0x3
 4860 0f18 00000000 		.4byte	next_PSUstate
 4861 0f1c 18       		.uleb128 0x18
 4862 0f1d 13050000 		.4byte	.LASF46
 4863 0f21 04       		.byte	0x4
 4864 0f22 38       		.byte	0x38
 4865 0f23 6D010000 		.4byte	0x16d
 4866 0f27 05       		.uleb128 0x5
 4867 0f28 03       		.byte	0x3
 4868 0f29 00000000 		.4byte	current_PSUstate
 4869 0f2d 18       		.uleb128 0x18
 4870 0f2e D4030000 		.4byte	.LASF47
 4871 0f32 06       		.byte	0x6
 4872 0f33 15       		.byte	0x15
 4873 0f34 6B000000 		.4byte	0x6b
 4874 0f38 05       		.uleb128 0x5
 4875 0f39 03       		.byte	0x3
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 120


 4876 0f3a 00000000 		.4byte	MODE_SHORT_V
 4877 0f3e 18       		.uleb128 0x18
 4878 0f3f 10010000 		.4byte	.LASF48
 4879 0f43 06       		.byte	0x6
 4880 0f44 16       		.byte	0x16
 4881 0f45 6B000000 		.4byte	0x6b
 4882 0f49 05       		.uleb128 0x5
 4883 0f4a 03       		.byte	0x3
 4884 0f4b 00000000 		.4byte	PWR_OK_SHORT_V
 4885 0f4f 18       		.uleb128 0x18
 4886 0f50 FD010000 		.4byte	.LASF49
 4887 0f54 06       		.byte	0x6
 4888 0f55 17       		.byte	0x17
 4889 0f56 6B000000 		.4byte	0x6b
 4890 0f5a 05       		.uleb128 0x5
 4891 0f5b 03       		.byte	0x3
 4892 0f5c 00000000 		.4byte	MODE_LONG_V
 4893 0f60 18       		.uleb128 0x18
 4894 0f61 8B030000 		.4byte	.LASF50
 4895 0f65 06       		.byte	0x6
 4896 0f66 18       		.byte	0x18
 4897 0f67 6B000000 		.4byte	0x6b
 4898 0f6b 05       		.uleb128 0x5
 4899 0f6c 03       		.byte	0x3
 4900 0f6d 00000000 		.4byte	PWR_OK_LONG_V
 4901 0f71 15       		.uleb128 0x15
 4902 0f72 6B000000 		.4byte	0x6b
 4903 0f76 810F0000 		.4byte	0xf81
 4904 0f7a 16       		.uleb128 0x16
 4905 0f7b 9F000000 		.4byte	0x9f
 4906 0f7f 3F       		.byte	0x3f
 4907 0f80 00       		.byte	0
 4908 0f81 18       		.uleb128 0x18
 4909 0f82 E1030000 		.4byte	.LASF51
 4910 0f86 06       		.byte	0x6
 4911 0f87 1A       		.byte	0x1a
 4912 0f88 710F0000 		.4byte	0xf71
 4913 0f8c 05       		.uleb128 0x5
 4914 0f8d 03       		.byte	0x3
 4915 0f8e 00000000 		.4byte	DATALINK_TABLE
 4916 0f92 18       		.uleb128 0x18
 4917 0f93 A5010000 		.4byte	.LASF52
 4918 0f97 06       		.byte	0x6
 4919 0f98 1B       		.byte	0x1b
 4920 0f99 6B000000 		.4byte	0x6b
 4921 0f9d 05       		.uleb128 0x5
 4922 0f9e 03       		.byte	0x3
 4923 0f9f 00000000 		.4byte	DATALINK_TABLE_COUNTER
 4924 0fa3 18       		.uleb128 0x18
 4925 0fa4 E2010000 		.4byte	.LASF53
 4926 0fa8 06       		.byte	0x6
 4927 0fa9 1C       		.byte	0x1c
 4928 0faa 6B000000 		.4byte	0x6b
 4929 0fae 05       		.uleb128 0x5
 4930 0faf 03       		.byte	0x3
 4931 0fb0 00000000 		.4byte	DATALINK_TABLE_COUNTER_MAX
 4932 0fb4 18       		.uleb128 0x18
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 121


 4933 0fb5 97020000 		.4byte	.LASF54
 4934 0fb9 06       		.byte	0x6
 4935 0fba 1D       		.byte	0x1d
 4936 0fbb 6B000000 		.4byte	0x6b
 4937 0fbf 05       		.uleb128 0x5
 4938 0fc0 03       		.byte	0x3
 4939 0fc1 00000000 		.4byte	DISPLAY_UPDATE
 4940 0fc5 15       		.uleb128 0x15
 4941 0fc6 D50F0000 		.4byte	0xfd5
 4942 0fca D50F0000 		.4byte	0xfd5
 4943 0fce 16       		.uleb128 0x16
 4944 0fcf 9F000000 		.4byte	0x9f
 4945 0fd3 1B       		.byte	0x1b
 4946 0fd4 00       		.byte	0
 4947 0fd5 19       		.uleb128 0x19
 4948 0fd6 6B000000 		.4byte	0x6b
 4949 0fda 18       		.uleb128 0x18
 4950 0fdb 3D000000 		.4byte	.LASF55
 4951 0fdf 07       		.byte	0x7
 4952 0fe0 31       		.byte	0x31
 4953 0fe1 EB0F0000 		.4byte	0xfeb
 4954 0fe5 05       		.uleb128 0x5
 4955 0fe6 03       		.byte	0x3
 4956 0fe7 00000000 		.4byte	dummyBuffer
 4957 0feb 19       		.uleb128 0x19
 4958 0fec C50F0000 		.4byte	0xfc5
 4959 0ff0 18       		.uleb128 0x18
 4960 0ff1 CA010000 		.4byte	.LASF56
 4961 0ff5 01       		.byte	0x1
 4962 0ff6 16       		.byte	0x16
 4963 0ff7 6B000000 		.4byte	0x6b
 4964 0ffb 05       		.uleb128 0x5
 4965 0ffc 03       		.byte	0x3
 4966 0ffd 00000000 		.4byte	counter
 4967 1001 1A       		.uleb128 0x1a
 4968 1002 D7000000 		.4byte	.LASF57
 4969 1006 D7000000 		.4byte	.LASF57
 4970 100a 04       		.byte	0x4
 4971 100b 89       		.byte	0x89
 4972 100c 1B       		.uleb128 0x1b
 4973 100d 6B000000 		.4byte	.LASF80
 4974 1011 6B000000 		.4byte	.LASF80
 4975 1015 1A       		.uleb128 0x1a
 4976 1016 20000000 		.4byte	.LASF58
 4977 101a 20000000 		.4byte	.LASF58
 4978 101e 08       		.byte	0x8
 4979 101f 33       		.byte	0x33
 4980 1020 1A       		.uleb128 0x1a
 4981 1021 3C010000 		.4byte	.LASF59
 4982 1025 3C010000 		.4byte	.LASF59
 4983 1029 04       		.byte	0x4
 4984 102a 70       		.byte	0x70
 4985 102b 1A       		.uleb128 0x1a
 4986 102c 34030000 		.4byte	.LASF60
 4987 1030 34030000 		.4byte	.LASF60
 4988 1034 09       		.byte	0x9
 4989 1035 1E       		.byte	0x1e
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 122


 4990 1036 1A       		.uleb128 0x1a
 4991 1037 47010000 		.4byte	.LASF61
 4992 103b 47010000 		.4byte	.LASF61
 4993 103f 07       		.byte	0x7
 4994 1040 44       		.byte	0x44
 4995 1041 1A       		.uleb128 0x1a
 4996 1042 AC040000 		.4byte	.LASF62
 4997 1046 AC040000 		.4byte	.LASF62
 4998 104a 07       		.byte	0x7
 4999 104b 7F       		.byte	0x7f
 5000 104c 1C       		.uleb128 0x1c
 5001 104d BE000000 		.4byte	.LASF63
 5002 1051 BE000000 		.4byte	.LASF63
 5003 1055 0A       		.byte	0xa
 5004 1056 2A03     		.2byte	0x32a
 5005 1058 1C       		.uleb128 0x1c
 5006 1059 3D020000 		.4byte	.LASF64
 5007 105d 3D020000 		.4byte	.LASF64
 5008 1061 04       		.byte	0x4
 5009 1062 0701     		.2byte	0x107
 5010 1064 1A       		.uleb128 0x1a
 5011 1065 D8040000 		.4byte	.LASF65
 5012 1069 D8040000 		.4byte	.LASF65
 5013 106d 0B       		.byte	0xb
 5014 106e EC       		.byte	0xec
 5015 106f 1A       		.uleb128 0x1a
 5016 1070 5A010000 		.4byte	.LASF66
 5017 1074 5A010000 		.4byte	.LASF66
 5018 1078 07       		.byte	0x7
 5019 1079 B7       		.byte	0xb7
 5020 107a 1A       		.uleb128 0x1a
 5021 107b A6020000 		.4byte	.LASF67
 5022 107f A6020000 		.4byte	.LASF67
 5023 1083 07       		.byte	0x7
 5024 1084 68       		.byte	0x68
 5025 1085 1C       		.uleb128 0x1c
 5026 1086 8C010000 		.4byte	.LASF68
 5027 108a 8C010000 		.4byte	.LASF68
 5028 108e 0A       		.byte	0xa
 5029 108f 0F03     		.2byte	0x30f
 5030 1091 1A       		.uleb128 0x1a
 5031 1092 1F010000 		.4byte	.LASF69
 5032 1096 1F010000 		.4byte	.LASF69
 5033 109a 0C       		.byte	0xc
 5034 109b 5A       		.byte	0x5a
 5035 109c 1A       		.uleb128 0x1a
 5036 109d CF020000 		.4byte	.LASF70
 5037 10a1 CF020000 		.4byte	.LASF70
 5038 10a5 04       		.byte	0x4
 5039 10a6 DC       		.byte	0xdc
 5040 10a7 1C       		.uleb128 0x1c
 5041 10a8 BD020000 		.4byte	.LASF71
 5042 10ac BD020000 		.4byte	.LASF71
 5043 10b0 03       		.byte	0x3
 5044 10b1 6801     		.2byte	0x168
 5045 10b3 1C       		.uleb128 0x1c
 5046 10b4 AB000000 		.4byte	.LASF72
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 123


 5047 10b8 AB000000 		.4byte	.LASF72
 5048 10bc 03       		.byte	0x3
 5049 10bd 6C01     		.2byte	0x16c
 5050 10bf 1C       		.uleb128 0x1c
 5051 10c0 EE040000 		.4byte	.LASF73
 5052 10c4 EE040000 		.4byte	.LASF73
 5053 10c8 0A       		.byte	0xa
 5054 10c9 4403     		.2byte	0x344
 5055 10cb 00       		.byte	0
 5056              		.section	.debug_abbrev,"",%progbits
 5057              	.Ldebug_abbrev0:
 5058 0000 01       		.uleb128 0x1
 5059 0001 11       		.uleb128 0x11
 5060 0002 01       		.byte	0x1
 5061 0003 25       		.uleb128 0x25
 5062 0004 0E       		.uleb128 0xe
 5063 0005 13       		.uleb128 0x13
 5064 0006 0B       		.uleb128 0xb
 5065 0007 03       		.uleb128 0x3
 5066 0008 0E       		.uleb128 0xe
 5067 0009 1B       		.uleb128 0x1b
 5068 000a 0E       		.uleb128 0xe
 5069 000b 55       		.uleb128 0x55
 5070 000c 17       		.uleb128 0x17
 5071 000d 11       		.uleb128 0x11
 5072 000e 01       		.uleb128 0x1
 5073 000f 10       		.uleb128 0x10
 5074 0010 17       		.uleb128 0x17
 5075 0011 00       		.byte	0
 5076 0012 00       		.byte	0
 5077 0013 02       		.uleb128 0x2
 5078 0014 24       		.uleb128 0x24
 5079 0015 00       		.byte	0
 5080 0016 0B       		.uleb128 0xb
 5081 0017 0B       		.uleb128 0xb
 5082 0018 3E       		.uleb128 0x3e
 5083 0019 0B       		.uleb128 0xb
 5084 001a 03       		.uleb128 0x3
 5085 001b 0E       		.uleb128 0xe
 5086 001c 00       		.byte	0
 5087 001d 00       		.byte	0
 5088 001e 03       		.uleb128 0x3
 5089 001f 24       		.uleb128 0x24
 5090 0020 00       		.byte	0
 5091 0021 0B       		.uleb128 0xb
 5092 0022 0B       		.uleb128 0xb
 5093 0023 3E       		.uleb128 0x3e
 5094 0024 0B       		.uleb128 0xb
 5095 0025 03       		.uleb128 0x3
 5096 0026 08       		.uleb128 0x8
 5097 0027 00       		.byte	0
 5098 0028 00       		.byte	0
 5099 0029 04       		.uleb128 0x4
 5100 002a 16       		.uleb128 0x16
 5101 002b 00       		.byte	0
 5102 002c 03       		.uleb128 0x3
 5103 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 124


 5104 002e 3A       		.uleb128 0x3a
 5105 002f 0B       		.uleb128 0xb
 5106 0030 3B       		.uleb128 0x3b
 5107 0031 05       		.uleb128 0x5
 5108 0032 49       		.uleb128 0x49
 5109 0033 13       		.uleb128 0x13
 5110 0034 00       		.byte	0
 5111 0035 00       		.byte	0
 5112 0036 05       		.uleb128 0x5
 5113 0037 13       		.uleb128 0x13
 5114 0038 01       		.byte	0x1
 5115 0039 0B       		.uleb128 0xb
 5116 003a 0B       		.uleb128 0xb
 5117 003b 3A       		.uleb128 0x3a
 5118 003c 0B       		.uleb128 0xb
 5119 003d 3B       		.uleb128 0x3b
 5120 003e 05       		.uleb128 0x5
 5121 003f 01       		.uleb128 0x1
 5122 0040 13       		.uleb128 0x13
 5123 0041 00       		.byte	0
 5124 0042 00       		.byte	0
 5125 0043 06       		.uleb128 0x6
 5126 0044 0D       		.uleb128 0xd
 5127 0045 00       		.byte	0
 5128 0046 03       		.uleb128 0x3
 5129 0047 0E       		.uleb128 0xe
 5130 0048 3A       		.uleb128 0x3a
 5131 0049 0B       		.uleb128 0xb
 5132 004a 3B       		.uleb128 0x3b
 5133 004b 05       		.uleb128 0x5
 5134 004c 49       		.uleb128 0x49
 5135 004d 13       		.uleb128 0x13
 5136 004e 38       		.uleb128 0x38
 5137 004f 0B       		.uleb128 0xb
 5138 0050 00       		.byte	0
 5139 0051 00       		.byte	0
 5140 0052 07       		.uleb128 0x7
 5141 0053 13       		.uleb128 0x13
 5142 0054 01       		.byte	0x1
 5143 0055 03       		.uleb128 0x3
 5144 0056 0E       		.uleb128 0xe
 5145 0057 0B       		.uleb128 0xb
 5146 0058 0B       		.uleb128 0xb
 5147 0059 3A       		.uleb128 0x3a
 5148 005a 0B       		.uleb128 0xb
 5149 005b 3B       		.uleb128 0x3b
 5150 005c 0B       		.uleb128 0xb
 5151 005d 01       		.uleb128 0x1
 5152 005e 13       		.uleb128 0x13
 5153 005f 00       		.byte	0
 5154 0060 00       		.byte	0
 5155 0061 08       		.uleb128 0x8
 5156 0062 0D       		.uleb128 0xd
 5157 0063 00       		.byte	0
 5158 0064 03       		.uleb128 0x3
 5159 0065 0E       		.uleb128 0xe
 5160 0066 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 125


 5161 0067 0B       		.uleb128 0xb
 5162 0068 3B       		.uleb128 0x3b
 5163 0069 0B       		.uleb128 0xb
 5164 006a 49       		.uleb128 0x49
 5165 006b 13       		.uleb128 0x13
 5166 006c 38       		.uleb128 0x38
 5167 006d 0B       		.uleb128 0xb
 5168 006e 00       		.byte	0
 5169 006f 00       		.byte	0
 5170 0070 09       		.uleb128 0x9
 5171 0071 16       		.uleb128 0x16
 5172 0072 00       		.byte	0
 5173 0073 03       		.uleb128 0x3
 5174 0074 0E       		.uleb128 0xe
 5175 0075 3A       		.uleb128 0x3a
 5176 0076 0B       		.uleb128 0xb
 5177 0077 3B       		.uleb128 0x3b
 5178 0078 0B       		.uleb128 0xb
 5179 0079 49       		.uleb128 0x49
 5180 007a 13       		.uleb128 0x13
 5181 007b 00       		.byte	0
 5182 007c 00       		.byte	0
 5183 007d 0A       		.uleb128 0xa
 5184 007e 2E       		.uleb128 0x2e
 5185 007f 01       		.byte	0x1
 5186 0080 3F       		.uleb128 0x3f
 5187 0081 19       		.uleb128 0x19
 5188 0082 03       		.uleb128 0x3
 5189 0083 0E       		.uleb128 0xe
 5190 0084 3A       		.uleb128 0x3a
 5191 0085 0B       		.uleb128 0xb
 5192 0086 3B       		.uleb128 0x3b
 5193 0087 0B       		.uleb128 0xb
 5194 0088 49       		.uleb128 0x49
 5195 0089 13       		.uleb128 0x13
 5196 008a 11       		.uleb128 0x11
 5197 008b 01       		.uleb128 0x1
 5198 008c 12       		.uleb128 0x12
 5199 008d 06       		.uleb128 0x6
 5200 008e 40       		.uleb128 0x40
 5201 008f 18       		.uleb128 0x18
 5202 0090 9642     		.uleb128 0x2116
 5203 0092 19       		.uleb128 0x19
 5204 0093 01       		.uleb128 0x1
 5205 0094 13       		.uleb128 0x13
 5206 0095 00       		.byte	0
 5207 0096 00       		.byte	0
 5208 0097 0B       		.uleb128 0xb
 5209 0098 34       		.uleb128 0x34
 5210 0099 00       		.byte	0
 5211 009a 03       		.uleb128 0x3
 5212 009b 0E       		.uleb128 0xe
 5213 009c 3A       		.uleb128 0x3a
 5214 009d 0B       		.uleb128 0xb
 5215 009e 3B       		.uleb128 0x3b
 5216 009f 0B       		.uleb128 0xb
 5217 00a0 49       		.uleb128 0x49
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 126


 5218 00a1 13       		.uleb128 0x13
 5219 00a2 02       		.uleb128 0x2
 5220 00a3 17       		.uleb128 0x17
 5221 00a4 00       		.byte	0
 5222 00a5 00       		.byte	0
 5223 00a6 0C       		.uleb128 0xc
 5224 00a7 898201   		.uleb128 0x4109
 5225 00aa 01       		.byte	0x1
 5226 00ab 11       		.uleb128 0x11
 5227 00ac 01       		.uleb128 0x1
 5228 00ad 31       		.uleb128 0x31
 5229 00ae 13       		.uleb128 0x13
 5230 00af 01       		.uleb128 0x1
 5231 00b0 13       		.uleb128 0x13
 5232 00b1 00       		.byte	0
 5233 00b2 00       		.byte	0
 5234 00b3 0D       		.uleb128 0xd
 5235 00b4 8A8201   		.uleb128 0x410a
 5236 00b7 00       		.byte	0
 5237 00b8 02       		.uleb128 0x2
 5238 00b9 18       		.uleb128 0x18
 5239 00ba 9142     		.uleb128 0x2111
 5240 00bc 18       		.uleb128 0x18
 5241 00bd 00       		.byte	0
 5242 00be 00       		.byte	0
 5243 00bf 0E       		.uleb128 0xe
 5244 00c0 898201   		.uleb128 0x4109
 5245 00c3 00       		.byte	0
 5246 00c4 11       		.uleb128 0x11
 5247 00c5 01       		.uleb128 0x1
 5248 00c6 31       		.uleb128 0x31
 5249 00c7 13       		.uleb128 0x13
 5250 00c8 00       		.byte	0
 5251 00c9 00       		.byte	0
 5252 00ca 0F       		.uleb128 0xf
 5253 00cb 2E       		.uleb128 0x2e
 5254 00cc 01       		.byte	0x1
 5255 00cd 3F       		.uleb128 0x3f
 5256 00ce 19       		.uleb128 0x19
 5257 00cf 03       		.uleb128 0x3
 5258 00d0 0E       		.uleb128 0xe
 5259 00d1 3A       		.uleb128 0x3a
 5260 00d2 0B       		.uleb128 0xb
 5261 00d3 3B       		.uleb128 0x3b
 5262 00d4 05       		.uleb128 0x5
 5263 00d5 27       		.uleb128 0x27
 5264 00d6 19       		.uleb128 0x19
 5265 00d7 49       		.uleb128 0x49
 5266 00d8 13       		.uleb128 0x13
 5267 00d9 11       		.uleb128 0x11
 5268 00da 01       		.uleb128 0x1
 5269 00db 12       		.uleb128 0x12
 5270 00dc 06       		.uleb128 0x6
 5271 00dd 40       		.uleb128 0x40
 5272 00de 18       		.uleb128 0x18
 5273 00df 9742     		.uleb128 0x2117
 5274 00e1 19       		.uleb128 0x19
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 127


 5275 00e2 01       		.uleb128 0x1
 5276 00e3 13       		.uleb128 0x13
 5277 00e4 00       		.byte	0
 5278 00e5 00       		.byte	0
 5279 00e6 10       		.uleb128 0x10
 5280 00e7 34       		.uleb128 0x34
 5281 00e8 00       		.byte	0
 5282 00e9 03       		.uleb128 0x3
 5283 00ea 08       		.uleb128 0x8
 5284 00eb 3A       		.uleb128 0x3a
 5285 00ec 0B       		.uleb128 0xb
 5286 00ed 3B       		.uleb128 0x3b
 5287 00ee 05       		.uleb128 0x5
 5288 00ef 49       		.uleb128 0x49
 5289 00f0 13       		.uleb128 0x13
 5290 00f1 02       		.uleb128 0x2
 5291 00f2 17       		.uleb128 0x17
 5292 00f3 00       		.byte	0
 5293 00f4 00       		.byte	0
 5294 00f5 11       		.uleb128 0x11
 5295 00f6 898201   		.uleb128 0x4109
 5296 00f9 01       		.byte	0x1
 5297 00fa 11       		.uleb128 0x11
 5298 00fb 01       		.uleb128 0x1
 5299 00fc 31       		.uleb128 0x31
 5300 00fd 13       		.uleb128 0x13
 5301 00fe 00       		.byte	0
 5302 00ff 00       		.byte	0
 5303 0100 12       		.uleb128 0x12
 5304 0101 2E       		.uleb128 0x2e
 5305 0102 01       		.byte	0x1
 5306 0103 3F       		.uleb128 0x3f
 5307 0104 19       		.uleb128 0x19
 5308 0105 03       		.uleb128 0x3
 5309 0106 0E       		.uleb128 0xe
 5310 0107 3A       		.uleb128 0x3a
 5311 0108 0B       		.uleb128 0xb
 5312 0109 3B       		.uleb128 0x3b
 5313 010a 05       		.uleb128 0x5
 5314 010b 27       		.uleb128 0x27
 5315 010c 19       		.uleb128 0x19
 5316 010d 49       		.uleb128 0x49
 5317 010e 13       		.uleb128 0x13
 5318 010f 11       		.uleb128 0x11
 5319 0110 01       		.uleb128 0x1
 5320 0111 12       		.uleb128 0x12
 5321 0112 06       		.uleb128 0x6
 5322 0113 40       		.uleb128 0x40
 5323 0114 18       		.uleb128 0x18
 5324 0115 9642     		.uleb128 0x2116
 5325 0117 19       		.uleb128 0x19
 5326 0118 01       		.uleb128 0x1
 5327 0119 13       		.uleb128 0x13
 5328 011a 00       		.byte	0
 5329 011b 00       		.byte	0
 5330 011c 13       		.uleb128 0x13
 5331 011d 05       		.uleb128 0x5
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 128


 5332 011e 00       		.byte	0
 5333 011f 03       		.uleb128 0x3
 5334 0120 0E       		.uleb128 0xe
 5335 0121 3A       		.uleb128 0x3a
 5336 0122 0B       		.uleb128 0xb
 5337 0123 3B       		.uleb128 0x3b
 5338 0124 05       		.uleb128 0x5
 5339 0125 49       		.uleb128 0x49
 5340 0126 13       		.uleb128 0x13
 5341 0127 02       		.uleb128 0x2
 5342 0128 17       		.uleb128 0x17
 5343 0129 00       		.byte	0
 5344 012a 00       		.byte	0
 5345 012b 14       		.uleb128 0x14
 5346 012c 34       		.uleb128 0x34
 5347 012d 00       		.byte	0
 5348 012e 03       		.uleb128 0x3
 5349 012f 0E       		.uleb128 0xe
 5350 0130 3A       		.uleb128 0x3a
 5351 0131 0B       		.uleb128 0xb
 5352 0132 3B       		.uleb128 0x3b
 5353 0133 05       		.uleb128 0x5
 5354 0134 49       		.uleb128 0x49
 5355 0135 13       		.uleb128 0x13
 5356 0136 02       		.uleb128 0x2
 5357 0137 18       		.uleb128 0x18
 5358 0138 00       		.byte	0
 5359 0139 00       		.byte	0
 5360 013a 15       		.uleb128 0x15
 5361 013b 01       		.uleb128 0x1
 5362 013c 01       		.byte	0x1
 5363 013d 49       		.uleb128 0x49
 5364 013e 13       		.uleb128 0x13
 5365 013f 01       		.uleb128 0x1
 5366 0140 13       		.uleb128 0x13
 5367 0141 00       		.byte	0
 5368 0142 00       		.byte	0
 5369 0143 16       		.uleb128 0x16
 5370 0144 21       		.uleb128 0x21
 5371 0145 00       		.byte	0
 5372 0146 49       		.uleb128 0x49
 5373 0147 13       		.uleb128 0x13
 5374 0148 2F       		.uleb128 0x2f
 5375 0149 0B       		.uleb128 0xb
 5376 014a 00       		.byte	0
 5377 014b 00       		.byte	0
 5378 014c 17       		.uleb128 0x17
 5379 014d 34       		.uleb128 0x34
 5380 014e 00       		.byte	0
 5381 014f 03       		.uleb128 0x3
 5382 0150 0E       		.uleb128 0xe
 5383 0151 3A       		.uleb128 0x3a
 5384 0152 0B       		.uleb128 0xb
 5385 0153 3B       		.uleb128 0x3b
 5386 0154 0B       		.uleb128 0xb
 5387 0155 49       		.uleb128 0x49
 5388 0156 13       		.uleb128 0x13
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 129


 5389 0157 3F       		.uleb128 0x3f
 5390 0158 19       		.uleb128 0x19
 5391 0159 3C       		.uleb128 0x3c
 5392 015a 19       		.uleb128 0x19
 5393 015b 00       		.byte	0
 5394 015c 00       		.byte	0
 5395 015d 18       		.uleb128 0x18
 5396 015e 34       		.uleb128 0x34
 5397 015f 00       		.byte	0
 5398 0160 03       		.uleb128 0x3
 5399 0161 0E       		.uleb128 0xe
 5400 0162 3A       		.uleb128 0x3a
 5401 0163 0B       		.uleb128 0xb
 5402 0164 3B       		.uleb128 0x3b
 5403 0165 0B       		.uleb128 0xb
 5404 0166 49       		.uleb128 0x49
 5405 0167 13       		.uleb128 0x13
 5406 0168 3F       		.uleb128 0x3f
 5407 0169 19       		.uleb128 0x19
 5408 016a 02       		.uleb128 0x2
 5409 016b 18       		.uleb128 0x18
 5410 016c 00       		.byte	0
 5411 016d 00       		.byte	0
 5412 016e 19       		.uleb128 0x19
 5413 016f 26       		.uleb128 0x26
 5414 0170 00       		.byte	0
 5415 0171 49       		.uleb128 0x49
 5416 0172 13       		.uleb128 0x13
 5417 0173 00       		.byte	0
 5418 0174 00       		.byte	0
 5419 0175 1A       		.uleb128 0x1a
 5420 0176 2E       		.uleb128 0x2e
 5421 0177 00       		.byte	0
 5422 0178 3F       		.uleb128 0x3f
 5423 0179 19       		.uleb128 0x19
 5424 017a 3C       		.uleb128 0x3c
 5425 017b 19       		.uleb128 0x19
 5426 017c 6E       		.uleb128 0x6e
 5427 017d 0E       		.uleb128 0xe
 5428 017e 03       		.uleb128 0x3
 5429 017f 0E       		.uleb128 0xe
 5430 0180 3A       		.uleb128 0x3a
 5431 0181 0B       		.uleb128 0xb
 5432 0182 3B       		.uleb128 0x3b
 5433 0183 0B       		.uleb128 0xb
 5434 0184 00       		.byte	0
 5435 0185 00       		.byte	0
 5436 0186 1B       		.uleb128 0x1b
 5437 0187 2E       		.uleb128 0x2e
 5438 0188 00       		.byte	0
 5439 0189 3F       		.uleb128 0x3f
 5440 018a 19       		.uleb128 0x19
 5441 018b 3C       		.uleb128 0x3c
 5442 018c 19       		.uleb128 0x19
 5443 018d 6E       		.uleb128 0x6e
 5444 018e 0E       		.uleb128 0xe
 5445 018f 03       		.uleb128 0x3
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 130


 5446 0190 0E       		.uleb128 0xe
 5447 0191 00       		.byte	0
 5448 0192 00       		.byte	0
 5449 0193 1C       		.uleb128 0x1c
 5450 0194 2E       		.uleb128 0x2e
 5451 0195 00       		.byte	0
 5452 0196 3F       		.uleb128 0x3f
 5453 0197 19       		.uleb128 0x19
 5454 0198 3C       		.uleb128 0x3c
 5455 0199 19       		.uleb128 0x19
 5456 019a 6E       		.uleb128 0x6e
 5457 019b 0E       		.uleb128 0xe
 5458 019c 03       		.uleb128 0x3
 5459 019d 0E       		.uleb128 0xe
 5460 019e 3A       		.uleb128 0x3a
 5461 019f 0B       		.uleb128 0xb
 5462 01a0 3B       		.uleb128 0x3b
 5463 01a1 05       		.uleb128 0x5
 5464 01a2 00       		.byte	0
 5465 01a3 00       		.byte	0
 5466 01a4 00       		.byte	0
 5467              		.section	.debug_loc,"",%progbits
 5468              	.Ldebug_loc0:
 5469              	.LLST0:
 5470 0000 3C000000 		.4byte	.LVL2
 5471 0004 EE010000 		.4byte	.LVL24
 5472 0008 0200     		.2byte	0x2
 5473 000a 30       		.byte	0x30
 5474 000b 9F       		.byte	0x9f
 5475 000c 12020000 		.4byte	.LVL27
 5476 0010 7A020000 		.4byte	.LVL34
 5477 0014 0100     		.2byte	0x1
 5478 0016 55       		.byte	0x55
 5479 0017 82020000 		.4byte	.LVL36
 5480 001b 84020000 		.4byte	.LVL37
 5481 001f 0100     		.2byte	0x1
 5482 0021 55       		.byte	0x55
 5483 0022 A8020000 		.4byte	.LVL41
 5484 0026 A4030000 		.4byte	.LVL52
 5485 002a 0200     		.2byte	0x2
 5486 002c 30       		.byte	0x30
 5487 002d 9F       		.byte	0x9f
 5488 002e C8030000 		.4byte	.LVL55
 5489 0032 30040000 		.4byte	.LVL62
 5490 0036 0100     		.2byte	0x1
 5491 0038 55       		.byte	0x55
 5492 0039 38040000 		.4byte	.LVL64
 5493 003d 3A040000 		.4byte	.LVL65
 5494 0041 0100     		.2byte	0x1
 5495 0043 55       		.byte	0x55
 5496 0044 5A040000 		.4byte	.LVL69
 5497 0048 20050000 		.4byte	.LVL80
 5498 004c 0200     		.2byte	0x2
 5499 004e 30       		.byte	0x30
 5500 004f 9F       		.byte	0x9f
 5501 0050 44050000 		.4byte	.LVL83
 5502 0054 AC050000 		.4byte	.LVL90
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 131


 5503 0058 0100     		.2byte	0x1
 5504 005a 55       		.byte	0x55
 5505 005b B4050000 		.4byte	.LVL92
 5506 005f B6050000 		.4byte	.LVL93
 5507 0063 0100     		.2byte	0x1
 5508 0065 55       		.byte	0x55
 5509 0066 E2050000 		.4byte	.LVL97
 5510 006a 16080000 		.4byte	.LVL125
 5511 006e 0200     		.2byte	0x2
 5512 0070 30       		.byte	0x30
 5513 0071 9F       		.byte	0x9f
 5514 0072 3A080000 		.4byte	.LVL128
 5515 0076 A2080000 		.4byte	.LVL135
 5516 007a 0100     		.2byte	0x1
 5517 007c 55       		.byte	0x55
 5518 007d AA080000 		.4byte	.LVL137
 5519 0081 AC080000 		.4byte	.LVL138
 5520 0085 0100     		.2byte	0x1
 5521 0087 55       		.byte	0x55
 5522 0088 CE080000 		.4byte	.LVL142
 5523 008c C0090000 		.4byte	.LVL154
 5524 0090 0200     		.2byte	0x2
 5525 0092 30       		.byte	0x30
 5526 0093 9F       		.byte	0x9f
 5527 0094 00000000 		.4byte	0
 5528 0098 00000000 		.4byte	0
 5529              	.LLST1:
 5530 009c 32000000 		.4byte	.LVL155
 5531 00a0 5C000000 		.4byte	.LVL156
 5532 00a4 0100     		.2byte	0x1
 5533 00a6 50       		.byte	0x50
 5534 00a7 64000000 		.4byte	.LVL157
 5535 00ab BC000000 		.4byte	.LVL158
 5536 00af 0100     		.2byte	0x1
 5537 00b1 50       		.byte	0x50
 5538 00b2 C0000000 		.4byte	.LVL159
 5539 00b6 E0000000 		.4byte	.LVL160
 5540 00ba 0100     		.2byte	0x1
 5541 00bc 50       		.byte	0x50
 5542 00bd 04010000 		.4byte	.LVL163
 5543 00c1 2C010000 		.4byte	.LVL164
 5544 00c5 0100     		.2byte	0x1
 5545 00c7 50       		.byte	0x50
 5546 00c8 C8010000 		.4byte	.LVL172
 5547 00cc DA010000 		.4byte	.LVL173
 5548 00d0 0100     		.2byte	0x1
 5549 00d2 50       		.byte	0x50
 5550 00d3 00000000 		.4byte	0
 5551 00d7 00000000 		.4byte	0
 5552              	.LLST2:
 5553 00db 00000000 		.4byte	.LVL174
 5554 00df 20000000 		.4byte	.LVL175
 5555 00e3 0100     		.2byte	0x1
 5556 00e5 50       		.byte	0x50
 5557 00e6 20000000 		.4byte	.LVL175
 5558 00ea 8C000000 		.4byte	.LVL177
 5559 00ee 0400     		.2byte	0x4
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 132


 5560 00f0 F3       		.byte	0xf3
 5561 00f1 01       		.uleb128 0x1
 5562 00f2 50       		.byte	0x50
 5563 00f3 9F       		.byte	0x9f
 5564 00f4 8C000000 		.4byte	.LVL177
 5565 00f8 D6000000 		.4byte	.LVL178
 5566 00fc 0100     		.2byte	0x1
 5567 00fe 50       		.byte	0x50
 5568 00ff D6000000 		.4byte	.LVL178
 5569 0103 46020000 		.4byte	.LVL194
 5570 0107 0400     		.2byte	0x4
 5571 0109 F3       		.byte	0xf3
 5572 010a 01       		.uleb128 0x1
 5573 010b 50       		.byte	0x50
 5574 010c 9F       		.byte	0x9f
 5575 010d 46020000 		.4byte	.LVL194
 5576 0111 48020000 		.4byte	.LVL195
 5577 0115 0200     		.2byte	0x2
 5578 0117 30       		.byte	0x30
 5579 0118 9F       		.byte	0x9f
 5580 0119 48020000 		.4byte	.LVL195
 5581 011d 78020000 		.4byte	.LVL196
 5582 0121 0400     		.2byte	0x4
 5583 0123 F3       		.byte	0xf3
 5584 0124 01       		.uleb128 0x1
 5585 0125 50       		.byte	0x50
 5586 0126 9F       		.byte	0x9f
 5587 0127 00000000 		.4byte	0
 5588 012b 00000000 		.4byte	0
 5589              		.section	.debug_aranges,"",%progbits
 5590 0000 2C000000 		.4byte	0x2c
 5591 0004 0200     		.2byte	0x2
 5592 0006 00000000 		.4byte	.Ldebug_info0
 5593 000a 04       		.byte	0x4
 5594 000b 00       		.byte	0
 5595 000c 0000     		.2byte	0
 5596 000e 0000     		.2byte	0
 5597 0010 00000000 		.4byte	.LFB32
 5598 0014 F4090000 		.4byte	.LFE32-.LFB32
 5599 0018 00000000 		.4byte	.LFB33
 5600 001c 0C020000 		.4byte	.LFE33-.LFB33
 5601 0020 00000000 		.4byte	.LFB34
 5602 0024 B4020000 		.4byte	.LFE34-.LFB34
 5603 0028 00000000 		.4byte	0
 5604 002c 00000000 		.4byte	0
 5605              		.section	.debug_ranges,"",%progbits
 5606              	.Ldebug_ranges0:
 5607 0000 00000000 		.4byte	.LFB32
 5608 0004 F4090000 		.4byte	.LFE32
 5609 0008 00000000 		.4byte	.LFB33
 5610 000c 0C020000 		.4byte	.LFE33
 5611 0010 00000000 		.4byte	.LFB34
 5612 0014 B4020000 		.4byte	.LFE34
 5613 0018 00000000 		.4byte	0
 5614 001c 00000000 		.4byte	0
 5615              		.section	.debug_line,"",%progbits
 5616              	.Ldebug_line0:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 133


 5617 0000 06040000 		.section	.debug_str,"MS",%progbits,1
 5617      02003D01 
 5617      00000201 
 5617      FB0E0D00 
 5617      01010101 
 5618              	.LASF14:
 5619 0000 6C6F6E67 		.ascii	"long double\000"
 5619      20646F75 
 5619      626C6500 
 5620              	.LASF19:
 5621 000c 65657072 		.ascii	"eepromSize\000"
 5621      6F6D5369 
 5621      7A6500
 5622              	.LASF30:
 5623 0017 70737553 		.ascii	"psuState\000"
 5623      74617465 
 5623      00
 5624              	.LASF58:
 5625 0020 4C45445F 		.ascii	"LED_Write\000"
 5625      57726974 
 5625      6500
 5626              	.LASF2:
 5627 002a 73686F72 		.ascii	"short int\000"
 5627      7420696E 
 5627      7400
 5628              	.LASF15:
 5629 0034 73697A65 		.ascii	"sizetype\000"
 5629      74797065 
 5629      00
 5630              	.LASF55:
 5631 003d 64756D6D 		.ascii	"dummyBuffer\000"
 5631      79427566 
 5631      66657200 
 5632              	.LASF41:
 5633 0049 6E65775F 		.ascii	"new_display_data_flag\000"
 5633      64697370 
 5633      6C61795F 
 5633      64617461 
 5633      5F666C61 
 5634              	.LASF37:
 5635 005f 65657072 		.ascii	"eepromArray\000"
 5635      6F6D4172 
 5635      72617900 
 5636              	.LASF80:
 5637 006b 6D656D63 		.ascii	"memcpy\000"
 5637      707900
 5638              	.LASF39:
 5639 0072 44495350 		.ascii	"DISPLAY_STATE\000"
 5639      4C41595F 
 5639      53544154 
 5639      4500
 5640              	.LASF32:
 5641 0080 64697370 		.ascii	"display_update\000"
 5641      6C61795F 
 5641      75706461 
 5641      746500
 5642              	.LASF22:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 134


 5643 008f 626C6F63 		.ascii	"blockingWrite\000"
 5643      6B696E67 
 5643      57726974 
 5643      6500
 5644              	.LASF28:
 5645 009d 426C7565 		.ascii	"BlueTooth_PWR\000"
 5645      546F6F74 
 5645      685F5057 
 5645      5200
 5646              	.LASF72:
 5647 00ab 43795F45 		.ascii	"Cy_Em_EEPROM_Write\000"
 5647      6D5F4545 
 5647      50524F4D 
 5647      5F577269 
 5647      746500
 5648              	.LASF63:
 5649 00be 55415254 		.ascii	"UART_UartPutString\000"
 5649      5F556172 
 5649      74507574 
 5649      53747269 
 5649      6E6700
 5650              	.LASF9:
 5651 00d1 75696E74 		.ascii	"uint8\000"
 5651      3800
 5652              	.LASF57:
 5653 00d7 7073755F 		.ascii	"psu_config\000"
 5653      636F6E66 
 5653      696700
 5654              	.LASF40:
 5655 00e2 42545F54 		.ascii	"BT_Tx_STATE\000"
 5655      785F5354 
 5655      41544500 
 5656              	.LASF11:
 5657 00ee 666C6F61 		.ascii	"float\000"
 5657      7400
 5658              	.LASF45:
 5659 00f4 6E657874 		.ascii	"next_PSUstate\000"
 5659      5F505355 
 5659      73746174 
 5659      6500
 5660              	.LASF6:
 5661 0102 6C6F6E67 		.ascii	"long long int\000"
 5661      206C6F6E 
 5661      6720696E 
 5661      7400
 5662              	.LASF48:
 5663 0110 5057525F 		.ascii	"PWR_OK_SHORT_V\000"
 5663      4F4B5F53 
 5663      484F5254 
 5663      5F5600
 5664              	.LASF69:
 5665 011f 44495350 		.ascii	"DISPLAY_Timer_Start\000"
 5665      4C41595F 
 5665      54696D65 
 5665      725F5374 
 5665      61727400 
 5666              	.LASF4:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 135


 5667 0133 6C6F6E67 		.ascii	"long int\000"
 5667      20696E74 
 5667      00
 5668              	.LASF59:
 5669 013c 42545F63 		.ascii	"BT_control\000"
 5669      6F6E7472 
 5669      6F6C00
 5670              	.LASF61:
 5671 0147 5350494D 		.ascii	"SPIM_display_write\000"
 5671      5F646973 
 5671      706C6179 
 5671      5F777269 
 5671      746500
 5672              	.LASF66:
 5673 015a 5350494D 		.ascii	"SPIM_SigmaDSP_read\000"
 5673      5F536967 
 5673      6D614453 
 5673      505F7265 
 5673      616400
 5674              	.LASF27:
 5675 016d 5369676D 		.ascii	"SigmaDSP_PWR\000"
 5675      61445350 
 5675      5F505752 
 5675      00
 5676              	.LASF35:
 5677 017a 456D5F45 		.ascii	"Em_EEPROM_context\000"
 5677      4550524F 
 5677      4D5F636F 
 5677      6E746578 
 5677      7400
 5678              	.LASF68:
 5679 018c 55415254 		.ascii	"UART_UartGetChar\000"
 5679      5F556172 
 5679      74476574 
 5679      43686172 
 5679      00
 5680              	.LASF25:
 5681 019d 5250495F 		.ascii	"RPI_PWR\000"
 5681      50575200 
 5682              	.LASF52:
 5683 01a5 44415441 		.ascii	"DATALINK_TABLE_COUNTER\000"
 5683      4C494E4B 
 5683      5F544142 
 5683      4C455F43 
 5683      4F554E54 
 5684              	.LASF1:
 5685 01bc 756E7369 		.ascii	"unsigned char\000"
 5685      676E6564 
 5685      20636861 
 5685      7200
 5686              	.LASF56:
 5687 01ca 636F756E 		.ascii	"counter\000"
 5687      74657200 
 5688              	.LASF31:
 5689 01d2 64697370 		.ascii	"display_counter\000"
 5689      6C61795F 
 5689      636F756E 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 136


 5689      74657200 
 5690              	.LASF53:
 5691 01e2 44415441 		.ascii	"DATALINK_TABLE_COUNTER_MAX\000"
 5691      4C494E4B 
 5691      5F544142 
 5691      4C455F43 
 5691      4F554E54 
 5692              	.LASF49:
 5693 01fd 4D4F4445 		.ascii	"MODE_LONG_V\000"
 5693      5F4C4F4E 
 5693      475F5600 
 5694              	.LASF0:
 5695 0209 7369676E 		.ascii	"signed char\000"
 5695      65642063 
 5695      68617200 
 5696              	.LASF7:
 5697 0215 6C6F6E67 		.ascii	"long long unsigned int\000"
 5697      206C6F6E 
 5697      6720756E 
 5697      7369676E 
 5697      65642069 
 5698              	.LASF36:
 5699 022c 464D5F52 		.ascii	"FM_RADIO_STATION\000"
 5699      4144494F 
 5699      5F535441 
 5699      54494F4E 
 5699      00
 5700              	.LASF64:
 5701 023d 44415441 		.ascii	"DATALINK_out\000"
 5701      4C494E4B 
 5701      5F6F7574 
 5701      00
 5702              	.LASF76:
 5703 024a 433A5C55 		.ascii	"C:\\Users\\Ala\\Desktop\\Cypress\\BeoM_main.cydsn\000"
 5703      73657273 
 5703      5C416C61 
 5703      5C446573 
 5703      6B746F70 
 5704              	.LASF8:
 5705 0277 756E7369 		.ascii	"unsigned int\000"
 5705      676E6564 
 5705      20696E74 
 5705      00
 5706              	.LASF23:
 5707 0284 75736572 		.ascii	"userFlashStartAddr\000"
 5707      466C6173 
 5707      68537461 
 5707      72744164 
 5707      647200
 5708              	.LASF54:
 5709 0297 44495350 		.ascii	"DISPLAY_UPDATE\000"
 5709      4C41595F 
 5709      55504441 
 5709      544500
 5710              	.LASF67:
 5711 02a6 5350494D 		.ascii	"SPIM_SigmaDSP_init_SPI\000"
 5711      5F536967 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 137


 5711      6D614453 
 5711      505F696E 
 5711      69745F53 
 5712              	.LASF71:
 5713 02bd 43795F45 		.ascii	"Cy_Em_EEPROM_Read\000"
 5713      6D5F4545 
 5713      50524F4D 
 5713      5F526561 
 5713      6400
 5714              	.LASF70:
 5715 02cf 5369676D 		.ascii	"SigmaDSP_to_display\000"
 5715      61445350 
 5715      5F746F5F 
 5715      64697370 
 5715      6C617900 
 5716              	.LASF43:
 5717 02e3 6E65775F 		.ascii	"new_disp_ctrl1\000"
 5717      64697370 
 5717      5F637472 
 5717      6C3100
 5718              	.LASF44:
 5719 02f2 6E65775F 		.ascii	"new_disp_ctrl2\000"
 5719      64697370 
 5719      5F637472 
 5719      6C3200
 5720              	.LASF3:
 5721 0301 73686F72 		.ascii	"short unsigned int\000"
 5721      7420756E 
 5721      7369676E 
 5721      65642069 
 5721      6E7400
 5722              	.LASF26:
 5723 0314 5250695F 		.ascii	"RPi_GPIO_state\000"
 5723      4750494F 
 5723      5F737461 
 5723      746500
 5724              	.LASF13:
 5725 0323 63686172 		.ascii	"char\000"
 5725      00
 5726              	.LASF29:
 5727 0328 44697370 		.ascii	"Display_PWR\000"
 5727      6C61795F 
 5727      50575200 
 5728              	.LASF60:
 5729 0334 73747263 		.ascii	"strcpy\000"
 5729      707900
 5730              	.LASF75:
 5731 033b 6F706572 		.ascii	"operate.c\000"
 5731      6174652E 
 5731      6300
 5732              	.LASF16:
 5733 0345 776C456E 		.ascii	"wlEndAddr\000"
 5733      64416464 
 5733      7200
 5734              	.LASF33:
 5735 034f 64617461 		.ascii	"datalink_check\000"
 5735      6C696E6B 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 138


 5735      5F636865 
 5735      636B00
 5736              	.LASF21:
 5737 035e 72656475 		.ascii	"redundantCopy\000"
 5737      6E64616E 
 5737      74436F70 
 5737      7900
 5738              	.LASF24:
 5739 036c 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 5739      74635F65 
 5739      6570726F 
 5739      6D5F636F 
 5739      6E746578 
 5740              	.LASF10:
 5741 0384 75696E74 		.ascii	"uint32\000"
 5741      333200
 5742              	.LASF50:
 5743 038b 5057525F 		.ascii	"PWR_OK_LONG_V\000"
 5743      4F4B5F4C 
 5743      4F4E475F 
 5743      5600
 5744              	.LASF5:
 5745 0399 6C6F6E67 		.ascii	"long unsigned int\000"
 5745      20756E73 
 5745      69676E65 
 5745      6420696E 
 5745      7400
 5746              	.LASF12:
 5747 03ab 646F7562 		.ascii	"double\000"
 5747      6C6500
 5748              	.LASF38:
 5749 03b2 53595354 		.ascii	"SYSTEM_STATE\000"
 5749      454D5F53 
 5749      54415445 
 5749      00
 5750              	.LASF34:
 5751 03bf 61727261 		.ascii	"array\000"
 5751      7900
 5752              	.LASF78:
 5753 03c5 42656F4D 		.ascii	"BeoM_PSU_state\000"
 5753      5F505355 
 5753      5F737461 
 5753      746500
 5754              	.LASF47:
 5755 03d4 4D4F4445 		.ascii	"MODE_SHORT_V\000"
 5755      5F53484F 
 5755      52545F56 
 5755      00
 5756              	.LASF51:
 5757 03e1 44415441 		.ascii	"DATALINK_TABLE\000"
 5757      4C494E4B 
 5757      5F544142 
 5757      4C4500
 5758              	.LASF74:
 5759 03f0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5759      43313120 
 5759      352E342E 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 139


 5759      31203230 
 5759      31363036 
 5760 0423 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5760      20726576 
 5760      6973696F 
 5760      6E203233 
 5760      37373135 
 5761 0456 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 5761      66756E63 
 5761      74696F6E 
 5761      2D736563 
 5761      74696F6E 
 5762              	.LASF77:
 5763 047e 506F7765 		.ascii	"Power_Supply_State\000"
 5763      725F5375 
 5763      70706C79 
 5763      5F537461 
 5763      746500
 5764              	.LASF79:
 5765 0491 636F6D6D 		.ascii	"command\000"
 5765      616E6400 
 5766              	.LASF20:
 5767 0499 77656172 		.ascii	"wearLevelingFactor\000"
 5767      4C657665 
 5767      6C696E67 
 5767      46616374 
 5767      6F7200
 5768              	.LASF62:
 5769 04ac 5350494D 		.ascii	"SPIM_SigmaDSP_write\000"
 5769      5F536967 
 5769      6D614453 
 5769      505F7772 
 5769      69746500 
 5770              	.LASF42:
 5771 04c0 6E65775F 		.ascii	"new_display_data_buffer\000"
 5771      64697370 
 5771      6C61795F 
 5771      64617461 
 5771      5F627566 
 5772              	.LASF65:
 5773 04d8 43794465 		.ascii	"CyDelay\000"
 5773      6C617900 
 5774              	.LASF18:
 5775 04e0 6C617374 		.ascii	"lastWrRowAddr\000"
 5775      5772526F 
 5775      77416464 
 5775      7200
 5776              	.LASF73:
 5777 04ee 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 5777      5F537069 
 5777      55617274 
 5777      57726974 
 5777      65547844 
 5778              	.LASF17:
 5779 0506 6E756D62 		.ascii	"numberOfRows\000"
 5779      65724F66 
 5779      526F7773 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccsreKwN.s 			page 140


 5779      00
 5780              	.LASF46:
 5781 0513 63757272 		.ascii	"current_PSUstate\000"
 5781      656E745F 
 5781      50535573 
 5781      74617465 
 5781      00
 5782              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
