ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"spi_int.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPIM_display_write,"ax",%progbits
  20              		.align	1
  21              		.global	SPIM_display_write
  22              		.code	16
  23              		.thumb_func
  24              		.type	SPIM_display_write, %function
  25              	SPIM_display_write:
  26              	.LFB32:
  27              		.file 1 "spi_int.c"
   1:spi_int.c     **** /* ========================================
   2:spi_int.c     ****  *
   3:spi_int.c     ****  * Copyright HEMI, 2020
   4:spi_int.c     ****  * All Rights Reserved
   5:spi_int.c     ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:spi_int.c     ****  * 
   7:spi_int.c     ****  * Functions used by BeoModern main PSoC to display informaiton on BeoModern
   8:spi_int.c     ****  * front display as well as front LEDs
   9:spi_int.c     ****  *
  10:spi_int.c     ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  11:spi_int.c     ****  * WHICH IS THE PROPERTY OF HEMI.
  12:spi_int.c     ****  *
  13:spi_int.c     ****  * ========================================
  14:spi_int.c     **** */
  15:spi_int.c     **** 
  16:spi_int.c     **** #include <inputs.h>
  17:spi_int.c     **** #include <spi_int.h>
  18:spi_int.c     **** 
  19:spi_int.c     **** 
  20:spi_int.c     **** // This dummy buffer used by SPIM when it receives status packet.
  21:spi_int.c     **** const uint8 dummyBuffer[TxPACKET_SIZE] = {0xFFu, 0xFFu, 0xFFu};
  22:spi_int.c     **** //const uint8 message_table[TxPACKET_SIZE+2] = {0};
  23:spi_int.c     **** 
  24:spi_int.c     **** 
  25:spi_int.c     **** 
  26:spi_int.c     **** /*******************************************************************************
  27:spi_int.c     **** * Function Name: SPIM_display_write
  28:spi_int.c     **** ********************************************************************************
  29:spi_int.c     **** * Summary:
  30:spi_int.c     **** *  SPI Master initiates the transmission of 25 long message to the SPI Slave. 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 2


  31:spi_int.c     **** *  Funciton adds start and stop bajts to indicate correct transfer.
  32:spi_int.c     **** *  After transfer completion, the dummy bytes sent by the SPIS are cleared from 
  33:spi_int.c     **** *  the RX buffer.
  34:spi_int.c     **** *
  35:spi_int.c     **** * Summary:
  36:spi_int.c     **** *  Funciton reponsible for decoding and displayin commands that were sent over 
  37:spi_int.c     **** *  SPI interface to display. It intercepts 24 ASCI characters and pushes them to 
  38:spi_int.c     **** *  display. It also interprets two control words and manipulates LEDs acordingly
  39:spi_int.c     **** *  to control words state.
  40:spi_int.c     **** *  More than one LED can be ON at one time.
  41:spi_int.c     **** *
  42:spi_int.c     **** * Parameters:
  43:spi_int.c     **** *  input_table[] - table returned by SPI slave routine contining 24 ASCI
  44:spi_int.c     **** *                  characters and 2 control words for LED ON/OFF states
  45:spi_int.c     **** *  disp_ctrl1 - Each bit represents LED on front interface
  46:spi_int.c     **** *               LED control
  47:spi_int.c     **** *               CTRL0.0 - Player
  48:spi_int.c     **** *               CTRL0.1 - iRadio
  49:spi_int.c     **** *               CTRL0.2 - DAB Radio
  50:spi_int.c     **** *               CTRL0.3 - Aux IN
  51:spi_int.c     **** *               CTRL0.4 - Clock    
  52:spi_int.c     **** *               CTRL0.5 - RDS/FM Display
  53:spi_int.c     **** *               CTRL0.6 - BT Rx    
  54:spi_int.c     **** *               CTRL0.7 - NOT USED
  55:spi_int.c     ****                 only one LED can be ON at particualr moment in time
  56:spi_int.c     **** *  disp_ctrl2 - Each bit represents LED on front interface
  57:spi_int.c     **** *               LED control
  58:spi_int.c     **** *               CTRL1.0 - BT Tx
  59:spi_int.c     **** *               CTRL1.1 - Online status
  60:spi_int.c     **** *               CTRL1.2 - Signal Level
  61:spi_int.c     **** *               CTRL1.3 - Spectrum Analyser
  62:spi_int.c     **** *               CTRL1.4 - Clock 1
  63:spi_int.c     **** *               CTRL1.5 - Clock 2
  64:spi_int.c     **** *               CTRL1.6 - NOT USED
  65:spi_int.c     **** *               CTRL1.7 - NOT USED
  66:spi_int.c     **** *               more than one LED can be ON at particualr moment in time
  67:spi_int.c     **** * Return:
  68:spi_int.c     **** *  none
  69:spi_int.c     **** *
  70:spi_int.c     **** *
  71:spi_int.c     **** *******************************************************************************/
  72:spi_int.c     **** void SPIM_display_write(uint8 message_table[], uint8 disp_ctrl1, uint8 disp_ctrl2)
  73:spi_int.c     **** {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39              		.loc 1 73 0
  40 0002 0600     		movs	r6, r0
  74:spi_int.c     **** // SPIM TX buffer 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 3


  75:spi_int.c     ****     static uint8 mTxBuffer[TxPACKET_SIZE] = {0};
  76:spi_int.c     **** // variable to populate Tx buffer with incomming message
  77:spi_int.c     ****     uint8 i = 0;
  78:spi_int.c     **** 
  79:spi_int.c     **** // set SPI slave select line to display
  80:spi_int.c     ****     SPIM_SpiSetActiveSlaveSelect(SPIM_SPI_SLAVE_SELECT1);     
  41              		.loc 1 80 0
  42 0004 0120     		movs	r0, #1
  43              	.LVL1:
  73:spi_int.c     **** // SPIM TX buffer 
  44              		.loc 1 73 0
  45 0006 0D00     		movs	r5, r1
  46 0008 1400     		movs	r4, r2
  47              		.loc 1 80 0
  48 000a FFF7FEFF 		bl	SPIM_SpiSetActiveSlaveSelect
  49              	.LVL2:
  81:spi_int.c     ****     
  82:spi_int.c     **** // set start of Tx message 
  83:spi_int.c     ****     mTxBuffer[TxPACKET_SOP_POS] = (PACKET_SOP);
  50              		.loc 1 83 0
  51 000e 0123     		movs	r3, #1
  52 0010 0B48     		ldr	r0, .L7
  53 0012 0370     		strb	r3, [r0]
  54              	.LVL3:
  55 0014 0023     		movs	r3, #0
  56              	.LVL4:
  57              	.L2:
  84:spi_int.c     **** // populate buffer with incoming 24 characters of data    
  85:spi_int.c     ****     for (i = 1; i<TxPACKET_SIZE-3; i++)
  86:spi_int.c     ****     {
  87:spi_int.c     ****         mTxBuffer[i] = (message_table[i-1]);
  58              		.loc 1 87 0 discriminator 3
  59 0016 F15C     		ldrb	r1, [r6, r3]
  60 0018 C218     		adds	r2, r0, r3
  61 001a 0133     		adds	r3, r3, #1
  62              	.LVL5:
  63 001c 5170     		strb	r1, [r2, #1]
  85:spi_int.c     ****     {
  64              		.loc 1 85 0 discriminator 3
  65 001e 182B     		cmp	r3, #24
  66 0020 F9D1     		bne	.L2
  88:spi_int.c     ****     }
  89:spi_int.c     **** // populate control messages 1 and 2    
  90:spi_int.c     ****     mTxBuffer[TxPACKET_CTRL1_POS] = disp_ctrl1;
  91:spi_int.c     ****     mTxBuffer[TxPACKET_CTRL2_POS] = disp_ctrl2;
  92:spi_int.c     ****     
  93:spi_int.c     **** // set end of Tx message    
  94:spi_int.c     ****     mTxBuffer[TxPACKET_EOP_POS] = (PACKET_EOP);
  67              		.loc 1 94 0
  68 0022 013B     		subs	r3, r3, #1
  95:spi_int.c     **** 
  96:spi_int.c     **** // Start transfer (message plus start/stop indicators
  97:spi_int.c     ****     SPIM_SpiUartPutArray(mTxBuffer, TxPACKET_SIZE);
  69              		.loc 1 97 0
  70 0024 1C21     		movs	r1, #28
  90:spi_int.c     ****     mTxBuffer[TxPACKET_CTRL2_POS] = disp_ctrl2;
  71              		.loc 1 90 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 4


  72 0026 4576     		strb	r5, [r0, #25]
  91:spi_int.c     ****     
  73              		.loc 1 91 0
  74 0028 8476     		strb	r4, [r0, #26]
  94:spi_int.c     **** 
  75              		.loc 1 94 0
  76 002a C376     		strb	r3, [r0, #27]
  77              		.loc 1 97 0
  78 002c FFF7FEFF 		bl	SPIM_SpiUartPutArray
  79              	.LVL6:
  80              	.L3:
  98:spi_int.c     **** 
  99:spi_int.c     **** // Wait for the end of the transfer. The number of transmitted data
 100:spi_int.c     **** // elements has to be equal to the number of received data elements.
 101:spi_int.c     ****     while((TxPACKET_SIZE) != SPIM_SpiUartGetRxBufferSize())
  81              		.loc 1 101 0 discriminator 1
  82 0030 FFF7FEFF 		bl	SPIM_SpiUartGetRxBufferSize
  83              	.LVL7:
  84 0034 1C28     		cmp	r0, #28
  85 0036 FBD1     		bne	.L3
 102:spi_int.c     ****     {
 103:spi_int.c     ****     }
 104:spi_int.c     **** 
 105:spi_int.c     **** // Clear dummy bytes from RX buffer
 106:spi_int.c     ****     SPIM_SpiUartClearRxBuffer();
  86              		.loc 1 106 0
  87 0038 FFF7FEFF 		bl	SPIM_SpiUartClearRxBuffer
  88              	.LVL8:
 107:spi_int.c     **** }
  89              		.loc 1 107 0
  90              		@ sp needed
  91              	.LVL9:
  92 003c 70BD     		pop	{r4, r5, r6, pc}
  93              	.L8:
  94 003e C046     		.align	2
  95              	.L7:
  96 0040 00000000 		.word	.LANCHOR0
  97              		.cfi_endproc
  98              	.LFE32:
  99              		.size	SPIM_display_write, .-SPIM_display_write
 100              		.section	.text.SPIM_display_read,"ax",%progbits
 101              		.align	1
 102              		.global	SPIM_display_read
 103              		.code	16
 104              		.thumb_func
 105              		.type	SPIM_display_read, %function
 106              	SPIM_display_read:
 107              	.LFB33:
 108:spi_int.c     **** 
 109:spi_int.c     **** 
 110:spi_int.c     **** 
 111:spi_int.c     **** /*******************************************************************************
 112:spi_int.c     **** * Function Name: SPIM_display_read
 113:spi_int.c     **** ********************************************************************************
 114:spi_int.c     **** * Summary:
 115:spi_int.c     **** *  SPIM initiates the transmission of a dummy packet to collect the status
 116:spi_int.c     **** *  information from the SPIS. After the transfer is complete the format of
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 5


 117:spi_int.c     **** *  the packet is verified and the status is returned. If the format of the
 118:spi_int.c     **** *  packet is invalid the unknown status is returned.
 119:spi_int.c     **** *
 120:spi_int.c     **** * Parameters:
 121:spi_int.c     **** *  None
 122:spi_int.c     **** *
 123:spi_int.c     **** * Return:
 124:spi_int.c     **** *  None
 125:spi_int.c     **** *
 126:spi_int.c     **** *******************************************************************************/
 127:spi_int.c     **** uint32 SPIM_display_read(void)
 128:spi_int.c     **** {
 108              		.loc 1 128 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 8
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 113              		.cfi_def_cfa_offset 24
 114              		.cfi_offset 0, -24
 115              		.cfi_offset 1, -20
 116              		.cfi_offset 2, -16
 117              		.cfi_offset 4, -12
 118              		.cfi_offset 5, -8
 119              		.cfi_offset 14, -4
 129:spi_int.c     ****     uint8 tmpBuffer[RxPACKET_SIZE];
 130:spi_int.c     ****     uint8 status;
 131:spi_int.c     ****     uint32 i;
 132:spi_int.c     **** 
 133:spi_int.c     **** // set SPI slave select line to display
 134:spi_int.c     ****     SPIM_SpiSetActiveSlaveSelect(SPIM_SPI_SLAVE_SELECT1); 
 120              		.loc 1 134 0
 121 0002 0120     		movs	r0, #1
 122 0004 FFF7FEFF 		bl	SPIM_SpiSetActiveSlaveSelect
 123              	.LVL10:
 135:spi_int.c     ****     
 136:spi_int.c     **** // Start transfer
 137:spi_int.c     ****     SPIM_SpiUartPutArray(dummyBuffer, RxPACKET_SIZE);
 124              		.loc 1 137 0
 125 0008 0321     		movs	r1, #3
 126 000a 0E48     		ldr	r0, .L18
 127 000c FFF7FEFF 		bl	SPIM_SpiUartPutArray
 128              	.LVL11:
 129              	.L10:
 138:spi_int.c     **** 
 139:spi_int.c     **** // Wait for the end of the transfer. The number of transmitted data
 140:spi_int.c     **** // elements has to be equal to the number of received data elements.
 141:spi_int.c     ****     while (RxPACKET_SIZE != SPIM_SpiUartGetRxBufferSize())
 130              		.loc 1 141 0 discriminator 1
 131 0010 FFF7FEFF 		bl	SPIM_SpiUartGetRxBufferSize
 132              	.LVL12:
 133 0014 0328     		cmp	r0, #3
 134 0016 FBD1     		bne	.L10
 142:spi_int.c     ****     {
 143:spi_int.c     ****     }
 144:spi_int.c     **** 
 145:spi_int.c     **** // Clear dummy bytes from TX buffer
 146:spi_int.c     ****     SPIM_SpiUartClearTxBuffer();
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 6


 135              		.loc 1 146 0
 136 0018 FFF7FEFF 		bl	SPIM_SpiUartClearTxBuffer
 137              	.LVL13:
 147:spi_int.c     **** 
 148:spi_int.c     **** // Read data from the RX buffer
 149:spi_int.c     ****     i = 0u;
 138              		.loc 1 149 0
 139 001c 0025     		movs	r5, #0
 140              	.LVL14:
 141              	.L11:
 150:spi_int.c     ****     while (0u != SPIM_SpiUartGetRxBufferSize())
 142              		.loc 1 150 0
 143 001e FFF7FEFF 		bl	SPIM_SpiUartGetRxBufferSize
 144              	.LVL15:
 145 0022 01AC     		add	r4, sp, #4
 146 0024 0028     		cmp	r0, #0
 147 0026 04D0     		beq	.L17
 151:spi_int.c     ****     {
 152:spi_int.c     ****         tmpBuffer[i] = SPIM_SpiUartReadRxData();
 148              		.loc 1 152 0
 149 0028 FFF7FEFF 		bl	SPIM_SpiUartReadRxData
 150              	.LVL16:
 151 002c 6055     		strb	r0, [r4, r5]
 153:spi_int.c     **** //        UART_UartPutChar('0' + tmpBuffer[i]);
 154:spi_int.c     ****         i++;
 152              		.loc 1 154 0
 153 002e 0135     		adds	r5, r5, #1
 154              	.LVL17:
 155 0030 F5E7     		b	.L11
 156              	.L17:
 155:spi_int.c     **** //        UART_UartPutString("A");
 156:spi_int.c     ****         
 157:spi_int.c     ****     }
 158:spi_int.c     **** 
 159:spi_int.c     ****  // Check packet format
 160:spi_int.c     ****     if ((tmpBuffer[RxPACKET_SOP_POS] == PACKET_SOP) &&
 157              		.loc 1 160 0
 158 0032 2378     		ldrb	r3, [r4]
 161:spi_int.c     ****         (tmpBuffer[RxPACKET_EOP_POS] == PACKET_EOP))
 162:spi_int.c     ****     {
 163:spi_int.c     ****  // Return status
 164:spi_int.c     ****         status = tmpBuffer[RxPACKET_STS_POS];
 165:spi_int.c     **** //        UART_UartPutString("B");
 166:spi_int.c     ****     }
 167:spi_int.c     ****     else
 168:spi_int.c     ****     {
 169:spi_int.c     ****  // Invalid packet format, return 0xFF status
 170:spi_int.c     ****         status = 0xFF;
 159              		.loc 1 170 0
 160 0034 FF30     		adds	r0, r0, #255
 160:spi_int.c     ****         (tmpBuffer[RxPACKET_EOP_POS] == PACKET_EOP))
 161              		.loc 1 160 0
 162 0036 012B     		cmp	r3, #1
 163 0038 03D1     		bne	.L13
 160:spi_int.c     ****         (tmpBuffer[RxPACKET_EOP_POS] == PACKET_EOP))
 164              		.loc 1 160 0 is_stmt 0 discriminator 1
 165 003a A378     		ldrb	r3, [r4, #2]
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 7


 166 003c 172B     		cmp	r3, #23
 167 003e 00D1     		bne	.L13
 164:spi_int.c     **** //        UART_UartPutString("B");
 168              		.loc 1 164 0 is_stmt 1
 169 0040 6078     		ldrb	r0, [r4, #1]
 170              	.LVL18:
 171              	.L13:
 171:spi_int.c     **** //        UART_UartPutString("C");
 172:spi_int.c     ****     }
 173:spi_int.c     **** 
 174:spi_int.c     ****     return (status);
 175:spi_int.c     **** }
 172              		.loc 1 175 0
 173              		@ sp needed
 174              	.LVL19:
 175 0042 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 176              	.L19:
 177              		.align	2
 178              	.L18:
 179 0044 00000000 		.word	.LANCHOR1
 180              		.cfi_endproc
 181              	.LFE33:
 182              		.size	SPIM_display_read, .-SPIM_display_read
 183              		.section	.text.SPIM_SigmaDSP_init_SPI,"ax",%progbits
 184              		.align	1
 185              		.global	SPIM_SigmaDSP_init_SPI
 186              		.code	16
 187              		.thumb_func
 188              		.type	SPIM_SigmaDSP_init_SPI, %function
 189              	SPIM_SigmaDSP_init_SPI:
 190              	.LFB34:
 176:spi_int.c     **** 
 177:spi_int.c     **** /*******************************************************************************
 178:spi_int.c     **** * Function Name: SPIM_SigmaDSP_init_SPI
 179:spi_int.c     **** ********************************************************************************
 180:spi_int.c     **** * Summary:
 181:spi_int.c     **** *  This function toggles 3 times /CS line that selects SigmaDSP on SPI port
 182:spi_int.c     **** *  This in turn enables serial port in SPI mode for further transactions. 
 183:spi_int.c     **** *
 184:spi_int.c     **** * Parameters:
 185:spi_int.c     **** *  None
 186:spi_int.c     **** *
 187:spi_int.c     **** * Return:
 188:spi_int.c     **** *  zero
 189:spi_int.c     **** *
 190:spi_int.c     **** *******************************************************************************/
 191:spi_int.c     **** uint8 SPIM_SigmaDSP_init_SPI(void)
 192:spi_int.c     **** {
 191              		.loc 1 192 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 8
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 196              		.cfi_def_cfa_offset 24
 197              		.cfi_offset 0, -24
 198              		.cfi_offset 1, -20
 199              		.cfi_offset 2, -16
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 8


 200              		.cfi_offset 4, -12
 201              		.cfi_offset 5, -8
 202              		.cfi_offset 14, -4
 193:spi_int.c     **** 
 194:spi_int.c     **** // SPIM TX buffer 
 195:spi_int.c     ****     uint8 localBuffer[1] = {0};
 203              		.loc 1 195 0
 204 0002 0020     		movs	r0, #0
 205 0004 01AC     		add	r4, sp, #4
 206 0006 2070     		strb	r0, [r4]
 196:spi_int.c     **** // buffer value to 0 (only need to toggle CS line 3 times
 197:spi_int.c     ****     localBuffer[0] = (0x00);
 198:spi_int.c     ****     
 199:spi_int.c     **** // set SPI slave select line to SigmaDSP
 200:spi_int.c     ****     SPIM_SpiSetActiveSlaveSelect(SPIM_SPI_SLAVE_SELECT0); 
 207              		.loc 1 200 0
 208 0008 FFF7FEFF 		bl	SPIM_SpiSetActiveSlaveSelect
 209              	.LVL20:
 201:spi_int.c     **** 
 202:spi_int.c     **** // sent SPI message - first /CS toggle
 203:spi_int.c     ****     SPIM_SpiUartPutArray(localBuffer, 1);
 210              		.loc 1 203 0
 211 000c 0121     		movs	r1, #1
 212 000e 2000     		movs	r0, r4
 213 0010 FFF7FEFF 		bl	SPIM_SpiUartPutArray
 214              	.LVL21:
 215              	.L21:
 204:spi_int.c     **** // Wait for the end of the transfer. The number of transmitted data
 205:spi_int.c     **** // elements has to be equal to the number of received data elements.
 206:spi_int.c     ****     while((1) != SPIM_SpiUartGetRxBufferSize())
 216              		.loc 1 206 0 discriminator 1
 217 0014 FFF7FEFF 		bl	SPIM_SpiUartGetRxBufferSize
 218              	.LVL22:
 219 0018 0500     		movs	r5, r0
 220 001a 0128     		cmp	r0, #1
 221 001c FAD1     		bne	.L21
 207:spi_int.c     ****     {
 208:spi_int.c     ****     }
 209:spi_int.c     **** // Clear dummy bytes from RX buffer
 210:spi_int.c     ****     SPIM_SpiUartClearRxBuffer(); 
 222              		.loc 1 210 0
 223 001e FFF7FEFF 		bl	SPIM_SpiUartClearRxBuffer
 224              	.LVL23:
 211:spi_int.c     **** 
 212:spi_int.c     **** // wait 100uS    
 213:spi_int.c     ****     CyDelayUs(100);  
 225              		.loc 1 213 0
 226 0022 6420     		movs	r0, #100
 227 0024 FFF7FEFF 		bl	CyDelayUs
 228              	.LVL24:
 214:spi_int.c     **** 
 215:spi_int.c     **** // sent SPI message - second /CS toggle
 216:spi_int.c     ****     SPIM_SpiUartPutArray(localBuffer, 1);
 229              		.loc 1 216 0
 230 0028 2900     		movs	r1, r5
 231 002a 2000     		movs	r0, r4
 232 002c FFF7FEFF 		bl	SPIM_SpiUartPutArray
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 9


 233              	.LVL25:
 234              	.L22:
 217:spi_int.c     **** // Wait for the end of the transfer. The number of transmitted data
 218:spi_int.c     **** // elements has to be equal to the number of received data elements.
 219:spi_int.c     ****     while((1) != SPIM_SpiUartGetRxBufferSize())
 235              		.loc 1 219 0 discriminator 1
 236 0030 FFF7FEFF 		bl	SPIM_SpiUartGetRxBufferSize
 237              	.LVL26:
 238 0034 0500     		movs	r5, r0
 239 0036 0128     		cmp	r0, #1
 240 0038 FAD1     		bne	.L22
 220:spi_int.c     ****     {
 221:spi_int.c     ****     }
 222:spi_int.c     **** // Clear dummy bytes from RX buffer
 223:spi_int.c     ****     SPIM_SpiUartClearRxBuffer(); 
 241              		.loc 1 223 0
 242 003a FFF7FEFF 		bl	SPIM_SpiUartClearRxBuffer
 243              	.LVL27:
 224:spi_int.c     ****     
 225:spi_int.c     **** // wait 100uS  
 226:spi_int.c     ****     CyDelayUs(100); 
 244              		.loc 1 226 0
 245 003e 6420     		movs	r0, #100
 246 0040 FFF7FEFF 		bl	CyDelayUs
 247              	.LVL28:
 227:spi_int.c     ****     
 228:spi_int.c     **** // sent SPI message -third /CS toggle
 229:spi_int.c     ****     SPIM_SpiUartPutArray(localBuffer, 1);
 248              		.loc 1 229 0
 249 0044 2900     		movs	r1, r5
 250 0046 2000     		movs	r0, r4
 251 0048 FFF7FEFF 		bl	SPIM_SpiUartPutArray
 252              	.LVL29:
 253              	.L23:
 230:spi_int.c     **** // Wait for the end of the transfer. The number of transmitted data
 231:spi_int.c     **** // elements has to be equal to the number of received data elements.
 232:spi_int.c     ****     while((1) != SPIM_SpiUartGetRxBufferSize())
 254              		.loc 1 232 0 discriminator 1
 255 004c FFF7FEFF 		bl	SPIM_SpiUartGetRxBufferSize
 256              	.LVL30:
 257 0050 0400     		movs	r4, r0
 258 0052 0128     		cmp	r0, #1
 259 0054 FAD1     		bne	.L23
 233:spi_int.c     ****     {
 234:spi_int.c     ****     }
 235:spi_int.c     **** // Clear dummy bytes from RX buffer
 236:spi_int.c     ****     SPIM_SpiUartClearRxBuffer(); 
 260              		.loc 1 236 0
 261 0056 FFF7FEFF 		bl	SPIM_SpiUartClearRxBuffer
 262              	.LVL31:
 237:spi_int.c     ****     
 238:spi_int.c     **** // set SPI slave select line to display module
 239:spi_int.c     ****     SPIM_SpiSetActiveSlaveSelect(SPIM_SPI_SLAVE_SELECT1); 
 263              		.loc 1 239 0
 264 005a 2000     		movs	r0, r4
 265 005c FFF7FEFF 		bl	SPIM_SpiSetActiveSlaveSelect
 266              	.LVL32:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 10


 240:spi_int.c     ****     
 241:spi_int.c     ****     return 0;
 242:spi_int.c     **** }
 267              		.loc 1 242 0
 268              		@ sp needed
 269 0060 0020     		movs	r0, #0
 270 0062 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 271              		.cfi_endproc
 272              	.LFE34:
 273              		.size	SPIM_SigmaDSP_init_SPI, .-SPIM_SigmaDSP_init_SPI
 274              		.section	.text.SPIM_SigmaDSP_write,"ax",%progbits
 275              		.align	1
 276              		.global	SPIM_SigmaDSP_write
 277              		.code	16
 278              		.thumb_func
 279              		.type	SPIM_SigmaDSP_write, %function
 280              	SPIM_SigmaDSP_write:
 281              	.LFB35:
 243:spi_int.c     **** 
 244:spi_int.c     **** 
 245:spi_int.c     **** 
 246:spi_int.c     **** /*******************************************************************************
 247:spi_int.c     **** * Function Name: SPIM_SigmaDSP_write
 248:spi_int.c     **** ********************************************************************************
 249:spi_int.c     **** * Summary:
 250:spi_int.c     **** *  This function sents commands over SPI interface to SigmaDSP
 251:spi_int.c     **** *  Commands are controled thru command parameter and are listed below. 
 252:spi_int.c     **** *
 253:spi_int.c     **** * Parameters:
 254:spi_int.c     **** *  0 = Control = 0x0535 -> 0x0000 = MUTE
 255:spi_int.c     **** *  1 = Control = 0x0535 -> 0x0001 = RPi
 256:spi_int.c     **** *  2 = Control = 0x0535 -> 0x0002 = DAB
 257:spi_int.c     **** *  3 = Control = 0x0535 -> 0x0003 = AuxIN
 258:spi_int.c     **** *  4 = Control = 0x0535 -> 0x0004 = BlueTooth Rx
 259:spi_int.c     **** *  5 = LED = 0x0538 -> 0x0000 = OFF
 260:spi_int.c     **** *  6 = LED = 0x0538 -> 0x0001 = ON
 261:spi_int.c     **** *
 262:spi_int.c     **** * Return:
 263:spi_int.c     **** *  zero
 264:spi_int.c     **** *
 265:spi_int.c     **** *******************************************************************************/
 266:spi_int.c     **** uint8 SPIM_SigmaDSP_write(uint8 command)
 267:spi_int.c     **** {
 282              		.loc 1 267 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 8
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              	.LVL33:
 287 0000 13B5     		push	{r0, r1, r4, lr}
 288              		.cfi_def_cfa_offset 16
 289              		.cfi_offset 0, -16
 290              		.cfi_offset 1, -12
 291              		.cfi_offset 4, -8
 292              		.cfi_offset 14, -4
 268:spi_int.c     **** // buffer for data to be sent over SPI to SigmaDSP 
 269:spi_int.c     ****     uint8 writeBuffer[7] = {0};
 293              		.loc 1 269 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 11


 294 0002 0722     		movs	r2, #7
 267:spi_int.c     **** // buffer for data to be sent over SPI to SigmaDSP 
 295              		.loc 1 267 0
 296 0004 0400     		movs	r4, r0
 297              		.loc 1 269 0
 298 0006 0021     		movs	r1, #0
 299 0008 6846     		mov	r0, sp
 300              	.LVL34:
 301 000a FFF7FEFF 		bl	memset
 302              	.LVL35:
 270:spi_int.c     **** // first buffer byte set to value 0x00 indicating write data    
 271:spi_int.c     ****     writeBuffer[0] = (0x00);
 272:spi_int.c     **** // 3, 4 and 5 buffer bytes set to 0x00 all data sent over SPI have its MSBs = 0    
 273:spi_int.c     ****     writeBuffer[3] = (0x00);
 274:spi_int.c     ****     writeBuffer[4] = (0x00);    
 275:spi_int.c     ****     writeBuffer[5] = (0x00);    
 276:spi_int.c     **** 
 277:spi_int.c     **** // set SPI slave select line to SigmaDSP
 278:spi_int.c     ****     SPIM_SpiSetActiveSlaveSelect(SPIM_SPI_SLAVE_SELECT0); 
 303              		.loc 1 278 0
 304 000e 0020     		movs	r0, #0
 305 0010 FFF7FEFF 		bl	SPIM_SpiSetActiveSlaveSelect
 306              	.LVL36:
 279:spi_int.c     ****     
 280:spi_int.c     ****     switch (command)
 307              		.loc 1 280 0
 308 0014 062C     		cmp	r4, #6
 309 0016 23D8     		bhi	.L28
 310 0018 0523     		movs	r3, #5
 281:spi_int.c     ****     {    
 282:spi_int.c     **** //  0 = Control = 0x0535 -> 0x0000 = MUTE
 283:spi_int.c     ****     case (0):
 284:spi_int.c     ****         writeBuffer[1] = (0x05);
 285:spi_int.c     ****         writeBuffer[2] = (0x35);
 286:spi_int.c     ****         writeBuffer[6] = (0x00);    
 287:spi_int.c     ****         break;
 288:spi_int.c     **** //  1 = Control = 0x0535 -> 0x0001 = RPi
 289:spi_int.c     ****     case (1):
 290:spi_int.c     ****         writeBuffer[1] = (0x05);
 291:spi_int.c     ****         writeBuffer[2] = (0x35);
 292:spi_int.c     ****         writeBuffer[6] = (0x01);    
 293:spi_int.c     ****         break;
 294:spi_int.c     **** //  2 = Control = 0x0535 -> 0x0002 = DAB
 295:spi_int.c     ****     case (2):
 296:spi_int.c     ****         writeBuffer[1] = (0x05);
 297:spi_int.c     ****         writeBuffer[2] = (0x35);
 298:spi_int.c     ****         writeBuffer[6] = (0x02);    
 299:spi_int.c     ****         break;        
 300:spi_int.c     **** //  3 = Control = 0x0535 -> 0x0003 = AuxIN
 301:spi_int.c     ****     case (3):
 302:spi_int.c     ****         writeBuffer[1] = (0x05);
 303:spi_int.c     ****         writeBuffer[2] = (0x35);
 304:spi_int.c     ****         writeBuffer[6] = (0x03);    
 305:spi_int.c     ****         break;
 306:spi_int.c     **** //  4 = Control = 0x0535 -> 0x0004 = BlueTooth Rx
 307:spi_int.c     ****     case (4):
 308:spi_int.c     ****         writeBuffer[1] = (0x05);
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 12


 309:spi_int.c     ****         writeBuffer[2] = (0x35);
 310:spi_int.c     ****         writeBuffer[6] = (0x04);    
 311:spi_int.c     ****         break;        
 312:spi_int.c     **** //  5 = LED = 0x053 -> 0x0000 = OFF
 313:spi_int.c     ****     case (5):
 314:spi_int.c     ****         writeBuffer[1] = (0x05);
 315:spi_int.c     ****         writeBuffer[2] = (0x38);
 316:spi_int.c     ****         writeBuffer[6] = (0x00);    
 317:spi_int.c     ****         break;
 318:spi_int.c     **** //  6 = LED = 0x0538 -> 0x0001 = ON
 319:spi_int.c     ****     case (6):
 320:spi_int.c     ****         writeBuffer[1] = (0x05);
 311              		.loc 1 320 0
 312 001a 6A46     		mov	r2, sp
 280:spi_int.c     ****     {    
 313              		.loc 1 280 0
 314 001c 2000     		movs	r0, r4
 315              		.loc 1 320 0
 316 001e 5370     		strb	r3, [r2, #1]
 280:spi_int.c     ****     {    
 317              		.loc 1 280 0
 318 0020 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 319              	.L30:
 320 0024 04       		.byte	(.L29-.L30)/2
 321 0025 06       		.byte	(.L31-.L30)/2
 322 0026 0A       		.byte	(.L32-.L30)/2
 323 0027 0E       		.byte	(.L33-.L30)/2
 324 0028 12       		.byte	(.L34-.L30)/2
 325 0029 16       		.byte	(.L35-.L30)/2
 326 002a 1A       		.byte	(.L36-.L30)/2
 327 002b 00       		.p2align 1
 328              	.L29:
 285:spi_int.c     ****         writeBuffer[6] = (0x00);    
 329              		.loc 1 285 0
 330 002c 3523     		movs	r3, #53
 331 002e 10E0     		b	.L40
 332              	.L31:
 291:spi_int.c     ****         writeBuffer[6] = (0x01);    
 333              		.loc 1 291 0
 334 0030 3523     		movs	r3, #53
 335 0032 9370     		strb	r3, [r2, #2]
 292:spi_int.c     ****         break;
 336              		.loc 1 292 0
 337 0034 343B     		subs	r3, r3, #52
 338 0036 12E0     		b	.L39
 339              	.L32:
 297:spi_int.c     ****         writeBuffer[6] = (0x02);    
 340              		.loc 1 297 0
 341 0038 3523     		movs	r3, #53
 342 003a 9370     		strb	r3, [r2, #2]
 298:spi_int.c     ****         break;        
 343              		.loc 1 298 0
 344 003c 333B     		subs	r3, r3, #51
 345 003e 0EE0     		b	.L39
 346              	.L33:
 303:spi_int.c     ****         writeBuffer[6] = (0x03);    
 347              		.loc 1 303 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 13


 348 0040 3523     		movs	r3, #53
 349 0042 9370     		strb	r3, [r2, #2]
 304:spi_int.c     ****         break;
 350              		.loc 1 304 0
 351 0044 323B     		subs	r3, r3, #50
 352 0046 0AE0     		b	.L39
 353              	.L34:
 309:spi_int.c     ****         writeBuffer[6] = (0x04);    
 354              		.loc 1 309 0
 355 0048 3523     		movs	r3, #53
 356 004a 9370     		strb	r3, [r2, #2]
 310:spi_int.c     ****         break;        
 357              		.loc 1 310 0
 358 004c 313B     		subs	r3, r3, #49
 359 004e 06E0     		b	.L39
 360              	.L35:
 315:spi_int.c     ****         writeBuffer[6] = (0x00);    
 361              		.loc 1 315 0
 362 0050 3823     		movs	r3, #56
 363              	.L40:
 364 0052 9370     		strb	r3, [r2, #2]
 316:spi_int.c     ****         break;
 365              		.loc 1 316 0
 366 0054 0023     		movs	r3, #0
 367 0056 02E0     		b	.L39
 368              	.L36:
 321:spi_int.c     ****         writeBuffer[2] = (0x38);
 369              		.loc 1 321 0
 370 0058 3823     		movs	r3, #56
 371 005a 9370     		strb	r3, [r2, #2]
 322:spi_int.c     ****         writeBuffer[6] = (0x01);    
 372              		.loc 1 322 0
 373 005c 373B     		subs	r3, r3, #55
 374              	.L39:
 375 005e 9371     		strb	r3, [r2, #6]
 376              	.L28:
 323:spi_int.c     ****         break;         
 324:spi_int.c     ****     }        
 325:spi_int.c     **** // Start buffer transfer over SPI interface to SigmaDSP
 326:spi_int.c     ****     SPIM_SpiUartPutArray(writeBuffer, 7);
 377              		.loc 1 326 0
 378 0060 0721     		movs	r1, #7
 379 0062 6846     		mov	r0, sp
 380 0064 FFF7FEFF 		bl	SPIM_SpiUartPutArray
 381              	.LVL37:
 382              	.L37:
 327:spi_int.c     **** 
 328:spi_int.c     **** // Wait for the end of the transfer. The number of transmitted data
 329:spi_int.c     **** // elements has to be equal to the number of received data elements.
 330:spi_int.c     ****     while((7) != SPIM_SpiUartGetRxBufferSize())
 383              		.loc 1 330 0 discriminator 1
 384 0068 FFF7FEFF 		bl	SPIM_SpiUartGetRxBufferSize
 385              	.LVL38:
 386 006c 0728     		cmp	r0, #7
 387 006e FBD1     		bne	.L37
 331:spi_int.c     ****     {
 332:spi_int.c     ****     }
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 14


 333:spi_int.c     **** // Clear dummy bytes from RX buffer
 334:spi_int.c     ****     SPIM_SpiUartClearRxBuffer();  
 388              		.loc 1 334 0
 389 0070 FFF7FEFF 		bl	SPIM_SpiUartClearRxBuffer
 390              	.LVL39:
 335:spi_int.c     **** 
 336:spi_int.c     **** // set SPI slave select line to display module
 337:spi_int.c     ****     SPIM_SpiSetActiveSlaveSelect(SPIM_SPI_SLAVE_SELECT1);     
 391              		.loc 1 337 0
 392 0074 0120     		movs	r0, #1
 393 0076 FFF7FEFF 		bl	SPIM_SpiSetActiveSlaveSelect
 394              	.LVL40:
 338:spi_int.c     ****     
 339:spi_int.c     ****     return 0;
 340:spi_int.c     **** }
 395              		.loc 1 340 0
 396              		@ sp needed
 397 007a 0020     		movs	r0, #0
 398 007c 16BD     		pop	{r1, r2, r4, pc}
 399              		.cfi_endproc
 400              	.LFE35:
 401              		.size	SPIM_SigmaDSP_write, .-SPIM_SigmaDSP_write
 402              		.section	.text.SPIM_SigmaDSP_read,"ax",%progbits
 403              		.align	1
 404              		.global	SPIM_SigmaDSP_read
 405              		.code	16
 406              		.thumb_func
 407              		.type	SPIM_SigmaDSP_read, %function
 408              	SPIM_SigmaDSP_read:
 409              	.LFB36:
 341:spi_int.c     **** 
 342:spi_int.c     **** 
 343:spi_int.c     **** /*******************************************************************************
 344:spi_int.c     **** * Function Name: SPIM_SigmaDSP_read
 345:spi_int.c     **** ********************************************************************************
 346:spi_int.c     **** * Summary:
 347:spi_int.c     **** *  This function sents commands over SPI interface to SigmaDSP. Command itends 
 348:spi_int.c     **** *  to read back SPI register values and return them as one 32 bit value.
 349:spi_int.c     **** *
 350:spi_int.c     **** * Parameters:
 351:spi_int.c     **** * Parameters:
 352:spi_int.c     **** *  0 = LEVEL = 0x0514
 353:spi_int.c     **** *  1 = Spectrum analyzer -> Right = 0x0526
 354:spi_int.c     **** *  2 = Spectrum analyzer -> Left = 0x0527
 355:spi_int.c     **** *  3 = Spectrum analyzer -> Left&Right = 0x0528
 356:spi_int.c     **** *  4 = CODE = 0x001B
 357:spi_int.c     **** *
 358:spi_int.c     **** * Return:
 359:spi_int.c     **** *  0 = LEVEL -> 0x0000aabb
 360:spi_int.c     **** *    -> aa - 0x00 - 0x10 - left channel 
 361:spi_int.c     **** *    -> bb - 0x00 - 0x10 - right channel
 362:spi_int.c     **** *  1 = Spectrum analyzer -> Right
 363:spi_int.c     **** *    b31-b28 - NOT_USED
 364:spi_int.c     **** *    b27-b24 - 31.5Hz
 365:spi_int.c     **** *    b23-b20 - 63Hz
 366:spi_int.c     **** *    b19-b16 - 125Hz
 367:spi_int.c     **** *    b15-b12 - 250Hz
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 15


 368:spi_int.c     **** *    b11-b8 - 500Hz
 369:spi_int.c     **** *    b7-b4 - 1000Hz
 370:spi_int.c     **** *    b3-b0 - 2000Hz        
 371:spi_int.c     **** *  2 = Spectrum analyzer -> Left
 372:spi_int.c     **** *    b31-b28 - NOT_USED
 373:spi_int.c     **** *    b27-b24 - 31.5Hz
 374:spi_int.c     **** *    b23-b20 - 63Hz
 375:spi_int.c     **** *    b19-b16 - 125Hz
 376:spi_int.c     **** *    b15-b12 - 250Hz
 377:spi_int.c     **** *    b11-b8 - 500Hz
 378:spi_int.c     **** *    b7-b4 - 1000Hz
 379:spi_int.c     **** *    b3-b0 - 2000Hz        
 380:spi_int.c     **** *  3 = Spectrum analyzer -> Left&Right
 381:spi_int.c     **** *    LEFT
 382:spi_int.c     **** *    b31-b28 - NOT_USED
 383:spi_int.c     **** *    b27-b24 - 4000Hz
 384:spi_int.c     **** *    b23-b20 - 8000Hz
 385:spi_int.c     **** *    b19-b16 - 16000Hz
 386:spi_int.c     **** *    RIGHT
 387:spi_int.c     **** *    b15-b12 - NOT_USED
 388:spi_int.c     **** *    b11-b8 - 4000Hz
 389:spi_int.c     **** *    b7-b4 - 8000Hz
 390:spi_int.c     **** *    b3-b0 - 16000Hz
 391:spi_int.c     **** *  4 = CODE 
 392:spi_int.c     **** *   expected fixed value -> 32 bit word = 0xBE01BE02
 393:spi_int.c     **** *
 394:spi_int.c     **** *******************************************************************************/
 395:spi_int.c     **** uint32 SPIM_SigmaDSP_read(uint8 command)
 396:spi_int.c     **** {
 410              		.loc 1 396 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 16
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              	.LVL41:
 415 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 416              		.cfi_def_cfa_offset 32
 417              		.cfi_offset 0, -32
 418              		.cfi_offset 1, -28
 419              		.cfi_offset 2, -24
 420              		.cfi_offset 3, -20
 421              		.cfi_offset 4, -16
 422              		.cfi_offset 5, -12
 423              		.cfi_offset 6, -8
 424              		.cfi_offset 14, -4
 425              		.loc 1 396 0
 426 0002 0500     		movs	r5, r0
 397:spi_int.c     **** // variable used to return read command value    
 398:spi_int.c     ****     uint32 status = 0;
 399:spi_int.c     **** 
 400:spi_int.c     **** // variable used by read buffer command    
 401:spi_int.c     ****     uint8 i;
 402:spi_int.c     **** 
 403:spi_int.c     **** // buffer for data to be read over SPI from SigmaDSP 
 404:spi_int.c     ****     uint8 readBuffer[7] = {0};
 427              		.loc 1 404 0
 428 0004 0722     		movs	r2, #7
 429 0006 0021     		movs	r1, #0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 16


 405:spi_int.c     **** // buffer for data to be sent over SPI to SigmaDSP 
 406:spi_int.c     ****     uint8 writeBuffer[7] = {0};
 430              		.loc 1 406 0
 431 0008 02AC     		add	r4, sp, #8
 404:spi_int.c     **** // buffer for data to be sent over SPI to SigmaDSP 
 432              		.loc 1 404 0
 433 000a 6846     		mov	r0, sp
 434              	.LVL42:
 435 000c FFF7FEFF 		bl	memset
 436              	.LVL43:
 437              		.loc 1 406 0
 438 0010 0722     		movs	r2, #7
 439 0012 0021     		movs	r1, #0
 440 0014 2000     		movs	r0, r4
 441 0016 FFF7FEFF 		bl	memset
 442              	.LVL44:
 407:spi_int.c     **** // first buffer byte set to value 0x01 indicating read data    
 408:spi_int.c     ****     writeBuffer[0] = (0x01);
 443              		.loc 1 408 0
 444 001a 0123     		movs	r3, #1
 409:spi_int.c     **** // 3, 4, 5 and 6 buffer bytes set to 0x00 - dummy bytes sent to only toggle SCLK line    
 410:spi_int.c     ****     writeBuffer[3] = (0x00);
 411:spi_int.c     ****     writeBuffer[4] = (0x00);    
 412:spi_int.c     ****     writeBuffer[5] = (0x00); 
 413:spi_int.c     ****     writeBuffer[6] = (0x00); 
 414:spi_int.c     **** //    writeBuffer[7] = (0x00); 
 415:spi_int.c     **** 
 416:spi_int.c     **** // set SPI slave select line to SigmaDSP
 417:spi_int.c     ****     SPIM_SpiSetActiveSlaveSelect(SPIM_SPI_SLAVE_SELECT0); 
 445              		.loc 1 417 0
 446 001c 0020     		movs	r0, #0
 408:spi_int.c     **** // 3, 4, 5 and 6 buffer bytes set to 0x00 - dummy bytes sent to only toggle SCLK line    
 447              		.loc 1 408 0
 448 001e 2370     		strb	r3, [r4]
 449              		.loc 1 417 0
 450 0020 FFF7FEFF 		bl	SPIM_SpiSetActiveSlaveSelect
 451              	.LVL45:
 418:spi_int.c     ****     
 419:spi_int.c     **** // set read address based on incoming command
 420:spi_int.c     ****     switch (command)
 452              		.loc 1 420 0
 453 0024 042D     		cmp	r5, #4
 454 0026 19D8     		bhi	.L42
 455 0028 2800     		movs	r0, r5
 456 002a FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 457              	.L44:
 458 002e 03       		.byte	(.L43-.L44)/2
 459 002f 07       		.byte	(.L45-.L44)/2
 460 0030 0B       		.byte	(.L46-.L44)/2
 461 0031 0F       		.byte	(.L47-.L44)/2
 462 0032 13       		.byte	(.L48-.L44)/2
 463 0033 00       		.p2align 1
 464              	.L43:
 421:spi_int.c     ****     {    
 422:spi_int.c     **** //  0 = LEVEL = 0x0514
 423:spi_int.c     ****     case (0):
 424:spi_int.c     ****         writeBuffer[1] = (0x05);
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 17


 465              		.loc 1 424 0
 466 0034 0523     		movs	r3, #5
 467 0036 6370     		strb	r3, [r4, #1]
 425:spi_int.c     ****         writeBuffer[2] = (0x14);
 468              		.loc 1 425 0
 469 0038 0F33     		adds	r3, r3, #15
 470 003a 0EE0     		b	.L61
 471              	.L45:
 426:spi_int.c     ****         break;
 427:spi_int.c     **** //  1 = Spectrum analyzer -> Right = 0x0526
 428:spi_int.c     ****     case (1):
 429:spi_int.c     ****         writeBuffer[1] = (0x05);
 472              		.loc 1 429 0
 473 003c 0523     		movs	r3, #5
 474 003e 6370     		strb	r3, [r4, #1]
 430:spi_int.c     ****         writeBuffer[2] = (0x26);
 475              		.loc 1 430 0
 476 0040 2133     		adds	r3, r3, #33
 477 0042 0AE0     		b	.L61
 478              	.L46:
 431:spi_int.c     ****         break;
 432:spi_int.c     **** //  2 = Spectrum analyzer -> Left = 0x0527
 433:spi_int.c     ****     case (2):
 434:spi_int.c     ****         writeBuffer[1] = (0x05);
 479              		.loc 1 434 0
 480 0044 0523     		movs	r3, #5
 481 0046 6370     		strb	r3, [r4, #1]
 435:spi_int.c     ****         writeBuffer[2] = (0x27);
 482              		.loc 1 435 0
 483 0048 2233     		adds	r3, r3, #34
 484 004a 06E0     		b	.L61
 485              	.L47:
 436:spi_int.c     ****         break;        
 437:spi_int.c     **** //  3 = Spectrum analyzer -> Left&Right = 0x0528
 438:spi_int.c     ****     case (3):
 439:spi_int.c     ****         writeBuffer[1] = (0x05);
 486              		.loc 1 439 0
 487 004c 0523     		movs	r3, #5
 488 004e 6370     		strb	r3, [r4, #1]
 440:spi_int.c     ****         writeBuffer[2] = (0x28);
 489              		.loc 1 440 0
 490 0050 2333     		adds	r3, r3, #35
 491 0052 02E0     		b	.L61
 492              	.L48:
 441:spi_int.c     ****         break;
 442:spi_int.c     **** //  4 = CODE = 0x001B
 443:spi_int.c     ****     case (4):
 444:spi_int.c     ****         writeBuffer[1] = (0x00);
 493              		.loc 1 444 0
 494 0054 0023     		movs	r3, #0
 495 0056 6370     		strb	r3, [r4, #1]
 445:spi_int.c     ****         writeBuffer[2] = (0x1B);
 496              		.loc 1 445 0
 497 0058 1B33     		adds	r3, r3, #27
 498              	.L61:
 499 005a A370     		strb	r3, [r4, #2]
 500              	.L42:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 18


 446:spi_int.c     ****         break;        
 447:spi_int.c     ****     }            
 448:spi_int.c     ****     
 449:spi_int.c     **** // Start SPI transfer
 450:spi_int.c     ****     SPIM_SpiUartPutArray(writeBuffer, 7);
 501              		.loc 1 450 0
 502 005c 0721     		movs	r1, #7
 503 005e 2000     		movs	r0, r4
 504 0060 FFF7FEFF 		bl	SPIM_SpiUartPutArray
 505              	.LVL46:
 506              	.L49:
 451:spi_int.c     **** 
 452:spi_int.c     **** // Wait for the end of the transfer. The number of transmitted data
 453:spi_int.c     **** // elements has to be equal to the number of received data elements.
 454:spi_int.c     ****     while (7 != SPIM_SpiUartGetRxBufferSize())
 507              		.loc 1 454 0 discriminator 1
 508 0064 FFF7FEFF 		bl	SPIM_SpiUartGetRxBufferSize
 509              	.LVL47:
 510 0068 0728     		cmp	r0, #7
 511 006a FBD1     		bne	.L49
 455:spi_int.c     ****     {
 456:spi_int.c     ****     }
 457:spi_int.c     **** 
 458:spi_int.c     **** // Clear dummy bytes from TX buffer
 459:spi_int.c     ****     SPIM_SpiUartClearTxBuffer();
 512              		.loc 1 459 0
 513 006c FFF7FEFF 		bl	SPIM_SpiUartClearTxBuffer
 514              	.LVL48:
 460:spi_int.c     **** 
 461:spi_int.c     **** // Read data from the RX buffer
 462:spi_int.c     ****     i = 0u;
 515              		.loc 1 462 0
 516 0070 0026     		movs	r6, #0
 517              	.LVL49:
 518              	.L50:
 463:spi_int.c     ****     while (0u != SPIM_SpiUartGetRxBufferSize())
 519              		.loc 1 463 0
 520 0072 FFF7FEFF 		bl	SPIM_SpiUartGetRxBufferSize
 521              	.LVL50:
 522 0076 041E     		subs	r4, r0, #0
 523 0078 06D0     		beq	.L63
 464:spi_int.c     ****     {
 465:spi_int.c     ****         readBuffer[i] = SPIM_SpiUartReadRxData();
 524              		.loc 1 465 0
 525 007a FFF7FEFF 		bl	SPIM_SpiUartReadRxData
 526              	.LVL51:
 527 007e 6B46     		mov	r3, sp
 528 0080 9855     		strb	r0, [r3, r6]
 466:spi_int.c     **** //        UART_UartPutChar('0' + readBuffer[i]);
 467:spi_int.c     ****         i++;
 529              		.loc 1 467 0
 530 0082 0136     		adds	r6, r6, #1
 531              	.LVL52:
 532 0084 F6B2     		uxtb	r6, r6
 533              	.LVL53:
 534 0086 F4E7     		b	.L50
 535              	.L63:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 19


 468:spi_int.c     ****     }
 469:spi_int.c     ****     
 470:spi_int.c     **** // Clear dummy bytes from RX buffer
 471:spi_int.c     ****     SPIM_SpiUartClearRxBuffer();
 536              		.loc 1 471 0
 537 0088 FFF7FEFF 		bl	SPIM_SpiUartClearRxBuffer
 538              	.LVL54:
 472:spi_int.c     ****     
 473:spi_int.c     ****     
 474:spi_int.c     **** // format read back values into one 32 bit variable that is returned by 
 475:spi_int.c     **** // this function
 476:spi_int.c     ****     switch (command)
 539              		.loc 1 476 0
 540 008c 042D     		cmp	r5, #4
 541 008e 15D8     		bhi	.L52
 542 0090 2800     		movs	r0, r5
 477:spi_int.c     ****     {    
 478:spi_int.c     **** // 0 = LEVEL -> 0x0000aabb
 479:spi_int.c     **** //    -> aa - 0x00 - 0x10 - left channel 
 480:spi_int.c     **** //    -> bb - 0x00 - 0x10 - right channel
 481:spi_int.c     ****     case (0):
 482:spi_int.c     ****         status = readBuffer[5];
 483:spi_int.c     ****         status = status << 8;
 484:spi_int.c     ****         status = status | readBuffer[6];
 485:spi_int.c     ****         break;
 486:spi_int.c     **** // 1 = Spectrum analyzer -> Right
 487:spi_int.c     **** // b31-b28 - NOT_USED
 488:spi_int.c     **** // b27-b24 - 31.5Hz
 489:spi_int.c     **** // b23-b20 - 63Hz
 490:spi_int.c     **** // b19-b16 - 125Hz
 491:spi_int.c     **** // b15-b12 - 250Hz
 492:spi_int.c     **** // b11-b8 - 500Hz
 493:spi_int.c     **** // b7-b4 - 1000Hz
 494:spi_int.c     **** // b3-b0 - 2000Hz        
 495:spi_int.c     ****     case (1):
 496:spi_int.c     ****         status = readBuffer[3];
 497:spi_int.c     ****         status = status << 8;
 498:spi_int.c     ****         status = status | readBuffer[4];
 499:spi_int.c     ****         status = status << 8;
 500:spi_int.c     ****         status = status | readBuffer[5];
 501:spi_int.c     ****         status = status << 8;
 502:spi_int.c     ****         status = status | readBuffer[6];
 503:spi_int.c     ****         break;
 504:spi_int.c     **** //  2 = Spectrum analyzer -> Left
 505:spi_int.c     **** // b31-b28 - NOT_USED
 506:spi_int.c     **** // b27-b24 - 31.5Hz
 507:spi_int.c     **** // b23-b20 - 63Hz
 508:spi_int.c     **** // b19-b16 - 125Hz
 509:spi_int.c     **** // b15-b12 - 250Hz
 510:spi_int.c     **** // b11-b8 - 500Hz
 511:spi_int.c     **** // b7-b4 - 1000Hz
 512:spi_int.c     **** // b3-b0 - 2000Hz        
 513:spi_int.c     ****     case (2):
 514:spi_int.c     ****         status = readBuffer[3];
 515:spi_int.c     ****         status = status << 8;
 516:spi_int.c     ****         status = status | readBuffer[4];
 517:spi_int.c     ****         status = status << 8;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 20


 518:spi_int.c     ****         status = status | readBuffer[5];
 519:spi_int.c     ****         status = status << 8;
 520:spi_int.c     ****         status = status | readBuffer[6];
 521:spi_int.c     ****         break;        
 522:spi_int.c     **** //  3 = Spectrum analyzer -> Left&Right
 523:spi_int.c     **** // LEFT
 524:spi_int.c     **** // b31-b28 - NOT_USED
 525:spi_int.c     **** // b27-b24 - 4000Hz
 526:spi_int.c     **** // b23-b20 - 8000Hz
 527:spi_int.c     **** // b19-b16 - 16000Hz
 528:spi_int.c     **** // RIGHT
 529:spi_int.c     **** // b15-b12 - NOT_USED
 530:spi_int.c     **** // b11-b8 - 4000Hz
 531:spi_int.c     **** // b7-b4 - 8000Hz
 532:spi_int.c     **** // b3-b0 - 16000Hz
 533:spi_int.c     ****     case (3):
 534:spi_int.c     ****         status = readBuffer[3];
 535:spi_int.c     ****         status = status << 8;
 536:spi_int.c     ****         status = status | readBuffer[4];
 537:spi_int.c     ****         status = status << 8;
 538:spi_int.c     ****         status = status | readBuffer[5];
 539:spi_int.c     ****         status = status << 8;
 540:spi_int.c     ****         status = status | readBuffer[6];        
 541:spi_int.c     ****         break;
 542:spi_int.c     **** //  4 = CODE 
 543:spi_int.c     **** // expected fixed value -> 32 bit word = 0xBE01BE02
 544:spi_int.c     ****     case (4):
 545:spi_int.c     ****         status = readBuffer[3];
 543              		.loc 1 545 0
 544 0092 6B46     		mov	r3, sp
 476:spi_int.c     ****     {    
 545              		.loc 1 476 0
 546 0094 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 547              	.L54:
 548 0098 03       		.byte	(.L53-.L54)/2
 549 0099 06       		.byte	(.L58-.L54)/2
 550 009a 06       		.byte	(.L58-.L54)/2
 551 009b 06       		.byte	(.L58-.L54)/2
 552 009c 06       		.byte	(.L58-.L54)/2
 553 009d 00       		.p2align 1
 554              	.L53:
 482:spi_int.c     ****         status = status << 8;
 555              		.loc 1 482 0
 556 009e 5C79     		ldrb	r4, [r3, #5]
 557              	.LVL55:
 483:spi_int.c     ****         status = status | readBuffer[6];
 558              		.loc 1 483 0
 559 00a0 2402     		lsls	r4, r4, #8
 560              	.LVL56:
 561 00a2 09E0     		b	.L62
 562              	.LVL57:
 563              	.L58:
 564              		.loc 1 545 0
 565 00a4 DC78     		ldrb	r4, [r3, #3]
 566              	.LVL58:
 546:spi_int.c     ****         status = status << 8;
 547:spi_int.c     ****         status = status | readBuffer[4];
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 21


 567              		.loc 1 547 0
 568 00a6 1B79     		ldrb	r3, [r3, #4]
 546:spi_int.c     ****         status = status << 8;
 569              		.loc 1 546 0
 570 00a8 2402     		lsls	r4, r4, #8
 571              	.LVL59:
 572              		.loc 1 547 0
 573 00aa 1C43     		orrs	r4, r3
 574              	.LVL60:
 548:spi_int.c     ****         status = status << 8;
 549:spi_int.c     ****         status = status | readBuffer[5];
 575              		.loc 1 549 0
 576 00ac 6B46     		mov	r3, sp
 577 00ae 5B79     		ldrb	r3, [r3, #5]
 548:spi_int.c     ****         status = status << 8;
 578              		.loc 1 548 0
 579 00b0 2402     		lsls	r4, r4, #8
 580              	.LVL61:
 581              		.loc 1 549 0
 582 00b2 1C43     		orrs	r4, r3
 583              	.LVL62:
 550:spi_int.c     ****         status = status << 8;
 551:spi_int.c     ****         status = status | readBuffer[6];
 584              		.loc 1 551 0
 585 00b4 6B46     		mov	r3, sp
 550:spi_int.c     ****         status = status << 8;
 586              		.loc 1 550 0
 587 00b6 2402     		lsls	r4, r4, #8
 588              	.LVL63:
 589              	.L62:
 590              		.loc 1 551 0
 591 00b8 9B79     		ldrb	r3, [r3, #6]
 592 00ba 1C43     		orrs	r4, r3
 593              	.LVL64:
 594              	.L52:
 552:spi_int.c     **** // REMOVE    
 553:spi_int.c     **** //        status = 0xBE01BE02;
 554:spi_int.c     **** // REMOVE    
 555:spi_int.c     ****         break;        
 556:spi_int.c     ****     }                
 557:spi_int.c     ****  
 558:spi_int.c     ****     
 559:spi_int.c     **** // set SPI slave select line to display module
 560:spi_int.c     ****     SPIM_SpiSetActiveSlaveSelect(SPIM_SPI_SLAVE_SELECT1);   
 595              		.loc 1 560 0
 596 00bc 0120     		movs	r0, #1
 597 00be FFF7FEFF 		bl	SPIM_SpiSetActiveSlaveSelect
 598              	.LVL65:
 561:spi_int.c     ****     
 562:spi_int.c     ****     return (status);
 563:spi_int.c     **** }
 599              		.loc 1 563 0
 600 00c2 2000     		movs	r0, r4
 601 00c4 04B0     		add	sp, sp, #16
 602              		@ sp needed
 603              	.LVL66:
 604              	.LVL67:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 22


 605 00c6 70BD     		pop	{r4, r5, r6, pc}
 606              		.cfi_endproc
 607              	.LFE36:
 608              		.size	SPIM_SigmaDSP_read, .-SPIM_SigmaDSP_read
 609              		.global	dummyBuffer
 610              		.comm	DISPLAY_UPDATE,1,1
 611              		.comm	DATALINK_TABLE_COUNTER_MAX,1,1
 612              		.comm	DATALINK_TABLE_COUNTER,1,1
 613              		.comm	DATALINK_TABLE,64,1
 614              		.comm	PWR_OK_LONG_V,1,1
 615              		.comm	MODE_LONG_V,1,1
 616              		.comm	PWR_OK_SHORT_V,1,1
 617              		.comm	MODE_SHORT_V,1,1
 618              		.section	.rodata
 619              		.set	.LANCHOR1,. + 0
 620              		.type	dummyBuffer, %object
 621              		.size	dummyBuffer, 28
 622              	dummyBuffer:
 623 0000 FF       		.byte	-1
 624 0001 FF       		.byte	-1
 625 0002 FF       		.byte	-1
 626 0003 00000000 		.space	25
 626      00000000 
 626      00000000 
 626      00000000 
 626      00000000 
 627              		.bss
 628              		.set	.LANCHOR0,. + 0
 629              		.type	mTxBuffer.6410, %object
 630              		.size	mTxBuffer.6410, 28
 631              	mTxBuffer.6410:
 632 0000 00000000 		.space	28
 632      00000000 
 632      00000000 
 632      00000000 
 632      00000000 
 633              		.text
 634              	.Letext0:
 635              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 636              		.file 3 "./inputs.h"
 637              		.file 4 "Generated_Source\\PSoC4/SPIM_SPI_UART.h"
 638              		.file 5 "Generated_Source\\PSoC4/CyLib.h"
 639              		.section	.debug_info,"",%progbits
 640              	.Ldebug_info0:
 641 0000 E5050000 		.4byte	0x5e5
 642 0004 0400     		.2byte	0x4
 643 0006 00000000 		.4byte	.Ldebug_abbrev0
 644 000a 04       		.byte	0x4
 645 000b 01       		.uleb128 0x1
 646 000c DD020000 		.4byte	.LASF46
 647 0010 0C       		.byte	0xc
 648 0011 E5000000 		.4byte	.LASF47
 649 0015 55020000 		.4byte	.LASF48
 650 0019 00000000 		.4byte	.Ldebug_ranges0+0
 651 001d 00000000 		.4byte	0
 652 0021 00000000 		.4byte	.Ldebug_line0
 653 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 23


 654 0026 01       		.byte	0x1
 655 0027 06       		.byte	0x6
 656 0028 C3020000 		.4byte	.LASF0
 657 002c 02       		.uleb128 0x2
 658 002d 01       		.byte	0x1
 659 002e 08       		.byte	0x8
 660 002f D7000000 		.4byte	.LASF1
 661 0033 02       		.uleb128 0x2
 662 0034 02       		.byte	0x2
 663 0035 05       		.byte	0x5
 664 0036 2E020000 		.4byte	.LASF2
 665 003a 02       		.uleb128 0x2
 666 003b 02       		.byte	0x2
 667 003c 07       		.byte	0x7
 668 003d 06010000 		.4byte	.LASF3
 669 0041 02       		.uleb128 0x2
 670 0042 04       		.byte	0x4
 671 0043 05       		.byte	0x5
 672 0044 82020000 		.4byte	.LASF4
 673 0048 02       		.uleb128 0x2
 674 0049 04       		.byte	0x4
 675 004a 07       		.byte	0x7
 676 004b 3C010000 		.4byte	.LASF5
 677 004f 02       		.uleb128 0x2
 678 0050 08       		.byte	0x8
 679 0051 05       		.byte	0x5
 680 0052 0F020000 		.4byte	.LASF6
 681 0056 02       		.uleb128 0x2
 682 0057 08       		.byte	0x8
 683 0058 07       		.byte	0x7
 684 0059 A0010000 		.4byte	.LASF7
 685 005d 03       		.uleb128 0x3
 686 005e 04       		.byte	0x4
 687 005f 05       		.byte	0x5
 688 0060 696E7400 		.ascii	"int\000"
 689 0064 02       		.uleb128 0x2
 690 0065 04       		.byte	0x4
 691 0066 07       		.byte	0x7
 692 0067 76010000 		.4byte	.LASF8
 693 006b 04       		.uleb128 0x4
 694 006c D1000000 		.4byte	.LASF9
 695 0070 02       		.byte	0x2
 696 0071 F701     		.2byte	0x1f7
 697 0073 2C000000 		.4byte	0x2c
 698 0077 04       		.uleb128 0x4
 699 0078 6F010000 		.4byte	.LASF10
 700 007c 02       		.byte	0x2
 701 007d F901     		.2byte	0x1f9
 702 007f 48000000 		.4byte	0x48
 703 0083 02       		.uleb128 0x2
 704 0084 04       		.byte	0x4
 705 0085 04       		.byte	0x4
 706 0086 CB000000 		.4byte	.LASF11
 707 008a 02       		.uleb128 0x2
 708 008b 08       		.byte	0x8
 709 008c 04       		.byte	0x4
 710 008d 85000000 		.4byte	.LASF12
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 24


 711 0091 02       		.uleb128 0x2
 712 0092 01       		.byte	0x1
 713 0093 08       		.byte	0x8
 714 0094 1D020000 		.4byte	.LASF13
 715 0098 02       		.uleb128 0x2
 716 0099 08       		.byte	0x8
 717 009a 04       		.byte	0x4
 718 009b EB010000 		.4byte	.LASF14
 719 009f 02       		.uleb128 0x2
 720 00a0 04       		.byte	0x4
 721 00a1 07       		.byte	0x7
 722 00a2 F7010000 		.4byte	.LASF15
 723 00a6 05       		.uleb128 0x5
 724 00a7 04       		.byte	0x4
 725 00a8 6B000000 		.4byte	0x6b
 726 00ac 06       		.uleb128 0x6
 727 00ad 96020000 		.4byte	.LASF49
 728 00b1 01       		.byte	0x1
 729 00b2 48       		.byte	0x48
 730 00b3 00000000 		.4byte	.LFB32
 731 00b7 44000000 		.4byte	.LFE32-.LFB32
 732 00bb 01       		.uleb128 0x1
 733 00bc 9C       		.byte	0x9c
 734 00bd 4E010000 		.4byte	0x14e
 735 00c1 07       		.uleb128 0x7
 736 00c2 92010000 		.4byte	.LASF16
 737 00c6 01       		.byte	0x1
 738 00c7 48       		.byte	0x48
 739 00c8 A6000000 		.4byte	0xa6
 740 00cc 00000000 		.4byte	.LLST0
 741 00d0 07       		.uleb128 0x7
 742 00d1 2B000000 		.4byte	.LASF17
 743 00d5 01       		.byte	0x1
 744 00d6 48       		.byte	0x48
 745 00d7 6B000000 		.4byte	0x6b
 746 00db 2C000000 		.4byte	.LLST1
 747 00df 07       		.uleb128 0x7
 748 00e0 36000000 		.4byte	.LASF18
 749 00e4 01       		.byte	0x1
 750 00e5 48       		.byte	0x48
 751 00e6 6B000000 		.4byte	0x6b
 752 00ea 4D000000 		.4byte	.LLST2
 753 00ee 08       		.uleb128 0x8
 754 00ef C1000000 		.4byte	.LASF19
 755 00f3 01       		.byte	0x1
 756 00f4 4B       		.byte	0x4b
 757 00f5 4E010000 		.4byte	0x14e
 758 00f9 05       		.uleb128 0x5
 759 00fa 03       		.byte	0x3
 760 00fb 00000000 		.4byte	mTxBuffer.6410
 761 00ff 09       		.uleb128 0x9
 762 0100 6900     		.ascii	"i\000"
 763 0102 01       		.byte	0x1
 764 0103 4D       		.byte	0x4d
 765 0104 6B000000 		.4byte	0x6b
 766 0108 6E000000 		.4byte	.LLST3
 767 010c 0A       		.uleb128 0xa
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 25


 768 010d 0E000000 		.4byte	.LVL2
 769 0111 8C050000 		.4byte	0x58c
 770 0115 1F010000 		.4byte	0x11f
 771 0119 0B       		.uleb128 0xb
 772 011a 01       		.uleb128 0x1
 773 011b 50       		.byte	0x50
 774 011c 01       		.uleb128 0x1
 775 011d 31       		.byte	0x31
 776 011e 00       		.byte	0
 777 011f 0A       		.uleb128 0xa
 778 0120 30000000 		.4byte	.LVL6
 779 0124 98050000 		.4byte	0x598
 780 0128 3B010000 		.4byte	0x13b
 781 012c 0B       		.uleb128 0xb
 782 012d 01       		.uleb128 0x1
 783 012e 50       		.byte	0x50
 784 012f 05       		.uleb128 0x5
 785 0130 03       		.byte	0x3
 786 0131 00000000 		.4byte	.LANCHOR0
 787 0135 0B       		.uleb128 0xb
 788 0136 01       		.uleb128 0x1
 789 0137 51       		.byte	0x51
 790 0138 01       		.uleb128 0x1
 791 0139 4C       		.byte	0x4c
 792 013a 00       		.byte	0
 793 013b 0C       		.uleb128 0xc
 794 013c 34000000 		.4byte	.LVL7
 795 0140 A4050000 		.4byte	0x5a4
 796 0144 0C       		.uleb128 0xc
 797 0145 3C000000 		.4byte	.LVL8
 798 0149 B0050000 		.4byte	0x5b0
 799 014d 00       		.byte	0
 800 014e 0D       		.uleb128 0xd
 801 014f 6B000000 		.4byte	0x6b
 802 0153 5E010000 		.4byte	0x15e
 803 0157 0E       		.uleb128 0xe
 804 0158 9F000000 		.4byte	0x9f
 805 015c 1B       		.byte	0x1b
 806 015d 00       		.byte	0
 807 015e 0F       		.uleb128 0xf
 808 015f 00000000 		.4byte	.LASF22
 809 0163 01       		.byte	0x1
 810 0164 7F       		.byte	0x7f
 811 0165 77000000 		.4byte	0x77
 812 0169 00000000 		.4byte	.LFB33
 813 016d 48000000 		.4byte	.LFE33-.LFB33
 814 0171 01       		.uleb128 0x1
 815 0172 9C       		.byte	0x9c
 816 0173 F3010000 		.4byte	0x1f3
 817 0177 08       		.uleb128 0x8
 818 0178 CA010000 		.4byte	.LASF20
 819 017c 01       		.byte	0x1
 820 017d 81       		.byte	0x81
 821 017e F3010000 		.4byte	0x1f3
 822 0182 02       		.uleb128 0x2
 823 0183 91       		.byte	0x91
 824 0184 6C       		.sleb128 -20
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 26


 825 0185 08       		.uleb128 0x8
 826 0186 8C000000 		.4byte	.LASF21
 827 018a 01       		.byte	0x1
 828 018b 82       		.byte	0x82
 829 018c 6B000000 		.4byte	0x6b
 830 0190 01       		.uleb128 0x1
 831 0191 50       		.byte	0x50
 832 0192 09       		.uleb128 0x9
 833 0193 6900     		.ascii	"i\000"
 834 0195 01       		.byte	0x1
 835 0196 83       		.byte	0x83
 836 0197 77000000 		.4byte	0x77
 837 019b 9B000000 		.4byte	.LLST4
 838 019f 0A       		.uleb128 0xa
 839 01a0 08000000 		.4byte	.LVL10
 840 01a4 8C050000 		.4byte	0x58c
 841 01a8 B2010000 		.4byte	0x1b2
 842 01ac 0B       		.uleb128 0xb
 843 01ad 01       		.uleb128 0x1
 844 01ae 50       		.byte	0x50
 845 01af 01       		.uleb128 0x1
 846 01b0 31       		.byte	0x31
 847 01b1 00       		.byte	0
 848 01b2 0A       		.uleb128 0xa
 849 01b3 10000000 		.4byte	.LVL11
 850 01b7 98050000 		.4byte	0x598
 851 01bb CE010000 		.4byte	0x1ce
 852 01bf 0B       		.uleb128 0xb
 853 01c0 01       		.uleb128 0x1
 854 01c1 50       		.byte	0x50
 855 01c2 05       		.uleb128 0x5
 856 01c3 03       		.byte	0x3
 857 01c4 00000000 		.4byte	.LANCHOR1
 858 01c8 0B       		.uleb128 0xb
 859 01c9 01       		.uleb128 0x1
 860 01ca 51       		.byte	0x51
 861 01cb 01       		.uleb128 0x1
 862 01cc 33       		.byte	0x33
 863 01cd 00       		.byte	0
 864 01ce 0C       		.uleb128 0xc
 865 01cf 14000000 		.4byte	.LVL12
 866 01d3 A4050000 		.4byte	0x5a4
 867 01d7 0C       		.uleb128 0xc
 868 01d8 1C000000 		.4byte	.LVL13
 869 01dc BC050000 		.4byte	0x5bc
 870 01e0 0C       		.uleb128 0xc
 871 01e1 22000000 		.4byte	.LVL15
 872 01e5 A4050000 		.4byte	0x5a4
 873 01e9 0C       		.uleb128 0xc
 874 01ea 2C000000 		.4byte	.LVL16
 875 01ee C8050000 		.4byte	0x5c8
 876 01f2 00       		.byte	0
 877 01f3 0D       		.uleb128 0xd
 878 01f4 6B000000 		.4byte	0x6b
 879 01f8 03020000 		.4byte	0x203
 880 01fc 0E       		.uleb128 0xe
 881 01fd 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 27


 882 0201 02       		.byte	0x2
 883 0202 00       		.byte	0
 884 0203 0F       		.uleb128 0xf
 885 0204 D4010000 		.4byte	.LASF23
 886 0208 01       		.byte	0x1
 887 0209 BF       		.byte	0xbf
 888 020a 6B000000 		.4byte	0x6b
 889 020e 00000000 		.4byte	.LFB34
 890 0212 64000000 		.4byte	.LFE34-.LFB34
 891 0216 01       		.uleb128 0x1
 892 0217 9C       		.byte	0x9c
 893 0218 F9020000 		.4byte	0x2f9
 894 021c 08       		.uleb128 0x8
 895 021d 22020000 		.4byte	.LASF24
 896 0221 01       		.byte	0x1
 897 0222 C3       		.byte	0xc3
 898 0223 F9020000 		.4byte	0x2f9
 899 0227 02       		.uleb128 0x2
 900 0228 91       		.byte	0x91
 901 0229 6C       		.sleb128 -20
 902 022a 0A       		.uleb128 0xa
 903 022b 0C000000 		.4byte	.LVL20
 904 022f 8C050000 		.4byte	0x58c
 905 0233 3D020000 		.4byte	0x23d
 906 0237 0B       		.uleb128 0xb
 907 0238 01       		.uleb128 0x1
 908 0239 50       		.byte	0x50
 909 023a 01       		.uleb128 0x1
 910 023b 30       		.byte	0x30
 911 023c 00       		.byte	0
 912 023d 0A       		.uleb128 0xa
 913 023e 14000000 		.4byte	.LVL21
 914 0242 98050000 		.4byte	0x598
 915 0246 56020000 		.4byte	0x256
 916 024a 0B       		.uleb128 0xb
 917 024b 01       		.uleb128 0x1
 918 024c 50       		.byte	0x50
 919 024d 02       		.uleb128 0x2
 920 024e 74       		.byte	0x74
 921 024f 00       		.sleb128 0
 922 0250 0B       		.uleb128 0xb
 923 0251 01       		.uleb128 0x1
 924 0252 51       		.byte	0x51
 925 0253 01       		.uleb128 0x1
 926 0254 31       		.byte	0x31
 927 0255 00       		.byte	0
 928 0256 0C       		.uleb128 0xc
 929 0257 18000000 		.4byte	.LVL22
 930 025b A4050000 		.4byte	0x5a4
 931 025f 0C       		.uleb128 0xc
 932 0260 22000000 		.4byte	.LVL23
 933 0264 B0050000 		.4byte	0x5b0
 934 0268 0A       		.uleb128 0xa
 935 0269 28000000 		.4byte	.LVL24
 936 026d D4050000 		.4byte	0x5d4
 937 0271 7C020000 		.4byte	0x27c
 938 0275 0B       		.uleb128 0xb
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 28


 939 0276 01       		.uleb128 0x1
 940 0277 50       		.byte	0x50
 941 0278 02       		.uleb128 0x2
 942 0279 08       		.byte	0x8
 943 027a 64       		.byte	0x64
 944 027b 00       		.byte	0
 945 027c 0A       		.uleb128 0xa
 946 027d 30000000 		.4byte	.LVL25
 947 0281 98050000 		.4byte	0x598
 948 0285 96020000 		.4byte	0x296
 949 0289 0B       		.uleb128 0xb
 950 028a 01       		.uleb128 0x1
 951 028b 50       		.byte	0x50
 952 028c 02       		.uleb128 0x2
 953 028d 74       		.byte	0x74
 954 028e 00       		.sleb128 0
 955 028f 0B       		.uleb128 0xb
 956 0290 01       		.uleb128 0x1
 957 0291 51       		.byte	0x51
 958 0292 02       		.uleb128 0x2
 959 0293 75       		.byte	0x75
 960 0294 00       		.sleb128 0
 961 0295 00       		.byte	0
 962 0296 0C       		.uleb128 0xc
 963 0297 34000000 		.4byte	.LVL26
 964 029b A4050000 		.4byte	0x5a4
 965 029f 0C       		.uleb128 0xc
 966 02a0 3E000000 		.4byte	.LVL27
 967 02a4 B0050000 		.4byte	0x5b0
 968 02a8 0A       		.uleb128 0xa
 969 02a9 44000000 		.4byte	.LVL28
 970 02ad D4050000 		.4byte	0x5d4
 971 02b1 BC020000 		.4byte	0x2bc
 972 02b5 0B       		.uleb128 0xb
 973 02b6 01       		.uleb128 0x1
 974 02b7 50       		.byte	0x50
 975 02b8 02       		.uleb128 0x2
 976 02b9 08       		.byte	0x8
 977 02ba 64       		.byte	0x64
 978 02bb 00       		.byte	0
 979 02bc 0A       		.uleb128 0xa
 980 02bd 4C000000 		.4byte	.LVL29
 981 02c1 98050000 		.4byte	0x598
 982 02c5 D6020000 		.4byte	0x2d6
 983 02c9 0B       		.uleb128 0xb
 984 02ca 01       		.uleb128 0x1
 985 02cb 50       		.byte	0x50
 986 02cc 02       		.uleb128 0x2
 987 02cd 74       		.byte	0x74
 988 02ce 00       		.sleb128 0
 989 02cf 0B       		.uleb128 0xb
 990 02d0 01       		.uleb128 0x1
 991 02d1 51       		.byte	0x51
 992 02d2 02       		.uleb128 0x2
 993 02d3 75       		.byte	0x75
 994 02d4 00       		.sleb128 0
 995 02d5 00       		.byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 29


 996 02d6 0C       		.uleb128 0xc
 997 02d7 50000000 		.4byte	.LVL30
 998 02db A4050000 		.4byte	0x5a4
 999 02df 0C       		.uleb128 0xc
 1000 02e0 5A000000 		.4byte	.LVL31
 1001 02e4 B0050000 		.4byte	0x5b0
 1002 02e8 10       		.uleb128 0x10
 1003 02e9 60000000 		.4byte	.LVL32
 1004 02ed 8C050000 		.4byte	0x58c
 1005 02f1 0B       		.uleb128 0xb
 1006 02f2 01       		.uleb128 0x1
 1007 02f3 50       		.byte	0x50
 1008 02f4 02       		.uleb128 0x2
 1009 02f5 74       		.byte	0x74
 1010 02f6 00       		.sleb128 0
 1011 02f7 00       		.byte	0
 1012 02f8 00       		.byte	0
 1013 02f9 0D       		.uleb128 0xd
 1014 02fa 6B000000 		.4byte	0x6b
 1015 02fe 09030000 		.4byte	0x309
 1016 0302 0E       		.uleb128 0xe
 1017 0303 9F000000 		.4byte	0x9f
 1018 0307 00       		.byte	0
 1019 0308 00       		.byte	0
 1020 0309 11       		.uleb128 0x11
 1021 030a 93000000 		.4byte	.LASF25
 1022 030e 01       		.byte	0x1
 1023 030f 0A01     		.2byte	0x10a
 1024 0311 6B000000 		.4byte	0x6b
 1025 0315 00000000 		.4byte	.LFB35
 1026 0319 7E000000 		.4byte	.LFE35-.LFB35
 1027 031d 01       		.uleb128 0x1
 1028 031e 9C       		.byte	0x9c
 1029 031f AE030000 		.4byte	0x3ae
 1030 0323 12       		.uleb128 0x12
 1031 0324 68000000 		.4byte	.LASF26
 1032 0328 01       		.byte	0x1
 1033 0329 0A01     		.2byte	0x10a
 1034 032b 6B000000 		.4byte	0x6b
 1035 032f BA000000 		.4byte	.LLST5
 1036 0333 13       		.uleb128 0x13
 1037 0334 50000000 		.4byte	.LASF27
 1038 0338 01       		.byte	0x1
 1039 0339 0D01     		.2byte	0x10d
 1040 033b AE030000 		.4byte	0x3ae
 1041 033f 02       		.uleb128 0x2
 1042 0340 91       		.byte	0x91
 1043 0341 70       		.sleb128 -16
 1044 0342 0A       		.uleb128 0xa
 1045 0343 0E000000 		.4byte	.LVL35
 1046 0347 DF050000 		.4byte	0x5df
 1047 034b 60030000 		.4byte	0x360
 1048 034f 0B       		.uleb128 0xb
 1049 0350 01       		.uleb128 0x1
 1050 0351 50       		.byte	0x50
 1051 0352 02       		.uleb128 0x2
 1052 0353 7D       		.byte	0x7d
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 30


 1053 0354 00       		.sleb128 0
 1054 0355 0B       		.uleb128 0xb
 1055 0356 01       		.uleb128 0x1
 1056 0357 51       		.byte	0x51
 1057 0358 01       		.uleb128 0x1
 1058 0359 30       		.byte	0x30
 1059 035a 0B       		.uleb128 0xb
 1060 035b 01       		.uleb128 0x1
 1061 035c 52       		.byte	0x52
 1062 035d 01       		.uleb128 0x1
 1063 035e 37       		.byte	0x37
 1064 035f 00       		.byte	0
 1065 0360 0A       		.uleb128 0xa
 1066 0361 14000000 		.4byte	.LVL36
 1067 0365 8C050000 		.4byte	0x58c
 1068 0369 73030000 		.4byte	0x373
 1069 036d 0B       		.uleb128 0xb
 1070 036e 01       		.uleb128 0x1
 1071 036f 50       		.byte	0x50
 1072 0370 01       		.uleb128 0x1
 1073 0371 30       		.byte	0x30
 1074 0372 00       		.byte	0
 1075 0373 0A       		.uleb128 0xa
 1076 0374 68000000 		.4byte	.LVL37
 1077 0378 98050000 		.4byte	0x598
 1078 037c 8C030000 		.4byte	0x38c
 1079 0380 0B       		.uleb128 0xb
 1080 0381 01       		.uleb128 0x1
 1081 0382 50       		.byte	0x50
 1082 0383 02       		.uleb128 0x2
 1083 0384 7D       		.byte	0x7d
 1084 0385 00       		.sleb128 0
 1085 0386 0B       		.uleb128 0xb
 1086 0387 01       		.uleb128 0x1
 1087 0388 51       		.byte	0x51
 1088 0389 01       		.uleb128 0x1
 1089 038a 37       		.byte	0x37
 1090 038b 00       		.byte	0
 1091 038c 0C       		.uleb128 0xc
 1092 038d 6C000000 		.4byte	.LVL38
 1093 0391 A4050000 		.4byte	0x5a4
 1094 0395 0C       		.uleb128 0xc
 1095 0396 74000000 		.4byte	.LVL39
 1096 039a B0050000 		.4byte	0x5b0
 1097 039e 10       		.uleb128 0x10
 1098 039f 7A000000 		.4byte	.LVL40
 1099 03a3 8C050000 		.4byte	0x58c
 1100 03a7 0B       		.uleb128 0xb
 1101 03a8 01       		.uleb128 0x1
 1102 03a9 50       		.byte	0x50
 1103 03aa 01       		.uleb128 0x1
 1104 03ab 31       		.byte	0x31
 1105 03ac 00       		.byte	0
 1106 03ad 00       		.byte	0
 1107 03ae 0D       		.uleb128 0xd
 1108 03af 6B000000 		.4byte	0x6b
 1109 03b3 BE030000 		.4byte	0x3be
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 31


 1110 03b7 0E       		.uleb128 0xe
 1111 03b8 9F000000 		.4byte	0x9f
 1112 03bc 06       		.byte	0x6
 1113 03bd 00       		.byte	0
 1114 03be 11       		.uleb128 0x11
 1115 03bf B7010000 		.4byte	.LASF28
 1116 03c3 01       		.byte	0x1
 1117 03c4 8B01     		.2byte	0x18b
 1118 03c6 77000000 		.4byte	0x77
 1119 03ca 00000000 		.4byte	.LFB36
 1120 03ce C8000000 		.4byte	.LFE36-.LFB36
 1121 03d2 01       		.uleb128 0x1
 1122 03d3 9C       		.byte	0x9c
 1123 03d4 C9040000 		.4byte	0x4c9
 1124 03d8 12       		.uleb128 0x12
 1125 03d9 68000000 		.4byte	.LASF26
 1126 03dd 01       		.byte	0x1
 1127 03de 8B01     		.2byte	0x18b
 1128 03e0 6B000000 		.4byte	0x6b
 1129 03e4 DB000000 		.4byte	.LLST6
 1130 03e8 14       		.uleb128 0x14
 1131 03e9 8C000000 		.4byte	.LASF21
 1132 03ed 01       		.byte	0x1
 1133 03ee 8E01     		.2byte	0x18e
 1134 03f0 77000000 		.4byte	0x77
 1135 03f4 FC000000 		.4byte	.LLST7
 1136 03f8 15       		.uleb128 0x15
 1137 03f9 6900     		.ascii	"i\000"
 1138 03fb 01       		.byte	0x1
 1139 03fc 9101     		.2byte	0x191
 1140 03fe 6B000000 		.4byte	0x6b
 1141 0402 3D010000 		.4byte	.LLST8
 1142 0406 13       		.uleb128 0x13
 1143 0407 8B020000 		.4byte	.LASF29
 1144 040b 01       		.byte	0x1
 1145 040c 9401     		.2byte	0x194
 1146 040e AE030000 		.4byte	0x3ae
 1147 0412 02       		.uleb128 0x2
 1148 0413 91       		.byte	0x91
 1149 0414 60       		.sleb128 -32
 1150 0415 13       		.uleb128 0x13
 1151 0416 50000000 		.4byte	.LASF27
 1152 041a 01       		.byte	0x1
 1153 041b 9601     		.2byte	0x196
 1154 041d AE030000 		.4byte	0x3ae
 1155 0421 02       		.uleb128 0x2
 1156 0422 91       		.byte	0x91
 1157 0423 68       		.sleb128 -24
 1158 0424 0A       		.uleb128 0xa
 1159 0425 10000000 		.4byte	.LVL43
 1160 0429 DF050000 		.4byte	0x5df
 1161 042d 42040000 		.4byte	0x442
 1162 0431 0B       		.uleb128 0xb
 1163 0432 01       		.uleb128 0x1
 1164 0433 50       		.byte	0x50
 1165 0434 02       		.uleb128 0x2
 1166 0435 7D       		.byte	0x7d
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 32


 1167 0436 00       		.sleb128 0
 1168 0437 0B       		.uleb128 0xb
 1169 0438 01       		.uleb128 0x1
 1170 0439 51       		.byte	0x51
 1171 043a 01       		.uleb128 0x1
 1172 043b 30       		.byte	0x30
 1173 043c 0B       		.uleb128 0xb
 1174 043d 01       		.uleb128 0x1
 1175 043e 52       		.byte	0x52
 1176 043f 01       		.uleb128 0x1
 1177 0440 37       		.byte	0x37
 1178 0441 00       		.byte	0
 1179 0442 0A       		.uleb128 0xa
 1180 0443 1A000000 		.4byte	.LVL44
 1181 0447 DF050000 		.4byte	0x5df
 1182 044b 60040000 		.4byte	0x460
 1183 044f 0B       		.uleb128 0xb
 1184 0450 01       		.uleb128 0x1
 1185 0451 50       		.byte	0x50
 1186 0452 02       		.uleb128 0x2
 1187 0453 74       		.byte	0x74
 1188 0454 00       		.sleb128 0
 1189 0455 0B       		.uleb128 0xb
 1190 0456 01       		.uleb128 0x1
 1191 0457 51       		.byte	0x51
 1192 0458 01       		.uleb128 0x1
 1193 0459 30       		.byte	0x30
 1194 045a 0B       		.uleb128 0xb
 1195 045b 01       		.uleb128 0x1
 1196 045c 52       		.byte	0x52
 1197 045d 01       		.uleb128 0x1
 1198 045e 37       		.byte	0x37
 1199 045f 00       		.byte	0
 1200 0460 0A       		.uleb128 0xa
 1201 0461 24000000 		.4byte	.LVL45
 1202 0465 8C050000 		.4byte	0x58c
 1203 0469 73040000 		.4byte	0x473
 1204 046d 0B       		.uleb128 0xb
 1205 046e 01       		.uleb128 0x1
 1206 046f 50       		.byte	0x50
 1207 0470 01       		.uleb128 0x1
 1208 0471 30       		.byte	0x30
 1209 0472 00       		.byte	0
 1210 0473 0A       		.uleb128 0xa
 1211 0474 64000000 		.4byte	.LVL46
 1212 0478 98050000 		.4byte	0x598
 1213 047c 8C040000 		.4byte	0x48c
 1214 0480 0B       		.uleb128 0xb
 1215 0481 01       		.uleb128 0x1
 1216 0482 50       		.byte	0x50
 1217 0483 02       		.uleb128 0x2
 1218 0484 74       		.byte	0x74
 1219 0485 00       		.sleb128 0
 1220 0486 0B       		.uleb128 0xb
 1221 0487 01       		.uleb128 0x1
 1222 0488 51       		.byte	0x51
 1223 0489 01       		.uleb128 0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 33


 1224 048a 37       		.byte	0x37
 1225 048b 00       		.byte	0
 1226 048c 0C       		.uleb128 0xc
 1227 048d 68000000 		.4byte	.LVL47
 1228 0491 A4050000 		.4byte	0x5a4
 1229 0495 0C       		.uleb128 0xc
 1230 0496 70000000 		.4byte	.LVL48
 1231 049a BC050000 		.4byte	0x5bc
 1232 049e 0C       		.uleb128 0xc
 1233 049f 76000000 		.4byte	.LVL50
 1234 04a3 A4050000 		.4byte	0x5a4
 1235 04a7 0C       		.uleb128 0xc
 1236 04a8 7E000000 		.4byte	.LVL51
 1237 04ac C8050000 		.4byte	0x5c8
 1238 04b0 0C       		.uleb128 0xc
 1239 04b1 8C000000 		.4byte	.LVL54
 1240 04b5 B0050000 		.4byte	0x5b0
 1241 04b9 10       		.uleb128 0x10
 1242 04ba C2000000 		.4byte	.LVL65
 1243 04be 8C050000 		.4byte	0x58c
 1244 04c2 0B       		.uleb128 0xb
 1245 04c3 01       		.uleb128 0x1
 1246 04c4 50       		.byte	0x50
 1247 04c5 01       		.uleb128 0x1
 1248 04c6 31       		.byte	0x31
 1249 04c7 00       		.byte	0
 1250 04c8 00       		.byte	0
 1251 04c9 16       		.uleb128 0x16
 1252 04ca 1E000000 		.4byte	.LASF30
 1253 04ce 03       		.byte	0x3
 1254 04cf 15       		.byte	0x15
 1255 04d0 6B000000 		.4byte	0x6b
 1256 04d4 05       		.uleb128 0x5
 1257 04d5 03       		.byte	0x3
 1258 04d6 00000000 		.4byte	MODE_SHORT_V
 1259 04da 16       		.uleb128 0x16
 1260 04db 00020000 		.4byte	.LASF31
 1261 04df 03       		.byte	0x3
 1262 04e0 16       		.byte	0x16
 1263 04e1 6B000000 		.4byte	0x6b
 1264 04e5 05       		.uleb128 0x5
 1265 04e6 03       		.byte	0x3
 1266 04e7 00000000 		.4byte	PWR_OK_SHORT_V
 1267 04eb 16       		.uleb128 0x16
 1268 04ec 12000000 		.4byte	.LASF32
 1269 04f0 03       		.byte	0x3
 1270 04f1 17       		.byte	0x17
 1271 04f2 6B000000 		.4byte	0x6b
 1272 04f6 05       		.uleb128 0x5
 1273 04f7 03       		.byte	0x3
 1274 04f8 00000000 		.4byte	MODE_LONG_V
 1275 04fc 16       		.uleb128 0x16
 1276 04fd CF020000 		.4byte	.LASF33
 1277 0501 03       		.byte	0x3
 1278 0502 18       		.byte	0x18
 1279 0503 6B000000 		.4byte	0x6b
 1280 0507 05       		.uleb128 0x5
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 34


 1281 0508 03       		.byte	0x3
 1282 0509 00000000 		.4byte	PWR_OK_LONG_V
 1283 050d 0D       		.uleb128 0xd
 1284 050e 6B000000 		.4byte	0x6b
 1285 0512 1D050000 		.4byte	0x51d
 1286 0516 0E       		.uleb128 0xe
 1287 0517 9F000000 		.4byte	0x9f
 1288 051b 3F       		.byte	0x3f
 1289 051c 00       		.byte	0
 1290 051d 16       		.uleb128 0x16
 1291 051e 41000000 		.4byte	.LASF34
 1292 0522 03       		.byte	0x3
 1293 0523 1A       		.byte	0x1a
 1294 0524 0D050000 		.4byte	0x50d
 1295 0528 05       		.uleb128 0x5
 1296 0529 03       		.byte	0x3
 1297 052a 00000000 		.4byte	DATALINK_TABLE
 1298 052e 16       		.uleb128 0x16
 1299 052f 4E010000 		.4byte	.LASF35
 1300 0533 03       		.byte	0x3
 1301 0534 1B       		.byte	0x1b
 1302 0535 6B000000 		.4byte	0x6b
 1303 0539 05       		.uleb128 0x5
 1304 053a 03       		.byte	0x3
 1305 053b 00000000 		.4byte	DATALINK_TABLE_COUNTER
 1306 053f 16       		.uleb128 0x16
 1307 0540 6B030000 		.4byte	.LASF36
 1308 0544 03       		.byte	0x3
 1309 0545 1C       		.byte	0x1c
 1310 0546 6B000000 		.4byte	0x6b
 1311 054a 05       		.uleb128 0x5
 1312 054b 03       		.byte	0x3
 1313 054c 00000000 		.4byte	DATALINK_TABLE_COUNTER_MAX
 1314 0550 16       		.uleb128 0x16
 1315 0551 83010000 		.4byte	.LASF37
 1316 0555 03       		.byte	0x3
 1317 0556 1D       		.byte	0x1d
 1318 0557 6B000000 		.4byte	0x6b
 1319 055b 05       		.uleb128 0x5
 1320 055c 03       		.byte	0x3
 1321 055d 00000000 		.4byte	DISPLAY_UPDATE
 1322 0561 0D       		.uleb128 0xd
 1323 0562 71050000 		.4byte	0x571
 1324 0566 71050000 		.4byte	0x571
 1325 056a 0E       		.uleb128 0xe
 1326 056b 9F000000 		.4byte	0x9f
 1327 056f 1B       		.byte	0x1b
 1328 0570 00       		.byte	0
 1329 0571 17       		.uleb128 0x17
 1330 0572 6B000000 		.4byte	0x6b
 1331 0576 16       		.uleb128 0x16
 1332 0577 5C000000 		.4byte	.LASF38
 1333 057b 01       		.byte	0x1
 1334 057c 15       		.byte	0x15
 1335 057d 87050000 		.4byte	0x587
 1336 0581 05       		.uleb128 0x5
 1337 0582 03       		.byte	0x3
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 35


 1338 0583 00000000 		.4byte	dummyBuffer
 1339 0587 17       		.uleb128 0x17
 1340 0588 61050000 		.4byte	0x561
 1341 058c 18       		.uleb128 0x18
 1342 058d 38020000 		.4byte	.LASF39
 1343 0591 38020000 		.4byte	.LASF39
 1344 0595 04       		.byte	0x4
 1345 0596 F602     		.2byte	0x2f6
 1346 0598 18       		.uleb128 0x18
 1347 0599 70000000 		.4byte	.LASF40
 1348 059d 70000000 		.4byte	.LASF40
 1349 05a1 04       		.byte	0x4
 1350 05a2 4503     		.2byte	0x345
 1351 05a4 18       		.uleb128 0x18
 1352 05a5 19010000 		.4byte	.LASF41
 1353 05a9 19010000 		.4byte	.LASF41
 1354 05ad 04       		.byte	0x4
 1355 05ae 3E03     		.2byte	0x33e
 1356 05b0 18       		.uleb128 0x18
 1357 05b1 A7000000 		.4byte	.LASF42
 1358 05b5 A7000000 		.4byte	.LASF42
 1359 05b9 04       		.byte	0x4
 1360 05ba 3F03     		.2byte	0x33f
 1361 05bc 18       		.uleb128 0x18
 1362 05bd A9020000 		.4byte	.LASF43
 1363 05c1 A9020000 		.4byte	.LASF43
 1364 05c5 04       		.byte	0x4
 1365 05c6 4703     		.2byte	0x347
 1366 05c8 18       		.uleb128 0x18
 1367 05c9 EF000000 		.4byte	.LASF44
 1368 05cd EF000000 		.4byte	.LASF44
 1369 05d1 04       		.byte	0x4
 1370 05d2 3D03     		.2byte	0x33d
 1371 05d4 19       		.uleb128 0x19
 1372 05d5 65010000 		.4byte	.LASF45
 1373 05d9 65010000 		.4byte	.LASF45
 1374 05dd 05       		.byte	0x5
 1375 05de ED       		.byte	0xed
 1376 05df 1A       		.uleb128 0x1a
 1377 05e0 35010000 		.4byte	.LASF50
 1378 05e4 35010000 		.4byte	.LASF50
 1379 05e8 00       		.byte	0
 1380              		.section	.debug_abbrev,"",%progbits
 1381              	.Ldebug_abbrev0:
 1382 0000 01       		.uleb128 0x1
 1383 0001 11       		.uleb128 0x11
 1384 0002 01       		.byte	0x1
 1385 0003 25       		.uleb128 0x25
 1386 0004 0E       		.uleb128 0xe
 1387 0005 13       		.uleb128 0x13
 1388 0006 0B       		.uleb128 0xb
 1389 0007 03       		.uleb128 0x3
 1390 0008 0E       		.uleb128 0xe
 1391 0009 1B       		.uleb128 0x1b
 1392 000a 0E       		.uleb128 0xe
 1393 000b 55       		.uleb128 0x55
 1394 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 36


 1395 000d 11       		.uleb128 0x11
 1396 000e 01       		.uleb128 0x1
 1397 000f 10       		.uleb128 0x10
 1398 0010 17       		.uleb128 0x17
 1399 0011 00       		.byte	0
 1400 0012 00       		.byte	0
 1401 0013 02       		.uleb128 0x2
 1402 0014 24       		.uleb128 0x24
 1403 0015 00       		.byte	0
 1404 0016 0B       		.uleb128 0xb
 1405 0017 0B       		.uleb128 0xb
 1406 0018 3E       		.uleb128 0x3e
 1407 0019 0B       		.uleb128 0xb
 1408 001a 03       		.uleb128 0x3
 1409 001b 0E       		.uleb128 0xe
 1410 001c 00       		.byte	0
 1411 001d 00       		.byte	0
 1412 001e 03       		.uleb128 0x3
 1413 001f 24       		.uleb128 0x24
 1414 0020 00       		.byte	0
 1415 0021 0B       		.uleb128 0xb
 1416 0022 0B       		.uleb128 0xb
 1417 0023 3E       		.uleb128 0x3e
 1418 0024 0B       		.uleb128 0xb
 1419 0025 03       		.uleb128 0x3
 1420 0026 08       		.uleb128 0x8
 1421 0027 00       		.byte	0
 1422 0028 00       		.byte	0
 1423 0029 04       		.uleb128 0x4
 1424 002a 16       		.uleb128 0x16
 1425 002b 00       		.byte	0
 1426 002c 03       		.uleb128 0x3
 1427 002d 0E       		.uleb128 0xe
 1428 002e 3A       		.uleb128 0x3a
 1429 002f 0B       		.uleb128 0xb
 1430 0030 3B       		.uleb128 0x3b
 1431 0031 05       		.uleb128 0x5
 1432 0032 49       		.uleb128 0x49
 1433 0033 13       		.uleb128 0x13
 1434 0034 00       		.byte	0
 1435 0035 00       		.byte	0
 1436 0036 05       		.uleb128 0x5
 1437 0037 0F       		.uleb128 0xf
 1438 0038 00       		.byte	0
 1439 0039 0B       		.uleb128 0xb
 1440 003a 0B       		.uleb128 0xb
 1441 003b 49       		.uleb128 0x49
 1442 003c 13       		.uleb128 0x13
 1443 003d 00       		.byte	0
 1444 003e 00       		.byte	0
 1445 003f 06       		.uleb128 0x6
 1446 0040 2E       		.uleb128 0x2e
 1447 0041 01       		.byte	0x1
 1448 0042 3F       		.uleb128 0x3f
 1449 0043 19       		.uleb128 0x19
 1450 0044 03       		.uleb128 0x3
 1451 0045 0E       		.uleb128 0xe
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 37


 1452 0046 3A       		.uleb128 0x3a
 1453 0047 0B       		.uleb128 0xb
 1454 0048 3B       		.uleb128 0x3b
 1455 0049 0B       		.uleb128 0xb
 1456 004a 27       		.uleb128 0x27
 1457 004b 19       		.uleb128 0x19
 1458 004c 11       		.uleb128 0x11
 1459 004d 01       		.uleb128 0x1
 1460 004e 12       		.uleb128 0x12
 1461 004f 06       		.uleb128 0x6
 1462 0050 40       		.uleb128 0x40
 1463 0051 18       		.uleb128 0x18
 1464 0052 9742     		.uleb128 0x2117
 1465 0054 19       		.uleb128 0x19
 1466 0055 01       		.uleb128 0x1
 1467 0056 13       		.uleb128 0x13
 1468 0057 00       		.byte	0
 1469 0058 00       		.byte	0
 1470 0059 07       		.uleb128 0x7
 1471 005a 05       		.uleb128 0x5
 1472 005b 00       		.byte	0
 1473 005c 03       		.uleb128 0x3
 1474 005d 0E       		.uleb128 0xe
 1475 005e 3A       		.uleb128 0x3a
 1476 005f 0B       		.uleb128 0xb
 1477 0060 3B       		.uleb128 0x3b
 1478 0061 0B       		.uleb128 0xb
 1479 0062 49       		.uleb128 0x49
 1480 0063 13       		.uleb128 0x13
 1481 0064 02       		.uleb128 0x2
 1482 0065 17       		.uleb128 0x17
 1483 0066 00       		.byte	0
 1484 0067 00       		.byte	0
 1485 0068 08       		.uleb128 0x8
 1486 0069 34       		.uleb128 0x34
 1487 006a 00       		.byte	0
 1488 006b 03       		.uleb128 0x3
 1489 006c 0E       		.uleb128 0xe
 1490 006d 3A       		.uleb128 0x3a
 1491 006e 0B       		.uleb128 0xb
 1492 006f 3B       		.uleb128 0x3b
 1493 0070 0B       		.uleb128 0xb
 1494 0071 49       		.uleb128 0x49
 1495 0072 13       		.uleb128 0x13
 1496 0073 02       		.uleb128 0x2
 1497 0074 18       		.uleb128 0x18
 1498 0075 00       		.byte	0
 1499 0076 00       		.byte	0
 1500 0077 09       		.uleb128 0x9
 1501 0078 34       		.uleb128 0x34
 1502 0079 00       		.byte	0
 1503 007a 03       		.uleb128 0x3
 1504 007b 08       		.uleb128 0x8
 1505 007c 3A       		.uleb128 0x3a
 1506 007d 0B       		.uleb128 0xb
 1507 007e 3B       		.uleb128 0x3b
 1508 007f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 38


 1509 0080 49       		.uleb128 0x49
 1510 0081 13       		.uleb128 0x13
 1511 0082 02       		.uleb128 0x2
 1512 0083 17       		.uleb128 0x17
 1513 0084 00       		.byte	0
 1514 0085 00       		.byte	0
 1515 0086 0A       		.uleb128 0xa
 1516 0087 898201   		.uleb128 0x4109
 1517 008a 01       		.byte	0x1
 1518 008b 11       		.uleb128 0x11
 1519 008c 01       		.uleb128 0x1
 1520 008d 31       		.uleb128 0x31
 1521 008e 13       		.uleb128 0x13
 1522 008f 01       		.uleb128 0x1
 1523 0090 13       		.uleb128 0x13
 1524 0091 00       		.byte	0
 1525 0092 00       		.byte	0
 1526 0093 0B       		.uleb128 0xb
 1527 0094 8A8201   		.uleb128 0x410a
 1528 0097 00       		.byte	0
 1529 0098 02       		.uleb128 0x2
 1530 0099 18       		.uleb128 0x18
 1531 009a 9142     		.uleb128 0x2111
 1532 009c 18       		.uleb128 0x18
 1533 009d 00       		.byte	0
 1534 009e 00       		.byte	0
 1535 009f 0C       		.uleb128 0xc
 1536 00a0 898201   		.uleb128 0x4109
 1537 00a3 00       		.byte	0
 1538 00a4 11       		.uleb128 0x11
 1539 00a5 01       		.uleb128 0x1
 1540 00a6 31       		.uleb128 0x31
 1541 00a7 13       		.uleb128 0x13
 1542 00a8 00       		.byte	0
 1543 00a9 00       		.byte	0
 1544 00aa 0D       		.uleb128 0xd
 1545 00ab 01       		.uleb128 0x1
 1546 00ac 01       		.byte	0x1
 1547 00ad 49       		.uleb128 0x49
 1548 00ae 13       		.uleb128 0x13
 1549 00af 01       		.uleb128 0x1
 1550 00b0 13       		.uleb128 0x13
 1551 00b1 00       		.byte	0
 1552 00b2 00       		.byte	0
 1553 00b3 0E       		.uleb128 0xe
 1554 00b4 21       		.uleb128 0x21
 1555 00b5 00       		.byte	0
 1556 00b6 49       		.uleb128 0x49
 1557 00b7 13       		.uleb128 0x13
 1558 00b8 2F       		.uleb128 0x2f
 1559 00b9 0B       		.uleb128 0xb
 1560 00ba 00       		.byte	0
 1561 00bb 00       		.byte	0
 1562 00bc 0F       		.uleb128 0xf
 1563 00bd 2E       		.uleb128 0x2e
 1564 00be 01       		.byte	0x1
 1565 00bf 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 39


 1566 00c0 19       		.uleb128 0x19
 1567 00c1 03       		.uleb128 0x3
 1568 00c2 0E       		.uleb128 0xe
 1569 00c3 3A       		.uleb128 0x3a
 1570 00c4 0B       		.uleb128 0xb
 1571 00c5 3B       		.uleb128 0x3b
 1572 00c6 0B       		.uleb128 0xb
 1573 00c7 27       		.uleb128 0x27
 1574 00c8 19       		.uleb128 0x19
 1575 00c9 49       		.uleb128 0x49
 1576 00ca 13       		.uleb128 0x13
 1577 00cb 11       		.uleb128 0x11
 1578 00cc 01       		.uleb128 0x1
 1579 00cd 12       		.uleb128 0x12
 1580 00ce 06       		.uleb128 0x6
 1581 00cf 40       		.uleb128 0x40
 1582 00d0 18       		.uleb128 0x18
 1583 00d1 9742     		.uleb128 0x2117
 1584 00d3 19       		.uleb128 0x19
 1585 00d4 01       		.uleb128 0x1
 1586 00d5 13       		.uleb128 0x13
 1587 00d6 00       		.byte	0
 1588 00d7 00       		.byte	0
 1589 00d8 10       		.uleb128 0x10
 1590 00d9 898201   		.uleb128 0x4109
 1591 00dc 01       		.byte	0x1
 1592 00dd 11       		.uleb128 0x11
 1593 00de 01       		.uleb128 0x1
 1594 00df 31       		.uleb128 0x31
 1595 00e0 13       		.uleb128 0x13
 1596 00e1 00       		.byte	0
 1597 00e2 00       		.byte	0
 1598 00e3 11       		.uleb128 0x11
 1599 00e4 2E       		.uleb128 0x2e
 1600 00e5 01       		.byte	0x1
 1601 00e6 3F       		.uleb128 0x3f
 1602 00e7 19       		.uleb128 0x19
 1603 00e8 03       		.uleb128 0x3
 1604 00e9 0E       		.uleb128 0xe
 1605 00ea 3A       		.uleb128 0x3a
 1606 00eb 0B       		.uleb128 0xb
 1607 00ec 3B       		.uleb128 0x3b
 1608 00ed 05       		.uleb128 0x5
 1609 00ee 27       		.uleb128 0x27
 1610 00ef 19       		.uleb128 0x19
 1611 00f0 49       		.uleb128 0x49
 1612 00f1 13       		.uleb128 0x13
 1613 00f2 11       		.uleb128 0x11
 1614 00f3 01       		.uleb128 0x1
 1615 00f4 12       		.uleb128 0x12
 1616 00f5 06       		.uleb128 0x6
 1617 00f6 40       		.uleb128 0x40
 1618 00f7 18       		.uleb128 0x18
 1619 00f8 9742     		.uleb128 0x2117
 1620 00fa 19       		.uleb128 0x19
 1621 00fb 01       		.uleb128 0x1
 1622 00fc 13       		.uleb128 0x13
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 40


 1623 00fd 00       		.byte	0
 1624 00fe 00       		.byte	0
 1625 00ff 12       		.uleb128 0x12
 1626 0100 05       		.uleb128 0x5
 1627 0101 00       		.byte	0
 1628 0102 03       		.uleb128 0x3
 1629 0103 0E       		.uleb128 0xe
 1630 0104 3A       		.uleb128 0x3a
 1631 0105 0B       		.uleb128 0xb
 1632 0106 3B       		.uleb128 0x3b
 1633 0107 05       		.uleb128 0x5
 1634 0108 49       		.uleb128 0x49
 1635 0109 13       		.uleb128 0x13
 1636 010a 02       		.uleb128 0x2
 1637 010b 17       		.uleb128 0x17
 1638 010c 00       		.byte	0
 1639 010d 00       		.byte	0
 1640 010e 13       		.uleb128 0x13
 1641 010f 34       		.uleb128 0x34
 1642 0110 00       		.byte	0
 1643 0111 03       		.uleb128 0x3
 1644 0112 0E       		.uleb128 0xe
 1645 0113 3A       		.uleb128 0x3a
 1646 0114 0B       		.uleb128 0xb
 1647 0115 3B       		.uleb128 0x3b
 1648 0116 05       		.uleb128 0x5
 1649 0117 49       		.uleb128 0x49
 1650 0118 13       		.uleb128 0x13
 1651 0119 02       		.uleb128 0x2
 1652 011a 18       		.uleb128 0x18
 1653 011b 00       		.byte	0
 1654 011c 00       		.byte	0
 1655 011d 14       		.uleb128 0x14
 1656 011e 34       		.uleb128 0x34
 1657 011f 00       		.byte	0
 1658 0120 03       		.uleb128 0x3
 1659 0121 0E       		.uleb128 0xe
 1660 0122 3A       		.uleb128 0x3a
 1661 0123 0B       		.uleb128 0xb
 1662 0124 3B       		.uleb128 0x3b
 1663 0125 05       		.uleb128 0x5
 1664 0126 49       		.uleb128 0x49
 1665 0127 13       		.uleb128 0x13
 1666 0128 02       		.uleb128 0x2
 1667 0129 17       		.uleb128 0x17
 1668 012a 00       		.byte	0
 1669 012b 00       		.byte	0
 1670 012c 15       		.uleb128 0x15
 1671 012d 34       		.uleb128 0x34
 1672 012e 00       		.byte	0
 1673 012f 03       		.uleb128 0x3
 1674 0130 08       		.uleb128 0x8
 1675 0131 3A       		.uleb128 0x3a
 1676 0132 0B       		.uleb128 0xb
 1677 0133 3B       		.uleb128 0x3b
 1678 0134 05       		.uleb128 0x5
 1679 0135 49       		.uleb128 0x49
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 41


 1680 0136 13       		.uleb128 0x13
 1681 0137 02       		.uleb128 0x2
 1682 0138 17       		.uleb128 0x17
 1683 0139 00       		.byte	0
 1684 013a 00       		.byte	0
 1685 013b 16       		.uleb128 0x16
 1686 013c 34       		.uleb128 0x34
 1687 013d 00       		.byte	0
 1688 013e 03       		.uleb128 0x3
 1689 013f 0E       		.uleb128 0xe
 1690 0140 3A       		.uleb128 0x3a
 1691 0141 0B       		.uleb128 0xb
 1692 0142 3B       		.uleb128 0x3b
 1693 0143 0B       		.uleb128 0xb
 1694 0144 49       		.uleb128 0x49
 1695 0145 13       		.uleb128 0x13
 1696 0146 3F       		.uleb128 0x3f
 1697 0147 19       		.uleb128 0x19
 1698 0148 02       		.uleb128 0x2
 1699 0149 18       		.uleb128 0x18
 1700 014a 00       		.byte	0
 1701 014b 00       		.byte	0
 1702 014c 17       		.uleb128 0x17
 1703 014d 26       		.uleb128 0x26
 1704 014e 00       		.byte	0
 1705 014f 49       		.uleb128 0x49
 1706 0150 13       		.uleb128 0x13
 1707 0151 00       		.byte	0
 1708 0152 00       		.byte	0
 1709 0153 18       		.uleb128 0x18
 1710 0154 2E       		.uleb128 0x2e
 1711 0155 00       		.byte	0
 1712 0156 3F       		.uleb128 0x3f
 1713 0157 19       		.uleb128 0x19
 1714 0158 3C       		.uleb128 0x3c
 1715 0159 19       		.uleb128 0x19
 1716 015a 6E       		.uleb128 0x6e
 1717 015b 0E       		.uleb128 0xe
 1718 015c 03       		.uleb128 0x3
 1719 015d 0E       		.uleb128 0xe
 1720 015e 3A       		.uleb128 0x3a
 1721 015f 0B       		.uleb128 0xb
 1722 0160 3B       		.uleb128 0x3b
 1723 0161 05       		.uleb128 0x5
 1724 0162 00       		.byte	0
 1725 0163 00       		.byte	0
 1726 0164 19       		.uleb128 0x19
 1727 0165 2E       		.uleb128 0x2e
 1728 0166 00       		.byte	0
 1729 0167 3F       		.uleb128 0x3f
 1730 0168 19       		.uleb128 0x19
 1731 0169 3C       		.uleb128 0x3c
 1732 016a 19       		.uleb128 0x19
 1733 016b 6E       		.uleb128 0x6e
 1734 016c 0E       		.uleb128 0xe
 1735 016d 03       		.uleb128 0x3
 1736 016e 0E       		.uleb128 0xe
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 42


 1737 016f 3A       		.uleb128 0x3a
 1738 0170 0B       		.uleb128 0xb
 1739 0171 3B       		.uleb128 0x3b
 1740 0172 0B       		.uleb128 0xb
 1741 0173 00       		.byte	0
 1742 0174 00       		.byte	0
 1743 0175 1A       		.uleb128 0x1a
 1744 0176 2E       		.uleb128 0x2e
 1745 0177 00       		.byte	0
 1746 0178 3F       		.uleb128 0x3f
 1747 0179 19       		.uleb128 0x19
 1748 017a 3C       		.uleb128 0x3c
 1749 017b 19       		.uleb128 0x19
 1750 017c 6E       		.uleb128 0x6e
 1751 017d 0E       		.uleb128 0xe
 1752 017e 03       		.uleb128 0x3
 1753 017f 0E       		.uleb128 0xe
 1754 0180 00       		.byte	0
 1755 0181 00       		.byte	0
 1756 0182 00       		.byte	0
 1757              		.section	.debug_loc,"",%progbits
 1758              	.Ldebug_loc0:
 1759              	.LLST0:
 1760 0000 00000000 		.4byte	.LVL0
 1761 0004 06000000 		.4byte	.LVL1
 1762 0008 0100     		.2byte	0x1
 1763 000a 50       		.byte	0x50
 1764 000b 06000000 		.4byte	.LVL1
 1765 000f 3C000000 		.4byte	.LVL9
 1766 0013 0100     		.2byte	0x1
 1767 0015 56       		.byte	0x56
 1768 0016 3C000000 		.4byte	.LVL9
 1769 001a 44000000 		.4byte	.LFE32
 1770 001e 0400     		.2byte	0x4
 1771 0020 F3       		.byte	0xf3
 1772 0021 01       		.uleb128 0x1
 1773 0022 50       		.byte	0x50
 1774 0023 9F       		.byte	0x9f
 1775 0024 00000000 		.4byte	0
 1776 0028 00000000 		.4byte	0
 1777              	.LLST1:
 1778 002c 00000000 		.4byte	.LVL0
 1779 0030 0D000000 		.4byte	.LVL2-1
 1780 0034 0100     		.2byte	0x1
 1781 0036 51       		.byte	0x51
 1782 0037 0D000000 		.4byte	.LVL2-1
 1783 003b 44000000 		.4byte	.LFE32
 1784 003f 0400     		.2byte	0x4
 1785 0041 F3       		.byte	0xf3
 1786 0042 01       		.uleb128 0x1
 1787 0043 51       		.byte	0x51
 1788 0044 9F       		.byte	0x9f
 1789 0045 00000000 		.4byte	0
 1790 0049 00000000 		.4byte	0
 1791              	.LLST2:
 1792 004d 00000000 		.4byte	.LVL0
 1793 0051 0D000000 		.4byte	.LVL2-1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 43


 1794 0055 0100     		.2byte	0x1
 1795 0057 52       		.byte	0x52
 1796 0058 0D000000 		.4byte	.LVL2-1
 1797 005c 44000000 		.4byte	.LFE32
 1798 0060 0400     		.2byte	0x4
 1799 0062 F3       		.byte	0xf3
 1800 0063 01       		.uleb128 0x1
 1801 0064 52       		.byte	0x52
 1802 0065 9F       		.byte	0x9f
 1803 0066 00000000 		.4byte	0
 1804 006a 00000000 		.4byte	0
 1805              	.LLST3:
 1806 006e 00000000 		.4byte	.LVL0
 1807 0072 14000000 		.4byte	.LVL3
 1808 0076 0200     		.2byte	0x2
 1809 0078 30       		.byte	0x30
 1810 0079 9F       		.byte	0x9f
 1811 007a 14000000 		.4byte	.LVL3
 1812 007e 16000000 		.4byte	.LVL4
 1813 0082 0200     		.2byte	0x2
 1814 0084 31       		.byte	0x31
 1815 0085 9F       		.byte	0x9f
 1816 0086 16000000 		.4byte	.LVL4
 1817 008a 1C000000 		.4byte	.LVL5
 1818 008e 0300     		.2byte	0x3
 1819 0090 73       		.byte	0x73
 1820 0091 01       		.sleb128 1
 1821 0092 9F       		.byte	0x9f
 1822 0093 00000000 		.4byte	0
 1823 0097 00000000 		.4byte	0
 1824              	.LLST4:
 1825 009b 1C000000 		.4byte	.LVL13
 1826 009f 1E000000 		.4byte	.LVL14
 1827 00a3 0200     		.2byte	0x2
 1828 00a5 30       		.byte	0x30
 1829 00a6 9F       		.byte	0x9f
 1830 00a7 1E000000 		.4byte	.LVL14
 1831 00ab 42000000 		.4byte	.LVL19
 1832 00af 0100     		.2byte	0x1
 1833 00b1 55       		.byte	0x55
 1834 00b2 00000000 		.4byte	0
 1835 00b6 00000000 		.4byte	0
 1836              	.LLST5:
 1837 00ba 00000000 		.4byte	.LVL33
 1838 00be 0A000000 		.4byte	.LVL34
 1839 00c2 0100     		.2byte	0x1
 1840 00c4 50       		.byte	0x50
 1841 00c5 0A000000 		.4byte	.LVL34
 1842 00c9 7E000000 		.4byte	.LFE35
 1843 00cd 0400     		.2byte	0x4
 1844 00cf F3       		.byte	0xf3
 1845 00d0 01       		.uleb128 0x1
 1846 00d1 50       		.byte	0x50
 1847 00d2 9F       		.byte	0x9f
 1848 00d3 00000000 		.4byte	0
 1849 00d7 00000000 		.4byte	0
 1850              	.LLST6:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 44


 1851 00db 00000000 		.4byte	.LVL41
 1852 00df 0C000000 		.4byte	.LVL42
 1853 00e3 0100     		.2byte	0x1
 1854 00e5 50       		.byte	0x50
 1855 00e6 0C000000 		.4byte	.LVL42
 1856 00ea C8000000 		.4byte	.LFE36
 1857 00ee 0400     		.2byte	0x4
 1858 00f0 F3       		.byte	0xf3
 1859 00f1 01       		.uleb128 0x1
 1860 00f2 50       		.byte	0x50
 1861 00f3 9F       		.byte	0x9f
 1862 00f4 00000000 		.4byte	0
 1863 00f8 00000000 		.4byte	0
 1864              	.LLST7:
 1865 00fc 00000000 		.4byte	.LVL41
 1866 0100 A0000000 		.4byte	.LVL55
 1867 0104 0200     		.2byte	0x2
 1868 0106 30       		.byte	0x30
 1869 0107 9F       		.byte	0x9f
 1870 0108 A0000000 		.4byte	.LVL55
 1871 010c A4000000 		.4byte	.LVL57
 1872 0110 0100     		.2byte	0x1
 1873 0112 54       		.byte	0x54
 1874 0113 A4000000 		.4byte	.LVL57
 1875 0117 A6000000 		.4byte	.LVL58
 1876 011b 0200     		.2byte	0x2
 1877 011d 30       		.byte	0x30
 1878 011e 9F       		.byte	0x9f
 1879 011f A6000000 		.4byte	.LVL58
 1880 0123 C6000000 		.4byte	.LVL66
 1881 0127 0100     		.2byte	0x1
 1882 0129 54       		.byte	0x54
 1883 012a C6000000 		.4byte	.LVL66
 1884 012e C8000000 		.4byte	.LFE36
 1885 0132 0100     		.2byte	0x1
 1886 0134 50       		.byte	0x50
 1887 0135 00000000 		.4byte	0
 1888 0139 00000000 		.4byte	0
 1889              	.LLST8:
 1890 013d 70000000 		.4byte	.LVL48
 1891 0141 72000000 		.4byte	.LVL49
 1892 0145 0200     		.2byte	0x2
 1893 0147 30       		.byte	0x30
 1894 0148 9F       		.byte	0x9f
 1895 0149 72000000 		.4byte	.LVL49
 1896 014d 84000000 		.4byte	.LVL52
 1897 0151 0100     		.2byte	0x1
 1898 0153 56       		.byte	0x56
 1899 0154 86000000 		.4byte	.LVL53
 1900 0158 C6000000 		.4byte	.LVL67
 1901 015c 0100     		.2byte	0x1
 1902 015e 56       		.byte	0x56
 1903 015f 00000000 		.4byte	0
 1904 0163 00000000 		.4byte	0
 1905              		.section	.debug_aranges,"",%progbits
 1906 0000 3C000000 		.4byte	0x3c
 1907 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 45


 1908 0006 00000000 		.4byte	.Ldebug_info0
 1909 000a 04       		.byte	0x4
 1910 000b 00       		.byte	0
 1911 000c 0000     		.2byte	0
 1912 000e 0000     		.2byte	0
 1913 0010 00000000 		.4byte	.LFB32
 1914 0014 44000000 		.4byte	.LFE32-.LFB32
 1915 0018 00000000 		.4byte	.LFB33
 1916 001c 48000000 		.4byte	.LFE33-.LFB33
 1917 0020 00000000 		.4byte	.LFB34
 1918 0024 64000000 		.4byte	.LFE34-.LFB34
 1919 0028 00000000 		.4byte	.LFB35
 1920 002c 7E000000 		.4byte	.LFE35-.LFB35
 1921 0030 00000000 		.4byte	.LFB36
 1922 0034 C8000000 		.4byte	.LFE36-.LFB36
 1923 0038 00000000 		.4byte	0
 1924 003c 00000000 		.4byte	0
 1925              		.section	.debug_ranges,"",%progbits
 1926              	.Ldebug_ranges0:
 1927 0000 00000000 		.4byte	.LFB32
 1928 0004 44000000 		.4byte	.LFE32
 1929 0008 00000000 		.4byte	.LFB33
 1930 000c 48000000 		.4byte	.LFE33
 1931 0010 00000000 		.4byte	.LFB34
 1932 0014 64000000 		.4byte	.LFE34
 1933 0018 00000000 		.4byte	.LFB35
 1934 001c 7E000000 		.4byte	.LFE35
 1935 0020 00000000 		.4byte	.LFB36
 1936 0024 C8000000 		.4byte	.LFE36
 1937 0028 00000000 		.4byte	0
 1938 002c 00000000 		.4byte	0
 1939              		.section	.debug_line,"",%progbits
 1940              	.Ldebug_line0:
 1941 0000 8B010000 		.section	.debug_str,"MS",%progbits,1
 1941      02007000 
 1941      00000201 
 1941      FB0E0D00 
 1941      01010101 
 1942              	.LASF22:
 1943 0000 5350494D 		.ascii	"SPIM_display_read\000"
 1943      5F646973 
 1943      706C6179 
 1943      5F726561 
 1943      6400
 1944              	.LASF32:
 1945 0012 4D4F4445 		.ascii	"MODE_LONG_V\000"
 1945      5F4C4F4E 
 1945      475F5600 
 1946              	.LASF30:
 1947 001e 4D4F4445 		.ascii	"MODE_SHORT_V\000"
 1947      5F53484F 
 1947      52545F56 
 1947      00
 1948              	.LASF17:
 1949 002b 64697370 		.ascii	"disp_ctrl1\000"
 1949      5F637472 
 1949      6C3100
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 46


 1950              	.LASF18:
 1951 0036 64697370 		.ascii	"disp_ctrl2\000"
 1951      5F637472 
 1951      6C3200
 1952              	.LASF34:
 1953 0041 44415441 		.ascii	"DATALINK_TABLE\000"
 1953      4C494E4B 
 1953      5F544142 
 1953      4C4500
 1954              	.LASF27:
 1955 0050 77726974 		.ascii	"writeBuffer\000"
 1955      65427566 
 1955      66657200 
 1956              	.LASF38:
 1957 005c 64756D6D 		.ascii	"dummyBuffer\000"
 1957      79427566 
 1957      66657200 
 1958              	.LASF26:
 1959 0068 636F6D6D 		.ascii	"command\000"
 1959      616E6400 
 1960              	.LASF40:
 1961 0070 5350494D 		.ascii	"SPIM_SpiUartPutArray\000"
 1961      5F537069 
 1961      55617274 
 1961      50757441 
 1961      72726179 
 1962              	.LASF12:
 1963 0085 646F7562 		.ascii	"double\000"
 1963      6C6500
 1964              	.LASF21:
 1965 008c 73746174 		.ascii	"status\000"
 1965      757300
 1966              	.LASF25:
 1967 0093 5350494D 		.ascii	"SPIM_SigmaDSP_write\000"
 1967      5F536967 
 1967      6D614453 
 1967      505F7772 
 1967      69746500 
 1968              	.LASF42:
 1969 00a7 5350494D 		.ascii	"SPIM_SpiUartClearRxBuffer\000"
 1969      5F537069 
 1969      55617274 
 1969      436C6561 
 1969      72527842 
 1970              	.LASF19:
 1971 00c1 6D547842 		.ascii	"mTxBuffer\000"
 1971      75666665 
 1971      7200
 1972              	.LASF11:
 1973 00cb 666C6F61 		.ascii	"float\000"
 1973      7400
 1974              	.LASF9:
 1975 00d1 75696E74 		.ascii	"uint8\000"
 1975      3800
 1976              	.LASF1:
 1977 00d7 756E7369 		.ascii	"unsigned char\000"
 1977      676E6564 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 47


 1977      20636861 
 1977      7200
 1978              	.LASF47:
 1979 00e5 7370695F 		.ascii	"spi_int.c\000"
 1979      696E742E 
 1979      6300
 1980              	.LASF44:
 1981 00ef 5350494D 		.ascii	"SPIM_SpiUartReadRxData\000"
 1981      5F537069 
 1981      55617274 
 1981      52656164 
 1981      52784461 
 1982              	.LASF3:
 1983 0106 73686F72 		.ascii	"short unsigned int\000"
 1983      7420756E 
 1983      7369676E 
 1983      65642069 
 1983      6E7400
 1984              	.LASF41:
 1985 0119 5350494D 		.ascii	"SPIM_SpiUartGetRxBufferSize\000"
 1985      5F537069 
 1985      55617274 
 1985      47657452 
 1985      78427566 
 1986              	.LASF50:
 1987 0135 6D656D73 		.ascii	"memset\000"
 1987      657400
 1988              	.LASF5:
 1989 013c 6C6F6E67 		.ascii	"long unsigned int\000"
 1989      20756E73 
 1989      69676E65 
 1989      6420696E 
 1989      7400
 1990              	.LASF35:
 1991 014e 44415441 		.ascii	"DATALINK_TABLE_COUNTER\000"
 1991      4C494E4B 
 1991      5F544142 
 1991      4C455F43 
 1991      4F554E54 
 1992              	.LASF45:
 1993 0165 43794465 		.ascii	"CyDelayUs\000"
 1993      6C617955 
 1993      7300
 1994              	.LASF10:
 1995 016f 75696E74 		.ascii	"uint32\000"
 1995      333200
 1996              	.LASF8:
 1997 0176 756E7369 		.ascii	"unsigned int\000"
 1997      676E6564 
 1997      20696E74 
 1997      00
 1998              	.LASF37:
 1999 0183 44495350 		.ascii	"DISPLAY_UPDATE\000"
 1999      4C41595F 
 1999      55504441 
 1999      544500
 2000              	.LASF16:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 48


 2001 0192 6D657373 		.ascii	"message_table\000"
 2001      6167655F 
 2001      7461626C 
 2001      6500
 2002              	.LASF7:
 2003 01a0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2003      206C6F6E 
 2003      6720756E 
 2003      7369676E 
 2003      65642069 
 2004              	.LASF28:
 2005 01b7 5350494D 		.ascii	"SPIM_SigmaDSP_read\000"
 2005      5F536967 
 2005      6D614453 
 2005      505F7265 
 2005      616400
 2006              	.LASF20:
 2007 01ca 746D7042 		.ascii	"tmpBuffer\000"
 2007      75666665 
 2007      7200
 2008              	.LASF23:
 2009 01d4 5350494D 		.ascii	"SPIM_SigmaDSP_init_SPI\000"
 2009      5F536967 
 2009      6D614453 
 2009      505F696E 
 2009      69745F53 
 2010              	.LASF14:
 2011 01eb 6C6F6E67 		.ascii	"long double\000"
 2011      20646F75 
 2011      626C6500 
 2012              	.LASF15:
 2013 01f7 73697A65 		.ascii	"sizetype\000"
 2013      74797065 
 2013      00
 2014              	.LASF31:
 2015 0200 5057525F 		.ascii	"PWR_OK_SHORT_V\000"
 2015      4F4B5F53 
 2015      484F5254 
 2015      5F5600
 2016              	.LASF6:
 2017 020f 6C6F6E67 		.ascii	"long long int\000"
 2017      206C6F6E 
 2017      6720696E 
 2017      7400
 2018              	.LASF13:
 2019 021d 63686172 		.ascii	"char\000"
 2019      00
 2020              	.LASF24:
 2021 0222 6C6F6361 		.ascii	"localBuffer\000"
 2021      6C427566 
 2021      66657200 
 2022              	.LASF2:
 2023 022e 73686F72 		.ascii	"short int\000"
 2023      7420696E 
 2023      7400
 2024              	.LASF39:
 2025 0238 5350494D 		.ascii	"SPIM_SpiSetActiveSlaveSelect\000"
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 49


 2025      5F537069 
 2025      53657441 
 2025      63746976 
 2025      65536C61 
 2026              	.LASF48:
 2027 0255 433A5C55 		.ascii	"C:\\Users\\Ala\\Desktop\\Cypress\\BeoM_main.cydsn\000"
 2027      73657273 
 2027      5C416C61 
 2027      5C446573 
 2027      6B746F70 
 2028              	.LASF4:
 2029 0282 6C6F6E67 		.ascii	"long int\000"
 2029      20696E74 
 2029      00
 2030              	.LASF29:
 2031 028b 72656164 		.ascii	"readBuffer\000"
 2031      42756666 
 2031      657200
 2032              	.LASF49:
 2033 0296 5350494D 		.ascii	"SPIM_display_write\000"
 2033      5F646973 
 2033      706C6179 
 2033      5F777269 
 2033      746500
 2034              	.LASF43:
 2035 02a9 5350494D 		.ascii	"SPIM_SpiUartClearTxBuffer\000"
 2035      5F537069 
 2035      55617274 
 2035      436C6561 
 2035      72547842 
 2036              	.LASF0:
 2037 02c3 7369676E 		.ascii	"signed char\000"
 2037      65642063 
 2037      68617200 
 2038              	.LASF33:
 2039 02cf 5057525F 		.ascii	"PWR_OK_LONG_V\000"
 2039      4F4B5F4C 
 2039      4F4E475F 
 2039      5600
 2040              	.LASF46:
 2041 02dd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2041      43313120 
 2041      352E342E 
 2041      31203230 
 2041      31363036 
 2042 0310 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2042      20726576 
 2042      6973696F 
 2042      6E203233 
 2042      37373135 
 2043 0343 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2043      66756E63 
 2043      74696F6E 
 2043      2D736563 
 2043      74696F6E 
 2044              	.LASF36:
 2045 036b 44415441 		.ascii	"DATALINK_TABLE_COUNTER_MAX\000"
ARM GAS  C:\Users\Ala\AppData\Local\Temp\ccFQvRcC.s 			page 50


 2045      4C494E4B 
 2045      5F544142 
 2045      4C455F43 
 2045      4F554E54 
 2046              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
