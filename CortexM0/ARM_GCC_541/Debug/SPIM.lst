ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPIM_Init,"ax",%progbits
  20              		.align	1
  21              		.global	SPIM_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	SPIM_Init, %function
  25              	SPIM_Init:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\SPIM.c"
   1:Generated_Source\PSoC4/SPIM.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/SPIM.c **** * \file SPIM.c
   3:Generated_Source\PSoC4/SPIM.c **** * \version 4.0
   4:Generated_Source\PSoC4/SPIM.c **** *
   5:Generated_Source\PSoC4/SPIM.c **** * \brief
   6:Generated_Source\PSoC4/SPIM.c **** *  This file provides the source code to the API for the SCB Component.
   7:Generated_Source\PSoC4/SPIM.c **** *
   8:Generated_Source\PSoC4/SPIM.c **** * Note:
   9:Generated_Source\PSoC4/SPIM.c **** *
  10:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************
  11:Generated_Source\PSoC4/SPIM.c **** * \copyright
  12:Generated_Source\PSoC4/SPIM.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/SPIM.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/SPIM.c **** 
  18:Generated_Source\PSoC4/SPIM.c **** #include "SPIM_PVT.h"
  19:Generated_Source\PSoC4/SPIM.c **** 
  20:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_MODE_I2C_INC)
  21:Generated_Source\PSoC4/SPIM.c ****     #include "SPIM_I2C_PVT.h"
  22:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_MODE_I2C_INC) */
  23:Generated_Source\PSoC4/SPIM.c **** 
  24:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_MODE_EZI2C_INC)
  25:Generated_Source\PSoC4/SPIM.c ****     #include "SPIM_EZI2C_PVT.h"
  26:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_MODE_EZI2C_INC) */
  27:Generated_Source\PSoC4/SPIM.c **** 
  28:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_MODE_SPI_INC || SPIM_SCB_MODE_UART_INC)
  29:Generated_Source\PSoC4/SPIM.c ****     #include "SPIM_SPI_UART_PVT.h"
  30:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_MODE_SPI_INC || SPIM_SCB_MODE_UART_INC) */
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 2


  31:Generated_Source\PSoC4/SPIM.c **** 
  32:Generated_Source\PSoC4/SPIM.c **** 
  33:Generated_Source\PSoC4/SPIM.c **** /***************************************
  34:Generated_Source\PSoC4/SPIM.c **** *    Run Time Configuration Vars
  35:Generated_Source\PSoC4/SPIM.c **** ***************************************/
  36:Generated_Source\PSoC4/SPIM.c **** 
  37:Generated_Source\PSoC4/SPIM.c **** /* Stores internal component configuration for Unconfigured mode */
  38:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_MODE_UNCONFIG_CONST_CFG)
  39:Generated_Source\PSoC4/SPIM.c ****     /* Common configuration variables */
  40:Generated_Source\PSoC4/SPIM.c ****     uint8 SPIM_scbMode = SPIM_SCB_MODE_UNCONFIG;
  41:Generated_Source\PSoC4/SPIM.c ****     uint8 SPIM_scbEnableWake;
  42:Generated_Source\PSoC4/SPIM.c ****     uint8 SPIM_scbEnableIntr;
  43:Generated_Source\PSoC4/SPIM.c **** 
  44:Generated_Source\PSoC4/SPIM.c ****     /* I2C configuration variables */
  45:Generated_Source\PSoC4/SPIM.c ****     uint8 SPIM_mode;
  46:Generated_Source\PSoC4/SPIM.c ****     uint8 SPIM_acceptAddr;
  47:Generated_Source\PSoC4/SPIM.c **** 
  48:Generated_Source\PSoC4/SPIM.c ****     /* SPI/UART configuration variables */
  49:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 * SPIM_rxBuffer;
  50:Generated_Source\PSoC4/SPIM.c ****     uint8  SPIM_rxDataBits;
  51:Generated_Source\PSoC4/SPIM.c ****     uint32 SPIM_rxBufferSize;
  52:Generated_Source\PSoC4/SPIM.c **** 
  53:Generated_Source\PSoC4/SPIM.c ****     volatile uint8 * SPIM_txBuffer;
  54:Generated_Source\PSoC4/SPIM.c ****     uint8  SPIM_txDataBits;
  55:Generated_Source\PSoC4/SPIM.c ****     uint32 SPIM_txBufferSize;
  56:Generated_Source\PSoC4/SPIM.c **** 
  57:Generated_Source\PSoC4/SPIM.c ****     /* EZI2C configuration variables */
  58:Generated_Source\PSoC4/SPIM.c ****     uint8 SPIM_numberOfAddr;
  59:Generated_Source\PSoC4/SPIM.c ****     uint8 SPIM_subAddrSize;
  60:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_MODE_UNCONFIG_CONST_CFG) */
  61:Generated_Source\PSoC4/SPIM.c **** 
  62:Generated_Source\PSoC4/SPIM.c **** 
  63:Generated_Source\PSoC4/SPIM.c **** /***************************************
  64:Generated_Source\PSoC4/SPIM.c **** *     Common SCB Vars
  65:Generated_Source\PSoC4/SPIM.c **** ***************************************/
  66:Generated_Source\PSoC4/SPIM.c **** /**
  67:Generated_Source\PSoC4/SPIM.c **** * \addtogroup group_general
  68:Generated_Source\PSoC4/SPIM.c **** * \{
  69:Generated_Source\PSoC4/SPIM.c **** */
  70:Generated_Source\PSoC4/SPIM.c **** 
  71:Generated_Source\PSoC4/SPIM.c **** /** SPIM_initVar indicates whether the SPIM 
  72:Generated_Source\PSoC4/SPIM.c **** *  component has been initialized. The variable is initialized to 0 
  73:Generated_Source\PSoC4/SPIM.c **** *  and set to 1 the first time SCB_Start() is called. This allows 
  74:Generated_Source\PSoC4/SPIM.c **** *  the component to restart without reinitialization after the first 
  75:Generated_Source\PSoC4/SPIM.c **** *  call to the SPIM_Start() routine.
  76:Generated_Source\PSoC4/SPIM.c **** *
  77:Generated_Source\PSoC4/SPIM.c **** *  If re-initialization of the component is required, then the 
  78:Generated_Source\PSoC4/SPIM.c **** *  SPIM_Init() function can be called before the 
  79:Generated_Source\PSoC4/SPIM.c **** *  SPIM_Start() or SPIM_Enable() function.
  80:Generated_Source\PSoC4/SPIM.c **** */
  81:Generated_Source\PSoC4/SPIM.c **** uint8 SPIM_initVar = 0u;
  82:Generated_Source\PSoC4/SPIM.c **** 
  83:Generated_Source\PSoC4/SPIM.c **** 
  84:Generated_Source\PSoC4/SPIM.c **** #if (! (SPIM_SCB_MODE_I2C_CONST_CFG || \
  85:Generated_Source\PSoC4/SPIM.c ****         SPIM_SCB_MODE_EZI2C_CONST_CFG))
  86:Generated_Source\PSoC4/SPIM.c ****     /** This global variable stores TX interrupt sources after 
  87:Generated_Source\PSoC4/SPIM.c ****     * SPIM_Stop() is called. Only these TX interrupt sources 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 3


  88:Generated_Source\PSoC4/SPIM.c ****     * will be restored on a subsequent SPIM_Enable() call.
  89:Generated_Source\PSoC4/SPIM.c ****     */
  90:Generated_Source\PSoC4/SPIM.c ****     uint16 SPIM_IntrTxMask = 0u;
  91:Generated_Source\PSoC4/SPIM.c **** #endif /* (! (SPIM_SCB_MODE_I2C_CONST_CFG || \
  92:Generated_Source\PSoC4/SPIM.c ****               SPIM_SCB_MODE_EZI2C_CONST_CFG)) */
  93:Generated_Source\PSoC4/SPIM.c **** /** \} globals */
  94:Generated_Source\PSoC4/SPIM.c **** 
  95:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_IRQ_INTERNAL)
  96:Generated_Source\PSoC4/SPIM.c **** #if !defined (CY_REMOVE_SPIM_CUSTOM_INTR_HANDLER)
  97:Generated_Source\PSoC4/SPIM.c ****     void (*SPIM_customIntrHandler)(void) = NULL;
  98:Generated_Source\PSoC4/SPIM.c **** #endif /* !defined (CY_REMOVE_SPIM_CUSTOM_INTR_HANDLER) */
  99:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_IRQ_INTERNAL) */
 100:Generated_Source\PSoC4/SPIM.c **** 
 101:Generated_Source\PSoC4/SPIM.c **** 
 102:Generated_Source\PSoC4/SPIM.c **** /***************************************
 103:Generated_Source\PSoC4/SPIM.c **** *    Private Function Prototypes
 104:Generated_Source\PSoC4/SPIM.c **** ***************************************/
 105:Generated_Source\PSoC4/SPIM.c **** 
 106:Generated_Source\PSoC4/SPIM.c **** static void SPIM_ScbEnableIntr(void);
 107:Generated_Source\PSoC4/SPIM.c **** static void SPIM_ScbModeStop(void);
 108:Generated_Source\PSoC4/SPIM.c **** static void SPIM_ScbModePostEnable(void);
 109:Generated_Source\PSoC4/SPIM.c **** 
 110:Generated_Source\PSoC4/SPIM.c **** 
 111:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 112:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Init
 113:Generated_Source\PSoC4/SPIM.c **** ****************************************************************************//**
 114:Generated_Source\PSoC4/SPIM.c **** *
 115:Generated_Source\PSoC4/SPIM.c **** *  Initializes the SPIM component to operate in one of the selected
 116:Generated_Source\PSoC4/SPIM.c **** *  configurations: I2C, SPI, UART or EZI2C.
 117:Generated_Source\PSoC4/SPIM.c **** *  When the configuration is set to "Unconfigured SCB", this function does
 118:Generated_Source\PSoC4/SPIM.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
 119:Generated_Source\PSoC4/SPIM.c **** *  SPIM_I2CInit, SPIM_SpiInit, 
 120:Generated_Source\PSoC4/SPIM.c **** *  SPIM_UartInit or SPIM_EzI2CInit.
 121:Generated_Source\PSoC4/SPIM.c **** *
 122:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 123:Generated_Source\PSoC4/SPIM.c **** void SPIM_Init(void)
 124:Generated_Source\PSoC4/SPIM.c **** {
  28              		.loc 1 124 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 125:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_MODE_UNCONFIG_CONST_CFG)
 126:Generated_Source\PSoC4/SPIM.c ****     if (SPIM_SCB_MODE_UNCONFIG_RUNTM_CFG)
 127:Generated_Source\PSoC4/SPIM.c ****     {
 128:Generated_Source\PSoC4/SPIM.c ****         SPIM_initVar = 0u;
 129:Generated_Source\PSoC4/SPIM.c ****     }
 130:Generated_Source\PSoC4/SPIM.c ****     else
 131:Generated_Source\PSoC4/SPIM.c ****     {
 132:Generated_Source\PSoC4/SPIM.c ****         /* Initialization was done before this function call */
 133:Generated_Source\PSoC4/SPIM.c ****     }
 134:Generated_Source\PSoC4/SPIM.c **** 
 135:Generated_Source\PSoC4/SPIM.c **** #elif (SPIM_SCB_MODE_I2C_CONST_CFG)
 136:Generated_Source\PSoC4/SPIM.c ****     SPIM_I2CInit();
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 4


 137:Generated_Source\PSoC4/SPIM.c **** 
 138:Generated_Source\PSoC4/SPIM.c **** #elif (SPIM_SCB_MODE_SPI_CONST_CFG)
 139:Generated_Source\PSoC4/SPIM.c ****     SPIM_SpiInit();
  36              		.loc 1 139 0
  37 0002 FFF7FEFF 		bl	SPIM_SpiInit
  38              	.LVL0:
 140:Generated_Source\PSoC4/SPIM.c **** 
 141:Generated_Source\PSoC4/SPIM.c **** #elif (SPIM_SCB_MODE_UART_CONST_CFG)
 142:Generated_Source\PSoC4/SPIM.c ****     SPIM_UartInit();
 143:Generated_Source\PSoC4/SPIM.c **** 
 144:Generated_Source\PSoC4/SPIM.c **** #elif (SPIM_SCB_MODE_EZI2C_CONST_CFG)
 145:Generated_Source\PSoC4/SPIM.c ****     SPIM_EzI2CInit();
 146:Generated_Source\PSoC4/SPIM.c **** 
 147:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_MODE_UNCONFIG_CONST_CFG) */
 148:Generated_Source\PSoC4/SPIM.c **** }
  39              		.loc 1 148 0
  40              		@ sp needed
  41 0006 10BD     		pop	{r4, pc}
  42              		.cfi_endproc
  43              	.LFE0:
  44              		.size	SPIM_Init, .-SPIM_Init
  45              		.section	.text.SPIM_Enable,"ax",%progbits
  46              		.align	1
  47              		.global	SPIM_Enable
  48              		.code	16
  49              		.thumb_func
  50              		.type	SPIM_Enable, %function
  51              	SPIM_Enable:
  52              	.LFB1:
 149:Generated_Source\PSoC4/SPIM.c **** 
 150:Generated_Source\PSoC4/SPIM.c **** 
 151:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 152:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Enable
 153:Generated_Source\PSoC4/SPIM.c **** ****************************************************************************//**
 154:Generated_Source\PSoC4/SPIM.c **** *
 155:Generated_Source\PSoC4/SPIM.c **** *  Enables SPIM component operation: activates the hardware and 
 156:Generated_Source\PSoC4/SPIM.c **** *  internal interrupt. It also restores TX interrupt sources disabled after the 
 157:Generated_Source\PSoC4/SPIM.c **** *  SPIM_Stop() function was called (note that level-triggered TX 
 158:Generated_Source\PSoC4/SPIM.c **** *  interrupt sources remain disabled to not cause code lock-up).
 159:Generated_Source\PSoC4/SPIM.c **** *  For I2C and EZI2C modes the interrupt is internal and mandatory for 
 160:Generated_Source\PSoC4/SPIM.c **** *  operation. For SPI and UART modes the interrupt can be configured as none, 
 161:Generated_Source\PSoC4/SPIM.c **** *  internal or external.
 162:Generated_Source\PSoC4/SPIM.c **** *  The SPIM configuration should be not changed when the component
 163:Generated_Source\PSoC4/SPIM.c **** *  is enabled. Any configuration changes should be made after disabling the 
 164:Generated_Source\PSoC4/SPIM.c **** *  component.
 165:Generated_Source\PSoC4/SPIM.c **** *  When configuration is set to “Unconfigured SPIM”, the component 
 166:Generated_Source\PSoC4/SPIM.c **** *  must first be initialized to operate in one of the following configurations: 
 167:Generated_Source\PSoC4/SPIM.c **** *  I2C, SPI, UART or EZ I2C, using the mode-specific initialization API. 
 168:Generated_Source\PSoC4/SPIM.c **** *  Otherwise this function does not enable the component.
 169:Generated_Source\PSoC4/SPIM.c **** *
 170:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 171:Generated_Source\PSoC4/SPIM.c **** void SPIM_Enable(void)
 172:Generated_Source\PSoC4/SPIM.c **** {
  53              		.loc 1 172 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 5


 173:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_MODE_UNCONFIG_CONST_CFG)
 174:Generated_Source\PSoC4/SPIM.c ****     /* Enable SCB block, only if it is already configured */
 175:Generated_Source\PSoC4/SPIM.c ****     if (!SPIM_SCB_MODE_UNCONFIG_RUNTM_CFG)
 176:Generated_Source\PSoC4/SPIM.c ****     {
 177:Generated_Source\PSoC4/SPIM.c ****         SPIM_CTRL_REG |= SPIM_CTRL_ENABLED;
 178:Generated_Source\PSoC4/SPIM.c **** 
 179:Generated_Source\PSoC4/SPIM.c ****         SPIM_ScbEnableIntr();
 180:Generated_Source\PSoC4/SPIM.c **** 
 181:Generated_Source\PSoC4/SPIM.c ****         /* Call PostEnable function specific to current operation mode */
 182:Generated_Source\PSoC4/SPIM.c ****         SPIM_ScbModePostEnable();
 183:Generated_Source\PSoC4/SPIM.c ****     }
 184:Generated_Source\PSoC4/SPIM.c **** #else
 185:Generated_Source\PSoC4/SPIM.c ****     SPIM_CTRL_REG |= SPIM_CTRL_ENABLED;
  57              		.loc 1 185 0
  58 0000 8021     		movs	r1, #128
  59 0002 064A     		ldr	r2, .L3
 172:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_MODE_UNCONFIG_CONST_CFG)
  60              		.loc 1 172 0
  61 0004 10B5     		push	{r4, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
  65              		.loc 1 185 0
  66 0006 1368     		ldr	r3, [r2]
  67 0008 0906     		lsls	r1, r1, #24
  68 000a 0B43     		orrs	r3, r1
  69 000c 1360     		str	r3, [r2]
  70              	.LBB12:
  71              	.LBB13:
 186:Generated_Source\PSoC4/SPIM.c **** 
 187:Generated_Source\PSoC4/SPIM.c ****     SPIM_ScbEnableIntr();
 188:Generated_Source\PSoC4/SPIM.c **** 
 189:Generated_Source\PSoC4/SPIM.c ****     /* Call PostEnable function specific to current operation mode */
 190:Generated_Source\PSoC4/SPIM.c ****     SPIM_ScbModePostEnable();
 191:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_MODE_UNCONFIG_CONST_CFG) */
 192:Generated_Source\PSoC4/SPIM.c **** }
 193:Generated_Source\PSoC4/SPIM.c **** 
 194:Generated_Source\PSoC4/SPIM.c **** 
 195:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Start
 197:Generated_Source\PSoC4/SPIM.c **** ****************************************************************************//**
 198:Generated_Source\PSoC4/SPIM.c **** *
 199:Generated_Source\PSoC4/SPIM.c **** *  Invokes SPIM_Init() and SPIM_Enable().
 200:Generated_Source\PSoC4/SPIM.c **** *  After this function call, the component is enabled and ready for operation.
 201:Generated_Source\PSoC4/SPIM.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 202:Generated_Source\PSoC4/SPIM.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 203:Generated_Source\PSoC4/SPIM.c **** *  or EZI2C. Otherwise this function does not enable the component.
 204:Generated_Source\PSoC4/SPIM.c **** *
 205:Generated_Source\PSoC4/SPIM.c **** * \globalvars
 206:Generated_Source\PSoC4/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified
 207:Generated_Source\PSoC4/SPIM.c **** *  on first function call.
 208:Generated_Source\PSoC4/SPIM.c **** *
 209:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/SPIM.c **** void SPIM_Start(void)
 211:Generated_Source\PSoC4/SPIM.c **** {
 212:Generated_Source\PSoC4/SPIM.c ****     if (0u == SPIM_initVar)
 213:Generated_Source\PSoC4/SPIM.c ****     {
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 6


 214:Generated_Source\PSoC4/SPIM.c ****         SPIM_Init();
 215:Generated_Source\PSoC4/SPIM.c ****         SPIM_initVar = 1u; /* Component was initialized */
 216:Generated_Source\PSoC4/SPIM.c ****     }
 217:Generated_Source\PSoC4/SPIM.c **** 
 218:Generated_Source\PSoC4/SPIM.c ****     SPIM_Enable();
 219:Generated_Source\PSoC4/SPIM.c **** }
 220:Generated_Source\PSoC4/SPIM.c **** 
 221:Generated_Source\PSoC4/SPIM.c **** 
 222:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 223:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_Stop
 224:Generated_Source\PSoC4/SPIM.c **** ****************************************************************************//**
 225:Generated_Source\PSoC4/SPIM.c **** *
 226:Generated_Source\PSoC4/SPIM.c **** *  Disables the SPIM component: disable the hardware and internal 
 227:Generated_Source\PSoC4/SPIM.c **** *  interrupt. It also disables all TX interrupt sources so as not to cause an 
 228:Generated_Source\PSoC4/SPIM.c **** *  unexpected interrupt trigger because after the component is enabled, the 
 229:Generated_Source\PSoC4/SPIM.c **** *  TX FIFO is empty.
 230:Generated_Source\PSoC4/SPIM.c **** *  Refer to the function SPIM_Enable() for the interrupt 
 231:Generated_Source\PSoC4/SPIM.c **** *  configuration details.
 232:Generated_Source\PSoC4/SPIM.c **** *  This function disables the SCB component without checking to see if 
 233:Generated_Source\PSoC4/SPIM.c **** *  communication is in progress. Before calling this function it may be 
 234:Generated_Source\PSoC4/SPIM.c **** *  necessary to check the status of communication to make sure communication 
 235:Generated_Source\PSoC4/SPIM.c **** *  is complete. If this is not done then communication could be stopped mid 
 236:Generated_Source\PSoC4/SPIM.c **** *  byte and corrupted data could result.
 237:Generated_Source\PSoC4/SPIM.c **** *
 238:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/SPIM.c **** void SPIM_Stop(void)
 240:Generated_Source\PSoC4/SPIM.c **** {
 241:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_IRQ_INTERNAL)
 242:Generated_Source\PSoC4/SPIM.c ****     SPIM_DisableInt();
 243:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_IRQ_INTERNAL) */
 244:Generated_Source\PSoC4/SPIM.c **** 
 245:Generated_Source\PSoC4/SPIM.c ****     /* Call Stop function specific to current operation mode */
 246:Generated_Source\PSoC4/SPIM.c ****     SPIM_ScbModeStop();
 247:Generated_Source\PSoC4/SPIM.c **** 
 248:Generated_Source\PSoC4/SPIM.c ****     /* Disable SCB IP */
 249:Generated_Source\PSoC4/SPIM.c ****     SPIM_CTRL_REG &= (uint32) ~SPIM_CTRL_ENABLED;
 250:Generated_Source\PSoC4/SPIM.c **** 
 251:Generated_Source\PSoC4/SPIM.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 252:Generated_Source\PSoC4/SPIM.c ****     * interrupt trigger after the component will be enabled because the 
 253:Generated_Source\PSoC4/SPIM.c ****     * TX FIFO is empty.
 254:Generated_Source\PSoC4/SPIM.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 255:Generated_Source\PSoC4/SPIM.c ****     * sources when it is disabled. This can cause a code lock-up in the
 256:Generated_Source\PSoC4/SPIM.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 257:Generated_Source\PSoC4/SPIM.c ****     * is disabled.
 258:Generated_Source\PSoC4/SPIM.c ****     */
 259:Generated_Source\PSoC4/SPIM.c ****     SPIM_SetTxInterruptMode(SPIM_NO_INTR_SOURCES);
 260:Generated_Source\PSoC4/SPIM.c **** 
 261:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_IRQ_INTERNAL)
 262:Generated_Source\PSoC4/SPIM.c ****     SPIM_ClearPendingInt();
 263:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_IRQ_INTERNAL) */
 264:Generated_Source\PSoC4/SPIM.c **** }
 265:Generated_Source\PSoC4/SPIM.c **** 
 266:Generated_Source\PSoC4/SPIM.c **** 
 267:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 268:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetRxFifoLevel
 269:Generated_Source\PSoC4/SPIM.c **** ****************************************************************************//**
 270:Generated_Source\PSoC4/SPIM.c **** *
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 7


 271:Generated_Source\PSoC4/SPIM.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 272:Generated_Source\PSoC4/SPIM.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 273:Generated_Source\PSoC4/SPIM.c **** *  interrupt request is generated.
 274:Generated_Source\PSoC4/SPIM.c **** *
 275:Generated_Source\PSoC4/SPIM.c **** *  \param level: Level in the RX FIFO to generate RX level interrupt.
 276:Generated_Source\PSoC4/SPIM.c **** *   The range of valid level values is between 0 and RX FIFO depth - 1.
 277:Generated_Source\PSoC4/SPIM.c **** *
 278:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetRxFifoLevel(uint32 level)
 280:Generated_Source\PSoC4/SPIM.c **** {
 281:Generated_Source\PSoC4/SPIM.c ****     uint32 rxFifoCtrl;
 282:Generated_Source\PSoC4/SPIM.c **** 
 283:Generated_Source\PSoC4/SPIM.c ****     rxFifoCtrl = SPIM_RX_FIFO_CTRL_REG;
 284:Generated_Source\PSoC4/SPIM.c **** 
 285:Generated_Source\PSoC4/SPIM.c ****     rxFifoCtrl &= ((uint32) ~SPIM_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 286:Generated_Source\PSoC4/SPIM.c ****     rxFifoCtrl |= ((uint32) (SPIM_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 287:Generated_Source\PSoC4/SPIM.c **** 
 288:Generated_Source\PSoC4/SPIM.c ****     SPIM_RX_FIFO_CTRL_REG = rxFifoCtrl;
 289:Generated_Source\PSoC4/SPIM.c **** }
 290:Generated_Source\PSoC4/SPIM.c **** 
 291:Generated_Source\PSoC4/SPIM.c **** 
 292:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 293:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_SetTxFifoLevel
 294:Generated_Source\PSoC4/SPIM.c **** ****************************************************************************//**
 295:Generated_Source\PSoC4/SPIM.c **** *
 296:Generated_Source\PSoC4/SPIM.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 297:Generated_Source\PSoC4/SPIM.c **** *  When the TX FIFO has less entries than the TX FIFO level an TX level
 298:Generated_Source\PSoC4/SPIM.c **** *  interrupt request is generated.
 299:Generated_Source\PSoC4/SPIM.c **** *
 300:Generated_Source\PSoC4/SPIM.c **** *  \param level: Level in the TX FIFO to generate TX level interrupt.
 301:Generated_Source\PSoC4/SPIM.c **** *   The range of valid level values is between 0 and TX FIFO depth - 1.
 302:Generated_Source\PSoC4/SPIM.c **** *
 303:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 304:Generated_Source\PSoC4/SPIM.c **** void SPIM_SetTxFifoLevel(uint32 level)
 305:Generated_Source\PSoC4/SPIM.c **** {
 306:Generated_Source\PSoC4/SPIM.c ****     uint32 txFifoCtrl;
 307:Generated_Source\PSoC4/SPIM.c **** 
 308:Generated_Source\PSoC4/SPIM.c ****     txFifoCtrl = SPIM_TX_FIFO_CTRL_REG;
 309:Generated_Source\PSoC4/SPIM.c **** 
 310:Generated_Source\PSoC4/SPIM.c ****     txFifoCtrl &= ((uint32) ~SPIM_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 311:Generated_Source\PSoC4/SPIM.c ****     txFifoCtrl |= ((uint32) (SPIM_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 312:Generated_Source\PSoC4/SPIM.c **** 
 313:Generated_Source\PSoC4/SPIM.c ****     SPIM_TX_FIFO_CTRL_REG = txFifoCtrl;
 314:Generated_Source\PSoC4/SPIM.c **** }
 315:Generated_Source\PSoC4/SPIM.c **** 
 316:Generated_Source\PSoC4/SPIM.c **** 
 317:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_IRQ_INTERNAL)
 318:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_SetCustomInterruptHandler
 320:Generated_Source\PSoC4/SPIM.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/SPIM.c ****     *
 322:Generated_Source\PSoC4/SPIM.c ****     *  Registers a function to be called by the internal interrupt handler.
 323:Generated_Source\PSoC4/SPIM.c ****     *  First the function that is registered is called, then the internal interrupt
 324:Generated_Source\PSoC4/SPIM.c ****     *  handler performs any operation such as software buffer management functions
 325:Generated_Source\PSoC4/SPIM.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
 326:Generated_Source\PSoC4/SPIM.c ****     *  the software buffer operations. Only one custom handler is supported, which
 327:Generated_Source\PSoC4/SPIM.c ****     *  is the function provided by the most recent call.
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 8


 328:Generated_Source\PSoC4/SPIM.c ****     *  At the initialization time no custom handler is registered.
 329:Generated_Source\PSoC4/SPIM.c ****     *
 330:Generated_Source\PSoC4/SPIM.c ****     *  \param func: Pointer to the function to register.
 331:Generated_Source\PSoC4/SPIM.c ****     *        The value NULL indicates to remove the current custom interrupt
 332:Generated_Source\PSoC4/SPIM.c ****     *        handler.
 333:Generated_Source\PSoC4/SPIM.c ****     *
 334:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 335:Generated_Source\PSoC4/SPIM.c ****     void SPIM_SetCustomInterruptHandler(void (*func)(void))
 336:Generated_Source\PSoC4/SPIM.c ****     {
 337:Generated_Source\PSoC4/SPIM.c ****     #if !defined (CY_REMOVE_SPIM_CUSTOM_INTR_HANDLER)
 338:Generated_Source\PSoC4/SPIM.c ****         SPIM_customIntrHandler = func; /* Register interrupt handler */
 339:Generated_Source\PSoC4/SPIM.c ****     #else
 340:Generated_Source\PSoC4/SPIM.c ****         if (NULL != func)
 341:Generated_Source\PSoC4/SPIM.c ****         {
 342:Generated_Source\PSoC4/SPIM.c ****             /* Suppress compiler warning */
 343:Generated_Source\PSoC4/SPIM.c ****         }
 344:Generated_Source\PSoC4/SPIM.c ****     #endif /* !defined (CY_REMOVE_SPIM_CUSTOM_INTR_HANDLER) */
 345:Generated_Source\PSoC4/SPIM.c ****     }
 346:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_IRQ_INTERNAL) */
 347:Generated_Source\PSoC4/SPIM.c **** 
 348:Generated_Source\PSoC4/SPIM.c **** 
 349:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 350:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ScbModeEnableIntr
 351:Generated_Source\PSoC4/SPIM.c **** ****************************************************************************//**
 352:Generated_Source\PSoC4/SPIM.c **** *
 353:Generated_Source\PSoC4/SPIM.c **** *  Enables an interrupt for a specific mode.
 354:Generated_Source\PSoC4/SPIM.c **** *
 355:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/SPIM.c **** static void SPIM_ScbEnableIntr(void)
 357:Generated_Source\PSoC4/SPIM.c **** {
 358:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_IRQ_INTERNAL)
 359:Generated_Source\PSoC4/SPIM.c ****     /* Enable interrupt in NVIC */
 360:Generated_Source\PSoC4/SPIM.c ****     #if (SPIM_SCB_MODE_UNCONFIG_CONST_CFG)
 361:Generated_Source\PSoC4/SPIM.c ****         if (0u != SPIM_scbEnableIntr)
 362:Generated_Source\PSoC4/SPIM.c ****         {
 363:Generated_Source\PSoC4/SPIM.c ****             SPIM_EnableInt();
 364:Generated_Source\PSoC4/SPIM.c ****         }
 365:Generated_Source\PSoC4/SPIM.c **** 
 366:Generated_Source\PSoC4/SPIM.c ****     #else
 367:Generated_Source\PSoC4/SPIM.c ****         SPIM_EnableInt();
  72              		.loc 1 367 0
  73 000e 0B20     		movs	r0, #11
  74 0010 FFF7FEFF 		bl	CyIntEnable
  75              	.LVL1:
  76              	.LBE13:
  77              	.LBE12:
 192:Generated_Source\PSoC4/SPIM.c **** 
  78              		.loc 1 192 0
  79              		@ sp needed
  80              	.LBB14:
  81              	.LBB15:
 368:Generated_Source\PSoC4/SPIM.c **** 
 369:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_SCB_MODE_UNCONFIG_CONST_CFG) */
 370:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_IRQ_INTERNAL) */
 371:Generated_Source\PSoC4/SPIM.c **** }
 372:Generated_Source\PSoC4/SPIM.c **** 
 373:Generated_Source\PSoC4/SPIM.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 9


 374:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 375:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ScbModePostEnable
 376:Generated_Source\PSoC4/SPIM.c **** ****************************************************************************//**
 377:Generated_Source\PSoC4/SPIM.c **** *
 378:Generated_Source\PSoC4/SPIM.c **** *  Calls the PostEnable function for a specific operation mode.
 379:Generated_Source\PSoC4/SPIM.c **** *
 380:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 381:Generated_Source\PSoC4/SPIM.c **** static void SPIM_ScbModePostEnable(void)
 382:Generated_Source\PSoC4/SPIM.c **** {
 383:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_MODE_UNCONFIG_CONST_CFG)
 384:Generated_Source\PSoC4/SPIM.c **** #if (!SPIM_CY_SCBIP_V1)
 385:Generated_Source\PSoC4/SPIM.c ****     if (SPIM_SCB_MODE_SPI_RUNTM_CFG)
 386:Generated_Source\PSoC4/SPIM.c ****     {
 387:Generated_Source\PSoC4/SPIM.c ****         SPIM_SpiPostEnable();
 388:Generated_Source\PSoC4/SPIM.c ****     }
 389:Generated_Source\PSoC4/SPIM.c ****     else if (SPIM_SCB_MODE_UART_RUNTM_CFG)
 390:Generated_Source\PSoC4/SPIM.c ****     {
 391:Generated_Source\PSoC4/SPIM.c ****         SPIM_UartPostEnable();
 392:Generated_Source\PSoC4/SPIM.c ****     }
 393:Generated_Source\PSoC4/SPIM.c ****     else
 394:Generated_Source\PSoC4/SPIM.c ****     {
 395:Generated_Source\PSoC4/SPIM.c ****         /* Unknown mode: do nothing */
 396:Generated_Source\PSoC4/SPIM.c ****     }
 397:Generated_Source\PSoC4/SPIM.c **** #endif /* (!SPIM_CY_SCBIP_V1) */
 398:Generated_Source\PSoC4/SPIM.c **** 
 399:Generated_Source\PSoC4/SPIM.c **** #elif (SPIM_SCB_MODE_SPI_CONST_CFG)
 400:Generated_Source\PSoC4/SPIM.c ****     SPIM_SpiPostEnable();
  82              		.loc 1 400 0
  83 0014 FFF7FEFF 		bl	SPIM_SpiPostEnable
  84              	.LVL2:
  85              	.LBE15:
  86              	.LBE14:
 192:Generated_Source\PSoC4/SPIM.c **** 
  87              		.loc 1 192 0
  88 0018 10BD     		pop	{r4, pc}
  89              	.L4:
  90 001a C046     		.align	2
  91              	.L3:
  92 001c 00000740 		.word	1074200576
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	SPIM_Enable, .-SPIM_Enable
  96              		.section	.text.SPIM_Start,"ax",%progbits
  97              		.align	1
  98              		.global	SPIM_Start
  99              		.code	16
 100              		.thumb_func
 101              		.type	SPIM_Start, %function
 102              	SPIM_Start:
 103              	.LFB2:
 211:Generated_Source\PSoC4/SPIM.c ****     if (0u == SPIM_initVar)
 104              		.loc 1 211 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 10B5     		push	{r4, lr}
 109              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 10


 110              		.cfi_offset 4, -8
 111              		.cfi_offset 14, -4
 212:Generated_Source\PSoC4/SPIM.c ****     {
 112              		.loc 1 212 0
 113 0002 054C     		ldr	r4, .L8
 114 0004 2378     		ldrb	r3, [r4]
 115 0006 002B     		cmp	r3, #0
 116 0008 03D1     		bne	.L6
 117              	.LBB16:
 118              	.LBB17:
 139:Generated_Source\PSoC4/SPIM.c **** 
 119              		.loc 1 139 0
 120 000a FFF7FEFF 		bl	SPIM_SpiInit
 121              	.LVL3:
 122              	.LBE17:
 123              	.LBE16:
 215:Generated_Source\PSoC4/SPIM.c ****     }
 124              		.loc 1 215 0
 125 000e 0123     		movs	r3, #1
 126 0010 2370     		strb	r3, [r4]
 127              	.L6:
 218:Generated_Source\PSoC4/SPIM.c **** }
 128              		.loc 1 218 0
 129 0012 FFF7FEFF 		bl	SPIM_Enable
 130              	.LVL4:
 219:Generated_Source\PSoC4/SPIM.c **** 
 131              		.loc 1 219 0
 132              		@ sp needed
 133 0016 10BD     		pop	{r4, pc}
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 0018 00000000 		.word	.LANCHOR0
 138              		.cfi_endproc
 139              	.LFE2:
 140              		.size	SPIM_Start, .-SPIM_Start
 141              		.section	.text.SPIM_Stop,"ax",%progbits
 142              		.align	1
 143              		.global	SPIM_Stop
 144              		.code	16
 145              		.thumb_func
 146              		.type	SPIM_Stop, %function
 147              	SPIM_Stop:
 148              	.LFB3:
 240:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_IRQ_INTERNAL)
 149              		.loc 1 240 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153 0000 10B5     		push	{r4, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 242:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_IRQ_INTERNAL) */
 157              		.loc 1 242 0
 158 0002 0B20     		movs	r0, #11
 159 0004 FFF7FEFF 		bl	CyIntDisable
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 11


 160              	.LVL5:
 161              	.LBB18:
 162              	.LBB19:
 401:Generated_Source\PSoC4/SPIM.c **** 
 402:Generated_Source\PSoC4/SPIM.c **** #elif (SPIM_SCB_MODE_UART_CONST_CFG)
 403:Generated_Source\PSoC4/SPIM.c ****     SPIM_UartPostEnable();
 404:Generated_Source\PSoC4/SPIM.c **** 
 405:Generated_Source\PSoC4/SPIM.c **** #else
 406:Generated_Source\PSoC4/SPIM.c ****     /* Unknown mode: do nothing */
 407:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_MODE_UNCONFIG_CONST_CFG) */
 408:Generated_Source\PSoC4/SPIM.c **** }
 409:Generated_Source\PSoC4/SPIM.c **** 
 410:Generated_Source\PSoC4/SPIM.c **** 
 411:Generated_Source\PSoC4/SPIM.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/SPIM.c **** * Function Name: SPIM_ScbModeStop
 413:Generated_Source\PSoC4/SPIM.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/SPIM.c **** *
 415:Generated_Source\PSoC4/SPIM.c **** *  Calls the Stop function for a specific operation mode.
 416:Generated_Source\PSoC4/SPIM.c **** *
 417:Generated_Source\PSoC4/SPIM.c **** *******************************************************************************/
 418:Generated_Source\PSoC4/SPIM.c **** static void SPIM_ScbModeStop(void)
 419:Generated_Source\PSoC4/SPIM.c **** {
 420:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_MODE_UNCONFIG_CONST_CFG)
 421:Generated_Source\PSoC4/SPIM.c ****     if (SPIM_SCB_MODE_I2C_RUNTM_CFG)
 422:Generated_Source\PSoC4/SPIM.c ****     {
 423:Generated_Source\PSoC4/SPIM.c ****         SPIM_I2CStop();
 424:Generated_Source\PSoC4/SPIM.c ****     }
 425:Generated_Source\PSoC4/SPIM.c ****     else if (SPIM_SCB_MODE_EZI2C_RUNTM_CFG)
 426:Generated_Source\PSoC4/SPIM.c ****     {
 427:Generated_Source\PSoC4/SPIM.c ****         SPIM_EzI2CStop();
 428:Generated_Source\PSoC4/SPIM.c ****     }
 429:Generated_Source\PSoC4/SPIM.c **** #if (!SPIM_CY_SCBIP_V1)
 430:Generated_Source\PSoC4/SPIM.c ****     else if (SPIM_SCB_MODE_SPI_RUNTM_CFG)
 431:Generated_Source\PSoC4/SPIM.c ****     {
 432:Generated_Source\PSoC4/SPIM.c ****         SPIM_SpiStop();
 433:Generated_Source\PSoC4/SPIM.c ****     }
 434:Generated_Source\PSoC4/SPIM.c ****     else if (SPIM_SCB_MODE_UART_RUNTM_CFG)
 435:Generated_Source\PSoC4/SPIM.c ****     {
 436:Generated_Source\PSoC4/SPIM.c ****         SPIM_UartStop();
 437:Generated_Source\PSoC4/SPIM.c ****     }
 438:Generated_Source\PSoC4/SPIM.c **** #endif /* (!SPIM_CY_SCBIP_V1) */
 439:Generated_Source\PSoC4/SPIM.c ****     else
 440:Generated_Source\PSoC4/SPIM.c ****     {
 441:Generated_Source\PSoC4/SPIM.c ****         /* Unknown mode: do nothing */
 442:Generated_Source\PSoC4/SPIM.c ****     }
 443:Generated_Source\PSoC4/SPIM.c **** #elif (SPIM_SCB_MODE_I2C_CONST_CFG)
 444:Generated_Source\PSoC4/SPIM.c ****     SPIM_I2CStop();
 445:Generated_Source\PSoC4/SPIM.c **** 
 446:Generated_Source\PSoC4/SPIM.c **** #elif (SPIM_SCB_MODE_EZI2C_CONST_CFG)
 447:Generated_Source\PSoC4/SPIM.c ****     SPIM_EzI2CStop();
 448:Generated_Source\PSoC4/SPIM.c **** 
 449:Generated_Source\PSoC4/SPIM.c **** #elif (SPIM_SCB_MODE_SPI_CONST_CFG)
 450:Generated_Source\PSoC4/SPIM.c ****     SPIM_SpiStop();
 163              		.loc 1 450 0
 164 0008 FFF7FEFF 		bl	SPIM_SpiStop
 165              	.LVL6:
 166              	.LBE19:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 12


 167              	.LBE18:
 249:Generated_Source\PSoC4/SPIM.c **** 
 168              		.loc 1 249 0
 169 000c 054A     		ldr	r2, .L11
 262:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_IRQ_INTERNAL) */
 170              		.loc 1 262 0
 171 000e 0B20     		movs	r0, #11
 249:Generated_Source\PSoC4/SPIM.c **** 
 172              		.loc 1 249 0
 173 0010 1368     		ldr	r3, [r2]
 264:Generated_Source\PSoC4/SPIM.c **** 
 174              		.loc 1 264 0
 175              		@ sp needed
 249:Generated_Source\PSoC4/SPIM.c **** 
 176              		.loc 1 249 0
 177 0012 5B00     		lsls	r3, r3, #1
 178 0014 5B08     		lsrs	r3, r3, #1
 179 0016 1360     		str	r3, [r2]
 259:Generated_Source\PSoC4/SPIM.c **** 
 180              		.loc 1 259 0
 181 0018 0022     		movs	r2, #0
 182 001a 034B     		ldr	r3, .L11+4
 183 001c 1A60     		str	r2, [r3]
 262:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_IRQ_INTERNAL) */
 184              		.loc 1 262 0
 185 001e FFF7FEFF 		bl	CyIntClearPending
 186              	.LVL7:
 264:Generated_Source\PSoC4/SPIM.c **** 
 187              		.loc 1 264 0
 188 0022 10BD     		pop	{r4, pc}
 189              	.L12:
 190              		.align	2
 191              	.L11:
 192 0024 00000740 		.word	1074200576
 193 0028 880F0740 		.word	1074204552
 194              		.cfi_endproc
 195              	.LFE3:
 196              		.size	SPIM_Stop, .-SPIM_Stop
 197              		.section	.text.SPIM_SetRxFifoLevel,"ax",%progbits
 198              		.align	1
 199              		.global	SPIM_SetRxFifoLevel
 200              		.code	16
 201              		.thumb_func
 202              		.type	SPIM_SetRxFifoLevel, %function
 203              	SPIM_SetRxFifoLevel:
 204              	.LFB4:
 280:Generated_Source\PSoC4/SPIM.c ****     uint32 rxFifoCtrl;
 205              		.loc 1 280 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              	.LVL8:
 285:Generated_Source\PSoC4/SPIM.c ****     rxFifoCtrl |= ((uint32) (SPIM_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 211              		.loc 1 285 0
 212 0000 0722     		movs	r2, #7
 283:Generated_Source\PSoC4/SPIM.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 13


 213              		.loc 1 283 0
 214 0002 0349     		ldr	r1, .L14
 286:Generated_Source\PSoC4/SPIM.c **** 
 215              		.loc 1 286 0
 216 0004 1040     		ands	r0, r2
 217              	.LVL9:
 283:Generated_Source\PSoC4/SPIM.c **** 
 218              		.loc 1 283 0
 219 0006 0B68     		ldr	r3, [r1]
 220              	.LVL10:
 289:Generated_Source\PSoC4/SPIM.c **** 
 221              		.loc 1 289 0
 222              		@ sp needed
 285:Generated_Source\PSoC4/SPIM.c ****     rxFifoCtrl |= ((uint32) (SPIM_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 223              		.loc 1 285 0
 224 0008 9343     		bics	r3, r2
 225              	.LVL11:
 286:Generated_Source\PSoC4/SPIM.c **** 
 226              		.loc 1 286 0
 227 000a 1843     		orrs	r0, r3
 228              	.LVL12:
 288:Generated_Source\PSoC4/SPIM.c **** }
 229              		.loc 1 288 0
 230 000c 0860     		str	r0, [r1]
 289:Generated_Source\PSoC4/SPIM.c **** 
 231              		.loc 1 289 0
 232 000e 7047     		bx	lr
 233              	.L15:
 234              		.align	2
 235              	.L14:
 236 0010 04030740 		.word	1074201348
 237              		.cfi_endproc
 238              	.LFE4:
 239              		.size	SPIM_SetRxFifoLevel, .-SPIM_SetRxFifoLevel
 240              		.section	.text.SPIM_SetTxFifoLevel,"ax",%progbits
 241              		.align	1
 242              		.global	SPIM_SetTxFifoLevel
 243              		.code	16
 244              		.thumb_func
 245              		.type	SPIM_SetTxFifoLevel, %function
 246              	SPIM_SetTxFifoLevel:
 247              	.LFB5:
 305:Generated_Source\PSoC4/SPIM.c ****     uint32 txFifoCtrl;
 248              		.loc 1 305 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253              	.LVL13:
 310:Generated_Source\PSoC4/SPIM.c ****     txFifoCtrl |= ((uint32) (SPIM_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 254              		.loc 1 310 0
 255 0000 0722     		movs	r2, #7
 308:Generated_Source\PSoC4/SPIM.c **** 
 256              		.loc 1 308 0
 257 0002 0349     		ldr	r1, .L17
 311:Generated_Source\PSoC4/SPIM.c **** 
 258              		.loc 1 311 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 14


 259 0004 1040     		ands	r0, r2
 260              	.LVL14:
 308:Generated_Source\PSoC4/SPIM.c **** 
 261              		.loc 1 308 0
 262 0006 0B68     		ldr	r3, [r1]
 263              	.LVL15:
 314:Generated_Source\PSoC4/SPIM.c **** 
 264              		.loc 1 314 0
 265              		@ sp needed
 310:Generated_Source\PSoC4/SPIM.c ****     txFifoCtrl |= ((uint32) (SPIM_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 266              		.loc 1 310 0
 267 0008 9343     		bics	r3, r2
 268              	.LVL16:
 311:Generated_Source\PSoC4/SPIM.c **** 
 269              		.loc 1 311 0
 270 000a 1843     		orrs	r0, r3
 271              	.LVL17:
 313:Generated_Source\PSoC4/SPIM.c **** }
 272              		.loc 1 313 0
 273 000c 0860     		str	r0, [r1]
 314:Generated_Source\PSoC4/SPIM.c **** 
 274              		.loc 1 314 0
 275 000e 7047     		bx	lr
 276              	.L18:
 277              		.align	2
 278              	.L17:
 279 0010 04020740 		.word	1074201092
 280              		.cfi_endproc
 281              	.LFE5:
 282              		.size	SPIM_SetTxFifoLevel, .-SPIM_SetTxFifoLevel
 283              		.section	.text.SPIM_SetCustomInterruptHandler,"ax",%progbits
 284              		.align	1
 285              		.global	SPIM_SetCustomInterruptHandler
 286              		.code	16
 287              		.thumb_func
 288              		.type	SPIM_SetCustomInterruptHandler, %function
 289              	SPIM_SetCustomInterruptHandler:
 290              	.LFB6:
 336:Generated_Source\PSoC4/SPIM.c ****     #if !defined (CY_REMOVE_SPIM_CUSTOM_INTR_HANDLER)
 291              		.loc 1 336 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296              	.LVL18:
 338:Generated_Source\PSoC4/SPIM.c ****     #else
 297              		.loc 1 338 0
 298 0000 014B     		ldr	r3, .L20
 345:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_IRQ_INTERNAL) */
 299              		.loc 1 345 0
 300              		@ sp needed
 338:Generated_Source\PSoC4/SPIM.c ****     #else
 301              		.loc 1 338 0
 302 0002 5860     		str	r0, [r3, #4]
 345:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_IRQ_INTERNAL) */
 303              		.loc 1 345 0
 304 0004 7047     		bx	lr
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 15


 305              	.L21:
 306 0006 C046     		.align	2
 307              	.L20:
 308 0008 00000000 		.word	.LANCHOR0
 309              		.cfi_endproc
 310              	.LFE6:
 311              		.size	SPIM_SetCustomInterruptHandler, .-SPIM_SetCustomInterruptHandler
 312              		.section	.text.SPIM_I2CSlaveNackGeneration,"ax",%progbits
 313              		.align	1
 314              		.global	SPIM_I2CSlaveNackGeneration
 315              		.code	16
 316              		.thumb_func
 317              		.type	SPIM_I2CSlaveNackGeneration, %function
 318              	SPIM_I2CSlaveNackGeneration:
 319              	.LFB10:
 451:Generated_Source\PSoC4/SPIM.c **** 
 452:Generated_Source\PSoC4/SPIM.c **** #elif (SPIM_SCB_MODE_UART_CONST_CFG)
 453:Generated_Source\PSoC4/SPIM.c ****     SPIM_UartStop();
 454:Generated_Source\PSoC4/SPIM.c **** 
 455:Generated_Source\PSoC4/SPIM.c **** #else
 456:Generated_Source\PSoC4/SPIM.c ****     /* Unknown mode: do nothing */
 457:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_MODE_UNCONFIG_CONST_CFG) */
 458:Generated_Source\PSoC4/SPIM.c **** }
 459:Generated_Source\PSoC4/SPIM.c **** 
 460:Generated_Source\PSoC4/SPIM.c **** 
 461:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_SCB_MODE_UNCONFIG_CONST_CFG)
 462:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 463:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_SetPins
 464:Generated_Source\PSoC4/SPIM.c ****     ****************************************************************************//**
 465:Generated_Source\PSoC4/SPIM.c ****     *
 466:Generated_Source\PSoC4/SPIM.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 467:Generated_Source\PSoC4/SPIM.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 468:Generated_Source\PSoC4/SPIM.c ****     *  initialization function calls it.
 469:Generated_Source\PSoC4/SPIM.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 470:Generated_Source\PSoC4/SPIM.c ****     *  is selected in design time.
 471:Generated_Source\PSoC4/SPIM.c ****     *
 472:Generated_Source\PSoC4/SPIM.c ****     *  \param mode:      Mode of SCB operation.
 473:Generated_Source\PSoC4/SPIM.c ****     *  \param subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 474:Generated_Source\PSoC4/SPIM.c ****     *             modes.
 475:Generated_Source\PSoC4/SPIM.c ****     *  \param uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 476:Generated_Source\PSoC4/SPIM.c ****     *
 477:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 478:Generated_Source\PSoC4/SPIM.c ****     void SPIM_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 479:Generated_Source\PSoC4/SPIM.c ****     {
 480:Generated_Source\PSoC4/SPIM.c ****         uint32 pinsDm[SPIM_SCB_PINS_NUMBER];
 481:Generated_Source\PSoC4/SPIM.c ****         uint32 i;
 482:Generated_Source\PSoC4/SPIM.c ****         
 483:Generated_Source\PSoC4/SPIM.c ****     #if (!SPIM_CY_SCBIP_V1)
 484:Generated_Source\PSoC4/SPIM.c ****         uint32 pinsInBuf = 0u;
 485:Generated_Source\PSoC4/SPIM.c ****     #endif /* (!SPIM_CY_SCBIP_V1) */
 486:Generated_Source\PSoC4/SPIM.c ****         
 487:Generated_Source\PSoC4/SPIM.c ****         uint32 hsiomSel[SPIM_SCB_PINS_NUMBER] = 
 488:Generated_Source\PSoC4/SPIM.c ****         {
 489:Generated_Source\PSoC4/SPIM.c ****             SPIM_RX_SCL_MOSI_HSIOM_SEL_GPIO,
 490:Generated_Source\PSoC4/SPIM.c ****             SPIM_TX_SDA_MISO_HSIOM_SEL_GPIO,
 491:Generated_Source\PSoC4/SPIM.c ****             0u,
 492:Generated_Source\PSoC4/SPIM.c ****             0u,
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 16


 493:Generated_Source\PSoC4/SPIM.c ****             0u,
 494:Generated_Source\PSoC4/SPIM.c ****             0u,
 495:Generated_Source\PSoC4/SPIM.c ****             0u,
 496:Generated_Source\PSoC4/SPIM.c ****         };
 497:Generated_Source\PSoC4/SPIM.c **** 
 498:Generated_Source\PSoC4/SPIM.c ****     #if (SPIM_CY_SCBIP_V1)
 499:Generated_Source\PSoC4/SPIM.c ****         /* Supress compiler warning. */
 500:Generated_Source\PSoC4/SPIM.c ****         if ((0u == subMode) || (0u == uartEnableMask))
 501:Generated_Source\PSoC4/SPIM.c ****         {
 502:Generated_Source\PSoC4/SPIM.c ****         }
 503:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_CY_SCBIP_V1) */
 504:Generated_Source\PSoC4/SPIM.c **** 
 505:Generated_Source\PSoC4/SPIM.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 506:Generated_Source\PSoC4/SPIM.c ****         for (i = 0u; i < SPIM_SCB_PINS_NUMBER; i++)
 507:Generated_Source\PSoC4/SPIM.c ****         {
 508:Generated_Source\PSoC4/SPIM.c ****             pinsDm[i] = SPIM_PIN_DM_ALG_HIZ;
 509:Generated_Source\PSoC4/SPIM.c ****         }
 510:Generated_Source\PSoC4/SPIM.c **** 
 511:Generated_Source\PSoC4/SPIM.c ****         if ((SPIM_SCB_MODE_I2C   == mode) ||
 512:Generated_Source\PSoC4/SPIM.c ****             (SPIM_SCB_MODE_EZI2C == mode))
 513:Generated_Source\PSoC4/SPIM.c ****         {
 514:Generated_Source\PSoC4/SPIM.c ****         #if (SPIM_RX_SCL_MOSI_PIN)
 515:Generated_Source\PSoC4/SPIM.c ****             hsiomSel[SPIM_RX_SCL_MOSI_PIN_INDEX] = SPIM_RX_SCL_MOSI_HSIOM_SEL_I2C;
 516:Generated_Source\PSoC4/SPIM.c ****             pinsDm  [SPIM_RX_SCL_MOSI_PIN_INDEX] = SPIM_PIN_DM_OD_LO;
 517:Generated_Source\PSoC4/SPIM.c ****         #elif (SPIM_RX_WAKE_SCL_MOSI_PIN)
 518:Generated_Source\PSoC4/SPIM.c ****             hsiomSel[SPIM_RX_WAKE_SCL_MOSI_PIN_INDEX] = SPIM_RX_WAKE_SCL_MOSI_HSIOM_SEL_I2C;
 519:Generated_Source\PSoC4/SPIM.c ****             pinsDm  [SPIM_RX_WAKE_SCL_MOSI_PIN_INDEX] = SPIM_PIN_DM_OD_LO;
 520:Generated_Source\PSoC4/SPIM.c ****         #else
 521:Generated_Source\PSoC4/SPIM.c ****         #endif /* (SPIM_RX_SCL_MOSI_PIN) */
 522:Generated_Source\PSoC4/SPIM.c ****         
 523:Generated_Source\PSoC4/SPIM.c ****         #if (SPIM_TX_SDA_MISO_PIN)
 524:Generated_Source\PSoC4/SPIM.c ****             hsiomSel[SPIM_TX_SDA_MISO_PIN_INDEX] = SPIM_TX_SDA_MISO_HSIOM_SEL_I2C;
 525:Generated_Source\PSoC4/SPIM.c ****             pinsDm  [SPIM_TX_SDA_MISO_PIN_INDEX] = SPIM_PIN_DM_OD_LO;
 526:Generated_Source\PSoC4/SPIM.c ****         #endif /* (SPIM_TX_SDA_MISO_PIN) */
 527:Generated_Source\PSoC4/SPIM.c ****         }
 528:Generated_Source\PSoC4/SPIM.c ****     #if (!SPIM_CY_SCBIP_V1)
 529:Generated_Source\PSoC4/SPIM.c ****         else if (SPIM_SCB_MODE_SPI == mode)
 530:Generated_Source\PSoC4/SPIM.c ****         {
 531:Generated_Source\PSoC4/SPIM.c ****         #if (SPIM_RX_SCL_MOSI_PIN)
 532:Generated_Source\PSoC4/SPIM.c ****             hsiomSel[SPIM_RX_SCL_MOSI_PIN_INDEX] = SPIM_RX_SCL_MOSI_HSIOM_SEL_SPI;
 533:Generated_Source\PSoC4/SPIM.c ****         #elif (SPIM_RX_WAKE_SCL_MOSI_PIN)
 534:Generated_Source\PSoC4/SPIM.c ****             hsiomSel[SPIM_RX_WAKE_SCL_MOSI_PIN_INDEX] = SPIM_RX_WAKE_SCL_MOSI_HSIOM_SEL_SPI;
 535:Generated_Source\PSoC4/SPIM.c ****         #else
 536:Generated_Source\PSoC4/SPIM.c ****         #endif /* (SPIM_RX_SCL_MOSI_PIN) */
 537:Generated_Source\PSoC4/SPIM.c ****         
 538:Generated_Source\PSoC4/SPIM.c ****         #if (SPIM_TX_SDA_MISO_PIN)
 539:Generated_Source\PSoC4/SPIM.c ****             hsiomSel[SPIM_TX_SDA_MISO_PIN_INDEX] = SPIM_TX_SDA_MISO_HSIOM_SEL_SPI;
 540:Generated_Source\PSoC4/SPIM.c ****         #endif /* (SPIM_TX_SDA_MISO_PIN) */
 541:Generated_Source\PSoC4/SPIM.c ****         
 542:Generated_Source\PSoC4/SPIM.c ****         #if (SPIM_SCLK_PIN)
 543:Generated_Source\PSoC4/SPIM.c ****             hsiomSel[SPIM_SCLK_PIN_INDEX] = SPIM_SCLK_HSIOM_SEL_SPI;
 544:Generated_Source\PSoC4/SPIM.c ****         #endif /* (SPIM_SCLK_PIN) */
 545:Generated_Source\PSoC4/SPIM.c **** 
 546:Generated_Source\PSoC4/SPIM.c ****             if (SPIM_SPI_SLAVE == subMode)
 547:Generated_Source\PSoC4/SPIM.c ****             {
 548:Generated_Source\PSoC4/SPIM.c ****                 /* Slave */
 549:Generated_Source\PSoC4/SPIM.c ****                 pinsDm[SPIM_RX_SCL_MOSI_PIN_INDEX] = SPIM_PIN_DM_DIG_HIZ;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 17


 550:Generated_Source\PSoC4/SPIM.c ****                 pinsDm[SPIM_TX_SDA_MISO_PIN_INDEX] = SPIM_PIN_DM_STRONG;
 551:Generated_Source\PSoC4/SPIM.c ****                 pinsDm[SPIM_SCLK_PIN_INDEX] = SPIM_PIN_DM_DIG_HIZ;
 552:Generated_Source\PSoC4/SPIM.c **** 
 553:Generated_Source\PSoC4/SPIM.c ****             #if (SPIM_SS0_PIN)
 554:Generated_Source\PSoC4/SPIM.c ****                 /* Only SS0 is valid choice for Slave */
 555:Generated_Source\PSoC4/SPIM.c ****                 hsiomSel[SPIM_SS0_PIN_INDEX] = SPIM_SS0_HSIOM_SEL_SPI;
 556:Generated_Source\PSoC4/SPIM.c ****                 pinsDm  [SPIM_SS0_PIN_INDEX] = SPIM_PIN_DM_DIG_HIZ;
 557:Generated_Source\PSoC4/SPIM.c ****             #endif /* (SPIM_SS0_PIN) */
 558:Generated_Source\PSoC4/SPIM.c **** 
 559:Generated_Source\PSoC4/SPIM.c ****             #if (SPIM_TX_SDA_MISO_PIN)
 560:Generated_Source\PSoC4/SPIM.c ****                 /* Disable input buffer */
 561:Generated_Source\PSoC4/SPIM.c ****                  pinsInBuf |= SPIM_TX_SDA_MISO_PIN_MASK;
 562:Generated_Source\PSoC4/SPIM.c ****             #endif /* (SPIM_TX_SDA_MISO_PIN) */
 563:Generated_Source\PSoC4/SPIM.c ****             }
 564:Generated_Source\PSoC4/SPIM.c ****             else 
 565:Generated_Source\PSoC4/SPIM.c ****             {
 566:Generated_Source\PSoC4/SPIM.c ****                 /* (Master) */
 567:Generated_Source\PSoC4/SPIM.c ****                 pinsDm[SPIM_RX_SCL_MOSI_PIN_INDEX] = SPIM_PIN_DM_STRONG;
 568:Generated_Source\PSoC4/SPIM.c ****                 pinsDm[SPIM_TX_SDA_MISO_PIN_INDEX] = SPIM_PIN_DM_DIG_HIZ;
 569:Generated_Source\PSoC4/SPIM.c ****                 pinsDm[SPIM_SCLK_PIN_INDEX] = SPIM_PIN_DM_STRONG;
 570:Generated_Source\PSoC4/SPIM.c **** 
 571:Generated_Source\PSoC4/SPIM.c ****             #if (SPIM_SS0_PIN)
 572:Generated_Source\PSoC4/SPIM.c ****                 hsiomSel [SPIM_SS0_PIN_INDEX] = SPIM_SS0_HSIOM_SEL_SPI;
 573:Generated_Source\PSoC4/SPIM.c ****                 pinsDm   [SPIM_SS0_PIN_INDEX] = SPIM_PIN_DM_STRONG;
 574:Generated_Source\PSoC4/SPIM.c ****                 pinsInBuf |= SPIM_SS0_PIN_MASK;
 575:Generated_Source\PSoC4/SPIM.c ****             #endif /* (SPIM_SS0_PIN) */
 576:Generated_Source\PSoC4/SPIM.c **** 
 577:Generated_Source\PSoC4/SPIM.c ****             #if (SPIM_SS1_PIN)
 578:Generated_Source\PSoC4/SPIM.c ****                 hsiomSel [SPIM_SS1_PIN_INDEX] = SPIM_SS1_HSIOM_SEL_SPI;
 579:Generated_Source\PSoC4/SPIM.c ****                 pinsDm   [SPIM_SS1_PIN_INDEX] = SPIM_PIN_DM_STRONG;
 580:Generated_Source\PSoC4/SPIM.c ****                 pinsInBuf |= SPIM_SS1_PIN_MASK;
 581:Generated_Source\PSoC4/SPIM.c ****             #endif /* (SPIM_SS1_PIN) */
 582:Generated_Source\PSoC4/SPIM.c **** 
 583:Generated_Source\PSoC4/SPIM.c ****             #if (SPIM_SS2_PIN)
 584:Generated_Source\PSoC4/SPIM.c ****                 hsiomSel [SPIM_SS2_PIN_INDEX] = SPIM_SS2_HSIOM_SEL_SPI;
 585:Generated_Source\PSoC4/SPIM.c ****                 pinsDm   [SPIM_SS2_PIN_INDEX] = SPIM_PIN_DM_STRONG;
 586:Generated_Source\PSoC4/SPIM.c ****                 pinsInBuf |= SPIM_SS2_PIN_MASK;
 587:Generated_Source\PSoC4/SPIM.c ****             #endif /* (SPIM_SS2_PIN) */
 588:Generated_Source\PSoC4/SPIM.c **** 
 589:Generated_Source\PSoC4/SPIM.c ****             #if (SPIM_SS3_PIN)
 590:Generated_Source\PSoC4/SPIM.c ****                 hsiomSel [SPIM_SS3_PIN_INDEX] = SPIM_SS3_HSIOM_SEL_SPI;
 591:Generated_Source\PSoC4/SPIM.c ****                 pinsDm   [SPIM_SS3_PIN_INDEX] = SPIM_PIN_DM_STRONG;
 592:Generated_Source\PSoC4/SPIM.c ****                 pinsInBuf |= SPIM_SS3_PIN_MASK;
 593:Generated_Source\PSoC4/SPIM.c ****             #endif /* (SPIM_SS3_PIN) */
 594:Generated_Source\PSoC4/SPIM.c **** 
 595:Generated_Source\PSoC4/SPIM.c ****                 /* Disable input buffers */
 596:Generated_Source\PSoC4/SPIM.c ****             #if (SPIM_RX_SCL_MOSI_PIN)
 597:Generated_Source\PSoC4/SPIM.c ****                 pinsInBuf |= SPIM_RX_SCL_MOSI_PIN_MASK;
 598:Generated_Source\PSoC4/SPIM.c ****             #elif (SPIM_RX_WAKE_SCL_MOSI_PIN)
 599:Generated_Source\PSoC4/SPIM.c ****                 pinsInBuf |= SPIM_RX_WAKE_SCL_MOSI_PIN_MASK;
 600:Generated_Source\PSoC4/SPIM.c ****             #else
 601:Generated_Source\PSoC4/SPIM.c ****             #endif /* (SPIM_RX_SCL_MOSI_PIN) */
 602:Generated_Source\PSoC4/SPIM.c **** 
 603:Generated_Source\PSoC4/SPIM.c ****             #if (SPIM_SCLK_PIN)
 604:Generated_Source\PSoC4/SPIM.c ****                 pinsInBuf |= SPIM_SCLK_PIN_MASK;
 605:Generated_Source\PSoC4/SPIM.c ****             #endif /* (SPIM_SCLK_PIN) */
 606:Generated_Source\PSoC4/SPIM.c ****             }
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 18


 607:Generated_Source\PSoC4/SPIM.c ****         }
 608:Generated_Source\PSoC4/SPIM.c ****         else /* UART */
 609:Generated_Source\PSoC4/SPIM.c ****         {
 610:Generated_Source\PSoC4/SPIM.c ****             if (SPIM_UART_MODE_SMARTCARD == subMode)
 611:Generated_Source\PSoC4/SPIM.c ****             {
 612:Generated_Source\PSoC4/SPIM.c ****                 /* SmartCard */
 613:Generated_Source\PSoC4/SPIM.c ****             #if (SPIM_TX_SDA_MISO_PIN)
 614:Generated_Source\PSoC4/SPIM.c ****                 hsiomSel[SPIM_TX_SDA_MISO_PIN_INDEX] = SPIM_TX_SDA_MISO_HSIOM_SEL_UART;
 615:Generated_Source\PSoC4/SPIM.c ****                 pinsDm  [SPIM_TX_SDA_MISO_PIN_INDEX] = SPIM_PIN_DM_OD_LO;
 616:Generated_Source\PSoC4/SPIM.c ****             #endif /* (SPIM_TX_SDA_MISO_PIN) */
 617:Generated_Source\PSoC4/SPIM.c ****             }
 618:Generated_Source\PSoC4/SPIM.c ****             else /* Standard or IrDA */
 619:Generated_Source\PSoC4/SPIM.c ****             {
 620:Generated_Source\PSoC4/SPIM.c ****                 if (0u != (SPIM_UART_RX_PIN_ENABLE & uartEnableMask))
 621:Generated_Source\PSoC4/SPIM.c ****                 {
 622:Generated_Source\PSoC4/SPIM.c ****                 #if (SPIM_RX_SCL_MOSI_PIN)
 623:Generated_Source\PSoC4/SPIM.c ****                     hsiomSel[SPIM_RX_SCL_MOSI_PIN_INDEX] = SPIM_RX_SCL_MOSI_HSIOM_SEL_UART;
 624:Generated_Source\PSoC4/SPIM.c ****                     pinsDm  [SPIM_RX_SCL_MOSI_PIN_INDEX] = SPIM_PIN_DM_DIG_HIZ;
 625:Generated_Source\PSoC4/SPIM.c ****                 #elif (SPIM_RX_WAKE_SCL_MOSI_PIN)
 626:Generated_Source\PSoC4/SPIM.c ****                     hsiomSel[SPIM_RX_WAKE_SCL_MOSI_PIN_INDEX] = SPIM_RX_WAKE_SCL_MOSI_HSIOM_SEL_UAR
 627:Generated_Source\PSoC4/SPIM.c ****                     pinsDm  [SPIM_RX_WAKE_SCL_MOSI_PIN_INDEX] = SPIM_PIN_DM_DIG_HIZ;
 628:Generated_Source\PSoC4/SPIM.c ****                 #else
 629:Generated_Source\PSoC4/SPIM.c ****                 #endif /* (SPIM_RX_SCL_MOSI_PIN) */
 630:Generated_Source\PSoC4/SPIM.c ****                 }
 631:Generated_Source\PSoC4/SPIM.c **** 
 632:Generated_Source\PSoC4/SPIM.c ****                 if (0u != (SPIM_UART_TX_PIN_ENABLE & uartEnableMask))
 633:Generated_Source\PSoC4/SPIM.c ****                 {
 634:Generated_Source\PSoC4/SPIM.c ****                 #if (SPIM_TX_SDA_MISO_PIN)
 635:Generated_Source\PSoC4/SPIM.c ****                     hsiomSel[SPIM_TX_SDA_MISO_PIN_INDEX] = SPIM_TX_SDA_MISO_HSIOM_SEL_UART;
 636:Generated_Source\PSoC4/SPIM.c ****                     pinsDm  [SPIM_TX_SDA_MISO_PIN_INDEX] = SPIM_PIN_DM_STRONG;
 637:Generated_Source\PSoC4/SPIM.c ****                     
 638:Generated_Source\PSoC4/SPIM.c ****                     /* Disable input buffer */
 639:Generated_Source\PSoC4/SPIM.c ****                     pinsInBuf |= SPIM_TX_SDA_MISO_PIN_MASK;
 640:Generated_Source\PSoC4/SPIM.c ****                 #endif /* (SPIM_TX_SDA_MISO_PIN) */
 641:Generated_Source\PSoC4/SPIM.c ****                 }
 642:Generated_Source\PSoC4/SPIM.c **** 
 643:Generated_Source\PSoC4/SPIM.c ****             #if !(SPIM_CY_SCBIP_V0 || SPIM_CY_SCBIP_V1)
 644:Generated_Source\PSoC4/SPIM.c ****                 if (SPIM_UART_MODE_STD == subMode)
 645:Generated_Source\PSoC4/SPIM.c ****                 {
 646:Generated_Source\PSoC4/SPIM.c ****                     if (0u != (SPIM_UART_CTS_PIN_ENABLE & uartEnableMask))
 647:Generated_Source\PSoC4/SPIM.c ****                     {
 648:Generated_Source\PSoC4/SPIM.c ****                         /* CTS input is multiplexed with SCLK */
 649:Generated_Source\PSoC4/SPIM.c ****                     #if (SPIM_SCLK_PIN)
 650:Generated_Source\PSoC4/SPIM.c ****                         hsiomSel[SPIM_SCLK_PIN_INDEX] = SPIM_SCLK_HSIOM_SEL_UART;
 651:Generated_Source\PSoC4/SPIM.c ****                         pinsDm  [SPIM_SCLK_PIN_INDEX] = SPIM_PIN_DM_DIG_HIZ;
 652:Generated_Source\PSoC4/SPIM.c ****                     #endif /* (SPIM_SCLK_PIN) */
 653:Generated_Source\PSoC4/SPIM.c ****                     }
 654:Generated_Source\PSoC4/SPIM.c **** 
 655:Generated_Source\PSoC4/SPIM.c ****                     if (0u != (SPIM_UART_RTS_PIN_ENABLE & uartEnableMask))
 656:Generated_Source\PSoC4/SPIM.c ****                     {
 657:Generated_Source\PSoC4/SPIM.c ****                         /* RTS output is multiplexed with SS0 */
 658:Generated_Source\PSoC4/SPIM.c ****                     #if (SPIM_SS0_PIN)
 659:Generated_Source\PSoC4/SPIM.c ****                         hsiomSel[SPIM_SS0_PIN_INDEX] = SPIM_SS0_HSIOM_SEL_UART;
 660:Generated_Source\PSoC4/SPIM.c ****                         pinsDm  [SPIM_SS0_PIN_INDEX] = SPIM_PIN_DM_STRONG;
 661:Generated_Source\PSoC4/SPIM.c ****                         
 662:Generated_Source\PSoC4/SPIM.c ****                         /* Disable input buffer */
 663:Generated_Source\PSoC4/SPIM.c ****                         pinsInBuf |= SPIM_SS0_PIN_MASK;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 19


 664:Generated_Source\PSoC4/SPIM.c ****                     #endif /* (SPIM_SS0_PIN) */
 665:Generated_Source\PSoC4/SPIM.c ****                     }
 666:Generated_Source\PSoC4/SPIM.c ****                 }
 667:Generated_Source\PSoC4/SPIM.c ****             #endif /* !(SPIM_CY_SCBIP_V0 || SPIM_CY_SCBIP_V1) */
 668:Generated_Source\PSoC4/SPIM.c ****             }
 669:Generated_Source\PSoC4/SPIM.c ****         }
 670:Generated_Source\PSoC4/SPIM.c ****     #endif /* (!SPIM_CY_SCBIP_V1) */
 671:Generated_Source\PSoC4/SPIM.c **** 
 672:Generated_Source\PSoC4/SPIM.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 673:Generated_Source\PSoC4/SPIM.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 674:Generated_Source\PSoC4/SPIM.c **** 
 675:Generated_Source\PSoC4/SPIM.c ****     #if (SPIM_RX_SCL_MOSI_PIN)
 676:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_HSIOM_SEL(SPIM_RX_SCL_MOSI_HSIOM_REG,
 677:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_RX_SCL_MOSI_HSIOM_MASK,
 678:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_RX_SCL_MOSI_HSIOM_POS,
 679:Generated_Source\PSoC4/SPIM.c ****                                         hsiomSel[SPIM_RX_SCL_MOSI_PIN_INDEX]);
 680:Generated_Source\PSoC4/SPIM.c **** 
 681:Generated_Source\PSoC4/SPIM.c ****         SPIM_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[SPIM_RX_SCL_MOSI_PIN_INDEX]);
 682:Generated_Source\PSoC4/SPIM.c **** 
 683:Generated_Source\PSoC4/SPIM.c ****         #if (!SPIM_CY_SCBIP_V1)
 684:Generated_Source\PSoC4/SPIM.c ****             SPIM_SET_INP_DIS(SPIM_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 685:Generated_Source\PSoC4/SPIM.c ****                                          SPIM_uart_rx_i2c_scl_spi_mosi_MASK,
 686:Generated_Source\PSoC4/SPIM.c ****                                          (0u != (pinsInBuf & SPIM_RX_SCL_MOSI_PIN_MASK)));
 687:Generated_Source\PSoC4/SPIM.c ****         #endif /* (!SPIM_CY_SCBIP_V1) */
 688:Generated_Source\PSoC4/SPIM.c ****     
 689:Generated_Source\PSoC4/SPIM.c ****     #elif (SPIM_RX_WAKE_SCL_MOSI_PIN)
 690:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_HSIOM_SEL(SPIM_RX_WAKE_SCL_MOSI_HSIOM_REG,
 691:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 692:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_RX_WAKE_SCL_MOSI_HSIOM_POS,
 693:Generated_Source\PSoC4/SPIM.c ****                                        hsiomSel[SPIM_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 694:Generated_Source\PSoC4/SPIM.c **** 
 695:Generated_Source\PSoC4/SPIM.c ****         SPIM_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 696:Generated_Source\PSoC4/SPIM.c ****                                                                pinsDm[SPIM_RX_WAKE_SCL_MOSI_PIN_IND
 697:Generated_Source\PSoC4/SPIM.c **** 
 698:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_INP_DIS(SPIM_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 699:Generated_Source\PSoC4/SPIM.c ****                                      SPIM_uart_rx_wake_i2c_scl_spi_mosi_MASK,
 700:Generated_Source\PSoC4/SPIM.c ****                                      (0u != (pinsInBuf & SPIM_RX_WAKE_SCL_MOSI_PIN_MASK)));
 701:Generated_Source\PSoC4/SPIM.c **** 
 702:Generated_Source\PSoC4/SPIM.c ****          /* Set interrupt on falling edge */
 703:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_INCFG_TYPE(SPIM_RX_WAKE_SCL_MOSI_INTCFG_REG,
 704:Generated_Source\PSoC4/SPIM.c ****                                         SPIM_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 705:Generated_Source\PSoC4/SPIM.c ****                                         SPIM_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 706:Generated_Source\PSoC4/SPIM.c ****                                         SPIM_INTCFG_TYPE_FALLING_EDGE);
 707:Generated_Source\PSoC4/SPIM.c ****     #else
 708:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_WAKE_SCL_MOSI_PIN) */
 709:Generated_Source\PSoC4/SPIM.c **** 
 710:Generated_Source\PSoC4/SPIM.c ****     #if (SPIM_TX_SDA_MISO_PIN)
 711:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_HSIOM_SEL(SPIM_TX_SDA_MISO_HSIOM_REG,
 712:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_TX_SDA_MISO_HSIOM_MASK,
 713:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_TX_SDA_MISO_HSIOM_POS,
 714:Generated_Source\PSoC4/SPIM.c ****                                         hsiomSel[SPIM_TX_SDA_MISO_PIN_INDEX]);
 715:Generated_Source\PSoC4/SPIM.c **** 
 716:Generated_Source\PSoC4/SPIM.c ****         SPIM_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[SPIM_TX_SDA_MISO_PIN_INDEX]);
 717:Generated_Source\PSoC4/SPIM.c **** 
 718:Generated_Source\PSoC4/SPIM.c ****     #if (!SPIM_CY_SCBIP_V1)
 719:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_INP_DIS(SPIM_uart_tx_i2c_sda_spi_miso_INP_DIS,
 720:Generated_Source\PSoC4/SPIM.c ****                                      SPIM_uart_tx_i2c_sda_spi_miso_MASK,
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 20


 721:Generated_Source\PSoC4/SPIM.c ****                                     (0u != (pinsInBuf & SPIM_TX_SDA_MISO_PIN_MASK)));
 722:Generated_Source\PSoC4/SPIM.c ****     #endif /* (!SPIM_CY_SCBIP_V1) */
 723:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_RX_SCL_MOSI_PIN) */
 724:Generated_Source\PSoC4/SPIM.c **** 
 725:Generated_Source\PSoC4/SPIM.c ****     #if (SPIM_SCLK_PIN)
 726:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_HSIOM_SEL(SPIM_SCLK_HSIOM_REG,
 727:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_SCLK_HSIOM_MASK,
 728:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_SCLK_HSIOM_POS,
 729:Generated_Source\PSoC4/SPIM.c ****                                        hsiomSel[SPIM_SCLK_PIN_INDEX]);
 730:Generated_Source\PSoC4/SPIM.c **** 
 731:Generated_Source\PSoC4/SPIM.c ****         SPIM_spi_sclk_SetDriveMode((uint8) pinsDm[SPIM_SCLK_PIN_INDEX]);
 732:Generated_Source\PSoC4/SPIM.c **** 
 733:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_INP_DIS(SPIM_spi_sclk_INP_DIS,
 734:Generated_Source\PSoC4/SPIM.c ****                                      SPIM_spi_sclk_MASK,
 735:Generated_Source\PSoC4/SPIM.c ****                                      (0u != (pinsInBuf & SPIM_SCLK_PIN_MASK)));
 736:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_SCLK_PIN) */
 737:Generated_Source\PSoC4/SPIM.c **** 
 738:Generated_Source\PSoC4/SPIM.c ****     #if (SPIM_SS0_PIN)
 739:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_HSIOM_SEL(SPIM_SS0_HSIOM_REG,
 740:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_SS0_HSIOM_MASK,
 741:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_SS0_HSIOM_POS,
 742:Generated_Source\PSoC4/SPIM.c ****                                        hsiomSel[SPIM_SS0_PIN_INDEX]);
 743:Generated_Source\PSoC4/SPIM.c **** 
 744:Generated_Source\PSoC4/SPIM.c ****         SPIM_spi_ss0_SetDriveMode((uint8) pinsDm[SPIM_SS0_PIN_INDEX]);
 745:Generated_Source\PSoC4/SPIM.c **** 
 746:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_INP_DIS(SPIM_spi_ss0_INP_DIS,
 747:Generated_Source\PSoC4/SPIM.c ****                                      SPIM_spi_ss0_MASK,
 748:Generated_Source\PSoC4/SPIM.c ****                                      (0u != (pinsInBuf & SPIM_SS0_PIN_MASK)));
 749:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_SS0_PIN) */
 750:Generated_Source\PSoC4/SPIM.c **** 
 751:Generated_Source\PSoC4/SPIM.c ****     #if (SPIM_SS1_PIN)
 752:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_HSIOM_SEL(SPIM_SS1_HSIOM_REG,
 753:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_SS1_HSIOM_MASK,
 754:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_SS1_HSIOM_POS,
 755:Generated_Source\PSoC4/SPIM.c ****                                        hsiomSel[SPIM_SS1_PIN_INDEX]);
 756:Generated_Source\PSoC4/SPIM.c **** 
 757:Generated_Source\PSoC4/SPIM.c ****         SPIM_spi_ss1_SetDriveMode((uint8) pinsDm[SPIM_SS1_PIN_INDEX]);
 758:Generated_Source\PSoC4/SPIM.c **** 
 759:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_INP_DIS(SPIM_spi_ss1_INP_DIS,
 760:Generated_Source\PSoC4/SPIM.c ****                                      SPIM_spi_ss1_MASK,
 761:Generated_Source\PSoC4/SPIM.c ****                                      (0u != (pinsInBuf & SPIM_SS1_PIN_MASK)));
 762:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_SS1_PIN) */
 763:Generated_Source\PSoC4/SPIM.c **** 
 764:Generated_Source\PSoC4/SPIM.c ****     #if (SPIM_SS2_PIN)
 765:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_HSIOM_SEL(SPIM_SS2_HSIOM_REG,
 766:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_SS2_HSIOM_MASK,
 767:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_SS2_HSIOM_POS,
 768:Generated_Source\PSoC4/SPIM.c ****                                        hsiomSel[SPIM_SS2_PIN_INDEX]);
 769:Generated_Source\PSoC4/SPIM.c **** 
 770:Generated_Source\PSoC4/SPIM.c ****         SPIM_spi_ss2_SetDriveMode((uint8) pinsDm[SPIM_SS2_PIN_INDEX]);
 771:Generated_Source\PSoC4/SPIM.c **** 
 772:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_INP_DIS(SPIM_spi_ss2_INP_DIS,
 773:Generated_Source\PSoC4/SPIM.c ****                                      SPIM_spi_ss2_MASK,
 774:Generated_Source\PSoC4/SPIM.c ****                                      (0u != (pinsInBuf & SPIM_SS2_PIN_MASK)));
 775:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_SS2_PIN) */
 776:Generated_Source\PSoC4/SPIM.c **** 
 777:Generated_Source\PSoC4/SPIM.c ****     #if (SPIM_SS3_PIN)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 21


 778:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_HSIOM_SEL(SPIM_SS3_HSIOM_REG,
 779:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_SS3_HSIOM_MASK,
 780:Generated_Source\PSoC4/SPIM.c ****                                        SPIM_SS3_HSIOM_POS,
 781:Generated_Source\PSoC4/SPIM.c ****                                        hsiomSel[SPIM_SS3_PIN_INDEX]);
 782:Generated_Source\PSoC4/SPIM.c **** 
 783:Generated_Source\PSoC4/SPIM.c ****         SPIM_spi_ss3_SetDriveMode((uint8) pinsDm[SPIM_SS3_PIN_INDEX]);
 784:Generated_Source\PSoC4/SPIM.c **** 
 785:Generated_Source\PSoC4/SPIM.c ****         SPIM_SET_INP_DIS(SPIM_spi_ss3_INP_DIS,
 786:Generated_Source\PSoC4/SPIM.c ****                                      SPIM_spi_ss3_MASK,
 787:Generated_Source\PSoC4/SPIM.c ****                                      (0u != (pinsInBuf & SPIM_SS3_PIN_MASK)));
 788:Generated_Source\PSoC4/SPIM.c ****     #endif /* (SPIM_SS3_PIN) */
 789:Generated_Source\PSoC4/SPIM.c ****     }
 790:Generated_Source\PSoC4/SPIM.c **** 
 791:Generated_Source\PSoC4/SPIM.c **** #endif /* (SPIM_SCB_MODE_UNCONFIG_CONST_CFG) */
 792:Generated_Source\PSoC4/SPIM.c **** 
 793:Generated_Source\PSoC4/SPIM.c **** 
 794:Generated_Source\PSoC4/SPIM.c **** #if (SPIM_CY_SCBIP_V0 || SPIM_CY_SCBIP_V1)
 795:Generated_Source\PSoC4/SPIM.c ****     /*******************************************************************************
 796:Generated_Source\PSoC4/SPIM.c ****     * Function Name: SPIM_I2CSlaveNackGeneration
 797:Generated_Source\PSoC4/SPIM.c ****     ****************************************************************************//**
 798:Generated_Source\PSoC4/SPIM.c ****     *
 799:Generated_Source\PSoC4/SPIM.c ****     *  Sets command to generate NACK to the address or data.
 800:Generated_Source\PSoC4/SPIM.c ****     *
 801:Generated_Source\PSoC4/SPIM.c ****     *******************************************************************************/
 802:Generated_Source\PSoC4/SPIM.c ****     void SPIM_I2CSlaveNackGeneration(void)
 803:Generated_Source\PSoC4/SPIM.c ****     {
 320              		.loc 1 803 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 804:Generated_Source\PSoC4/SPIM.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 805:Generated_Source\PSoC4/SPIM.c ****         if ((0u != (SPIM_CTRL_REG & SPIM_CTRL_EC_AM_MODE)) &&
 325              		.loc 1 805 0
 326 0000 8020     		movs	r0, #128
 327 0002 0A4B     		ldr	r3, .L27
 328 0004 4000     		lsls	r0, r0, #1
 329 0006 1A68     		ldr	r2, [r3]
 330 0008 0242     		tst	r2, r0
 331 000a 0AD0     		beq	.L23
 806:Generated_Source\PSoC4/SPIM.c ****             (0u == (SPIM_I2C_CTRL_REG & SPIM_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 332              		.loc 1 806 0 discriminator 1
 333 000c 084A     		ldr	r2, .L27+4
 334 000e 1268     		ldr	r2, [r2]
 805:Generated_Source\PSoC4/SPIM.c ****             (0u == (SPIM_I2C_CTRL_REG & SPIM_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 335              		.loc 1 805 0 discriminator 1
 336 0010 5204     		lsls	r2, r2, #17
 337 0012 06D4     		bmi	.L23
 807:Generated_Source\PSoC4/SPIM.c ****         {
 808:Generated_Source\PSoC4/SPIM.c ****             /* Toggle EC_AM before NACK generation */
 809:Generated_Source\PSoC4/SPIM.c ****             SPIM_CTRL_REG &= ~SPIM_CTRL_EC_AM_MODE;
 338              		.loc 1 809 0
 339 0014 1A68     		ldr	r2, [r3]
 340 0016 0749     		ldr	r1, .L27+8
 341 0018 1140     		ands	r1, r2
 342 001a 1960     		str	r1, [r3]
 810:Generated_Source\PSoC4/SPIM.c ****             SPIM_CTRL_REG |=  SPIM_CTRL_EC_AM_MODE;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 22


 343              		.loc 1 810 0
 344 001c 1A68     		ldr	r2, [r3]
 345 001e 0243     		orrs	r2, r0
 346 0020 1A60     		str	r2, [r3]
 347              	.L23:
 811:Generated_Source\PSoC4/SPIM.c ****         }
 812:Generated_Source\PSoC4/SPIM.c **** 
 813:Generated_Source\PSoC4/SPIM.c ****         SPIM_I2C_SLAVE_CMD_REG = SPIM_I2C_SLAVE_CMD_S_NACK;
 348              		.loc 1 813 0
 349 0022 0222     		movs	r2, #2
 350 0024 044B     		ldr	r3, .L27+12
 814:Generated_Source\PSoC4/SPIM.c ****     }
 351              		.loc 1 814 0
 352              		@ sp needed
 813:Generated_Source\PSoC4/SPIM.c ****     }
 353              		.loc 1 813 0
 354 0026 1A60     		str	r2, [r3]
 355              		.loc 1 814 0
 356 0028 7047     		bx	lr
 357              	.L28:
 358 002a C046     		.align	2
 359              	.L27:
 360 002c 00000740 		.word	1074200576
 361 0030 60000740 		.word	1074200672
 362 0034 FFFEFFFF 		.word	-257
 363 0038 6C000740 		.word	1074200684
 364              		.cfi_endproc
 365              	.LFE10:
 366              		.size	SPIM_I2CSlaveNackGeneration, .-SPIM_I2CSlaveNackGeneration
 367              		.global	SPIM_customIntrHandler
 368              		.global	SPIM_IntrTxMask
 369              		.global	SPIM_initVar
 370              		.bss
 371              		.align	2
 372              		.set	.LANCHOR0,. + 0
 373              		.type	SPIM_initVar, %object
 374              		.size	SPIM_initVar, 1
 375              	SPIM_initVar:
 376 0000 00       		.space	1
 377 0001 000000   		.space	3
 378              		.type	SPIM_customIntrHandler, %object
 379              		.size	SPIM_customIntrHandler, 4
 380              	SPIM_customIntrHandler:
 381 0004 00000000 		.space	4
 382              		.type	SPIM_IntrTxMask, %object
 383              		.size	SPIM_IntrTxMask, 2
 384              	SPIM_IntrTxMask:
 385 0008 0000     		.space	2
 386              		.text
 387              	.Letext0:
 388              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 389              		.file 3 "Generated_Source\\PSoC4\\SPIM_SPI_UART_PVT.h"
 390              		.file 4 "Generated_Source\\PSoC4/CyLib.h"
 391              		.section	.debug_info,"",%progbits
 392              	.Ldebug_info0:
 393 0000 04030000 		.4byte	0x304
 394 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 23


 395 0006 00000000 		.4byte	.Ldebug_abbrev0
 396 000a 04       		.byte	0x4
 397 000b 01       		.uleb128 0x1
 398 000c 86020000 		.4byte	.LASF40
 399 0010 0C       		.byte	0xc
 400 0011 66000000 		.4byte	.LASF41
 401 0015 F6010000 		.4byte	.LASF42
 402 0019 00000000 		.4byte	.Ldebug_ranges0+0
 403 001d 00000000 		.4byte	0
 404 0021 00000000 		.4byte	.Ldebug_line0
 405 0025 02       		.uleb128 0x2
 406 0026 01       		.byte	0x1
 407 0027 06       		.byte	0x6
 408 0028 6A020000 		.4byte	.LASF0
 409 002c 02       		.uleb128 0x2
 410 002d 01       		.byte	0x1
 411 002e 08       		.byte	0x8
 412 002f B7000000 		.4byte	.LASF1
 413 0033 02       		.uleb128 0x2
 414 0034 02       		.byte	0x2
 415 0035 05       		.byte	0x5
 416 0036 EC010000 		.4byte	.LASF2
 417 003a 02       		.uleb128 0x2
 418 003b 02       		.byte	0x2
 419 003c 07       		.byte	0x7
 420 003d 2D000000 		.4byte	.LASF3
 421 0041 02       		.uleb128 0x2
 422 0042 04       		.byte	0x4
 423 0043 05       		.byte	0x5
 424 0044 45020000 		.4byte	.LASF4
 425 0048 02       		.uleb128 0x2
 426 0049 04       		.byte	0x4
 427 004a 07       		.byte	0x7
 428 004b C5000000 		.4byte	.LASF5
 429 004f 02       		.uleb128 0x2
 430 0050 08       		.byte	0x8
 431 0051 05       		.byte	0x5
 432 0052 9A010000 		.4byte	.LASF6
 433 0056 02       		.uleb128 0x2
 434 0057 08       		.byte	0x8
 435 0058 07       		.byte	0x7
 436 0059 4A010000 		.4byte	.LASF7
 437 005d 03       		.uleb128 0x3
 438 005e 04       		.byte	0x4
 439 005f 05       		.byte	0x5
 440 0060 696E7400 		.ascii	"int\000"
 441 0064 02       		.uleb128 0x2
 442 0065 04       		.byte	0x4
 443 0066 07       		.byte	0x7
 444 0067 3D010000 		.4byte	.LASF8
 445 006b 04       		.uleb128 0x4
 446 006c D7000000 		.4byte	.LASF9
 447 0070 02       		.byte	0x2
 448 0071 F701     		.2byte	0x1f7
 449 0073 2C000000 		.4byte	0x2c
 450 0077 04       		.uleb128 0x4
 451 0078 2F010000 		.4byte	.LASF10
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 24


 452 007c 02       		.byte	0x2
 453 007d F801     		.2byte	0x1f8
 454 007f 3A000000 		.4byte	0x3a
 455 0083 04       		.uleb128 0x4
 456 0084 36010000 		.4byte	.LASF11
 457 0088 02       		.byte	0x2
 458 0089 F901     		.2byte	0x1f9
 459 008b 48000000 		.4byte	0x48
 460 008f 02       		.uleb128 0x2
 461 0090 04       		.byte	0x4
 462 0091 04       		.byte	0x4
 463 0092 64020000 		.4byte	.LASF12
 464 0096 02       		.uleb128 0x2
 465 0097 08       		.byte	0x8
 466 0098 04       		.byte	0x4
 467 0099 EA000000 		.4byte	.LASF13
 468 009d 02       		.uleb128 0x2
 469 009e 01       		.byte	0x1
 470 009f 08       		.byte	0x8
 471 00a0 40000000 		.4byte	.LASF14
 472 00a4 04       		.uleb128 0x4
 473 00a5 00000000 		.4byte	.LASF15
 474 00a9 02       		.byte	0x2
 475 00aa A302     		.2byte	0x2a3
 476 00ac B0000000 		.4byte	0xb0
 477 00b0 05       		.uleb128 0x5
 478 00b1 83000000 		.4byte	0x83
 479 00b5 06       		.uleb128 0x6
 480 00b6 04       		.byte	0x4
 481 00b7 BB000000 		.4byte	0xbb
 482 00bb 07       		.uleb128 0x7
 483 00bc 02       		.uleb128 0x2
 484 00bd 08       		.byte	0x8
 485 00be 04       		.byte	0x4
 486 00bf 58020000 		.4byte	.LASF16
 487 00c3 02       		.uleb128 0x2
 488 00c4 04       		.byte	0x4
 489 00c5 07       		.byte	0x7
 490 00c6 91010000 		.4byte	.LASF17
 491 00ca 08       		.uleb128 0x8
 492 00cb 23020000 		.4byte	.LASF18
 493 00cf 01       		.byte	0x1
 494 00d0 7D01     		.2byte	0x17d
 495 00d2 01       		.byte	0x1
 496 00d3 09       		.uleb128 0x9
 497 00d4 4E020000 		.4byte	.LASF43
 498 00d8 01       		.byte	0x1
 499 00d9 7B       		.byte	0x7b
 500 00da 01       		.byte	0x1
 501 00db 08       		.uleb128 0x8
 502 00dc 1E010000 		.4byte	.LASF19
 503 00e0 01       		.byte	0x1
 504 00e1 A201     		.2byte	0x1a2
 505 00e3 01       		.byte	0x1
 506 00e4 0A       		.uleb128 0xa
 507 00e5 D3000000 		.4byte	0xd3
 508 00e9 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 25


 509 00ed 08000000 		.4byte	.LFE0-.LFB0
 510 00f1 01       		.uleb128 0x1
 511 00f2 9C       		.byte	0x9c
 512 00f3 01010000 		.4byte	0x101
 513 00f7 0B       		.uleb128 0xb
 514 00f8 06000000 		.4byte	.LVL0
 515 00fc C5020000 		.4byte	0x2c5
 516 0100 00       		.byte	0
 517 0101 08       		.uleb128 0x8
 518 0102 6C010000 		.4byte	.LASF20
 519 0106 01       		.byte	0x1
 520 0107 6401     		.2byte	0x164
 521 0109 01       		.byte	0x1
 522 010a 0C       		.uleb128 0xc
 523 010b 11000000 		.4byte	.LASF21
 524 010f 01       		.byte	0x1
 525 0110 AB       		.byte	0xab
 526 0111 00000000 		.4byte	.LFB1
 527 0115 20000000 		.4byte	.LFE1-.LFB1
 528 0119 01       		.uleb128 0x1
 529 011a 9C       		.byte	0x9c
 530 011b 5C010000 		.4byte	0x15c
 531 011f 0D       		.uleb128 0xd
 532 0120 01010000 		.4byte	0x101
 533 0124 0E000000 		.4byte	.LBB12
 534 0128 06000000 		.4byte	.LBE12-.LBB12
 535 012c 01       		.byte	0x1
 536 012d BB       		.byte	0xbb
 537 012e 42010000 		.4byte	0x142
 538 0132 0E       		.uleb128 0xe
 539 0133 14000000 		.4byte	.LVL1
 540 0137 D0020000 		.4byte	0x2d0
 541 013b 0F       		.uleb128 0xf
 542 013c 01       		.uleb128 0x1
 543 013d 50       		.byte	0x50
 544 013e 01       		.uleb128 0x1
 545 013f 3B       		.byte	0x3b
 546 0140 00       		.byte	0
 547 0141 00       		.byte	0
 548 0142 10       		.uleb128 0x10
 549 0143 CA000000 		.4byte	0xca
 550 0147 14000000 		.4byte	.LBB14
 551 014b 04000000 		.4byte	.LBE14-.LBB14
 552 014f 01       		.byte	0x1
 553 0150 BE       		.byte	0xbe
 554 0151 0B       		.uleb128 0xb
 555 0152 18000000 		.4byte	.LVL2
 556 0156 DB020000 		.4byte	0x2db
 557 015a 00       		.byte	0
 558 015b 00       		.byte	0
 559 015c 0C       		.uleb128 0xc
 560 015d 61010000 		.4byte	.LASF22
 561 0161 01       		.byte	0x1
 562 0162 D2       		.byte	0xd2
 563 0163 00000000 		.4byte	.LFB2
 564 0167 1C000000 		.4byte	.LFE2-.LFB2
 565 016b 01       		.uleb128 0x1
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 26


 566 016c 9C       		.byte	0x9c
 567 016d 98010000 		.4byte	0x198
 568 0171 0D       		.uleb128 0xd
 569 0172 D3000000 		.4byte	0xd3
 570 0176 0A000000 		.4byte	.LBB16
 571 017a 04000000 		.4byte	.LBE16-.LBB16
 572 017e 01       		.byte	0x1
 573 017f D6       		.byte	0xd6
 574 0180 8E010000 		.4byte	0x18e
 575 0184 0B       		.uleb128 0xb
 576 0185 0E000000 		.4byte	.LVL3
 577 0189 C5020000 		.4byte	0x2c5
 578 018d 00       		.byte	0
 579 018e 0B       		.uleb128 0xb
 580 018f 16000000 		.4byte	.LVL4
 581 0193 0A010000 		.4byte	0x10a
 582 0197 00       		.byte	0
 583 0198 0C       		.uleb128 0xc
 584 0199 1D000000 		.4byte	.LASF23
 585 019d 01       		.byte	0x1
 586 019e EF       		.byte	0xef
 587 019f 00000000 		.4byte	.LFB3
 588 01a3 2C000000 		.4byte	.LFE3-.LFB3
 589 01a7 01       		.uleb128 0x1
 590 01a8 9C       		.byte	0x9c
 591 01a9 ED010000 		.4byte	0x1ed
 592 01ad 0D       		.uleb128 0xd
 593 01ae DB000000 		.4byte	0xdb
 594 01b2 08000000 		.4byte	.LBB18
 595 01b6 04000000 		.4byte	.LBE18-.LBB18
 596 01ba 01       		.byte	0x1
 597 01bb F6       		.byte	0xf6
 598 01bc CA010000 		.4byte	0x1ca
 599 01c0 0B       		.uleb128 0xb
 600 01c1 0C000000 		.4byte	.LVL6
 601 01c5 E6020000 		.4byte	0x2e6
 602 01c9 00       		.byte	0
 603 01ca 11       		.uleb128 0x11
 604 01cb 08000000 		.4byte	.LVL5
 605 01cf F1020000 		.4byte	0x2f1
 606 01d3 DD010000 		.4byte	0x1dd
 607 01d7 0F       		.uleb128 0xf
 608 01d8 01       		.uleb128 0x1
 609 01d9 50       		.byte	0x50
 610 01da 01       		.uleb128 0x1
 611 01db 3B       		.byte	0x3b
 612 01dc 00       		.byte	0
 613 01dd 0E       		.uleb128 0xe
 614 01de 22000000 		.4byte	.LVL7
 615 01e2 FC020000 		.4byte	0x2fc
 616 01e6 0F       		.uleb128 0xf
 617 01e7 01       		.uleb128 0x1
 618 01e8 50       		.byte	0x50
 619 01e9 01       		.uleb128 0x1
 620 01ea 3B       		.byte	0x3b
 621 01eb 00       		.byte	0
 622 01ec 00       		.byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 27


 623 01ed 12       		.uleb128 0x12
 624 01ee 52000000 		.4byte	.LASF24
 625 01f2 01       		.byte	0x1
 626 01f3 1701     		.2byte	0x117
 627 01f5 00000000 		.4byte	.LFB4
 628 01f9 14000000 		.4byte	.LFE4-.LFB4
 629 01fd 01       		.uleb128 0x1
 630 01fe 9C       		.byte	0x9c
 631 01ff 24020000 		.4byte	0x224
 632 0203 13       		.uleb128 0x13
 633 0204 27000000 		.4byte	.LASF26
 634 0208 01       		.byte	0x1
 635 0209 1701     		.2byte	0x117
 636 020b 83000000 		.4byte	0x83
 637 020f 00000000 		.4byte	.LLST0
 638 0213 14       		.uleb128 0x14
 639 0214 3A020000 		.4byte	.LASF27
 640 0218 01       		.byte	0x1
 641 0219 1901     		.2byte	0x119
 642 021b 83000000 		.4byte	0x83
 643 021f 21000000 		.4byte	.LLST1
 644 0223 00       		.byte	0
 645 0224 12       		.uleb128 0x12
 646 0225 A3000000 		.4byte	.LASF25
 647 0229 01       		.byte	0x1
 648 022a 3001     		.2byte	0x130
 649 022c 00000000 		.4byte	.LFB5
 650 0230 14000000 		.4byte	.LFE5-.LFB5
 651 0234 01       		.uleb128 0x1
 652 0235 9C       		.byte	0x9c
 653 0236 5B020000 		.4byte	0x25b
 654 023a 13       		.uleb128 0x13
 655 023b 27000000 		.4byte	.LASF26
 656 023f 01       		.byte	0x1
 657 0240 3001     		.2byte	0x130
 658 0242 83000000 		.4byte	0x83
 659 0246 3F000000 		.4byte	.LLST2
 660 024a 14       		.uleb128 0x14
 661 024b 06000000 		.4byte	.LASF28
 662 024f 01       		.byte	0x1
 663 0250 3201     		.2byte	0x132
 664 0252 83000000 		.4byte	0x83
 665 0256 60000000 		.4byte	.LLST3
 666 025a 00       		.byte	0
 667 025b 12       		.uleb128 0x12
 668 025c 84000000 		.4byte	.LASF29
 669 0260 01       		.byte	0x1
 670 0261 4F01     		.2byte	0x14f
 671 0263 00000000 		.4byte	.LFB6
 672 0267 0C000000 		.4byte	.LFE6-.LFB6
 673 026b 01       		.uleb128 0x1
 674 026c 9C       		.byte	0x9c
 675 026d 80020000 		.4byte	0x280
 676 0271 15       		.uleb128 0x15
 677 0272 0D010000 		.4byte	.LASF30
 678 0276 01       		.byte	0x1
 679 0277 4F01     		.2byte	0x14f
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 28


 680 0279 B5000000 		.4byte	0xb5
 681 027d 01       		.uleb128 0x1
 682 027e 50       		.byte	0x50
 683 027f 00       		.byte	0
 684 0280 16       		.uleb128 0x16
 685 0281 F1000000 		.4byte	.LASF44
 686 0285 01       		.byte	0x1
 687 0286 2203     		.2byte	0x322
 688 0288 00000000 		.4byte	.LFB10
 689 028c 3C000000 		.4byte	.LFE10-.LFB10
 690 0290 01       		.uleb128 0x1
 691 0291 9C       		.byte	0x9c
 692 0292 17       		.uleb128 0x17
 693 0293 45000000 		.4byte	.LASF31
 694 0297 01       		.byte	0x1
 695 0298 51       		.byte	0x51
 696 0299 6B000000 		.4byte	0x6b
 697 029d 05       		.uleb128 0x5
 698 029e 03       		.byte	0x3
 699 029f 00000000 		.4byte	SPIM_initVar
 700 02a3 17       		.uleb128 0x17
 701 02a4 A8010000 		.4byte	.LASF32
 702 02a8 01       		.byte	0x1
 703 02a9 61       		.byte	0x61
 704 02aa B5000000 		.4byte	0xb5
 705 02ae 05       		.uleb128 0x5
 706 02af 03       		.byte	0x3
 707 02b0 00000000 		.4byte	SPIM_customIntrHandler
 708 02b4 17       		.uleb128 0x17
 709 02b5 76020000 		.4byte	.LASF33
 710 02b9 01       		.byte	0x1
 711 02ba 5A       		.byte	0x5a
 712 02bb 77000000 		.4byte	0x77
 713 02bf 05       		.uleb128 0x5
 714 02c0 03       		.byte	0x3
 715 02c1 00000000 		.4byte	SPIM_IntrTxMask
 716 02c5 18       		.uleb128 0x18
 717 02c6 DD000000 		.4byte	.LASF34
 718 02ca DD000000 		.4byte	.LASF34
 719 02ce 03       		.byte	0x3
 720 02cf 44       		.byte	0x44
 721 02d0 18       		.uleb128 0x18
 722 02d1 12010000 		.4byte	.LASF35
 723 02d5 12010000 		.4byte	.LASF35
 724 02d9 04       		.byte	0x4
 725 02da D6       		.byte	0xd6
 726 02db 18       		.uleb128 0x18
 727 02dc CC010000 		.4byte	.LASF36
 728 02e0 CC010000 		.4byte	.LASF36
 729 02e4 03       		.byte	0x3
 730 02e5 40       		.byte	0x40
 731 02e6 18       		.uleb128 0x18
 732 02e7 BF010000 		.4byte	.LASF37
 733 02eb BF010000 		.4byte	.LASF37
 734 02ef 03       		.byte	0x3
 735 02f0 41       		.byte	0x41
 736 02f1 18       		.uleb128 0x18
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 29


 737 02f2 DF010000 		.4byte	.LASF38
 738 02f6 DF010000 		.4byte	.LASF38
 739 02fa 04       		.byte	0x4
 740 02fb D8       		.byte	0xd8
 741 02fc 18       		.uleb128 0x18
 742 02fd 7F010000 		.4byte	.LASF39
 743 0301 7F010000 		.4byte	.LASF39
 744 0305 04       		.byte	0x4
 745 0306 DB       		.byte	0xdb
 746 0307 00       		.byte	0
 747              		.section	.debug_abbrev,"",%progbits
 748              	.Ldebug_abbrev0:
 749 0000 01       		.uleb128 0x1
 750 0001 11       		.uleb128 0x11
 751 0002 01       		.byte	0x1
 752 0003 25       		.uleb128 0x25
 753 0004 0E       		.uleb128 0xe
 754 0005 13       		.uleb128 0x13
 755 0006 0B       		.uleb128 0xb
 756 0007 03       		.uleb128 0x3
 757 0008 0E       		.uleb128 0xe
 758 0009 1B       		.uleb128 0x1b
 759 000a 0E       		.uleb128 0xe
 760 000b 55       		.uleb128 0x55
 761 000c 17       		.uleb128 0x17
 762 000d 11       		.uleb128 0x11
 763 000e 01       		.uleb128 0x1
 764 000f 10       		.uleb128 0x10
 765 0010 17       		.uleb128 0x17
 766 0011 00       		.byte	0
 767 0012 00       		.byte	0
 768 0013 02       		.uleb128 0x2
 769 0014 24       		.uleb128 0x24
 770 0015 00       		.byte	0
 771 0016 0B       		.uleb128 0xb
 772 0017 0B       		.uleb128 0xb
 773 0018 3E       		.uleb128 0x3e
 774 0019 0B       		.uleb128 0xb
 775 001a 03       		.uleb128 0x3
 776 001b 0E       		.uleb128 0xe
 777 001c 00       		.byte	0
 778 001d 00       		.byte	0
 779 001e 03       		.uleb128 0x3
 780 001f 24       		.uleb128 0x24
 781 0020 00       		.byte	0
 782 0021 0B       		.uleb128 0xb
 783 0022 0B       		.uleb128 0xb
 784 0023 3E       		.uleb128 0x3e
 785 0024 0B       		.uleb128 0xb
 786 0025 03       		.uleb128 0x3
 787 0026 08       		.uleb128 0x8
 788 0027 00       		.byte	0
 789 0028 00       		.byte	0
 790 0029 04       		.uleb128 0x4
 791 002a 16       		.uleb128 0x16
 792 002b 00       		.byte	0
 793 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 30


 794 002d 0E       		.uleb128 0xe
 795 002e 3A       		.uleb128 0x3a
 796 002f 0B       		.uleb128 0xb
 797 0030 3B       		.uleb128 0x3b
 798 0031 05       		.uleb128 0x5
 799 0032 49       		.uleb128 0x49
 800 0033 13       		.uleb128 0x13
 801 0034 00       		.byte	0
 802 0035 00       		.byte	0
 803 0036 05       		.uleb128 0x5
 804 0037 35       		.uleb128 0x35
 805 0038 00       		.byte	0
 806 0039 49       		.uleb128 0x49
 807 003a 13       		.uleb128 0x13
 808 003b 00       		.byte	0
 809 003c 00       		.byte	0
 810 003d 06       		.uleb128 0x6
 811 003e 0F       		.uleb128 0xf
 812 003f 00       		.byte	0
 813 0040 0B       		.uleb128 0xb
 814 0041 0B       		.uleb128 0xb
 815 0042 49       		.uleb128 0x49
 816 0043 13       		.uleb128 0x13
 817 0044 00       		.byte	0
 818 0045 00       		.byte	0
 819 0046 07       		.uleb128 0x7
 820 0047 15       		.uleb128 0x15
 821 0048 00       		.byte	0
 822 0049 27       		.uleb128 0x27
 823 004a 19       		.uleb128 0x19
 824 004b 00       		.byte	0
 825 004c 00       		.byte	0
 826 004d 08       		.uleb128 0x8
 827 004e 2E       		.uleb128 0x2e
 828 004f 00       		.byte	0
 829 0050 03       		.uleb128 0x3
 830 0051 0E       		.uleb128 0xe
 831 0052 3A       		.uleb128 0x3a
 832 0053 0B       		.uleb128 0xb
 833 0054 3B       		.uleb128 0x3b
 834 0055 05       		.uleb128 0x5
 835 0056 27       		.uleb128 0x27
 836 0057 19       		.uleb128 0x19
 837 0058 20       		.uleb128 0x20
 838 0059 0B       		.uleb128 0xb
 839 005a 00       		.byte	0
 840 005b 00       		.byte	0
 841 005c 09       		.uleb128 0x9
 842 005d 2E       		.uleb128 0x2e
 843 005e 00       		.byte	0
 844 005f 3F       		.uleb128 0x3f
 845 0060 19       		.uleb128 0x19
 846 0061 03       		.uleb128 0x3
 847 0062 0E       		.uleb128 0xe
 848 0063 3A       		.uleb128 0x3a
 849 0064 0B       		.uleb128 0xb
 850 0065 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 31


 851 0066 0B       		.uleb128 0xb
 852 0067 27       		.uleb128 0x27
 853 0068 19       		.uleb128 0x19
 854 0069 20       		.uleb128 0x20
 855 006a 0B       		.uleb128 0xb
 856 006b 00       		.byte	0
 857 006c 00       		.byte	0
 858 006d 0A       		.uleb128 0xa
 859 006e 2E       		.uleb128 0x2e
 860 006f 01       		.byte	0x1
 861 0070 31       		.uleb128 0x31
 862 0071 13       		.uleb128 0x13
 863 0072 11       		.uleb128 0x11
 864 0073 01       		.uleb128 0x1
 865 0074 12       		.uleb128 0x12
 866 0075 06       		.uleb128 0x6
 867 0076 40       		.uleb128 0x40
 868 0077 18       		.uleb128 0x18
 869 0078 9742     		.uleb128 0x2117
 870 007a 19       		.uleb128 0x19
 871 007b 01       		.uleb128 0x1
 872 007c 13       		.uleb128 0x13
 873 007d 00       		.byte	0
 874 007e 00       		.byte	0
 875 007f 0B       		.uleb128 0xb
 876 0080 898201   		.uleb128 0x4109
 877 0083 00       		.byte	0
 878 0084 11       		.uleb128 0x11
 879 0085 01       		.uleb128 0x1
 880 0086 31       		.uleb128 0x31
 881 0087 13       		.uleb128 0x13
 882 0088 00       		.byte	0
 883 0089 00       		.byte	0
 884 008a 0C       		.uleb128 0xc
 885 008b 2E       		.uleb128 0x2e
 886 008c 01       		.byte	0x1
 887 008d 3F       		.uleb128 0x3f
 888 008e 19       		.uleb128 0x19
 889 008f 03       		.uleb128 0x3
 890 0090 0E       		.uleb128 0xe
 891 0091 3A       		.uleb128 0x3a
 892 0092 0B       		.uleb128 0xb
 893 0093 3B       		.uleb128 0x3b
 894 0094 0B       		.uleb128 0xb
 895 0095 27       		.uleb128 0x27
 896 0096 19       		.uleb128 0x19
 897 0097 11       		.uleb128 0x11
 898 0098 01       		.uleb128 0x1
 899 0099 12       		.uleb128 0x12
 900 009a 06       		.uleb128 0x6
 901 009b 40       		.uleb128 0x40
 902 009c 18       		.uleb128 0x18
 903 009d 9742     		.uleb128 0x2117
 904 009f 19       		.uleb128 0x19
 905 00a0 01       		.uleb128 0x1
 906 00a1 13       		.uleb128 0x13
 907 00a2 00       		.byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 32


 908 00a3 00       		.byte	0
 909 00a4 0D       		.uleb128 0xd
 910 00a5 1D       		.uleb128 0x1d
 911 00a6 01       		.byte	0x1
 912 00a7 31       		.uleb128 0x31
 913 00a8 13       		.uleb128 0x13
 914 00a9 11       		.uleb128 0x11
 915 00aa 01       		.uleb128 0x1
 916 00ab 12       		.uleb128 0x12
 917 00ac 06       		.uleb128 0x6
 918 00ad 58       		.uleb128 0x58
 919 00ae 0B       		.uleb128 0xb
 920 00af 59       		.uleb128 0x59
 921 00b0 0B       		.uleb128 0xb
 922 00b1 01       		.uleb128 0x1
 923 00b2 13       		.uleb128 0x13
 924 00b3 00       		.byte	0
 925 00b4 00       		.byte	0
 926 00b5 0E       		.uleb128 0xe
 927 00b6 898201   		.uleb128 0x4109
 928 00b9 01       		.byte	0x1
 929 00ba 11       		.uleb128 0x11
 930 00bb 01       		.uleb128 0x1
 931 00bc 31       		.uleb128 0x31
 932 00bd 13       		.uleb128 0x13
 933 00be 00       		.byte	0
 934 00bf 00       		.byte	0
 935 00c0 0F       		.uleb128 0xf
 936 00c1 8A8201   		.uleb128 0x410a
 937 00c4 00       		.byte	0
 938 00c5 02       		.uleb128 0x2
 939 00c6 18       		.uleb128 0x18
 940 00c7 9142     		.uleb128 0x2111
 941 00c9 18       		.uleb128 0x18
 942 00ca 00       		.byte	0
 943 00cb 00       		.byte	0
 944 00cc 10       		.uleb128 0x10
 945 00cd 1D       		.uleb128 0x1d
 946 00ce 01       		.byte	0x1
 947 00cf 31       		.uleb128 0x31
 948 00d0 13       		.uleb128 0x13
 949 00d1 11       		.uleb128 0x11
 950 00d2 01       		.uleb128 0x1
 951 00d3 12       		.uleb128 0x12
 952 00d4 06       		.uleb128 0x6
 953 00d5 58       		.uleb128 0x58
 954 00d6 0B       		.uleb128 0xb
 955 00d7 59       		.uleb128 0x59
 956 00d8 0B       		.uleb128 0xb
 957 00d9 00       		.byte	0
 958 00da 00       		.byte	0
 959 00db 11       		.uleb128 0x11
 960 00dc 898201   		.uleb128 0x4109
 961 00df 01       		.byte	0x1
 962 00e0 11       		.uleb128 0x11
 963 00e1 01       		.uleb128 0x1
 964 00e2 31       		.uleb128 0x31
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 33


 965 00e3 13       		.uleb128 0x13
 966 00e4 01       		.uleb128 0x1
 967 00e5 13       		.uleb128 0x13
 968 00e6 00       		.byte	0
 969 00e7 00       		.byte	0
 970 00e8 12       		.uleb128 0x12
 971 00e9 2E       		.uleb128 0x2e
 972 00ea 01       		.byte	0x1
 973 00eb 3F       		.uleb128 0x3f
 974 00ec 19       		.uleb128 0x19
 975 00ed 03       		.uleb128 0x3
 976 00ee 0E       		.uleb128 0xe
 977 00ef 3A       		.uleb128 0x3a
 978 00f0 0B       		.uleb128 0xb
 979 00f1 3B       		.uleb128 0x3b
 980 00f2 05       		.uleb128 0x5
 981 00f3 27       		.uleb128 0x27
 982 00f4 19       		.uleb128 0x19
 983 00f5 11       		.uleb128 0x11
 984 00f6 01       		.uleb128 0x1
 985 00f7 12       		.uleb128 0x12
 986 00f8 06       		.uleb128 0x6
 987 00f9 40       		.uleb128 0x40
 988 00fa 18       		.uleb128 0x18
 989 00fb 9742     		.uleb128 0x2117
 990 00fd 19       		.uleb128 0x19
 991 00fe 01       		.uleb128 0x1
 992 00ff 13       		.uleb128 0x13
 993 0100 00       		.byte	0
 994 0101 00       		.byte	0
 995 0102 13       		.uleb128 0x13
 996 0103 05       		.uleb128 0x5
 997 0104 00       		.byte	0
 998 0105 03       		.uleb128 0x3
 999 0106 0E       		.uleb128 0xe
 1000 0107 3A       		.uleb128 0x3a
 1001 0108 0B       		.uleb128 0xb
 1002 0109 3B       		.uleb128 0x3b
 1003 010a 05       		.uleb128 0x5
 1004 010b 49       		.uleb128 0x49
 1005 010c 13       		.uleb128 0x13
 1006 010d 02       		.uleb128 0x2
 1007 010e 17       		.uleb128 0x17
 1008 010f 00       		.byte	0
 1009 0110 00       		.byte	0
 1010 0111 14       		.uleb128 0x14
 1011 0112 34       		.uleb128 0x34
 1012 0113 00       		.byte	0
 1013 0114 03       		.uleb128 0x3
 1014 0115 0E       		.uleb128 0xe
 1015 0116 3A       		.uleb128 0x3a
 1016 0117 0B       		.uleb128 0xb
 1017 0118 3B       		.uleb128 0x3b
 1018 0119 05       		.uleb128 0x5
 1019 011a 49       		.uleb128 0x49
 1020 011b 13       		.uleb128 0x13
 1021 011c 02       		.uleb128 0x2
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 34


 1022 011d 17       		.uleb128 0x17
 1023 011e 00       		.byte	0
 1024 011f 00       		.byte	0
 1025 0120 15       		.uleb128 0x15
 1026 0121 05       		.uleb128 0x5
 1027 0122 00       		.byte	0
 1028 0123 03       		.uleb128 0x3
 1029 0124 0E       		.uleb128 0xe
 1030 0125 3A       		.uleb128 0x3a
 1031 0126 0B       		.uleb128 0xb
 1032 0127 3B       		.uleb128 0x3b
 1033 0128 05       		.uleb128 0x5
 1034 0129 49       		.uleb128 0x49
 1035 012a 13       		.uleb128 0x13
 1036 012b 02       		.uleb128 0x2
 1037 012c 18       		.uleb128 0x18
 1038 012d 00       		.byte	0
 1039 012e 00       		.byte	0
 1040 012f 16       		.uleb128 0x16
 1041 0130 2E       		.uleb128 0x2e
 1042 0131 00       		.byte	0
 1043 0132 3F       		.uleb128 0x3f
 1044 0133 19       		.uleb128 0x19
 1045 0134 03       		.uleb128 0x3
 1046 0135 0E       		.uleb128 0xe
 1047 0136 3A       		.uleb128 0x3a
 1048 0137 0B       		.uleb128 0xb
 1049 0138 3B       		.uleb128 0x3b
 1050 0139 05       		.uleb128 0x5
 1051 013a 27       		.uleb128 0x27
 1052 013b 19       		.uleb128 0x19
 1053 013c 11       		.uleb128 0x11
 1054 013d 01       		.uleb128 0x1
 1055 013e 12       		.uleb128 0x12
 1056 013f 06       		.uleb128 0x6
 1057 0140 40       		.uleb128 0x40
 1058 0141 18       		.uleb128 0x18
 1059 0142 9742     		.uleb128 0x2117
 1060 0144 19       		.uleb128 0x19
 1061 0145 00       		.byte	0
 1062 0146 00       		.byte	0
 1063 0147 17       		.uleb128 0x17
 1064 0148 34       		.uleb128 0x34
 1065 0149 00       		.byte	0
 1066 014a 03       		.uleb128 0x3
 1067 014b 0E       		.uleb128 0xe
 1068 014c 3A       		.uleb128 0x3a
 1069 014d 0B       		.uleb128 0xb
 1070 014e 3B       		.uleb128 0x3b
 1071 014f 0B       		.uleb128 0xb
 1072 0150 49       		.uleb128 0x49
 1073 0151 13       		.uleb128 0x13
 1074 0152 3F       		.uleb128 0x3f
 1075 0153 19       		.uleb128 0x19
 1076 0154 02       		.uleb128 0x2
 1077 0155 18       		.uleb128 0x18
 1078 0156 00       		.byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 35


 1079 0157 00       		.byte	0
 1080 0158 18       		.uleb128 0x18
 1081 0159 2E       		.uleb128 0x2e
 1082 015a 00       		.byte	0
 1083 015b 3F       		.uleb128 0x3f
 1084 015c 19       		.uleb128 0x19
 1085 015d 3C       		.uleb128 0x3c
 1086 015e 19       		.uleb128 0x19
 1087 015f 6E       		.uleb128 0x6e
 1088 0160 0E       		.uleb128 0xe
 1089 0161 03       		.uleb128 0x3
 1090 0162 0E       		.uleb128 0xe
 1091 0163 3A       		.uleb128 0x3a
 1092 0164 0B       		.uleb128 0xb
 1093 0165 3B       		.uleb128 0x3b
 1094 0166 0B       		.uleb128 0xb
 1095 0167 00       		.byte	0
 1096 0168 00       		.byte	0
 1097 0169 00       		.byte	0
 1098              		.section	.debug_loc,"",%progbits
 1099              	.Ldebug_loc0:
 1100              	.LLST0:
 1101 0000 00000000 		.4byte	.LVL8
 1102 0004 06000000 		.4byte	.LVL9
 1103 0008 0100     		.2byte	0x1
 1104 000a 50       		.byte	0x50
 1105 000b 06000000 		.4byte	.LVL9
 1106 000f 14000000 		.4byte	.LFE4
 1107 0013 0400     		.2byte	0x4
 1108 0015 F3       		.byte	0xf3
 1109 0016 01       		.uleb128 0x1
 1110 0017 50       		.byte	0x50
 1111 0018 9F       		.byte	0x9f
 1112 0019 00000000 		.4byte	0
 1113 001d 00000000 		.4byte	0
 1114              	.LLST1:
 1115 0021 08000000 		.4byte	.LVL10
 1116 0025 0C000000 		.4byte	.LVL12
 1117 0029 0100     		.2byte	0x1
 1118 002b 53       		.byte	0x53
 1119 002c 0C000000 		.4byte	.LVL12
 1120 0030 14000000 		.4byte	.LFE4
 1121 0034 0100     		.2byte	0x1
 1122 0036 50       		.byte	0x50
 1123 0037 00000000 		.4byte	0
 1124 003b 00000000 		.4byte	0
 1125              	.LLST2:
 1126 003f 00000000 		.4byte	.LVL13
 1127 0043 06000000 		.4byte	.LVL14
 1128 0047 0100     		.2byte	0x1
 1129 0049 50       		.byte	0x50
 1130 004a 06000000 		.4byte	.LVL14
 1131 004e 14000000 		.4byte	.LFE5
 1132 0052 0400     		.2byte	0x4
 1133 0054 F3       		.byte	0xf3
 1134 0055 01       		.uleb128 0x1
 1135 0056 50       		.byte	0x50
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 36


 1136 0057 9F       		.byte	0x9f
 1137 0058 00000000 		.4byte	0
 1138 005c 00000000 		.4byte	0
 1139              	.LLST3:
 1140 0060 08000000 		.4byte	.LVL15
 1141 0064 0C000000 		.4byte	.LVL17
 1142 0068 0100     		.2byte	0x1
 1143 006a 53       		.byte	0x53
 1144 006b 0C000000 		.4byte	.LVL17
 1145 006f 14000000 		.4byte	.LFE5
 1146 0073 0100     		.2byte	0x1
 1147 0075 50       		.byte	0x50
 1148 0076 00000000 		.4byte	0
 1149 007a 00000000 		.4byte	0
 1150              		.section	.debug_aranges,"",%progbits
 1151 0000 54000000 		.4byte	0x54
 1152 0004 0200     		.2byte	0x2
 1153 0006 00000000 		.4byte	.Ldebug_info0
 1154 000a 04       		.byte	0x4
 1155 000b 00       		.byte	0
 1156 000c 0000     		.2byte	0
 1157 000e 0000     		.2byte	0
 1158 0010 00000000 		.4byte	.LFB0
 1159 0014 08000000 		.4byte	.LFE0-.LFB0
 1160 0018 00000000 		.4byte	.LFB1
 1161 001c 20000000 		.4byte	.LFE1-.LFB1
 1162 0020 00000000 		.4byte	.LFB2
 1163 0024 1C000000 		.4byte	.LFE2-.LFB2
 1164 0028 00000000 		.4byte	.LFB3
 1165 002c 2C000000 		.4byte	.LFE3-.LFB3
 1166 0030 00000000 		.4byte	.LFB4
 1167 0034 14000000 		.4byte	.LFE4-.LFB4
 1168 0038 00000000 		.4byte	.LFB5
 1169 003c 14000000 		.4byte	.LFE5-.LFB5
 1170 0040 00000000 		.4byte	.LFB6
 1171 0044 0C000000 		.4byte	.LFE6-.LFB6
 1172 0048 00000000 		.4byte	.LFB10
 1173 004c 3C000000 		.4byte	.LFE10-.LFB10
 1174 0050 00000000 		.4byte	0
 1175 0054 00000000 		.4byte	0
 1176              		.section	.debug_ranges,"",%progbits
 1177              	.Ldebug_ranges0:
 1178 0000 00000000 		.4byte	.LFB0
 1179 0004 08000000 		.4byte	.LFE0
 1180 0008 00000000 		.4byte	.LFB1
 1181 000c 20000000 		.4byte	.LFE1
 1182 0010 00000000 		.4byte	.LFB2
 1183 0014 1C000000 		.4byte	.LFE2
 1184 0018 00000000 		.4byte	.LFB3
 1185 001c 2C000000 		.4byte	.LFE3
 1186 0020 00000000 		.4byte	.LFB4
 1187 0024 14000000 		.4byte	.LFE4
 1188 0028 00000000 		.4byte	.LFB5
 1189 002c 14000000 		.4byte	.LFE5
 1190 0030 00000000 		.4byte	.LFB6
 1191 0034 0C000000 		.4byte	.LFE6
 1192 0038 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 37


 1193 003c 3C000000 		.4byte	.LFE10
 1194 0040 00000000 		.4byte	0
 1195 0044 00000000 		.4byte	0
 1196              		.section	.debug_line,"",%progbits
 1197              	.Ldebug_line0:
 1198 0000 56010000 		.section	.debug_str,"MS",%progbits,1
 1198      02006300 
 1198      00000201 
 1198      FB0E0D00 
 1198      01010101 
 1199              	.LASF15:
 1200 0000 72656733 		.ascii	"reg32\000"
 1200      3200
 1201              	.LASF28:
 1202 0006 74784669 		.ascii	"txFifoCtrl\000"
 1202      666F4374 
 1202      726C00
 1203              	.LASF21:
 1204 0011 5350494D 		.ascii	"SPIM_Enable\000"
 1204      5F456E61 
 1204      626C6500 
 1205              	.LASF23:
 1206 001d 5350494D 		.ascii	"SPIM_Stop\000"
 1206      5F53746F 
 1206      7000
 1207              	.LASF26:
 1208 0027 6C657665 		.ascii	"level\000"
 1208      6C00
 1209              	.LASF3:
 1210 002d 73686F72 		.ascii	"short unsigned int\000"
 1210      7420756E 
 1210      7369676E 
 1210      65642069 
 1210      6E7400
 1211              	.LASF14:
 1212 0040 63686172 		.ascii	"char\000"
 1212      00
 1213              	.LASF31:
 1214 0045 5350494D 		.ascii	"SPIM_initVar\000"
 1214      5F696E69 
 1214      74566172 
 1214      00
 1215              	.LASF24:
 1216 0052 5350494D 		.ascii	"SPIM_SetRxFifoLevel\000"
 1216      5F536574 
 1216      52784669 
 1216      666F4C65 
 1216      76656C00 
 1217              	.LASF41:
 1218 0066 47656E65 		.ascii	"Generated_Source\\PSoC4\\SPIM.c\000"
 1218      72617465 
 1218      645F536F 
 1218      75726365 
 1218      5C50536F 
 1219              	.LASF29:
 1220 0084 5350494D 		.ascii	"SPIM_SetCustomInterruptHandler\000"
 1220      5F536574 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 38


 1220      43757374 
 1220      6F6D496E 
 1220      74657272 
 1221              	.LASF25:
 1222 00a3 5350494D 		.ascii	"SPIM_SetTxFifoLevel\000"
 1222      5F536574 
 1222      54784669 
 1222      666F4C65 
 1222      76656C00 
 1223              	.LASF1:
 1224 00b7 756E7369 		.ascii	"unsigned char\000"
 1224      676E6564 
 1224      20636861 
 1224      7200
 1225              	.LASF5:
 1226 00c5 6C6F6E67 		.ascii	"long unsigned int\000"
 1226      20756E73 
 1226      69676E65 
 1226      6420696E 
 1226      7400
 1227              	.LASF9:
 1228 00d7 75696E74 		.ascii	"uint8\000"
 1228      3800
 1229              	.LASF34:
 1230 00dd 5350494D 		.ascii	"SPIM_SpiInit\000"
 1230      5F537069 
 1230      496E6974 
 1230      00
 1231              	.LASF13:
 1232 00ea 646F7562 		.ascii	"double\000"
 1232      6C6500
 1233              	.LASF44:
 1234 00f1 5350494D 		.ascii	"SPIM_I2CSlaveNackGeneration\000"
 1234      5F493243 
 1234      536C6176 
 1234      654E6163 
 1234      6B47656E 
 1235              	.LASF30:
 1236 010d 66756E63 		.ascii	"func\000"
 1236      00
 1237              	.LASF35:
 1238 0112 4379496E 		.ascii	"CyIntEnable\000"
 1238      74456E61 
 1238      626C6500 
 1239              	.LASF19:
 1240 011e 5350494D 		.ascii	"SPIM_ScbModeStop\000"
 1240      5F536362 
 1240      4D6F6465 
 1240      53746F70 
 1240      00
 1241              	.LASF10:
 1242 012f 75696E74 		.ascii	"uint16\000"
 1242      313600
 1243              	.LASF11:
 1244 0136 75696E74 		.ascii	"uint32\000"
 1244      333200
 1245              	.LASF8:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 39


 1246 013d 756E7369 		.ascii	"unsigned int\000"
 1246      676E6564 
 1246      20696E74 
 1246      00
 1247              	.LASF7:
 1248 014a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1248      206C6F6E 
 1248      6720756E 
 1248      7369676E 
 1248      65642069 
 1249              	.LASF22:
 1250 0161 5350494D 		.ascii	"SPIM_Start\000"
 1250      5F537461 
 1250      727400
 1251              	.LASF20:
 1252 016c 5350494D 		.ascii	"SPIM_ScbEnableIntr\000"
 1252      5F536362 
 1252      456E6162 
 1252      6C65496E 
 1252      747200
 1253              	.LASF39:
 1254 017f 4379496E 		.ascii	"CyIntClearPending\000"
 1254      74436C65 
 1254      61725065 
 1254      6E64696E 
 1254      6700
 1255              	.LASF17:
 1256 0191 73697A65 		.ascii	"sizetype\000"
 1256      74797065 
 1256      00
 1257              	.LASF6:
 1258 019a 6C6F6E67 		.ascii	"long long int\000"
 1258      206C6F6E 
 1258      6720696E 
 1258      7400
 1259              	.LASF32:
 1260 01a8 5350494D 		.ascii	"SPIM_customIntrHandler\000"
 1260      5F637573 
 1260      746F6D49 
 1260      6E747248 
 1260      616E646C 
 1261              	.LASF37:
 1262 01bf 5350494D 		.ascii	"SPIM_SpiStop\000"
 1262      5F537069 
 1262      53746F70 
 1262      00
 1263              	.LASF36:
 1264 01cc 5350494D 		.ascii	"SPIM_SpiPostEnable\000"
 1264      5F537069 
 1264      506F7374 
 1264      456E6162 
 1264      6C6500
 1265              	.LASF38:
 1266 01df 4379496E 		.ascii	"CyIntDisable\000"
 1266      74446973 
 1266      61626C65 
 1266      00
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 40


 1267              	.LASF2:
 1268 01ec 73686F72 		.ascii	"short int\000"
 1268      7420696E 
 1268      7400
 1269              	.LASF42:
 1270 01f6 433A5C55 		.ascii	"C:\\Users\\Ala\\Desktop\\Cypress\\BeoM_main.cydsn\000"
 1270      73657273 
 1270      5C416C61 
 1270      5C446573 
 1270      6B746F70 
 1271              	.LASF18:
 1272 0223 5350494D 		.ascii	"SPIM_ScbModePostEnable\000"
 1272      5F536362 
 1272      4D6F6465 
 1272      506F7374 
 1272      456E6162 
 1273              	.LASF27:
 1274 023a 72784669 		.ascii	"rxFifoCtrl\000"
 1274      666F4374 
 1274      726C00
 1275              	.LASF4:
 1276 0245 6C6F6E67 		.ascii	"long int\000"
 1276      20696E74 
 1276      00
 1277              	.LASF43:
 1278 024e 5350494D 		.ascii	"SPIM_Init\000"
 1278      5F496E69 
 1278      7400
 1279              	.LASF16:
 1280 0258 6C6F6E67 		.ascii	"long double\000"
 1280      20646F75 
 1280      626C6500 
 1281              	.LASF12:
 1282 0264 666C6F61 		.ascii	"float\000"
 1282      7400
 1283              	.LASF0:
 1284 026a 7369676E 		.ascii	"signed char\000"
 1284      65642063 
 1284      68617200 
 1285              	.LASF33:
 1286 0276 5350494D 		.ascii	"SPIM_IntrTxMask\000"
 1286      5F496E74 
 1286      7254784D 
 1286      61736B00 
 1287              	.LASF40:
 1288 0286 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1288      43313120 
 1288      352E342E 
 1288      31203230 
 1288      31363036 
 1289 02b9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1289      20726576 
 1289      6973696F 
 1289      6E203233 
 1289      37373135 
 1290 02ec 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1290      66756E63 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cctOFRHR.s 			page 41


 1290      74696F6E 
 1290      2D736563 
 1290      74696F6E 
 1291              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
