ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART_1_initVar
  20              		.bss
  21              		.type	UART_1_initVar, %object
  22              		.size	UART_1_initVar, 1
  23              	UART_1_initVar:
  24 0000 00       		.space	1
  25              		.global	UART_1_IntrTxMask
  26 0001 00       		.align	1
  27              		.type	UART_1_IntrTxMask, %object
  28              		.size	UART_1_IntrTxMask, 2
  29              	UART_1_IntrTxMask:
  30 0002 0000     		.space	2
  31              		.section	.text.UART_1_Init,"ax",%progbits
  32              		.align	2
  33              		.global	UART_1_Init
  34              		.code	16
  35              		.thumb_func
  36              		.type	UART_1_Init, %function
  37              	UART_1_Init:
  38              	.LFB0:
  39              		.file 1 "Generated_Source\\PSoC4\\UART_1.c"
   1:Generated_Source\PSoC4/UART_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_1.c **** * \file UART_1.c
   3:Generated_Source\PSoC4/UART_1.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART_1.c **** *
   5:Generated_Source\PSoC4/UART_1.c **** * \brief
   6:Generated_Source\PSoC4/UART_1.c **** *  This file provides the source code to the API for the SCB Component.
   7:Generated_Source\PSoC4/UART_1.c **** *
   8:Generated_Source\PSoC4/UART_1.c **** * Note:
   9:Generated_Source\PSoC4/UART_1.c **** *
  10:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************
  11:Generated_Source\PSoC4/UART_1.c **** * \copyright
  12:Generated_Source\PSoC4/UART_1.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/UART_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/UART_1.c **** 
  18:Generated_Source\PSoC4/UART_1.c **** #include "UART_1_PVT.h"
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 2


  19:Generated_Source\PSoC4/UART_1.c **** 
  20:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_I2C_INC)
  21:Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_I2C_PVT.h"
  22:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_I2C_INC) */
  23:Generated_Source\PSoC4/UART_1.c **** 
  24:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_EZI2C_INC)
  25:Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_EZI2C_PVT.h"
  26:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_EZI2C_INC) */
  27:Generated_Source\PSoC4/UART_1.c **** 
  28:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_SPI_INC || UART_1_SCB_MODE_UART_INC)
  29:Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_SPI_UART_PVT.h"
  30:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_SPI_INC || UART_1_SCB_MODE_UART_INC) */
  31:Generated_Source\PSoC4/UART_1.c **** 
  32:Generated_Source\PSoC4/UART_1.c **** 
  33:Generated_Source\PSoC4/UART_1.c **** /***************************************
  34:Generated_Source\PSoC4/UART_1.c **** *    Run Time Configuration Vars
  35:Generated_Source\PSoC4/UART_1.c **** ***************************************/
  36:Generated_Source\PSoC4/UART_1.c **** 
  37:Generated_Source\PSoC4/UART_1.c **** /* Stores internal component configuration for Unconfigured mode */
  38:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
  39:Generated_Source\PSoC4/UART_1.c ****     /* Common configuration variables */
  40:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_scbMode = UART_1_SCB_MODE_UNCONFIG;
  41:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_scbEnableWake;
  42:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_scbEnableIntr;
  43:Generated_Source\PSoC4/UART_1.c **** 
  44:Generated_Source\PSoC4/UART_1.c ****     /* I2C configuration variables */
  45:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_mode;
  46:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_acceptAddr;
  47:Generated_Source\PSoC4/UART_1.c **** 
  48:Generated_Source\PSoC4/UART_1.c ****     /* SPI/UART configuration variables */
  49:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 * UART_1_rxBuffer;
  50:Generated_Source\PSoC4/UART_1.c ****     uint8  UART_1_rxDataBits;
  51:Generated_Source\PSoC4/UART_1.c ****     uint32 UART_1_rxBufferSize;
  52:Generated_Source\PSoC4/UART_1.c **** 
  53:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 * UART_1_txBuffer;
  54:Generated_Source\PSoC4/UART_1.c ****     uint8  UART_1_txDataBits;
  55:Generated_Source\PSoC4/UART_1.c ****     uint32 UART_1_txBufferSize;
  56:Generated_Source\PSoC4/UART_1.c **** 
  57:Generated_Source\PSoC4/UART_1.c ****     /* EZI2C configuration variables */
  58:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_numberOfAddr;
  59:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_subAddrSize;
  60:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
  61:Generated_Source\PSoC4/UART_1.c **** 
  62:Generated_Source\PSoC4/UART_1.c **** 
  63:Generated_Source\PSoC4/UART_1.c **** /***************************************
  64:Generated_Source\PSoC4/UART_1.c **** *     Common SCB Vars
  65:Generated_Source\PSoC4/UART_1.c **** ***************************************/
  66:Generated_Source\PSoC4/UART_1.c **** /**
  67:Generated_Source\PSoC4/UART_1.c **** * \addtogroup group_general
  68:Generated_Source\PSoC4/UART_1.c **** * \{
  69:Generated_Source\PSoC4/UART_1.c **** */
  70:Generated_Source\PSoC4/UART_1.c **** 
  71:Generated_Source\PSoC4/UART_1.c **** /** UART_1_initVar indicates whether the UART_1 
  72:Generated_Source\PSoC4/UART_1.c **** *  component has been initialized. The variable is initialized to 0 
  73:Generated_Source\PSoC4/UART_1.c **** *  and set to 1 the first time SCB_Start() is called. This allows 
  74:Generated_Source\PSoC4/UART_1.c **** *  the component to restart without reinitialization after the first 
  75:Generated_Source\PSoC4/UART_1.c **** *  call to the UART_1_Start() routine.
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 3


  76:Generated_Source\PSoC4/UART_1.c **** *
  77:Generated_Source\PSoC4/UART_1.c **** *  If re-initialization of the component is required, then the 
  78:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Init() function can be called before the 
  79:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Start() or UART_1_Enable() function.
  80:Generated_Source\PSoC4/UART_1.c **** */
  81:Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_initVar = 0u;
  82:Generated_Source\PSoC4/UART_1.c **** 
  83:Generated_Source\PSoC4/UART_1.c **** 
  84:Generated_Source\PSoC4/UART_1.c **** #if (! (UART_1_SCB_MODE_I2C_CONST_CFG || \
  85:Generated_Source\PSoC4/UART_1.c ****         UART_1_SCB_MODE_EZI2C_CONST_CFG))
  86:Generated_Source\PSoC4/UART_1.c ****     /** This global variable stores TX interrupt sources after 
  87:Generated_Source\PSoC4/UART_1.c ****     * UART_1_Stop() is called. Only these TX interrupt sources 
  88:Generated_Source\PSoC4/UART_1.c ****     * will be restored on a subsequent UART_1_Enable() call.
  89:Generated_Source\PSoC4/UART_1.c ****     */
  90:Generated_Source\PSoC4/UART_1.c ****     uint16 UART_1_IntrTxMask = 0u;
  91:Generated_Source\PSoC4/UART_1.c **** #endif /* (! (UART_1_SCB_MODE_I2C_CONST_CFG || \
  92:Generated_Source\PSoC4/UART_1.c ****               UART_1_SCB_MODE_EZI2C_CONST_CFG)) */
  93:Generated_Source\PSoC4/UART_1.c **** /** \} globals */
  94:Generated_Source\PSoC4/UART_1.c **** 
  95:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
  96:Generated_Source\PSoC4/UART_1.c **** #if !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER)
  97:Generated_Source\PSoC4/UART_1.c ****     void (*UART_1_customIntrHandler)(void) = NULL;
  98:Generated_Source\PSoC4/UART_1.c **** #endif /* !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER) */
  99:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 100:Generated_Source\PSoC4/UART_1.c **** 
 101:Generated_Source\PSoC4/UART_1.c **** 
 102:Generated_Source\PSoC4/UART_1.c **** /***************************************
 103:Generated_Source\PSoC4/UART_1.c **** *    Private Function Prototypes
 104:Generated_Source\PSoC4/UART_1.c **** ***************************************/
 105:Generated_Source\PSoC4/UART_1.c **** 
 106:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbEnableIntr(void);
 107:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModeStop(void);
 108:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModePostEnable(void);
 109:Generated_Source\PSoC4/UART_1.c **** 
 110:Generated_Source\PSoC4/UART_1.c **** 
 111:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 112:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Init
 113:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 114:Generated_Source\PSoC4/UART_1.c **** *
 115:Generated_Source\PSoC4/UART_1.c **** *  Initializes the UART_1 component to operate in one of the selected
 116:Generated_Source\PSoC4/UART_1.c **** *  configurations: I2C, SPI, UART or EZI2C.
 117:Generated_Source\PSoC4/UART_1.c **** *  When the configuration is set to "Unconfigured SCB", this function does
 118:Generated_Source\PSoC4/UART_1.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
 119:Generated_Source\PSoC4/UART_1.c **** *  UART_1_I2CInit, UART_1_SpiInit, 
 120:Generated_Source\PSoC4/UART_1.c **** *  UART_1_UartInit or UART_1_EzI2CInit.
 121:Generated_Source\PSoC4/UART_1.c **** *
 122:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 123:Generated_Source\PSoC4/UART_1.c **** void UART_1_Init(void)
 124:Generated_Source\PSoC4/UART_1.c **** {
  40              		.loc 1 124 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 0
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 4


  48 0002 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
 125:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 126:Generated_Source\PSoC4/UART_1.c ****     if (UART_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
 127:Generated_Source\PSoC4/UART_1.c ****     {
 128:Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 0u;
 129:Generated_Source\PSoC4/UART_1.c ****     }
 130:Generated_Source\PSoC4/UART_1.c ****     else
 131:Generated_Source\PSoC4/UART_1.c ****     {
 132:Generated_Source\PSoC4/UART_1.c ****         /* Initialization was done before this function call */
 133:Generated_Source\PSoC4/UART_1.c ****     }
 134:Generated_Source\PSoC4/UART_1.c **** 
 135:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_I2C_CONST_CFG)
 136:Generated_Source\PSoC4/UART_1.c ****     UART_1_I2CInit();
 137:Generated_Source\PSoC4/UART_1.c **** 
 138:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_SPI_CONST_CFG)
 139:Generated_Source\PSoC4/UART_1.c ****     UART_1_SpiInit();
 140:Generated_Source\PSoC4/UART_1.c **** 
 141:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_UART_CONST_CFG)
 142:Generated_Source\PSoC4/UART_1.c ****     UART_1_UartInit();
  50              		.loc 1 142 0
  51 0004 FFF7FEFF 		bl	UART_1_UartInit
 143:Generated_Source\PSoC4/UART_1.c **** 
 144:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_EZI2C_CONST_CFG)
 145:Generated_Source\PSoC4/UART_1.c ****     UART_1_EzI2CInit();
 146:Generated_Source\PSoC4/UART_1.c **** 
 147:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 148:Generated_Source\PSoC4/UART_1.c **** }
  52              		.loc 1 148 0
  53 0008 C046     		nop
  54 000a BD46     		mov	sp, r7
  55              		@ sp needed
  56 000c 80BD     		pop	{r7, pc}
  57              		.cfi_endproc
  58              	.LFE0:
  59              		.size	UART_1_Init, .-UART_1_Init
  60 000e C046     		.section	.text.UART_1_Enable,"ax",%progbits
  61              		.align	2
  62              		.global	UART_1_Enable
  63              		.code	16
  64              		.thumb_func
  65              		.type	UART_1_Enable, %function
  66              	UART_1_Enable:
  67              	.LFB1:
 149:Generated_Source\PSoC4/UART_1.c **** 
 150:Generated_Source\PSoC4/UART_1.c **** 
 151:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 152:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Enable
 153:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 154:Generated_Source\PSoC4/UART_1.c **** *
 155:Generated_Source\PSoC4/UART_1.c **** *  Enables UART_1 component operation: activates the hardware and 
 156:Generated_Source\PSoC4/UART_1.c **** *  internal interrupt. It also restores TX interrupt sources disabled after the 
 157:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Stop() function was called (note that level-triggered TX 
 158:Generated_Source\PSoC4/UART_1.c **** *  interrupt sources remain disabled to not cause code lock-up).
 159:Generated_Source\PSoC4/UART_1.c **** *  For I2C and EZI2C modes the interrupt is internal and mandatory for 
 160:Generated_Source\PSoC4/UART_1.c **** *  operation. For SPI and UART modes the interrupt can be configured as none, 
 161:Generated_Source\PSoC4/UART_1.c **** *  internal or external.
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 5


 162:Generated_Source\PSoC4/UART_1.c **** *  The UART_1 configuration should be not changed when the component
 163:Generated_Source\PSoC4/UART_1.c **** *  is enabled. Any configuration changes should be made after disabling the 
 164:Generated_Source\PSoC4/UART_1.c **** *  component.
 165:Generated_Source\PSoC4/UART_1.c **** *  When configuration is set to “Unconfigured UART_1”, the component 
 166:Generated_Source\PSoC4/UART_1.c **** *  must first be initialized to operate in one of the following configurations: 
 167:Generated_Source\PSoC4/UART_1.c **** *  I2C, SPI, UART or EZ I2C, using the mode-specific initialization API. 
 168:Generated_Source\PSoC4/UART_1.c **** *  Otherwise this function does not enable the component.
 169:Generated_Source\PSoC4/UART_1.c **** *
 170:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 171:Generated_Source\PSoC4/UART_1.c **** void UART_1_Enable(void)
 172:Generated_Source\PSoC4/UART_1.c **** {
  68              		.loc 1 172 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72 0000 80B5     		push	{r7, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
 173:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 174:Generated_Source\PSoC4/UART_1.c ****     /* Enable SCB block, only if it is already configured */
 175:Generated_Source\PSoC4/UART_1.c ****     if (!UART_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
 176:Generated_Source\PSoC4/UART_1.c ****     {
 177:Generated_Source\PSoC4/UART_1.c ****         UART_1_CTRL_REG |= UART_1_CTRL_ENABLED;
 178:Generated_Source\PSoC4/UART_1.c **** 
 179:Generated_Source\PSoC4/UART_1.c ****         UART_1_ScbEnableIntr();
 180:Generated_Source\PSoC4/UART_1.c **** 
 181:Generated_Source\PSoC4/UART_1.c ****         /* Call PostEnable function specific to current operation mode */
 182:Generated_Source\PSoC4/UART_1.c ****         UART_1_ScbModePostEnable();
 183:Generated_Source\PSoC4/UART_1.c ****     }
 184:Generated_Source\PSoC4/UART_1.c **** #else
 185:Generated_Source\PSoC4/UART_1.c ****     UART_1_CTRL_REG |= UART_1_CTRL_ENABLED;
  78              		.loc 1 185 0
  79 0004 064B     		ldr	r3, .L3
  80 0006 064A     		ldr	r2, .L3
  81 0008 1268     		ldr	r2, [r2]
  82 000a 8021     		movs	r1, #128
  83 000c 0906     		lsls	r1, r1, #24
  84 000e 0A43     		orrs	r2, r1
  85 0010 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/UART_1.c **** 
 187:Generated_Source\PSoC4/UART_1.c ****     UART_1_ScbEnableIntr();
  86              		.loc 1 187 0
  87 0012 FFF7FEFF 		bl	UART_1_ScbEnableIntr
 188:Generated_Source\PSoC4/UART_1.c **** 
 189:Generated_Source\PSoC4/UART_1.c ****     /* Call PostEnable function specific to current operation mode */
 190:Generated_Source\PSoC4/UART_1.c ****     UART_1_ScbModePostEnable();
  88              		.loc 1 190 0
  89 0016 FFF7FEFF 		bl	UART_1_ScbModePostEnable
 191:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 192:Generated_Source\PSoC4/UART_1.c **** }
  90              		.loc 1 192 0
  91 001a C046     		nop
  92 001c BD46     		mov	sp, r7
  93              		@ sp needed
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 6


  94 001e 80BD     		pop	{r7, pc}
  95              	.L4:
  96              		.align	2
  97              	.L3:
  98 0020 00000640 		.word	1074135040
  99              		.cfi_endproc
 100              	.LFE1:
 101              		.size	UART_1_Enable, .-UART_1_Enable
 102              		.section	.text.UART_1_Start,"ax",%progbits
 103              		.align	2
 104              		.global	UART_1_Start
 105              		.code	16
 106              		.thumb_func
 107              		.type	UART_1_Start, %function
 108              	UART_1_Start:
 109              	.LFB2:
 193:Generated_Source\PSoC4/UART_1.c **** 
 194:Generated_Source\PSoC4/UART_1.c **** 
 195:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Start
 197:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 198:Generated_Source\PSoC4/UART_1.c **** *
 199:Generated_Source\PSoC4/UART_1.c **** *  Invokes UART_1_Init() and UART_1_Enable().
 200:Generated_Source\PSoC4/UART_1.c **** *  After this function call, the component is enabled and ready for operation.
 201:Generated_Source\PSoC4/UART_1.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 202:Generated_Source\PSoC4/UART_1.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 203:Generated_Source\PSoC4/UART_1.c **** *  or EZI2C. Otherwise this function does not enable the component.
 204:Generated_Source\PSoC4/UART_1.c **** *
 205:Generated_Source\PSoC4/UART_1.c **** * \globalvars
 206:Generated_Source\PSoC4/UART_1.c **** *  UART_1_initVar - used to check initial configuration, modified
 207:Generated_Source\PSoC4/UART_1.c **** *  on first function call.
 208:Generated_Source\PSoC4/UART_1.c **** *
 209:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/UART_1.c **** void UART_1_Start(void)
 211:Generated_Source\PSoC4/UART_1.c **** {
 110              		.loc 1 211 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 212:Generated_Source\PSoC4/UART_1.c ****     if (0u == UART_1_initVar)
 120              		.loc 1 212 0
 121 0004 064B     		ldr	r3, .L7
 122 0006 1B78     		ldrb	r3, [r3]
 123 0008 002B     		cmp	r3, #0
 124 000a 04D1     		bne	.L6
 213:Generated_Source\PSoC4/UART_1.c ****     {
 214:Generated_Source\PSoC4/UART_1.c ****         UART_1_Init();
 125              		.loc 1 214 0
 126 000c FFF7FEFF 		bl	UART_1_Init
 215:Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 1u; /* Component was initialized */
 127              		.loc 1 215 0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 7


 128 0010 034B     		ldr	r3, .L7
 129 0012 0122     		movs	r2, #1
 130 0014 1A70     		strb	r2, [r3]
 131              	.L6:
 216:Generated_Source\PSoC4/UART_1.c ****     }
 217:Generated_Source\PSoC4/UART_1.c **** 
 218:Generated_Source\PSoC4/UART_1.c ****     UART_1_Enable();
 132              		.loc 1 218 0
 133 0016 FFF7FEFF 		bl	UART_1_Enable
 219:Generated_Source\PSoC4/UART_1.c **** }
 134              		.loc 1 219 0
 135 001a C046     		nop
 136 001c BD46     		mov	sp, r7
 137              		@ sp needed
 138 001e 80BD     		pop	{r7, pc}
 139              	.L8:
 140              		.align	2
 141              	.L7:
 142 0020 00000000 		.word	UART_1_initVar
 143              		.cfi_endproc
 144              	.LFE2:
 145              		.size	UART_1_Start, .-UART_1_Start
 146              		.section	.text.UART_1_Stop,"ax",%progbits
 147              		.align	2
 148              		.global	UART_1_Stop
 149              		.code	16
 150              		.thumb_func
 151              		.type	UART_1_Stop, %function
 152              	UART_1_Stop:
 153              	.LFB3:
 220:Generated_Source\PSoC4/UART_1.c **** 
 221:Generated_Source\PSoC4/UART_1.c **** 
 222:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 223:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Stop
 224:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 225:Generated_Source\PSoC4/UART_1.c **** *
 226:Generated_Source\PSoC4/UART_1.c **** *  Disables the UART_1 component: disable the hardware and internal 
 227:Generated_Source\PSoC4/UART_1.c **** *  interrupt. It also disables all TX interrupt sources so as not to cause an 
 228:Generated_Source\PSoC4/UART_1.c **** *  unexpected interrupt trigger because after the component is enabled, the 
 229:Generated_Source\PSoC4/UART_1.c **** *  TX FIFO is empty.
 230:Generated_Source\PSoC4/UART_1.c **** *  Refer to the function UART_1_Enable() for the interrupt 
 231:Generated_Source\PSoC4/UART_1.c **** *  configuration details.
 232:Generated_Source\PSoC4/UART_1.c **** *  This function disables the SCB component without checking to see if 
 233:Generated_Source\PSoC4/UART_1.c **** *  communication is in progress. Before calling this function it may be 
 234:Generated_Source\PSoC4/UART_1.c **** *  necessary to check the status of communication to make sure communication 
 235:Generated_Source\PSoC4/UART_1.c **** *  is complete. If this is not done then communication could be stopped mid 
 236:Generated_Source\PSoC4/UART_1.c **** *  byte and corrupted data could result.
 237:Generated_Source\PSoC4/UART_1.c **** *
 238:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/UART_1.c **** void UART_1_Stop(void)
 240:Generated_Source\PSoC4/UART_1.c **** {
 154              		.loc 1 240 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 8


 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 241:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 242:Generated_Source\PSoC4/UART_1.c ****     UART_1_DisableInt();
 243:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 244:Generated_Source\PSoC4/UART_1.c **** 
 245:Generated_Source\PSoC4/UART_1.c ****     /* Call Stop function specific to current operation mode */
 246:Generated_Source\PSoC4/UART_1.c ****     UART_1_ScbModeStop();
 164              		.loc 1 246 0
 165 0004 FFF7FEFF 		bl	UART_1_ScbModeStop
 247:Generated_Source\PSoC4/UART_1.c **** 
 248:Generated_Source\PSoC4/UART_1.c ****     /* Disable SCB IP */
 249:Generated_Source\PSoC4/UART_1.c ****     UART_1_CTRL_REG &= (uint32) ~UART_1_CTRL_ENABLED;
 166              		.loc 1 249 0
 167 0008 054B     		ldr	r3, .L10
 168 000a 054A     		ldr	r2, .L10
 169 000c 1268     		ldr	r2, [r2]
 170 000e 5200     		lsls	r2, r2, #1
 171 0010 5208     		lsrs	r2, r2, #1
 172 0012 1A60     		str	r2, [r3]
 250:Generated_Source\PSoC4/UART_1.c **** 
 251:Generated_Source\PSoC4/UART_1.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 252:Generated_Source\PSoC4/UART_1.c ****     * interrupt trigger after the component will be enabled because the 
 253:Generated_Source\PSoC4/UART_1.c ****     * TX FIFO is empty.
 254:Generated_Source\PSoC4/UART_1.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 255:Generated_Source\PSoC4/UART_1.c ****     * sources when it is disabled. This can cause a code lock-up in the
 256:Generated_Source\PSoC4/UART_1.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 257:Generated_Source\PSoC4/UART_1.c ****     * is disabled.
 258:Generated_Source\PSoC4/UART_1.c ****     */
 259:Generated_Source\PSoC4/UART_1.c ****     UART_1_SetTxInterruptMode(UART_1_NO_INTR_SOURCES);
 173              		.loc 1 259 0
 174 0014 034B     		ldr	r3, .L10+4
 175 0016 0022     		movs	r2, #0
 176 0018 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/UART_1.c **** 
 261:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 262:Generated_Source\PSoC4/UART_1.c ****     UART_1_ClearPendingInt();
 263:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 264:Generated_Source\PSoC4/UART_1.c **** }
 177              		.loc 1 264 0
 178 001a C046     		nop
 179 001c BD46     		mov	sp, r7
 180              		@ sp needed
 181 001e 80BD     		pop	{r7, pc}
 182              	.L11:
 183              		.align	2
 184              	.L10:
 185 0020 00000640 		.word	1074135040
 186 0024 880F0640 		.word	1074139016
 187              		.cfi_endproc
 188              	.LFE3:
 189              		.size	UART_1_Stop, .-UART_1_Stop
 190              		.section	.text.UART_1_SetRxFifoLevel,"ax",%progbits
 191              		.align	2
 192              		.global	UART_1_SetRxFifoLevel
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 9


 193              		.code	16
 194              		.thumb_func
 195              		.type	UART_1_SetRxFifoLevel, %function
 196              	UART_1_SetRxFifoLevel:
 197              	.LFB4:
 265:Generated_Source\PSoC4/UART_1.c **** 
 266:Generated_Source\PSoC4/UART_1.c **** 
 267:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 268:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_SetRxFifoLevel
 269:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 270:Generated_Source\PSoC4/UART_1.c **** *
 271:Generated_Source\PSoC4/UART_1.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 272:Generated_Source\PSoC4/UART_1.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 273:Generated_Source\PSoC4/UART_1.c **** *  interrupt request is generated.
 274:Generated_Source\PSoC4/UART_1.c **** *
 275:Generated_Source\PSoC4/UART_1.c **** *  \param level: Level in the RX FIFO to generate RX level interrupt.
 276:Generated_Source\PSoC4/UART_1.c **** *   The range of valid level values is between 0 and RX FIFO depth - 1.
 277:Generated_Source\PSoC4/UART_1.c **** *
 278:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/UART_1.c **** void UART_1_SetRxFifoLevel(uint32 level)
 280:Generated_Source\PSoC4/UART_1.c **** {
 198              		.loc 1 280 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 16
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202 0000 80B5     		push	{r7, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 84B0     		sub	sp, sp, #16
 207              		.cfi_def_cfa_offset 24
 208 0004 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 210 0006 7860     		str	r0, [r7, #4]
 281:Generated_Source\PSoC4/UART_1.c ****     uint32 rxFifoCtrl;
 282:Generated_Source\PSoC4/UART_1.c **** 
 283:Generated_Source\PSoC4/UART_1.c ****     rxFifoCtrl = UART_1_RX_FIFO_CTRL_REG;
 211              		.loc 1 283 0
 212 0008 094B     		ldr	r3, .L13
 213 000a 1B68     		ldr	r3, [r3]
 214 000c FB60     		str	r3, [r7, #12]
 284:Generated_Source\PSoC4/UART_1.c **** 
 285:Generated_Source\PSoC4/UART_1.c ****     rxFifoCtrl &= ((uint32) ~UART_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 215              		.loc 1 285 0
 216 000e FB68     		ldr	r3, [r7, #12]
 217 0010 0722     		movs	r2, #7
 218 0012 9343     		bics	r3, r2
 219 0014 FB60     		str	r3, [r7, #12]
 286:Generated_Source\PSoC4/UART_1.c ****     rxFifoCtrl |= ((uint32) (UART_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 220              		.loc 1 286 0
 221 0016 7B68     		ldr	r3, [r7, #4]
 222 0018 0722     		movs	r2, #7
 223 001a 1340     		ands	r3, r2
 224 001c FA68     		ldr	r2, [r7, #12]
 225 001e 1343     		orrs	r3, r2
 226 0020 FB60     		str	r3, [r7, #12]
 287:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 10


 288:Generated_Source\PSoC4/UART_1.c ****     UART_1_RX_FIFO_CTRL_REG = rxFifoCtrl;
 227              		.loc 1 288 0
 228 0022 034B     		ldr	r3, .L13
 229 0024 FA68     		ldr	r2, [r7, #12]
 230 0026 1A60     		str	r2, [r3]
 289:Generated_Source\PSoC4/UART_1.c **** }
 231              		.loc 1 289 0
 232 0028 C046     		nop
 233 002a BD46     		mov	sp, r7
 234 002c 04B0     		add	sp, sp, #16
 235              		@ sp needed
 236 002e 80BD     		pop	{r7, pc}
 237              	.L14:
 238              		.align	2
 239              	.L13:
 240 0030 04030640 		.word	1074135812
 241              		.cfi_endproc
 242              	.LFE4:
 243              		.size	UART_1_SetRxFifoLevel, .-UART_1_SetRxFifoLevel
 244              		.section	.text.UART_1_SetTxFifoLevel,"ax",%progbits
 245              		.align	2
 246              		.global	UART_1_SetTxFifoLevel
 247              		.code	16
 248              		.thumb_func
 249              		.type	UART_1_SetTxFifoLevel, %function
 250              	UART_1_SetTxFifoLevel:
 251              	.LFB5:
 290:Generated_Source\PSoC4/UART_1.c **** 
 291:Generated_Source\PSoC4/UART_1.c **** 
 292:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 293:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_SetTxFifoLevel
 294:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 295:Generated_Source\PSoC4/UART_1.c **** *
 296:Generated_Source\PSoC4/UART_1.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 297:Generated_Source\PSoC4/UART_1.c **** *  When the TX FIFO has less entries than the TX FIFO level an TX level
 298:Generated_Source\PSoC4/UART_1.c **** *  interrupt request is generated.
 299:Generated_Source\PSoC4/UART_1.c **** *
 300:Generated_Source\PSoC4/UART_1.c **** *  \param level: Level in the TX FIFO to generate TX level interrupt.
 301:Generated_Source\PSoC4/UART_1.c **** *   The range of valid level values is between 0 and TX FIFO depth - 1.
 302:Generated_Source\PSoC4/UART_1.c **** *
 303:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 304:Generated_Source\PSoC4/UART_1.c **** void UART_1_SetTxFifoLevel(uint32 level)
 305:Generated_Source\PSoC4/UART_1.c **** {
 252              		.loc 1 305 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 16
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256 0000 80B5     		push	{r7, lr}
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 7, -8
 259              		.cfi_offset 14, -4
 260 0002 84B0     		sub	sp, sp, #16
 261              		.cfi_def_cfa_offset 24
 262 0004 00AF     		add	r7, sp, #0
 263              		.cfi_def_cfa_register 7
 264 0006 7860     		str	r0, [r7, #4]
 306:Generated_Source\PSoC4/UART_1.c ****     uint32 txFifoCtrl;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 11


 307:Generated_Source\PSoC4/UART_1.c **** 
 308:Generated_Source\PSoC4/UART_1.c ****     txFifoCtrl = UART_1_TX_FIFO_CTRL_REG;
 265              		.loc 1 308 0
 266 0008 094B     		ldr	r3, .L16
 267 000a 1B68     		ldr	r3, [r3]
 268 000c FB60     		str	r3, [r7, #12]
 309:Generated_Source\PSoC4/UART_1.c **** 
 310:Generated_Source\PSoC4/UART_1.c ****     txFifoCtrl &= ((uint32) ~UART_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 269              		.loc 1 310 0
 270 000e FB68     		ldr	r3, [r7, #12]
 271 0010 0722     		movs	r2, #7
 272 0012 9343     		bics	r3, r2
 273 0014 FB60     		str	r3, [r7, #12]
 311:Generated_Source\PSoC4/UART_1.c ****     txFifoCtrl |= ((uint32) (UART_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 274              		.loc 1 311 0
 275 0016 7B68     		ldr	r3, [r7, #4]
 276 0018 0722     		movs	r2, #7
 277 001a 1340     		ands	r3, r2
 278 001c FA68     		ldr	r2, [r7, #12]
 279 001e 1343     		orrs	r3, r2
 280 0020 FB60     		str	r3, [r7, #12]
 312:Generated_Source\PSoC4/UART_1.c **** 
 313:Generated_Source\PSoC4/UART_1.c ****     UART_1_TX_FIFO_CTRL_REG = txFifoCtrl;
 281              		.loc 1 313 0
 282 0022 034B     		ldr	r3, .L16
 283 0024 FA68     		ldr	r2, [r7, #12]
 284 0026 1A60     		str	r2, [r3]
 314:Generated_Source\PSoC4/UART_1.c **** }
 285              		.loc 1 314 0
 286 0028 C046     		nop
 287 002a BD46     		mov	sp, r7
 288 002c 04B0     		add	sp, sp, #16
 289              		@ sp needed
 290 002e 80BD     		pop	{r7, pc}
 291              	.L17:
 292              		.align	2
 293              	.L16:
 294 0030 04020640 		.word	1074135556
 295              		.cfi_endproc
 296              	.LFE5:
 297              		.size	UART_1_SetTxFifoLevel, .-UART_1_SetTxFifoLevel
 298              		.section	.text.UART_1_ScbEnableIntr,"ax",%progbits
 299              		.align	2
 300              		.code	16
 301              		.thumb_func
 302              		.type	UART_1_ScbEnableIntr, %function
 303              	UART_1_ScbEnableIntr:
 304              	.LFB6:
 315:Generated_Source\PSoC4/UART_1.c **** 
 316:Generated_Source\PSoC4/UART_1.c **** 
 317:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 318:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetCustomInterruptHandler
 320:Generated_Source\PSoC4/UART_1.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/UART_1.c ****     *
 322:Generated_Source\PSoC4/UART_1.c ****     *  Registers a function to be called by the internal interrupt handler.
 323:Generated_Source\PSoC4/UART_1.c ****     *  First the function that is registered is called, then the internal interrupt
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 12


 324:Generated_Source\PSoC4/UART_1.c ****     *  handler performs any operation such as software buffer management functions
 325:Generated_Source\PSoC4/UART_1.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
 326:Generated_Source\PSoC4/UART_1.c ****     *  the software buffer operations. Only one custom handler is supported, which
 327:Generated_Source\PSoC4/UART_1.c ****     *  is the function provided by the most recent call.
 328:Generated_Source\PSoC4/UART_1.c ****     *  At the initialization time no custom handler is registered.
 329:Generated_Source\PSoC4/UART_1.c ****     *
 330:Generated_Source\PSoC4/UART_1.c ****     *  \param func: Pointer to the function to register.
 331:Generated_Source\PSoC4/UART_1.c ****     *        The value NULL indicates to remove the current custom interrupt
 332:Generated_Source\PSoC4/UART_1.c ****     *        handler.
 333:Generated_Source\PSoC4/UART_1.c ****     *
 334:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 335:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetCustomInterruptHandler(void (*func)(void))
 336:Generated_Source\PSoC4/UART_1.c ****     {
 337:Generated_Source\PSoC4/UART_1.c ****     #if !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER)
 338:Generated_Source\PSoC4/UART_1.c ****         UART_1_customIntrHandler = func; /* Register interrupt handler */
 339:Generated_Source\PSoC4/UART_1.c ****     #else
 340:Generated_Source\PSoC4/UART_1.c ****         if (NULL != func)
 341:Generated_Source\PSoC4/UART_1.c ****         {
 342:Generated_Source\PSoC4/UART_1.c ****             /* Suppress compiler warning */
 343:Generated_Source\PSoC4/UART_1.c ****         }
 344:Generated_Source\PSoC4/UART_1.c ****     #endif /* !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER) */
 345:Generated_Source\PSoC4/UART_1.c ****     }
 346:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 347:Generated_Source\PSoC4/UART_1.c **** 
 348:Generated_Source\PSoC4/UART_1.c **** 
 349:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 350:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ScbModeEnableIntr
 351:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 352:Generated_Source\PSoC4/UART_1.c **** *
 353:Generated_Source\PSoC4/UART_1.c **** *  Enables an interrupt for a specific mode.
 354:Generated_Source\PSoC4/UART_1.c **** *
 355:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbEnableIntr(void)
 357:Generated_Source\PSoC4/UART_1.c **** {
 305              		.loc 1 357 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 80B5     		push	{r7, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 359:Generated_Source\PSoC4/UART_1.c ****     /* Enable interrupt in NVIC */
 360:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 361:Generated_Source\PSoC4/UART_1.c ****         if (0u != UART_1_scbEnableIntr)
 362:Generated_Source\PSoC4/UART_1.c ****         {
 363:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableInt();
 364:Generated_Source\PSoC4/UART_1.c ****         }
 365:Generated_Source\PSoC4/UART_1.c **** 
 366:Generated_Source\PSoC4/UART_1.c ****     #else
 367:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableInt();
 368:Generated_Source\PSoC4/UART_1.c **** 
 369:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 370:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 13


 371:Generated_Source\PSoC4/UART_1.c **** }
 315              		.loc 1 371 0
 316 0004 C046     		nop
 317 0006 BD46     		mov	sp, r7
 318              		@ sp needed
 319 0008 80BD     		pop	{r7, pc}
 320              		.cfi_endproc
 321              	.LFE6:
 322              		.size	UART_1_ScbEnableIntr, .-UART_1_ScbEnableIntr
 323 000a C046     		.section	.text.UART_1_ScbModePostEnable,"ax",%progbits
 324              		.align	2
 325              		.code	16
 326              		.thumb_func
 327              		.type	UART_1_ScbModePostEnable, %function
 328              	UART_1_ScbModePostEnable:
 329              	.LFB7:
 372:Generated_Source\PSoC4/UART_1.c **** 
 373:Generated_Source\PSoC4/UART_1.c **** 
 374:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 375:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ScbModePostEnable
 376:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 377:Generated_Source\PSoC4/UART_1.c **** *
 378:Generated_Source\PSoC4/UART_1.c **** *  Calls the PostEnable function for a specific operation mode.
 379:Generated_Source\PSoC4/UART_1.c **** *
 380:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 381:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModePostEnable(void)
 382:Generated_Source\PSoC4/UART_1.c **** {
 330              		.loc 1 382 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334 0000 80B5     		push	{r7, lr}
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 00AF     		add	r7, sp, #0
 339              		.cfi_def_cfa_register 7
 383:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 384:Generated_Source\PSoC4/UART_1.c **** #if (!UART_1_CY_SCBIP_V1)
 385:Generated_Source\PSoC4/UART_1.c ****     if (UART_1_SCB_MODE_SPI_RUNTM_CFG)
 386:Generated_Source\PSoC4/UART_1.c ****     {
 387:Generated_Source\PSoC4/UART_1.c ****         UART_1_SpiPostEnable();
 388:Generated_Source\PSoC4/UART_1.c ****     }
 389:Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_UART_RUNTM_CFG)
 390:Generated_Source\PSoC4/UART_1.c ****     {
 391:Generated_Source\PSoC4/UART_1.c ****         UART_1_UartPostEnable();
 392:Generated_Source\PSoC4/UART_1.c ****     }
 393:Generated_Source\PSoC4/UART_1.c ****     else
 394:Generated_Source\PSoC4/UART_1.c ****     {
 395:Generated_Source\PSoC4/UART_1.c ****         /* Unknown mode: do nothing */
 396:Generated_Source\PSoC4/UART_1.c ****     }
 397:Generated_Source\PSoC4/UART_1.c **** #endif /* (!UART_1_CY_SCBIP_V1) */
 398:Generated_Source\PSoC4/UART_1.c **** 
 399:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_SPI_CONST_CFG)
 400:Generated_Source\PSoC4/UART_1.c ****     UART_1_SpiPostEnable();
 401:Generated_Source\PSoC4/UART_1.c **** 
 402:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_UART_CONST_CFG)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 14


 403:Generated_Source\PSoC4/UART_1.c ****     UART_1_UartPostEnable();
 340              		.loc 1 403 0
 341 0004 FFF7FEFF 		bl	UART_1_UartPostEnable
 404:Generated_Source\PSoC4/UART_1.c **** 
 405:Generated_Source\PSoC4/UART_1.c **** #else
 406:Generated_Source\PSoC4/UART_1.c ****     /* Unknown mode: do nothing */
 407:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 408:Generated_Source\PSoC4/UART_1.c **** }
 342              		.loc 1 408 0
 343 0008 C046     		nop
 344 000a BD46     		mov	sp, r7
 345              		@ sp needed
 346 000c 80BD     		pop	{r7, pc}
 347              		.cfi_endproc
 348              	.LFE7:
 349              		.size	UART_1_ScbModePostEnable, .-UART_1_ScbModePostEnable
 350 000e C046     		.section	.text.UART_1_ScbModeStop,"ax",%progbits
 351              		.align	2
 352              		.code	16
 353              		.thumb_func
 354              		.type	UART_1_ScbModeStop, %function
 355              	UART_1_ScbModeStop:
 356              	.LFB8:
 409:Generated_Source\PSoC4/UART_1.c **** 
 410:Generated_Source\PSoC4/UART_1.c **** 
 411:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ScbModeStop
 413:Generated_Source\PSoC4/UART_1.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/UART_1.c **** *
 415:Generated_Source\PSoC4/UART_1.c **** *  Calls the Stop function for a specific operation mode.
 416:Generated_Source\PSoC4/UART_1.c **** *
 417:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 418:Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModeStop(void)
 419:Generated_Source\PSoC4/UART_1.c **** {
 357              		.loc 1 419 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361 0000 80B5     		push	{r7, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 420:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 421:Generated_Source\PSoC4/UART_1.c ****     if (UART_1_SCB_MODE_I2C_RUNTM_CFG)
 422:Generated_Source\PSoC4/UART_1.c ****     {
 423:Generated_Source\PSoC4/UART_1.c ****         UART_1_I2CStop();
 424:Generated_Source\PSoC4/UART_1.c ****     }
 425:Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_EZI2C_RUNTM_CFG)
 426:Generated_Source\PSoC4/UART_1.c ****     {
 427:Generated_Source\PSoC4/UART_1.c ****         UART_1_EzI2CStop();
 428:Generated_Source\PSoC4/UART_1.c ****     }
 429:Generated_Source\PSoC4/UART_1.c **** #if (!UART_1_CY_SCBIP_V1)
 430:Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_SPI_RUNTM_CFG)
 431:Generated_Source\PSoC4/UART_1.c ****     {
 432:Generated_Source\PSoC4/UART_1.c ****         UART_1_SpiStop();
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 15


 433:Generated_Source\PSoC4/UART_1.c ****     }
 434:Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_UART_RUNTM_CFG)
 435:Generated_Source\PSoC4/UART_1.c ****     {
 436:Generated_Source\PSoC4/UART_1.c ****         UART_1_UartStop();
 437:Generated_Source\PSoC4/UART_1.c ****     }
 438:Generated_Source\PSoC4/UART_1.c **** #endif /* (!UART_1_CY_SCBIP_V1) */
 439:Generated_Source\PSoC4/UART_1.c ****     else
 440:Generated_Source\PSoC4/UART_1.c ****     {
 441:Generated_Source\PSoC4/UART_1.c ****         /* Unknown mode: do nothing */
 442:Generated_Source\PSoC4/UART_1.c ****     }
 443:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_I2C_CONST_CFG)
 444:Generated_Source\PSoC4/UART_1.c ****     UART_1_I2CStop();
 445:Generated_Source\PSoC4/UART_1.c **** 
 446:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_EZI2C_CONST_CFG)
 447:Generated_Source\PSoC4/UART_1.c ****     UART_1_EzI2CStop();
 448:Generated_Source\PSoC4/UART_1.c **** 
 449:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_SPI_CONST_CFG)
 450:Generated_Source\PSoC4/UART_1.c ****     UART_1_SpiStop();
 451:Generated_Source\PSoC4/UART_1.c **** 
 452:Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_UART_CONST_CFG)
 453:Generated_Source\PSoC4/UART_1.c ****     UART_1_UartStop();
 367              		.loc 1 453 0
 368 0004 FFF7FEFF 		bl	UART_1_UartStop
 454:Generated_Source\PSoC4/UART_1.c **** 
 455:Generated_Source\PSoC4/UART_1.c **** #else
 456:Generated_Source\PSoC4/UART_1.c ****     /* Unknown mode: do nothing */
 457:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 458:Generated_Source\PSoC4/UART_1.c **** }
 369              		.loc 1 458 0
 370 0008 C046     		nop
 371 000a BD46     		mov	sp, r7
 372              		@ sp needed
 373 000c 80BD     		pop	{r7, pc}
 374              		.cfi_endproc
 375              	.LFE8:
 376              		.size	UART_1_ScbModeStop, .-UART_1_ScbModeStop
 377 000e C046     		.section	.text.UART_1_I2CSlaveNackGeneration,"ax",%progbits
 378              		.align	2
 379              		.global	UART_1_I2CSlaveNackGeneration
 380              		.code	16
 381              		.thumb_func
 382              		.type	UART_1_I2CSlaveNackGeneration, %function
 383              	UART_1_I2CSlaveNackGeneration:
 384              	.LFB9:
 459:Generated_Source\PSoC4/UART_1.c **** 
 460:Generated_Source\PSoC4/UART_1.c **** 
 461:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 462:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 463:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetPins
 464:Generated_Source\PSoC4/UART_1.c ****     ****************************************************************************//**
 465:Generated_Source\PSoC4/UART_1.c ****     *
 466:Generated_Source\PSoC4/UART_1.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 467:Generated_Source\PSoC4/UART_1.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 468:Generated_Source\PSoC4/UART_1.c ****     *  initialization function calls it.
 469:Generated_Source\PSoC4/UART_1.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 470:Generated_Source\PSoC4/UART_1.c ****     *  is selected in design time.
 471:Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 16


 472:Generated_Source\PSoC4/UART_1.c ****     *  \param mode:      Mode of SCB operation.
 473:Generated_Source\PSoC4/UART_1.c ****     *  \param subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 474:Generated_Source\PSoC4/UART_1.c ****     *             modes.
 475:Generated_Source\PSoC4/UART_1.c ****     *  \param uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 476:Generated_Source\PSoC4/UART_1.c ****     *
 477:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 478:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 479:Generated_Source\PSoC4/UART_1.c ****     {
 480:Generated_Source\PSoC4/UART_1.c ****         uint32 pinsDm[UART_1_SCB_PINS_NUMBER];
 481:Generated_Source\PSoC4/UART_1.c ****         uint32 i;
 482:Generated_Source\PSoC4/UART_1.c ****         
 483:Generated_Source\PSoC4/UART_1.c ****     #if (!UART_1_CY_SCBIP_V1)
 484:Generated_Source\PSoC4/UART_1.c ****         uint32 pinsInBuf = 0u;
 485:Generated_Source\PSoC4/UART_1.c ****     #endif /* (!UART_1_CY_SCBIP_V1) */
 486:Generated_Source\PSoC4/UART_1.c ****         
 487:Generated_Source\PSoC4/UART_1.c ****         uint32 hsiomSel[UART_1_SCB_PINS_NUMBER] = 
 488:Generated_Source\PSoC4/UART_1.c ****         {
 489:Generated_Source\PSoC4/UART_1.c ****             UART_1_RX_SCL_MOSI_HSIOM_SEL_GPIO,
 490:Generated_Source\PSoC4/UART_1.c ****             UART_1_TX_SDA_MISO_HSIOM_SEL_GPIO,
 491:Generated_Source\PSoC4/UART_1.c ****             0u,
 492:Generated_Source\PSoC4/UART_1.c ****             0u,
 493:Generated_Source\PSoC4/UART_1.c ****             0u,
 494:Generated_Source\PSoC4/UART_1.c ****             0u,
 495:Generated_Source\PSoC4/UART_1.c ****             0u,
 496:Generated_Source\PSoC4/UART_1.c ****         };
 497:Generated_Source\PSoC4/UART_1.c **** 
 498:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CY_SCBIP_V1)
 499:Generated_Source\PSoC4/UART_1.c ****         /* Supress compiler warning. */
 500:Generated_Source\PSoC4/UART_1.c ****         if ((0u == subMode) || (0u == uartEnableMask))
 501:Generated_Source\PSoC4/UART_1.c ****         {
 502:Generated_Source\PSoC4/UART_1.c ****         }
 503:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CY_SCBIP_V1) */
 504:Generated_Source\PSoC4/UART_1.c **** 
 505:Generated_Source\PSoC4/UART_1.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 506:Generated_Source\PSoC4/UART_1.c ****         for (i = 0u; i < UART_1_SCB_PINS_NUMBER; i++)
 507:Generated_Source\PSoC4/UART_1.c ****         {
 508:Generated_Source\PSoC4/UART_1.c ****             pinsDm[i] = UART_1_PIN_DM_ALG_HIZ;
 509:Generated_Source\PSoC4/UART_1.c ****         }
 510:Generated_Source\PSoC4/UART_1.c **** 
 511:Generated_Source\PSoC4/UART_1.c ****         if ((UART_1_SCB_MODE_I2C   == mode) ||
 512:Generated_Source\PSoC4/UART_1.c ****             (UART_1_SCB_MODE_EZI2C == mode))
 513:Generated_Source\PSoC4/UART_1.c ****         {
 514:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_SCL_MOSI_PIN)
 515:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_RX_SCL_MOSI_HSIOM_SEL_I2C;
 516:Generated_Source\PSoC4/UART_1.c ****             pinsDm  [UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_OD_LO;
 517:Generated_Source\PSoC4/UART_1.c ****         #elif (UART_1_RX_WAKE_SCL_MOSI_PIN)
 518:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_1_RX_WAKE_SCL_MOSI_HSIOM_SEL_I2C;
 519:Generated_Source\PSoC4/UART_1.c ****             pinsDm  [UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_OD_LO;
 520:Generated_Source\PSoC4/UART_1.c ****         #else
 521:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 522:Generated_Source\PSoC4/UART_1.c ****         
 523:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_SDA_MISO_PIN)
 524:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_TX_SDA_MISO_HSIOM_SEL_I2C;
 525:Generated_Source\PSoC4/UART_1.c ****             pinsDm  [UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_OD_LO;
 526:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_SDA_MISO_PIN) */
 527:Generated_Source\PSoC4/UART_1.c ****         }
 528:Generated_Source\PSoC4/UART_1.c ****     #if (!UART_1_CY_SCBIP_V1)
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 17


 529:Generated_Source\PSoC4/UART_1.c ****         else if (UART_1_SCB_MODE_SPI == mode)
 530:Generated_Source\PSoC4/UART_1.c ****         {
 531:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_SCL_MOSI_PIN)
 532:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_RX_SCL_MOSI_HSIOM_SEL_SPI;
 533:Generated_Source\PSoC4/UART_1.c ****         #elif (UART_1_RX_WAKE_SCL_MOSI_PIN)
 534:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_1_RX_WAKE_SCL_MOSI_HSIOM_SEL_SPI;
 535:Generated_Source\PSoC4/UART_1.c ****         #else
 536:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 537:Generated_Source\PSoC4/UART_1.c ****         
 538:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_SDA_MISO_PIN)
 539:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_TX_SDA_MISO_HSIOM_SEL_SPI;
 540:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_SDA_MISO_PIN) */
 541:Generated_Source\PSoC4/UART_1.c ****         
 542:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_SCLK_PIN)
 543:Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_SCLK_PIN_INDEX] = UART_1_SCLK_HSIOM_SEL_SPI;
 544:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_SCLK_PIN) */
 545:Generated_Source\PSoC4/UART_1.c **** 
 546:Generated_Source\PSoC4/UART_1.c ****             if (UART_1_SPI_SLAVE == subMode)
 547:Generated_Source\PSoC4/UART_1.c ****             {
 548:Generated_Source\PSoC4/UART_1.c ****                 /* Slave */
 549:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 550:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 551:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_SCLK_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 552:Generated_Source\PSoC4/UART_1.c **** 
 553:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS0_PIN)
 554:Generated_Source\PSoC4/UART_1.c ****                 /* Only SS0 is valid choice for Slave */
 555:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel[UART_1_SS0_PIN_INDEX] = UART_1_SS0_HSIOM_SEL_SPI;
 556:Generated_Source\PSoC4/UART_1.c ****                 pinsDm  [UART_1_SS0_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 557:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS0_PIN) */
 558:Generated_Source\PSoC4/UART_1.c **** 
 559:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_TX_SDA_MISO_PIN)
 560:Generated_Source\PSoC4/UART_1.c ****                 /* Disable input buffer */
 561:Generated_Source\PSoC4/UART_1.c ****                  pinsInBuf |= UART_1_TX_SDA_MISO_PIN_MASK;
 562:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_TX_SDA_MISO_PIN) */
 563:Generated_Source\PSoC4/UART_1.c ****             }
 564:Generated_Source\PSoC4/UART_1.c ****             else 
 565:Generated_Source\PSoC4/UART_1.c ****             {
 566:Generated_Source\PSoC4/UART_1.c ****                 /* (Master) */
 567:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 568:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 569:Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_SCLK_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 570:Generated_Source\PSoC4/UART_1.c **** 
 571:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS0_PIN)
 572:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS0_PIN_INDEX] = UART_1_SS0_HSIOM_SEL_SPI;
 573:Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS0_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 574:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS0_PIN_MASK;
 575:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS0_PIN) */
 576:Generated_Source\PSoC4/UART_1.c **** 
 577:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS1_PIN)
 578:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS1_PIN_INDEX] = UART_1_SS1_HSIOM_SEL_SPI;
 579:Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS1_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 580:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS1_PIN_MASK;
 581:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS1_PIN) */
 582:Generated_Source\PSoC4/UART_1.c **** 
 583:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS2_PIN)
 584:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS2_PIN_INDEX] = UART_1_SS2_HSIOM_SEL_SPI;
 585:Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS2_PIN_INDEX] = UART_1_PIN_DM_STRONG;
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 18


 586:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS2_PIN_MASK;
 587:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS2_PIN) */
 588:Generated_Source\PSoC4/UART_1.c **** 
 589:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS3_PIN)
 590:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS3_PIN_INDEX] = UART_1_SS3_HSIOM_SEL_SPI;
 591:Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS3_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 592:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS3_PIN_MASK;
 593:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS3_PIN) */
 594:Generated_Source\PSoC4/UART_1.c **** 
 595:Generated_Source\PSoC4/UART_1.c ****                 /* Disable input buffers */
 596:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_RX_SCL_MOSI_PIN)
 597:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_RX_SCL_MOSI_PIN_MASK;
 598:Generated_Source\PSoC4/UART_1.c ****             #elif (UART_1_RX_WAKE_SCL_MOSI_PIN)
 599:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_RX_WAKE_SCL_MOSI_PIN_MASK;
 600:Generated_Source\PSoC4/UART_1.c ****             #else
 601:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 602:Generated_Source\PSoC4/UART_1.c **** 
 603:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SCLK_PIN)
 604:Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SCLK_PIN_MASK;
 605:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SCLK_PIN) */
 606:Generated_Source\PSoC4/UART_1.c ****             }
 607:Generated_Source\PSoC4/UART_1.c ****         }
 608:Generated_Source\PSoC4/UART_1.c ****         else /* UART */
 609:Generated_Source\PSoC4/UART_1.c ****         {
 610:Generated_Source\PSoC4/UART_1.c ****             if (UART_1_UART_MODE_SMARTCARD == subMode)
 611:Generated_Source\PSoC4/UART_1.c ****             {
 612:Generated_Source\PSoC4/UART_1.c ****                 /* SmartCard */
 613:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_TX_SDA_MISO_PIN)
 614:Generated_Source\PSoC4/UART_1.c ****                 hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_TX_SDA_MISO_HSIOM_SEL_UART;
 615:Generated_Source\PSoC4/UART_1.c ****                 pinsDm  [UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_OD_LO;
 616:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_TX_SDA_MISO_PIN) */
 617:Generated_Source\PSoC4/UART_1.c ****             }
 618:Generated_Source\PSoC4/UART_1.c ****             else /* Standard or IrDA */
 619:Generated_Source\PSoC4/UART_1.c ****             {
 620:Generated_Source\PSoC4/UART_1.c ****                 if (0u != (UART_1_UART_RX_PIN_ENABLE & uartEnableMask))
 621:Generated_Source\PSoC4/UART_1.c ****                 {
 622:Generated_Source\PSoC4/UART_1.c ****                 #if (UART_1_RX_SCL_MOSI_PIN)
 623:Generated_Source\PSoC4/UART_1.c ****                     hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_RX_SCL_MOSI_HSIOM_SEL_UART;
 624:Generated_Source\PSoC4/UART_1.c ****                     pinsDm  [UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 625:Generated_Source\PSoC4/UART_1.c ****                 #elif (UART_1_RX_WAKE_SCL_MOSI_PIN)
 626:Generated_Source\PSoC4/UART_1.c ****                     hsiomSel[UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_1_RX_WAKE_SCL_MOSI_HSIOM_SEL
 627:Generated_Source\PSoC4/UART_1.c ****                     pinsDm  [UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 628:Generated_Source\PSoC4/UART_1.c ****                 #else
 629:Generated_Source\PSoC4/UART_1.c ****                 #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 630:Generated_Source\PSoC4/UART_1.c ****                 }
 631:Generated_Source\PSoC4/UART_1.c **** 
 632:Generated_Source\PSoC4/UART_1.c ****                 if (0u != (UART_1_UART_TX_PIN_ENABLE & uartEnableMask))
 633:Generated_Source\PSoC4/UART_1.c ****                 {
 634:Generated_Source\PSoC4/UART_1.c ****                 #if (UART_1_TX_SDA_MISO_PIN)
 635:Generated_Source\PSoC4/UART_1.c ****                     hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_TX_SDA_MISO_HSIOM_SEL_UART;
 636:Generated_Source\PSoC4/UART_1.c ****                     pinsDm  [UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 637:Generated_Source\PSoC4/UART_1.c ****                     
 638:Generated_Source\PSoC4/UART_1.c ****                     /* Disable input buffer */
 639:Generated_Source\PSoC4/UART_1.c ****                     pinsInBuf |= UART_1_TX_SDA_MISO_PIN_MASK;
 640:Generated_Source\PSoC4/UART_1.c ****                 #endif /* (UART_1_TX_SDA_MISO_PIN) */
 641:Generated_Source\PSoC4/UART_1.c ****                 }
 642:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 19


 643:Generated_Source\PSoC4/UART_1.c ****             #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 644:Generated_Source\PSoC4/UART_1.c ****                 if (UART_1_UART_MODE_STD == subMode)
 645:Generated_Source\PSoC4/UART_1.c ****                 {
 646:Generated_Source\PSoC4/UART_1.c ****                     if (0u != (UART_1_UART_CTS_PIN_ENABLE & uartEnableMask))
 647:Generated_Source\PSoC4/UART_1.c ****                     {
 648:Generated_Source\PSoC4/UART_1.c ****                         /* CTS input is multiplexed with SCLK */
 649:Generated_Source\PSoC4/UART_1.c ****                     #if (UART_1_SCLK_PIN)
 650:Generated_Source\PSoC4/UART_1.c ****                         hsiomSel[UART_1_SCLK_PIN_INDEX] = UART_1_SCLK_HSIOM_SEL_UART;
 651:Generated_Source\PSoC4/UART_1.c ****                         pinsDm  [UART_1_SCLK_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 652:Generated_Source\PSoC4/UART_1.c ****                     #endif /* (UART_1_SCLK_PIN) */
 653:Generated_Source\PSoC4/UART_1.c ****                     }
 654:Generated_Source\PSoC4/UART_1.c **** 
 655:Generated_Source\PSoC4/UART_1.c ****                     if (0u != (UART_1_UART_RTS_PIN_ENABLE & uartEnableMask))
 656:Generated_Source\PSoC4/UART_1.c ****                     {
 657:Generated_Source\PSoC4/UART_1.c ****                         /* RTS output is multiplexed with SS0 */
 658:Generated_Source\PSoC4/UART_1.c ****                     #if (UART_1_SS0_PIN)
 659:Generated_Source\PSoC4/UART_1.c ****                         hsiomSel[UART_1_SS0_PIN_INDEX] = UART_1_SS0_HSIOM_SEL_UART;
 660:Generated_Source\PSoC4/UART_1.c ****                         pinsDm  [UART_1_SS0_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 661:Generated_Source\PSoC4/UART_1.c ****                         
 662:Generated_Source\PSoC4/UART_1.c ****                         /* Disable input buffer */
 663:Generated_Source\PSoC4/UART_1.c ****                         pinsInBuf |= UART_1_SS0_PIN_MASK;
 664:Generated_Source\PSoC4/UART_1.c ****                     #endif /* (UART_1_SS0_PIN) */
 665:Generated_Source\PSoC4/UART_1.c ****                     }
 666:Generated_Source\PSoC4/UART_1.c ****                 }
 667:Generated_Source\PSoC4/UART_1.c ****             #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 668:Generated_Source\PSoC4/UART_1.c ****             }
 669:Generated_Source\PSoC4/UART_1.c ****         }
 670:Generated_Source\PSoC4/UART_1.c ****     #endif /* (!UART_1_CY_SCBIP_V1) */
 671:Generated_Source\PSoC4/UART_1.c **** 
 672:Generated_Source\PSoC4/UART_1.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 673:Generated_Source\PSoC4/UART_1.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 674:Generated_Source\PSoC4/UART_1.c **** 
 675:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_SCL_MOSI_PIN)
 676:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_RX_SCL_MOSI_HSIOM_REG,
 677:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_SCL_MOSI_HSIOM_MASK,
 678:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_SCL_MOSI_HSIOM_POS,
 679:Generated_Source\PSoC4/UART_1.c ****                                         hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX]);
 680:Generated_Source\PSoC4/UART_1.c **** 
 681:Generated_Source\PSoC4/UART_1.c ****         UART_1_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[UART_1_RX_SCL_MOSI_PIN_INDEX]);
 682:Generated_Source\PSoC4/UART_1.c **** 
 683:Generated_Source\PSoC4/UART_1.c ****         #if (!UART_1_CY_SCBIP_V1)
 684:Generated_Source\PSoC4/UART_1.c ****             UART_1_SET_INP_DIS(UART_1_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 685:Generated_Source\PSoC4/UART_1.c ****                                          UART_1_uart_rx_i2c_scl_spi_mosi_MASK,
 686:Generated_Source\PSoC4/UART_1.c ****                                          (0u != (pinsInBuf & UART_1_RX_SCL_MOSI_PIN_MASK)));
 687:Generated_Source\PSoC4/UART_1.c ****         #endif /* (!UART_1_CY_SCBIP_V1) */
 688:Generated_Source\PSoC4/UART_1.c ****     
 689:Generated_Source\PSoC4/UART_1.c ****     #elif (UART_1_RX_WAKE_SCL_MOSI_PIN)
 690:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_RX_WAKE_SCL_MOSI_HSIOM_REG,
 691:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 692:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_WAKE_SCL_MOSI_HSIOM_POS,
 693:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 694:Generated_Source\PSoC4/UART_1.c **** 
 695:Generated_Source\PSoC4/UART_1.c ****         UART_1_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 696:Generated_Source\PSoC4/UART_1.c ****                                                                pinsDm[UART_1_RX_WAKE_SCL_MOSI_PIN_I
 697:Generated_Source\PSoC4/UART_1.c **** 
 698:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 699:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_uart_rx_wake_i2c_scl_spi_mosi_MASK,
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 20


 700:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_RX_WAKE_SCL_MOSI_PIN_MASK)));
 701:Generated_Source\PSoC4/UART_1.c **** 
 702:Generated_Source\PSoC4/UART_1.c ****          /* Set interrupt on falling edge */
 703:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INCFG_TYPE(UART_1_RX_WAKE_SCL_MOSI_INTCFG_REG,
 704:Generated_Source\PSoC4/UART_1.c ****                                         UART_1_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 705:Generated_Source\PSoC4/UART_1.c ****                                         UART_1_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 706:Generated_Source\PSoC4/UART_1.c ****                                         UART_1_INTCFG_TYPE_FALLING_EDGE);
 707:Generated_Source\PSoC4/UART_1.c ****     #else
 708:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_WAKE_SCL_MOSI_PIN) */
 709:Generated_Source\PSoC4/UART_1.c **** 
 710:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_SDA_MISO_PIN)
 711:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_TX_SDA_MISO_HSIOM_REG,
 712:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_TX_SDA_MISO_HSIOM_MASK,
 713:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_TX_SDA_MISO_HSIOM_POS,
 714:Generated_Source\PSoC4/UART_1.c ****                                         hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX]);
 715:Generated_Source\PSoC4/UART_1.c **** 
 716:Generated_Source\PSoC4/UART_1.c ****         UART_1_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[UART_1_TX_SDA_MISO_PIN_INDEX]);
 717:Generated_Source\PSoC4/UART_1.c **** 
 718:Generated_Source\PSoC4/UART_1.c ****     #if (!UART_1_CY_SCBIP_V1)
 719:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_uart_tx_i2c_sda_spi_miso_INP_DIS,
 720:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_uart_tx_i2c_sda_spi_miso_MASK,
 721:Generated_Source\PSoC4/UART_1.c ****                                     (0u != (pinsInBuf & UART_1_TX_SDA_MISO_PIN_MASK)));
 722:Generated_Source\PSoC4/UART_1.c ****     #endif /* (!UART_1_CY_SCBIP_V1) */
 723:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 724:Generated_Source\PSoC4/UART_1.c **** 
 725:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SCLK_PIN)
 726:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SCLK_HSIOM_REG,
 727:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SCLK_HSIOM_MASK,
 728:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SCLK_HSIOM_POS,
 729:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SCLK_PIN_INDEX]);
 730:Generated_Source\PSoC4/UART_1.c **** 
 731:Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_sclk_SetDriveMode((uint8) pinsDm[UART_1_SCLK_PIN_INDEX]);
 732:Generated_Source\PSoC4/UART_1.c **** 
 733:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_sclk_INP_DIS,
 734:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_sclk_MASK,
 735:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SCLK_PIN_MASK)));
 736:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SCLK_PIN) */
 737:Generated_Source\PSoC4/UART_1.c **** 
 738:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS0_PIN)
 739:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS0_HSIOM_REG,
 740:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS0_HSIOM_MASK,
 741:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS0_HSIOM_POS,
 742:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS0_PIN_INDEX]);
 743:Generated_Source\PSoC4/UART_1.c **** 
 744:Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss0_SetDriveMode((uint8) pinsDm[UART_1_SS0_PIN_INDEX]);
 745:Generated_Source\PSoC4/UART_1.c **** 
 746:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss0_INP_DIS,
 747:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss0_MASK,
 748:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS0_PIN_MASK)));
 749:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS0_PIN) */
 750:Generated_Source\PSoC4/UART_1.c **** 
 751:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS1_PIN)
 752:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS1_HSIOM_REG,
 753:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS1_HSIOM_MASK,
 754:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS1_HSIOM_POS,
 755:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS1_PIN_INDEX]);
 756:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 21


 757:Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss1_SetDriveMode((uint8) pinsDm[UART_1_SS1_PIN_INDEX]);
 758:Generated_Source\PSoC4/UART_1.c **** 
 759:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss1_INP_DIS,
 760:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss1_MASK,
 761:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS1_PIN_MASK)));
 762:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS1_PIN) */
 763:Generated_Source\PSoC4/UART_1.c **** 
 764:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS2_PIN)
 765:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS2_HSIOM_REG,
 766:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS2_HSIOM_MASK,
 767:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS2_HSIOM_POS,
 768:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS2_PIN_INDEX]);
 769:Generated_Source\PSoC4/UART_1.c **** 
 770:Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss2_SetDriveMode((uint8) pinsDm[UART_1_SS2_PIN_INDEX]);
 771:Generated_Source\PSoC4/UART_1.c **** 
 772:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss2_INP_DIS,
 773:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss2_MASK,
 774:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS2_PIN_MASK)));
 775:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS2_PIN) */
 776:Generated_Source\PSoC4/UART_1.c **** 
 777:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS3_PIN)
 778:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS3_HSIOM_REG,
 779:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS3_HSIOM_MASK,
 780:Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS3_HSIOM_POS,
 781:Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS3_PIN_INDEX]);
 782:Generated_Source\PSoC4/UART_1.c **** 
 783:Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss3_SetDriveMode((uint8) pinsDm[UART_1_SS3_PIN_INDEX]);
 784:Generated_Source\PSoC4/UART_1.c **** 
 785:Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss3_INP_DIS,
 786:Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss3_MASK,
 787:Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS3_PIN_MASK)));
 788:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS3_PIN) */
 789:Generated_Source\PSoC4/UART_1.c ****     }
 790:Generated_Source\PSoC4/UART_1.c **** 
 791:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 792:Generated_Source\PSoC4/UART_1.c **** 
 793:Generated_Source\PSoC4/UART_1.c **** 
 794:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 795:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 796:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_I2CSlaveNackGeneration
 797:Generated_Source\PSoC4/UART_1.c ****     ****************************************************************************//**
 798:Generated_Source\PSoC4/UART_1.c ****     *
 799:Generated_Source\PSoC4/UART_1.c ****     *  Sets command to generate NACK to the address or data.
 800:Generated_Source\PSoC4/UART_1.c ****     *
 801:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 802:Generated_Source\PSoC4/UART_1.c ****     void UART_1_I2CSlaveNackGeneration(void)
 803:Generated_Source\PSoC4/UART_1.c ****     {
 385              		.loc 1 803 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 80B5     		push	{r7, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 22


 804:Generated_Source\PSoC4/UART_1.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 805:Generated_Source\PSoC4/UART_1.c ****         if ((0u != (UART_1_CTRL_REG & UART_1_CTRL_EC_AM_MODE)) &&
 395              		.loc 1 805 0
 396 0004 0F4B     		ldr	r3, .L23
 397 0006 1A68     		ldr	r2, [r3]
 398 0008 8023     		movs	r3, #128
 399 000a 5B00     		lsls	r3, r3, #1
 400 000c 1340     		ands	r3, r2
 401 000e 12D0     		beq	.L22
 806:Generated_Source\PSoC4/UART_1.c ****             (0u == (UART_1_I2C_CTRL_REG & UART_1_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 402              		.loc 1 806 0 discriminator 1
 403 0010 0D4B     		ldr	r3, .L23+4
 404 0012 1A68     		ldr	r2, [r3]
 405 0014 8023     		movs	r3, #128
 406 0016 DB01     		lsls	r3, r3, #7
 407 0018 1340     		ands	r3, r2
 805:Generated_Source\PSoC4/UART_1.c ****             (0u == (UART_1_I2C_CTRL_REG & UART_1_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 408              		.loc 1 805 0 discriminator 1
 409 001a 0CD1     		bne	.L22
 807:Generated_Source\PSoC4/UART_1.c ****         {
 808:Generated_Source\PSoC4/UART_1.c ****             /* Toggle EC_AM before NACK generation */
 809:Generated_Source\PSoC4/UART_1.c ****             UART_1_CTRL_REG &= ~UART_1_CTRL_EC_AM_MODE;
 410              		.loc 1 809 0
 411 001c 094B     		ldr	r3, .L23
 412 001e 094A     		ldr	r2, .L23
 413 0020 1268     		ldr	r2, [r2]
 414 0022 0A49     		ldr	r1, .L23+8
 415 0024 0A40     		ands	r2, r1
 416 0026 1A60     		str	r2, [r3]
 810:Generated_Source\PSoC4/UART_1.c ****             UART_1_CTRL_REG |=  UART_1_CTRL_EC_AM_MODE;
 417              		.loc 1 810 0
 418 0028 064B     		ldr	r3, .L23
 419 002a 064A     		ldr	r2, .L23
 420 002c 1268     		ldr	r2, [r2]
 421 002e 8021     		movs	r1, #128
 422 0030 4900     		lsls	r1, r1, #1
 423 0032 0A43     		orrs	r2, r1
 424 0034 1A60     		str	r2, [r3]
 425              	.L22:
 811:Generated_Source\PSoC4/UART_1.c ****         }
 812:Generated_Source\PSoC4/UART_1.c **** 
 813:Generated_Source\PSoC4/UART_1.c ****         UART_1_I2C_SLAVE_CMD_REG = UART_1_I2C_SLAVE_CMD_S_NACK;
 426              		.loc 1 813 0
 427 0036 064B     		ldr	r3, .L23+12
 428 0038 0222     		movs	r2, #2
 429 003a 1A60     		str	r2, [r3]
 814:Generated_Source\PSoC4/UART_1.c ****     }
 430              		.loc 1 814 0
 431 003c C046     		nop
 432 003e BD46     		mov	sp, r7
 433              		@ sp needed
 434 0040 80BD     		pop	{r7, pc}
 435              	.L24:
 436 0042 C046     		.align	2
 437              	.L23:
 438 0044 00000640 		.word	1074135040
 439 0048 60000640 		.word	1074135136
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 23


 440 004c FFFEFFFF 		.word	-257
 441 0050 6C000640 		.word	1074135148
 442              		.cfi_endproc
 443              	.LFE9:
 444              		.size	UART_1_I2CSlaveNackGeneration, .-UART_1_I2CSlaveNackGeneration
 445              		.text
 446              	.Letext0:
 447              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 448              		.section	.debug_info,"",%progbits
 449              	.Ldebug_info0:
 450 0000 D5010000 		.4byte	0x1d5
 451 0004 0400     		.2byte	0x4
 452 0006 00000000 		.4byte	.Ldebug_abbrev0
 453 000a 04       		.byte	0x4
 454 000b 01       		.uleb128 0x1
 455 000c E8000000 		.4byte	.LASF33
 456 0010 0C       		.byte	0xc
 457 0011 98010000 		.4byte	.LASF34
 458 0015 F6010000 		.4byte	.LASF35
 459 0019 00000000 		.4byte	.Ldebug_ranges0+0
 460 001d 00000000 		.4byte	0
 461 0021 00000000 		.4byte	.Ldebug_line0
 462 0025 02       		.uleb128 0x2
 463 0026 01       		.byte	0x1
 464 0027 06       		.byte	0x6
 465 0028 79020000 		.4byte	.LASF0
 466 002c 02       		.uleb128 0x2
 467 002d 01       		.byte	0x1
 468 002e 08       		.byte	0x8
 469 002f A1000000 		.4byte	.LASF1
 470 0033 02       		.uleb128 0x2
 471 0034 02       		.byte	0x2
 472 0035 05       		.byte	0x5
 473 0036 EC010000 		.4byte	.LASF2
 474 003a 02       		.uleb128 0x2
 475 003b 02       		.byte	0x2
 476 003c 07       		.byte	0x7
 477 003d 52000000 		.4byte	.LASF3
 478 0041 02       		.uleb128 0x2
 479 0042 04       		.byte	0x4
 480 0043 05       		.byte	0x5
 481 0044 44020000 		.4byte	.LASF4
 482 0048 02       		.uleb128 0x2
 483 0049 04       		.byte	0x4
 484 004a 07       		.byte	0x7
 485 004b BB000000 		.4byte	.LASF5
 486 004f 02       		.uleb128 0x2
 487 0050 08       		.byte	0x8
 488 0051 05       		.byte	0x5
 489 0052 D8010000 		.4byte	.LASF6
 490 0056 02       		.uleb128 0x2
 491 0057 08       		.byte	0x8
 492 0058 07       		.byte	0x7
 493 0059 B8010000 		.4byte	.LASF7
 494 005d 03       		.uleb128 0x3
 495 005e 04       		.byte	0x4
 496 005f 05       		.byte	0x5
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 24


 497 0060 696E7400 		.ascii	"int\000"
 498 0064 02       		.uleb128 0x2
 499 0065 04       		.byte	0x4
 500 0066 07       		.byte	0x7
 501 0067 8B010000 		.4byte	.LASF8
 502 006b 04       		.uleb128 0x4
 503 006c CD000000 		.4byte	.LASF9
 504 0070 02       		.byte	0x2
 505 0071 A1       		.byte	0xa1
 506 0072 2C000000 		.4byte	0x2c
 507 0076 04       		.uleb128 0x4
 508 0077 7D010000 		.4byte	.LASF10
 509 007b 02       		.byte	0x2
 510 007c A2       		.byte	0xa2
 511 007d 3A000000 		.4byte	0x3a
 512 0081 04       		.uleb128 0x4
 513 0082 84010000 		.4byte	.LASF11
 514 0086 02       		.byte	0x2
 515 0087 A3       		.byte	0xa3
 516 0088 48000000 		.4byte	0x48
 517 008c 02       		.uleb128 0x2
 518 008d 04       		.byte	0x4
 519 008e 04       		.byte	0x4
 520 008f 88000000 		.4byte	.LASF12
 521 0093 02       		.uleb128 0x2
 522 0094 08       		.byte	0x8
 523 0095 04       		.byte	0x4
 524 0096 76010000 		.4byte	.LASF13
 525 009a 02       		.uleb128 0x2
 526 009b 01       		.byte	0x1
 527 009c 08       		.byte	0x8
 528 009d 65000000 		.4byte	.LASF14
 529 00a1 05       		.uleb128 0x5
 530 00a2 E6010000 		.4byte	.LASF15
 531 00a6 02       		.byte	0x2
 532 00a7 4D01     		.2byte	0x14d
 533 00a9 AD000000 		.4byte	0xad
 534 00ad 06       		.uleb128 0x6
 535 00ae 81000000 		.4byte	0x81
 536 00b2 02       		.uleb128 0x2
 537 00b3 08       		.byte	0x8
 538 00b4 04       		.byte	0x4
 539 00b5 6D020000 		.4byte	.LASF16
 540 00b9 02       		.uleb128 0x2
 541 00ba 04       		.byte	0x4
 542 00bb 07       		.byte	0x7
 543 00bc CF010000 		.4byte	.LASF17
 544 00c0 07       		.uleb128 0x7
 545 00c1 00000000 		.4byte	.LASF18
 546 00c5 01       		.byte	0x1
 547 00c6 7B       		.byte	0x7b
 548 00c7 00000000 		.4byte	.LFB0
 549 00cb 0E000000 		.4byte	.LFE0-.LFB0
 550 00cf 01       		.uleb128 0x1
 551 00d0 9C       		.byte	0x9c
 552 00d1 07       		.uleb128 0x7
 553 00d2 5F020000 		.4byte	.LASF19
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 25


 554 00d6 01       		.byte	0x1
 555 00d7 AB       		.byte	0xab
 556 00d8 00000000 		.4byte	.LFB1
 557 00dc 24000000 		.4byte	.LFE1-.LFB1
 558 00e0 01       		.uleb128 0x1
 559 00e1 9C       		.byte	0x9c
 560 00e2 07       		.uleb128 0x7
 561 00e3 0C000000 		.4byte	.LASF20
 562 00e7 01       		.byte	0x1
 563 00e8 D2       		.byte	0xd2
 564 00e9 00000000 		.4byte	.LFB2
 565 00ed 24000000 		.4byte	.LFE2-.LFB2
 566 00f1 01       		.uleb128 0x1
 567 00f2 9C       		.byte	0x9c
 568 00f3 07       		.uleb128 0x7
 569 00f4 AF000000 		.4byte	.LASF21
 570 00f8 01       		.byte	0x1
 571 00f9 EF       		.byte	0xef
 572 00fa 00000000 		.4byte	.LFB3
 573 00fe 28000000 		.4byte	.LFE3-.LFB3
 574 0102 01       		.uleb128 0x1
 575 0103 9C       		.byte	0x9c
 576 0104 08       		.uleb128 0x8
 577 0105 85020000 		.4byte	.LASF22
 578 0109 01       		.byte	0x1
 579 010a 1701     		.2byte	0x117
 580 010c 00000000 		.4byte	.LFB4
 581 0110 34000000 		.4byte	.LFE4-.LFB4
 582 0114 01       		.uleb128 0x1
 583 0115 9C       		.byte	0x9c
 584 0116 39010000 		.4byte	0x139
 585 011a 09       		.uleb128 0x9
 586 011b 33000000 		.4byte	.LASF24
 587 011f 01       		.byte	0x1
 588 0120 1701     		.2byte	0x117
 589 0122 81000000 		.4byte	0x81
 590 0126 02       		.uleb128 0x2
 591 0127 91       		.byte	0x91
 592 0128 6C       		.sleb128 -20
 593 0129 0A       		.uleb128 0xa
 594 012a 39020000 		.4byte	.LASF25
 595 012e 01       		.byte	0x1
 596 012f 1901     		.2byte	0x119
 597 0131 81000000 		.4byte	0x81
 598 0135 02       		.uleb128 0x2
 599 0136 91       		.byte	0x91
 600 0137 74       		.sleb128 -12
 601 0138 00       		.byte	0
 602 0139 08       		.uleb128 0x8
 603 013a 23020000 		.4byte	.LASF23
 604 013e 01       		.byte	0x1
 605 013f 3001     		.2byte	0x130
 606 0141 00000000 		.4byte	.LFB5
 607 0145 34000000 		.4byte	.LFE5-.LFB5
 608 0149 01       		.uleb128 0x1
 609 014a 9C       		.byte	0x9c
 610 014b 6E010000 		.4byte	0x16e
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 26


 611 014f 09       		.uleb128 0x9
 612 0150 33000000 		.4byte	.LASF24
 613 0154 01       		.byte	0x1
 614 0155 3001     		.2byte	0x130
 615 0157 81000000 		.4byte	0x81
 616 015b 02       		.uleb128 0x2
 617 015c 91       		.byte	0x91
 618 015d 6C       		.sleb128 -20
 619 015e 0A       		.uleb128 0xa
 620 015f 19000000 		.4byte	.LASF26
 621 0163 01       		.byte	0x1
 622 0164 3201     		.2byte	0x132
 623 0166 81000000 		.4byte	0x81
 624 016a 02       		.uleb128 0x2
 625 016b 91       		.byte	0x91
 626 016c 74       		.sleb128 -12
 627 016d 00       		.byte	0
 628 016e 0B       		.uleb128 0xb
 629 016f D3000000 		.4byte	.LASF27
 630 0173 01       		.byte	0x1
 631 0174 6401     		.2byte	0x164
 632 0176 00000000 		.4byte	.LFB6
 633 017a 0A000000 		.4byte	.LFE6-.LFB6
 634 017e 01       		.uleb128 0x1
 635 017f 9C       		.byte	0x9c
 636 0180 0C       		.uleb128 0xc
 637 0181 39000000 		.4byte	.LASF28
 638 0185 01       		.byte	0x1
 639 0186 7D01     		.2byte	0x17d
 640 0188 00000000 		.4byte	.LFB7
 641 018c 0E000000 		.4byte	.LFE7-.LFB7
 642 0190 01       		.uleb128 0x1
 643 0191 9C       		.byte	0x9c
 644 0192 0C       		.uleb128 0xc
 645 0193 8E000000 		.4byte	.LASF29
 646 0197 01       		.byte	0x1
 647 0198 A201     		.2byte	0x1a2
 648 019a 00000000 		.4byte	.LFB8
 649 019e 0E000000 		.4byte	.LFE8-.LFB8
 650 01a2 01       		.uleb128 0x1
 651 01a3 9C       		.byte	0x9c
 652 01a4 0D       		.uleb128 0xd
 653 01a5 6A000000 		.4byte	.LASF30
 654 01a9 01       		.byte	0x1
 655 01aa 2203     		.2byte	0x322
 656 01ac 00000000 		.4byte	.LFB9
 657 01b0 54000000 		.4byte	.LFE9-.LFB9
 658 01b4 01       		.uleb128 0x1
 659 01b5 9C       		.byte	0x9c
 660 01b6 0E       		.uleb128 0xe
 661 01b7 24000000 		.4byte	.LASF31
 662 01bb 01       		.byte	0x1
 663 01bc 51       		.byte	0x51
 664 01bd 6B000000 		.4byte	0x6b
 665 01c1 05       		.uleb128 0x5
 666 01c2 03       		.byte	0x3
 667 01c3 00000000 		.4byte	UART_1_initVar
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 27


 668 01c7 0E       		.uleb128 0xe
 669 01c8 4D020000 		.4byte	.LASF32
 670 01cc 01       		.byte	0x1
 671 01cd 5A       		.byte	0x5a
 672 01ce 76000000 		.4byte	0x76
 673 01d2 05       		.uleb128 0x5
 674 01d3 03       		.byte	0x3
 675 01d4 00000000 		.4byte	UART_1_IntrTxMask
 676 01d8 00       		.byte	0
 677              		.section	.debug_abbrev,"",%progbits
 678              	.Ldebug_abbrev0:
 679 0000 01       		.uleb128 0x1
 680 0001 11       		.uleb128 0x11
 681 0002 01       		.byte	0x1
 682 0003 25       		.uleb128 0x25
 683 0004 0E       		.uleb128 0xe
 684 0005 13       		.uleb128 0x13
 685 0006 0B       		.uleb128 0xb
 686 0007 03       		.uleb128 0x3
 687 0008 0E       		.uleb128 0xe
 688 0009 1B       		.uleb128 0x1b
 689 000a 0E       		.uleb128 0xe
 690 000b 55       		.uleb128 0x55
 691 000c 17       		.uleb128 0x17
 692 000d 11       		.uleb128 0x11
 693 000e 01       		.uleb128 0x1
 694 000f 10       		.uleb128 0x10
 695 0010 17       		.uleb128 0x17
 696 0011 00       		.byte	0
 697 0012 00       		.byte	0
 698 0013 02       		.uleb128 0x2
 699 0014 24       		.uleb128 0x24
 700 0015 00       		.byte	0
 701 0016 0B       		.uleb128 0xb
 702 0017 0B       		.uleb128 0xb
 703 0018 3E       		.uleb128 0x3e
 704 0019 0B       		.uleb128 0xb
 705 001a 03       		.uleb128 0x3
 706 001b 0E       		.uleb128 0xe
 707 001c 00       		.byte	0
 708 001d 00       		.byte	0
 709 001e 03       		.uleb128 0x3
 710 001f 24       		.uleb128 0x24
 711 0020 00       		.byte	0
 712 0021 0B       		.uleb128 0xb
 713 0022 0B       		.uleb128 0xb
 714 0023 3E       		.uleb128 0x3e
 715 0024 0B       		.uleb128 0xb
 716 0025 03       		.uleb128 0x3
 717 0026 08       		.uleb128 0x8
 718 0027 00       		.byte	0
 719 0028 00       		.byte	0
 720 0029 04       		.uleb128 0x4
 721 002a 16       		.uleb128 0x16
 722 002b 00       		.byte	0
 723 002c 03       		.uleb128 0x3
 724 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 28


 725 002e 3A       		.uleb128 0x3a
 726 002f 0B       		.uleb128 0xb
 727 0030 3B       		.uleb128 0x3b
 728 0031 0B       		.uleb128 0xb
 729 0032 49       		.uleb128 0x49
 730 0033 13       		.uleb128 0x13
 731 0034 00       		.byte	0
 732 0035 00       		.byte	0
 733 0036 05       		.uleb128 0x5
 734 0037 16       		.uleb128 0x16
 735 0038 00       		.byte	0
 736 0039 03       		.uleb128 0x3
 737 003a 0E       		.uleb128 0xe
 738 003b 3A       		.uleb128 0x3a
 739 003c 0B       		.uleb128 0xb
 740 003d 3B       		.uleb128 0x3b
 741 003e 05       		.uleb128 0x5
 742 003f 49       		.uleb128 0x49
 743 0040 13       		.uleb128 0x13
 744 0041 00       		.byte	0
 745 0042 00       		.byte	0
 746 0043 06       		.uleb128 0x6
 747 0044 35       		.uleb128 0x35
 748 0045 00       		.byte	0
 749 0046 49       		.uleb128 0x49
 750 0047 13       		.uleb128 0x13
 751 0048 00       		.byte	0
 752 0049 00       		.byte	0
 753 004a 07       		.uleb128 0x7
 754 004b 2E       		.uleb128 0x2e
 755 004c 00       		.byte	0
 756 004d 3F       		.uleb128 0x3f
 757 004e 19       		.uleb128 0x19
 758 004f 03       		.uleb128 0x3
 759 0050 0E       		.uleb128 0xe
 760 0051 3A       		.uleb128 0x3a
 761 0052 0B       		.uleb128 0xb
 762 0053 3B       		.uleb128 0x3b
 763 0054 0B       		.uleb128 0xb
 764 0055 27       		.uleb128 0x27
 765 0056 19       		.uleb128 0x19
 766 0057 11       		.uleb128 0x11
 767 0058 01       		.uleb128 0x1
 768 0059 12       		.uleb128 0x12
 769 005a 06       		.uleb128 0x6
 770 005b 40       		.uleb128 0x40
 771 005c 18       		.uleb128 0x18
 772 005d 9642     		.uleb128 0x2116
 773 005f 19       		.uleb128 0x19
 774 0060 00       		.byte	0
 775 0061 00       		.byte	0
 776 0062 08       		.uleb128 0x8
 777 0063 2E       		.uleb128 0x2e
 778 0064 01       		.byte	0x1
 779 0065 3F       		.uleb128 0x3f
 780 0066 19       		.uleb128 0x19
 781 0067 03       		.uleb128 0x3
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 29


 782 0068 0E       		.uleb128 0xe
 783 0069 3A       		.uleb128 0x3a
 784 006a 0B       		.uleb128 0xb
 785 006b 3B       		.uleb128 0x3b
 786 006c 05       		.uleb128 0x5
 787 006d 27       		.uleb128 0x27
 788 006e 19       		.uleb128 0x19
 789 006f 11       		.uleb128 0x11
 790 0070 01       		.uleb128 0x1
 791 0071 12       		.uleb128 0x12
 792 0072 06       		.uleb128 0x6
 793 0073 40       		.uleb128 0x40
 794 0074 18       		.uleb128 0x18
 795 0075 9742     		.uleb128 0x2117
 796 0077 19       		.uleb128 0x19
 797 0078 01       		.uleb128 0x1
 798 0079 13       		.uleb128 0x13
 799 007a 00       		.byte	0
 800 007b 00       		.byte	0
 801 007c 09       		.uleb128 0x9
 802 007d 05       		.uleb128 0x5
 803 007e 00       		.byte	0
 804 007f 03       		.uleb128 0x3
 805 0080 0E       		.uleb128 0xe
 806 0081 3A       		.uleb128 0x3a
 807 0082 0B       		.uleb128 0xb
 808 0083 3B       		.uleb128 0x3b
 809 0084 05       		.uleb128 0x5
 810 0085 49       		.uleb128 0x49
 811 0086 13       		.uleb128 0x13
 812 0087 02       		.uleb128 0x2
 813 0088 18       		.uleb128 0x18
 814 0089 00       		.byte	0
 815 008a 00       		.byte	0
 816 008b 0A       		.uleb128 0xa
 817 008c 34       		.uleb128 0x34
 818 008d 00       		.byte	0
 819 008e 03       		.uleb128 0x3
 820 008f 0E       		.uleb128 0xe
 821 0090 3A       		.uleb128 0x3a
 822 0091 0B       		.uleb128 0xb
 823 0092 3B       		.uleb128 0x3b
 824 0093 05       		.uleb128 0x5
 825 0094 49       		.uleb128 0x49
 826 0095 13       		.uleb128 0x13
 827 0096 02       		.uleb128 0x2
 828 0097 18       		.uleb128 0x18
 829 0098 00       		.byte	0
 830 0099 00       		.byte	0
 831 009a 0B       		.uleb128 0xb
 832 009b 2E       		.uleb128 0x2e
 833 009c 00       		.byte	0
 834 009d 03       		.uleb128 0x3
 835 009e 0E       		.uleb128 0xe
 836 009f 3A       		.uleb128 0x3a
 837 00a0 0B       		.uleb128 0xb
 838 00a1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 30


 839 00a2 05       		.uleb128 0x5
 840 00a3 27       		.uleb128 0x27
 841 00a4 19       		.uleb128 0x19
 842 00a5 11       		.uleb128 0x11
 843 00a6 01       		.uleb128 0x1
 844 00a7 12       		.uleb128 0x12
 845 00a8 06       		.uleb128 0x6
 846 00a9 40       		.uleb128 0x40
 847 00aa 18       		.uleb128 0x18
 848 00ab 9742     		.uleb128 0x2117
 849 00ad 19       		.uleb128 0x19
 850 00ae 00       		.byte	0
 851 00af 00       		.byte	0
 852 00b0 0C       		.uleb128 0xc
 853 00b1 2E       		.uleb128 0x2e
 854 00b2 00       		.byte	0
 855 00b3 03       		.uleb128 0x3
 856 00b4 0E       		.uleb128 0xe
 857 00b5 3A       		.uleb128 0x3a
 858 00b6 0B       		.uleb128 0xb
 859 00b7 3B       		.uleb128 0x3b
 860 00b8 05       		.uleb128 0x5
 861 00b9 27       		.uleb128 0x27
 862 00ba 19       		.uleb128 0x19
 863 00bb 11       		.uleb128 0x11
 864 00bc 01       		.uleb128 0x1
 865 00bd 12       		.uleb128 0x12
 866 00be 06       		.uleb128 0x6
 867 00bf 40       		.uleb128 0x40
 868 00c0 18       		.uleb128 0x18
 869 00c1 9642     		.uleb128 0x2116
 870 00c3 19       		.uleb128 0x19
 871 00c4 00       		.byte	0
 872 00c5 00       		.byte	0
 873 00c6 0D       		.uleb128 0xd
 874 00c7 2E       		.uleb128 0x2e
 875 00c8 00       		.byte	0
 876 00c9 3F       		.uleb128 0x3f
 877 00ca 19       		.uleb128 0x19
 878 00cb 03       		.uleb128 0x3
 879 00cc 0E       		.uleb128 0xe
 880 00cd 3A       		.uleb128 0x3a
 881 00ce 0B       		.uleb128 0xb
 882 00cf 3B       		.uleb128 0x3b
 883 00d0 05       		.uleb128 0x5
 884 00d1 27       		.uleb128 0x27
 885 00d2 19       		.uleb128 0x19
 886 00d3 11       		.uleb128 0x11
 887 00d4 01       		.uleb128 0x1
 888 00d5 12       		.uleb128 0x12
 889 00d6 06       		.uleb128 0x6
 890 00d7 40       		.uleb128 0x40
 891 00d8 18       		.uleb128 0x18
 892 00d9 9742     		.uleb128 0x2117
 893 00db 19       		.uleb128 0x19
 894 00dc 00       		.byte	0
 895 00dd 00       		.byte	0
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 31


 896 00de 0E       		.uleb128 0xe
 897 00df 34       		.uleb128 0x34
 898 00e0 00       		.byte	0
 899 00e1 03       		.uleb128 0x3
 900 00e2 0E       		.uleb128 0xe
 901 00e3 3A       		.uleb128 0x3a
 902 00e4 0B       		.uleb128 0xb
 903 00e5 3B       		.uleb128 0x3b
 904 00e6 0B       		.uleb128 0xb
 905 00e7 49       		.uleb128 0x49
 906 00e8 13       		.uleb128 0x13
 907 00e9 3F       		.uleb128 0x3f
 908 00ea 19       		.uleb128 0x19
 909 00eb 02       		.uleb128 0x2
 910 00ec 18       		.uleb128 0x18
 911 00ed 00       		.byte	0
 912 00ee 00       		.byte	0
 913 00ef 00       		.byte	0
 914              		.section	.debug_aranges,"",%progbits
 915 0000 64000000 		.4byte	0x64
 916 0004 0200     		.2byte	0x2
 917 0006 00000000 		.4byte	.Ldebug_info0
 918 000a 04       		.byte	0x4
 919 000b 00       		.byte	0
 920 000c 0000     		.2byte	0
 921 000e 0000     		.2byte	0
 922 0010 00000000 		.4byte	.LFB0
 923 0014 0E000000 		.4byte	.LFE0-.LFB0
 924 0018 00000000 		.4byte	.LFB1
 925 001c 24000000 		.4byte	.LFE1-.LFB1
 926 0020 00000000 		.4byte	.LFB2
 927 0024 24000000 		.4byte	.LFE2-.LFB2
 928 0028 00000000 		.4byte	.LFB3
 929 002c 28000000 		.4byte	.LFE3-.LFB3
 930 0030 00000000 		.4byte	.LFB4
 931 0034 34000000 		.4byte	.LFE4-.LFB4
 932 0038 00000000 		.4byte	.LFB5
 933 003c 34000000 		.4byte	.LFE5-.LFB5
 934 0040 00000000 		.4byte	.LFB6
 935 0044 0A000000 		.4byte	.LFE6-.LFB6
 936 0048 00000000 		.4byte	.LFB7
 937 004c 0E000000 		.4byte	.LFE7-.LFB7
 938 0050 00000000 		.4byte	.LFB8
 939 0054 0E000000 		.4byte	.LFE8-.LFB8
 940 0058 00000000 		.4byte	.LFB9
 941 005c 54000000 		.4byte	.LFE9-.LFB9
 942 0060 00000000 		.4byte	0
 943 0064 00000000 		.4byte	0
 944              		.section	.debug_ranges,"",%progbits
 945              	.Ldebug_ranges0:
 946 0000 00000000 		.4byte	.LFB0
 947 0004 0E000000 		.4byte	.LFE0
 948 0008 00000000 		.4byte	.LFB1
 949 000c 24000000 		.4byte	.LFE1
 950 0010 00000000 		.4byte	.LFB2
 951 0014 24000000 		.4byte	.LFE2
 952 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 32


 953 001c 28000000 		.4byte	.LFE3
 954 0020 00000000 		.4byte	.LFB4
 955 0024 34000000 		.4byte	.LFE4
 956 0028 00000000 		.4byte	.LFB5
 957 002c 34000000 		.4byte	.LFE5
 958 0030 00000000 		.4byte	.LFB6
 959 0034 0A000000 		.4byte	.LFE6
 960 0038 00000000 		.4byte	.LFB7
 961 003c 0E000000 		.4byte	.LFE7
 962 0040 00000000 		.4byte	.LFB8
 963 0044 0E000000 		.4byte	.LFE8
 964 0048 00000000 		.4byte	.LFB9
 965 004c 54000000 		.4byte	.LFE9
 966 0050 00000000 		.4byte	0
 967 0054 00000000 		.4byte	0
 968              		.section	.debug_line,"",%progbits
 969              	.Ldebug_line0:
 970 0000 22010000 		.section	.debug_str,"MS",%progbits,1
 970      02004300 
 970      00000201 
 970      FB0E0D00 
 970      01010101 
 971              	.LASF18:
 972 0000 55415254 		.ascii	"UART_1_Init\000"
 972      5F315F49 
 972      6E697400 
 973              	.LASF20:
 974 000c 55415254 		.ascii	"UART_1_Start\000"
 974      5F315F53 
 974      74617274 
 974      00
 975              	.LASF26:
 976 0019 74784669 		.ascii	"txFifoCtrl\000"
 976      666F4374 
 976      726C00
 977              	.LASF31:
 978 0024 55415254 		.ascii	"UART_1_initVar\000"
 978      5F315F69 
 978      6E697456 
 978      617200
 979              	.LASF24:
 980 0033 6C657665 		.ascii	"level\000"
 980      6C00
 981              	.LASF28:
 982 0039 55415254 		.ascii	"UART_1_ScbModePostEnable\000"
 982      5F315F53 
 982      63624D6F 
 982      6465506F 
 982      7374456E 
 983              	.LASF3:
 984 0052 73686F72 		.ascii	"short unsigned int\000"
 984      7420756E 
 984      7369676E 
 984      65642069 
 984      6E7400
 985              	.LASF14:
 986 0065 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 33


 986      00
 987              	.LASF30:
 988 006a 55415254 		.ascii	"UART_1_I2CSlaveNackGeneration\000"
 988      5F315F49 
 988      3243536C 
 988      6176654E 
 988      61636B47 
 989              	.LASF12:
 990 0088 666C6F61 		.ascii	"float\000"
 990      7400
 991              	.LASF29:
 992 008e 55415254 		.ascii	"UART_1_ScbModeStop\000"
 992      5F315F53 
 992      63624D6F 
 992      64655374 
 992      6F7000
 993              	.LASF1:
 994 00a1 756E7369 		.ascii	"unsigned char\000"
 994      676E6564 
 994      20636861 
 994      7200
 995              	.LASF21:
 996 00af 55415254 		.ascii	"UART_1_Stop\000"
 996      5F315F53 
 996      746F7000 
 997              	.LASF5:
 998 00bb 6C6F6E67 		.ascii	"long unsigned int\000"
 998      20756E73 
 998      69676E65 
 998      6420696E 
 998      7400
 999              	.LASF9:
 1000 00cd 75696E74 		.ascii	"uint8\000"
 1000      3800
 1001              	.LASF27:
 1002 00d3 55415254 		.ascii	"UART_1_ScbEnableIntr\000"
 1002      5F315F53 
 1002      6362456E 
 1002      61626C65 
 1002      496E7472 
 1003              	.LASF33:
 1004 00e8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1004      43313120 
 1004      352E342E 
 1004      31203230 
 1004      31363036 
 1005 011b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1005      20726576 
 1005      6973696F 
 1005      6E203233 
 1005      37373135 
 1006 014e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1006      66756E63 
 1006      74696F6E 
 1006      2D736563 
 1006      74696F6E 
 1007              	.LASF13:
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 34


 1008 0176 646F7562 		.ascii	"double\000"
 1008      6C6500
 1009              	.LASF10:
 1010 017d 75696E74 		.ascii	"uint16\000"
 1010      313600
 1011              	.LASF11:
 1012 0184 75696E74 		.ascii	"uint32\000"
 1012      333200
 1013              	.LASF8:
 1014 018b 756E7369 		.ascii	"unsigned int\000"
 1014      676E6564 
 1014      20696E74 
 1014      00
 1015              	.LASF34:
 1016 0198 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_1.c\000"
 1016      72617465 
 1016      645F536F 
 1016      75726365 
 1016      5C50536F 
 1017              	.LASF7:
 1018 01b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 1018      206C6F6E 
 1018      6720756E 
 1018      7369676E 
 1018      65642069 
 1019              	.LASF17:
 1020 01cf 73697A65 		.ascii	"sizetype\000"
 1020      74797065 
 1020      00
 1021              	.LASF6:
 1022 01d8 6C6F6E67 		.ascii	"long long int\000"
 1022      206C6F6E 
 1022      6720696E 
 1022      7400
 1023              	.LASF15:
 1024 01e6 72656733 		.ascii	"reg32\000"
 1024      3200
 1025              	.LASF2:
 1026 01ec 73686F72 		.ascii	"short int\000"
 1026      7420696E 
 1026      7400
 1027              	.LASF35:
 1028 01f6 433A5C55 		.ascii	"C:\\Users\\Ala\\Desktop\\Cypress\\BeoM_main.cydsn\000"
 1028      73657273 
 1028      5C416C61 
 1028      5C446573 
 1028      6B746F70 
 1029              	.LASF23:
 1030 0223 55415254 		.ascii	"UART_1_SetTxFifoLevel\000"
 1030      5F315F53 
 1030      65745478 
 1030      4669666F 
 1030      4C657665 
 1031              	.LASF25:
 1032 0239 72784669 		.ascii	"rxFifoCtrl\000"
 1032      666F4374 
 1032      726C00
ARM GAS  C:\Users\Ala\AppData\Local\Temp\cc4GQlSo.s 			page 35


 1033              	.LASF4:
 1034 0244 6C6F6E67 		.ascii	"long int\000"
 1034      20696E74 
 1034      00
 1035              	.LASF32:
 1036 024d 55415254 		.ascii	"UART_1_IntrTxMask\000"
 1036      5F315F49 
 1036      6E747254 
 1036      784D6173 
 1036      6B00
 1037              	.LASF19:
 1038 025f 55415254 		.ascii	"UART_1_Enable\000"
 1038      5F315F45 
 1038      6E61626C 
 1038      6500
 1039              	.LASF16:
 1040 026d 6C6F6E67 		.ascii	"long double\000"
 1040      20646F75 
 1040      626C6500 
 1041              	.LASF0:
 1042 0279 7369676E 		.ascii	"signed char\000"
 1042      65642063 
 1042      68617200 
 1043              	.LASF22:
 1044 0285 55415254 		.ascii	"UART_1_SetRxFifoLevel\000"
 1044      5F315F53 
 1044      65745278 
 1044      4669666F 
 1044      4C657665 
 1045              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
